# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.cpp"
# 1 "tests/dct8x8/dct8x8.cu"
# 61 "/usr/local/cuda4.1/cuda/include/device_types.h"
# 149 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 1 3
# 56 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/device_types.h" 1 3
# 53 "/usr/local/cuda4.1/cuda/include/device_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/host_defines.h" 1 3
# 54 "/usr/local/cuda4.1/cuda/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/driver_types.h" 1 3
# 125 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 160 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 169 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 179 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 188 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 203 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 284 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 293 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 302 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 311 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 360 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 395 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 457 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 483 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,







    cudaErrorProfilerDisabled = 55,






    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,





     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




struct cudaArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 752 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 976 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
struct cudaIpcEventHandle_st
{
    char reserved[64];
};

struct cudaIpcMemHandle_st
{
    char reserved[64];
};
# 995 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef struct cudaIpcEventHandle_st cudaIpcEventHandle_t;
typedef struct cudaIpcMemHandle_st cudaIpcMemHandle_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/surface_types.h" 1 3
# 84 "/usr/local/cuda4.1/cuda/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};
# 59 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/texture_types.h" 1 3
# 84 "/usr/local/cuda4.1/cuda/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;
    int __cudaReserved[15];
};
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/vector_types.h" 1 3
# 59 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 1 3
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/vector_types.h" 1 3
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 60 "/usr/local/cuda4.1/cuda/include/vector_types.h" 2 3
# 94 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 70 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 2 3
# 125 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 577 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 588 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 600 "/usr/local/cuda4.1/cuda/include/driver_types.h"
struct cudaArray;
# 605 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 614 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 627 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 639 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 650 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 660 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 677 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 695 "/usr/local/cuda4.1/cuda/include/driver_types.h"
struct cudaGraphicsResource;
# 700 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 712 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 722 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 735 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 770 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 820 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 831 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 842 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 852 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 861 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 976 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 981 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 995 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1000 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1005 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1010 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1015 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1020 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1021 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1026 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 84 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 94 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 103 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 84 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 95 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 104 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 113 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 94 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 99 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 105 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 110 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 115 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 120 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 125 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 130 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 135 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 140 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 145 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 150 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 155 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 160 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 165 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 166 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 168 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 173 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 178 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 179 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 181 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 186 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 191 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 196 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 201 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 206 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 216 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 221 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 228 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 233 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 238 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 243 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 248 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 253 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 255 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 260 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 265 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 270 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 275 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 280 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 285 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 290 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 295 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 300 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 305 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 310 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 315 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 320 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 338 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 339 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 340 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 341 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 342 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 343 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 344 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 345 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 346 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 347 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 348 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 349 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 350 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 351 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 352 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 353 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 354 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 355 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 356 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 357 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 358 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 359 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 360 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 361 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 362 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 363 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 364 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 365 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 366 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 367 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 368 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 369 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 370 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 371 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 372 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 373 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 374 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 375 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 376 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 377 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 378 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 379 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 380 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 381 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 382 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 383 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 384 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 385 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 393 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 403 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 134 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 151 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 203 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 227 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 257 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 298 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 321 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 348 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 387 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 419 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 454 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 492 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t );
# 519 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 553 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 577 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 636 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 667 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 702 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 748 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 800 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 841 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 855 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 885 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1088 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1107 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1140 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1157 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1186 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1246 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1272 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1293 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1329 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1348 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1366 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1398 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1429 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1462 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1491 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1523 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1548 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 1589 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 1628 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 1655 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 1701 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char * , cudaFuncCache );
# 1736 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char * );
# 1769 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const char * );
# 1791 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 1813 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 1845 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 1874 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 1913 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 1955 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray ** , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 1979 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 1999 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2021 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray * );
# 2080 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2136 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2155 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2182 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2201 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2236 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2336 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray ** , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2433 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 2460 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 2565 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 2586 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 2605 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 2638 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 2669 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 2702 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 2735 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind );
# 2770 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2812 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 2853 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 2894 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 2933 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2968 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char * , const void * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 3002 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const char * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 3045 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3075 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3117 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3159 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3210 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3260 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3310 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3354 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3397 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const char * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3419 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 3445 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 3484 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 3511 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 3543 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 3588 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 3615 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const char * );
# 3638 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const char * );
# 3783 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , void * );
# 3817 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 3858 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 3883 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 3929 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 3961 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 3996 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4027 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4056 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4090 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray ** , cudaGraphicsResource_t , unsigned , unsigned );
# 4123 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , const cudaArray * );
# 4158 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4205 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4256 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4284 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4305 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 4330 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 4354 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const char * );
# 4387 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4405 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const char * );
# 4432 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 4449 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 4454 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 109 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 112 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 114 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 119 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 121 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 126 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 128 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 133 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 135 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 140 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 142 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 151 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 153 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 158 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 160 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 165 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 167 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 172 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 174 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 179 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 181 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 186 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 188 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 193 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 195 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 200 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 202 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 207 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 209 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 214 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 216 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 221 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 223 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 228 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 230 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 235 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 237 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 242 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 244 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 249 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 251 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 256 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 258 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 263 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 265 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 270 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 272 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 277 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 279 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 284 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 291 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 293 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 298 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 300 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 305 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 307 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 312 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 314 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 379 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 381 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 386 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 388 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 393 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 395 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 400 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 402 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 79 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 81 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return s;
# 89 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 106 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 108 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return p;
# 115 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 132 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 134 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return e;
# 141 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 69 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 71 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 74 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 76 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 79 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 81 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 84 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 86 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 89 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 91 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 94 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 96 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 99 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 101 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 104 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 106 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 109 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 111 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 114 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 116 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 119 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 121 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 124 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 126 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 129 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 131 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 134 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 136 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 139 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 141 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 144 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 146 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 149 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 151 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 154 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 156 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 161 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 164 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 166 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 169 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 171 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 174 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 176 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 179 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 181 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 184 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 186 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 189 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 191 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 194 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 196 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 199 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 201 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 204 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 206 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 209 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 211 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 214 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 216 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 219 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 221 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 224 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 226 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 229 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 231 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 234 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 236 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 239 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 241 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 244 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 246 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 249 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 251 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 254 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 256 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 259 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 261 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 264 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 266 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 269 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 271 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 274 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 276 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 279 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 281 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 284 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 289 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 291 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 294 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 296 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 299 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 301 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 304 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 306 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 44 "/usr/include/string.h" 3
extern "C" void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 46 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 49 "/usr/include/string.h" 3
extern "C" void *memmove(void * , const void * , size_t ) throw()
# 50 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 57 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 59 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 65 "/usr/include/string.h" 3
extern "C" void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1)));
# 68 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 69 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 75 "/usr/include/string.h" 3
extern void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 76 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 77 "/usr/include/string.h" 3
extern const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 78 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 104 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 105 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 106 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 107 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 115 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 116 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 117 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 118 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 128 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 129 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 131 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 133 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 139 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 140 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 146 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 147 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 151 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 153 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 155 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 165 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , __locale_t ) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 168 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , __locale_t ) throw()
# 169 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 175 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 176 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 183 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 184 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 215 "/usr/include/string.h" 3
extern char *strchr(char * , int ) throw() __asm__("strchr")
# 216 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 217 "/usr/include/string.h" 3
extern const char *strchr(const char * , int ) throw() __asm__("strchr")
# 218 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 242 "/usr/include/string.h" 3
extern char *strrchr(char * , int ) throw() __asm__("strrchr")
# 243 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 244 "/usr/include/string.h" 3
extern const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 245 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 271 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 272 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 273 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 274 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 284 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 288 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 289 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 294 "/usr/include/string.h" 3
extern char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 295 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 296 "/usr/include/string.h" 3
extern const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 297 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/string.h" 3
extern char *strstr(char * , const char * ) throw() __asm__("strstr")
# 322 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 323 "/usr/include/string.h" 3
extern const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 325 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 348 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 349 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 354 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 357 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 359 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 361 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 367 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 368 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 371 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 382 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 384 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 388 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 390 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 391 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 393 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 399 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 400 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 406 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 407 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 413 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 438 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 439 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 445 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , __locale_t ) throw();
# 451 "/usr/include/string.h" 3
extern "C" void __bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 455 "/usr/include/string.h" 3
extern "C" void bcopy(const void * , void * , size_t ) throw()
# 456 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/string.h" 3
extern "C" void bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 462 "/usr/include/string.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 463 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 469 "/usr/include/string.h" 3
extern char *index(char * , int ) throw() __asm__("index")
# 470 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 471 "/usr/include/string.h" 3
extern const char *index(const char * , int ) throw() __asm__("index")
# 472 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 497 "/usr/include/string.h" 3
extern char *rindex(char * , int ) throw() __asm__("rindex")
# 498 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 499 "/usr/include/string.h" 3
extern const char *rindex(const char * , int ) throw() __asm__("rindex")
# 500 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 523 "/usr/include/string.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 528 "/usr/include/string.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 530 "/usr/include/string.h" 3
extern "C" int ffsll(long long ) throw()
# 531 "/usr/include/string.h" 3
 __attribute((const));
# 536 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 537 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 541 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 547 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char * , const char * , __locale_t ) throw()
# 549 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 551 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , __locale_t ) throw()
# 553 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 559 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 561 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 566 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 569 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 570 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 571 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 572 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 576 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 578 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 581 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 586 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 587 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 590 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 593 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 601 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 602 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 603 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 604 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 44 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 45 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 53 "/usr/include/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 54 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 190 "/usr/include/time.h" 3
 __attribute((const));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , __locale_t ) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t * ) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" void *memset(void *, int, size_t) throw();
# 71 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" void *memcpy(void *, const void *, size_t) throw();
# 160 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int abs(int) throw();
# 161 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long labs(long) throw();
# 162 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 175 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fabs(double ) throw();
# 188 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 189 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int min(int, int);
# 190 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 191 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 192 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 208 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 224 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 225 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int max(int, int);
# 226 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 228 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 244 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 260 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 273 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sin(double ) throw();
# 286 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cos(double ) throw();
# 301 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 317 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 330 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tan(double ) throw();
# 345 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 360 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rsqrt(double );
# 375 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rsqrtf(float );
# 390 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log2(double ) throw();
# 401 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp2(double ) throw();
# 412 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 423 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp10(double ) throw();
# 435 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 446 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double expm1(double ) throw();
# 457 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 472 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log2f(float ) throw();
# 487 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log10(double ) throw();
# 502 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log(double ) throw();
# 517 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log1p(double ) throw();
# 532 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 546 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double floor(double ) throw();
# 557 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp(double ) throw();
# 570 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cosh(double ) throw();
# 582 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sinh(double ) throw();
# 594 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tanh(double ) throw();
# 608 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double acosh(double ) throw();
# 622 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double asinh(double ) throw();
# 646 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 660 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atanh(double ) throw();
# 674 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 686 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 698 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 711 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double logb(double ) throw();
# 724 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float logbf(float ) throw();
# 742 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 760 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 774 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 802 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 816 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 837 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 858 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 871 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double round(double ) throw();
# 884 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float roundf(float ) throw();
# 898 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lround(double ) throw();
# 912 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 926 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llround(double ) throw();
# 940 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 951 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rint(double ) throw();
# 962 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rintf(float ) throw();
# 974 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lrint(double ) throw();
# 986 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 998 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 1010 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 1023 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 1036 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 1048 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double ceil(double ) throw();
# 1059 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double trunc(double ) throw();
# 1070 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float truncf(float ) throw();
# 1084 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 1098 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 1113 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 1126 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atan(double ) throw();
# 1140 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double acos(double ) throw();
# 1154 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double asin(double ) throw();
# 1169 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 1186 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 1200 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 1214 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 1227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rcbrt(double );
# 1240 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rcbrtf(float );
# 1254 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sinpi(double );
# 1268 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinpif(float );
# 1282 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cospi(double );
# 1296 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cospif(float );
# 1324 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 1341 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 1361 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 1379 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 1398 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 1417 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 1436 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 1451 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double j0(double ) throw();
# 1466 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float j0f(float ) throw();
# 1482 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double j1(double ) throw();
# 1498 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float j1f(float ) throw();
# 1514 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 1530 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 1547 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double y0(double ) throw();
# 1564 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float y0f(float ) throw();
# 1581 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double y1(double ) throw();
# 1598 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float y1f(float ) throw();
# 1616 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 1634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 1648 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erf(double ) throw();
# 1662 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erff(float ) throw();
# 1677 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfinv(double );
# 1692 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfinvf(float );
# 1706 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfc(double ) throw();
# 1720 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 1738 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 1753 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfcinv(double );
# 1768 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcinvf(float );
# 1778 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfcx(double );
# 1788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcxf(float );
# 1806 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 1824 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 1842 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 1851 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 1860 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 1875 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 1890 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 1902 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 1914 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 1915 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinff(float) throw();
# 1916 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 1925 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finite(double) throw();
# 1926 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finitef(float) throw();
# 1927 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbit(double) throw();
# 1928 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnan(double) throw();
# 1929 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinf(double) throw();
# 1932 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 1949 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 1966 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 1971 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 1977 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 1978 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 1979 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 2017 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float acosf(float ) throw();
# 2031 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float asinf(float ) throw();
# 2045 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atanf(float ) throw();
# 2060 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 2074 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cosf(float ) throw();
# 2088 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinf(float ) throw();
# 2102 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tanf(float ) throw();
# 2116 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float coshf(float ) throw();
# 2129 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 2141 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 2156 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float logf(float ) throw();
# 2168 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float expf(float ) throw();
# 2183 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log10f(float ) throw();
# 2199 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 2227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 2242 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 2254 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 2268 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float floorf(float ) throw();
# 2288 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 31 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 32 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double ) throw(); extern "C" double __pow10(double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw() __attribute((const)); extern "C" double __nan(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw() __attribute((const)); extern "C" double __nextafter(double , double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw() __attribute((const)); extern "C" double __nexttoward(double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw(); extern "C" double __fmax(double , double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw(); extern "C" double __fmin(double , double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbit(double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float ) throw(); extern "C" float __pow10f(float ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw() __attribute((const)); extern "C" float __nanf(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw() __attribute((const)); extern "C" float __nextafterf(float , float ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw() __attribute((const)); extern "C" float __nexttowardf(float , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw(); extern "C" float __fmaxf(float , float ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw(); extern "C" float __fminf(float , float ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitf(float ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double ) throw(); extern "C" long double __pow10l(long double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw() __attribute((const)); extern "C" long double __nanl(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw() __attribute((const)); extern "C" long double __nextafterl(long double , long double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw() __attribute((const)); extern "C" long double __nexttowardl(long double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw(); extern "C" long double __fmaxl(long double , long double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw(); extern "C" long double __fminl(long double , long double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitl(long double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 161 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 203 "/usr/include/math.h" 3
enum {
# 204 "/usr/include/math.h" 3
FP_NAN,
# 206 "/usr/include/math.h" 3
FP_INFINITE,
# 208 "/usr/include/math.h" 3
FP_ZERO,
# 210 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 212 "/usr/include/math.h" 3
FP_NORMAL
# 214 "/usr/include/math.h" 3
};
# 302 "/usr/include/math.h" 3
extern "C" { typedef
# 296 "/usr/include/math.h" 3
enum {
# 297 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 298 "/usr/include/math.h" 3
_SVID_ = 0,
# 299 "/usr/include/math.h" 3
_XOPEN_,
# 300 "/usr/include/math.h" 3
_POSIX_,
# 301 "/usr/include/math.h" 3
_ISOC_
# 302 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 307 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 318 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 323 "/usr/include/math.h" 3
int type;
# 324 "/usr/include/math.h" 3
char *name;
# 325 "/usr/include/math.h" 3
double arg1;
# 326 "/usr/include/math.h" 3
double arg2;
# 327 "/usr/include/math.h" 3
double retval;
# 328 "/usr/include/math.h" 3
}; }
# 331 "/usr/include/math.h" 3
extern "C" int matherr(__exception * ) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char * ) throw()
# 146 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char * ) throw()
# 149 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char * ) throw()
# 152 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char * ) throw()
# 159 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 167 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 174 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 186 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 190 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 198 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 212 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 217 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 242 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 247 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 253 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 259 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 263 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 267 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 272 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 315 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 34 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 45 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 49 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 56 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 61 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 66 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 71 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 76 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 81 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 87 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 94 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t __attribute((__mode__(__QI__))); }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t __attribute((__mode__(__HI__))); }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t __attribute((__mode__(__SI__))); }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long int64_t __attribute((__mode__(__DI__))); }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t __attribute((__mode__(__SI__))); }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 75 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 77 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 78 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 79 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long ) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long ) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned , unsigned ) throw();
# 229 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 236 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 240 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 244 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 265 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 65 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 61 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 63 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 64 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 65 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 84 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 90 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 91 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 154 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 155 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 156 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 157 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 158 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 159 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 160 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 161 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 162 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 163 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 164 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 167 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 168 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 337 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 361 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 364 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 369 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 373 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 401 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 406 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 429 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 437 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 446 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 450 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 454 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 457 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 461 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 474 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 486 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void * ) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 503 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__));
# 508 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 509 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 514 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 518 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 525 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 526 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 536 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 537 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 544 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 552 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 560 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 567 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1)));
# 572 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char * ) throw()
# 573 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 579 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 585 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 586 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 589 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw() __attribute((__nonnull__(1)));
# 596 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 620 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1)));
# 630 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1)));
# 642 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1)));
# 652 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 653 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 663 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1)));
# 674 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1)));
# 684 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1)));
# 694 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 695 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 706 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 707 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 717 "/usr/include/stdlib.h" 3
extern "C" int system(const char * );
# 724 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 725 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 734 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__ , char *__restrict__ ) throw();
# 742 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 745 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 749 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 755 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 757 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 761 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 762 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 764 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 766 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 771 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const));
# 772 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const));
# 776 "/usr/include/stdlib.h" 3
extern "C" long long llabs(long long ) throw()
# 777 "/usr/include/stdlib.h" 3
 __attribute((const));
# 785 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 786 "/usr/include/stdlib.h" 3
 __attribute((const));
# 787 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 788 "/usr/include/stdlib.h" 3
 __attribute((const));
# 793 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long , long long ) throw()
# 795 "/usr/include/stdlib.h" 3
 __attribute((const));
# 808 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 809 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 814 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 815 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 820 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 821 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 826 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 828 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 829 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 832 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 833 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 838 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 840 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 841 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 845 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 848 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 849 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 852 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 860 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 863 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 867 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char * , wchar_t ) throw();
# 871 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 874 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 885 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1)));
# 896 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 899 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 905 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char * ) throw() __attribute((__nonnull__(1)));
# 913 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int );
# 921 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 925 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 930 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw();
# 937 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int , char * , size_t ) throw()
# 938 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 941 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 948 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 949 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 69 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator;
# 74 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 418 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
class __is_iterator_helper {
# 420 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef char __one;
# 421 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef struct { char __arr[2]; } __two;
# 423 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up>
# 424 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct _Wrap_type {
# 425 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 427 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up> static __one __test(_Wrap_type< typename _Up::iterator_category> *);
# 430 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up> static __two __test(...);
# 434 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
public: static const bool __value = ((sizeof(__test< _Tp> (0)) == (1)) || __is_pointer< _Tp> ::__value);
# 436 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 438 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 439 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_iterator {
# 441 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = __is_iterator_helper< _Tp> ::__value};
# 442 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 443 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 445 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.5/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.5/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.5/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.5/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.5/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.5/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    abs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 111 "/usr/include/c++/4.5/cmath" 3
using ::acos;
# 114 "/usr/include/c++/4.5/cmath" 3
inline float acos(float __x)
# 115 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_acosf(__x); }
# 118 "/usr/include/c++/4.5/cmath" 3
inline long double acos(long double __x)
# 119 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_acosl(__x); }
# 121 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 127 "/usr/include/c++/4.5/cmath" 3
using ::asin;
# 130 "/usr/include/c++/4.5/cmath" 3
inline float asin(float __x)
# 131 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_asinf(__x); }
# 134 "/usr/include/c++/4.5/cmath" 3
inline long double asin(long double __x)
# 135 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_asinl(__x); }
# 137 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 143 "/usr/include/c++/4.5/cmath" 3
using ::atan;
# 146 "/usr/include/c++/4.5/cmath" 3
inline float atan(float __x)
# 147 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atanf(__x); }
# 150 "/usr/include/c++/4.5/cmath" 3
inline long double atan(long double __x)
# 151 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atanl(__x); }
# 153 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 159 "/usr/include/c++/4.5/cmath" 3
using ::atan2;
# 162 "/usr/include/c++/4.5/cmath" 3
inline float atan2(float __y, float __x)
# 163 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 166 "/usr/include/c++/4.5/cmath" 3
inline long double atan2(long double __y, long double __x)
# 167 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 169 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 181 "/usr/include/c++/4.5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/4.5/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/4.5/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ceill(__x); }
# 191 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 197 "/usr/include/c++/4.5/cmath" 3
using ::cos;
# 200 "/usr/include/c++/4.5/cmath" 3
inline float cos(float __x)
# 201 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_cosf(__x); }
# 204 "/usr/include/c++/4.5/cmath" 3
inline long double cos(long double __x)
# 205 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_cosl(__x); }
# 207 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 213 "/usr/include/c++/4.5/cmath" 3
using ::cosh;
# 216 "/usr/include/c++/4.5/cmath" 3
inline float cosh(float __x)
# 217 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_coshf(__x); }
# 220 "/usr/include/c++/4.5/cmath" 3
inline long double cosh(long double __x)
# 221 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_coshl(__x); }
# 223 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 229 "/usr/include/c++/4.5/cmath" 3
using ::exp;
# 232 "/usr/include/c++/4.5/cmath" 3
inline float exp(float __x)
# 233 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_expf(__x); }
# 236 "/usr/include/c++/4.5/cmath" 3
inline long double exp(long double __x)
# 237 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_expl(__x); }
# 239 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 245 "/usr/include/c++/4.5/cmath" 3
using ::fabs;
# 248 "/usr/include/c++/4.5/cmath" 3
inline float fabs(float __x)
# 249 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsf(__x); }
# 252 "/usr/include/c++/4.5/cmath" 3
inline long double fabs(long double __x)
# 253 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsl(__x); }
# 255 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 261 "/usr/include/c++/4.5/cmath" 3
using ::floor;
# 264 "/usr/include/c++/4.5/cmath" 3
inline float floor(float __x)
# 265 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_floorf(__x); }
# 268 "/usr/include/c++/4.5/cmath" 3
inline long double floor(long double __x)
# 269 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_floorl(__x); }
# 271 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 277 "/usr/include/c++/4.5/cmath" 3
using ::fmod;
# 280 "/usr/include/c++/4.5/cmath" 3
inline float fmod(float __x, float __y)
# 281 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 284 "/usr/include/c++/4.5/cmath" 3
inline long double fmod(long double __x, long double __y)
# 285 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 287 "/usr/include/c++/4.5/cmath" 3
using ::frexp;
# 290 "/usr/include/c++/4.5/cmath" 3
inline float frexp(float __x, int *__exp)
# 291 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 294 "/usr/include/c++/4.5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 295 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 297 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 303 "/usr/include/c++/4.5/cmath" 3
using ::ldexp;
# 306 "/usr/include/c++/4.5/cmath" 3
inline float ldexp(float __x, int __exp)
# 307 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 310 "/usr/include/c++/4.5/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 311 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 313 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 319 "/usr/include/c++/4.5/cmath" 3
using ::log;
# 322 "/usr/include/c++/4.5/cmath" 3
inline float log(float __x)
# 323 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_logf(__x); }
# 326 "/usr/include/c++/4.5/cmath" 3
inline long double log(long double __x)
# 327 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_logl(__x); }
# 329 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 335 "/usr/include/c++/4.5/cmath" 3
using ::log10;
# 338 "/usr/include/c++/4.5/cmath" 3
inline float log10(float __x)
# 339 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_log10f(__x); }
# 342 "/usr/include/c++/4.5/cmath" 3
inline long double log10(long double __x)
# 343 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_log10l(__x); }
# 345 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 351 "/usr/include/c++/4.5/cmath" 3
using ::modf;
# 354 "/usr/include/c++/4.5/cmath" 3
inline float modf(float __x, float *__iptr)
# 355 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 358 "/usr/include/c++/4.5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 359 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 361 "/usr/include/c++/4.5/cmath" 3
using ::pow;
# 364 "/usr/include/c++/4.5/cmath" 3
inline float pow(float __x, float __y)
# 365 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 368 "/usr/include/c++/4.5/cmath" 3
inline long double pow(long double __x, long double __y)
# 369 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 375 "/usr/include/c++/4.5/cmath" 3
inline double pow(double __x, int __i)
# 376 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powi(__x, __i); }
# 379 "/usr/include/c++/4.5/cmath" 3
inline float pow(float __x, int __n)
# 380 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powif(__x, __n); }
# 383 "/usr/include/c++/4.5/cmath" 3
inline long double pow(long double __x, int __n)
# 384 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powil(__x, __n); }
# 387 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 399 "/usr/include/c++/4.5/cmath" 3
using ::sin;
# 402 "/usr/include/c++/4.5/cmath" 3
inline float sin(float __x)
# 403 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinf(__x); }
# 406 "/usr/include/c++/4.5/cmath" 3
inline long double sin(long double __x)
# 407 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinl(__x); }
# 409 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 415 "/usr/include/c++/4.5/cmath" 3
using ::sinh;
# 418 "/usr/include/c++/4.5/cmath" 3
inline float sinh(float __x)
# 419 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinhf(__x); }
# 422 "/usr/include/c++/4.5/cmath" 3
inline long double sinh(long double __x)
# 423 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinhl(__x); }
# 425 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 431 "/usr/include/c++/4.5/cmath" 3
using ::sqrt;
# 434 "/usr/include/c++/4.5/cmath" 3
inline float sqrt(float __x)
# 435 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 438 "/usr/include/c++/4.5/cmath" 3
inline long double sqrt(long double __x)
# 439 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 441 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 447 "/usr/include/c++/4.5/cmath" 3
using ::tan;
# 450 "/usr/include/c++/4.5/cmath" 3
inline float tan(float __x)
# 451 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanf(__x); }
# 454 "/usr/include/c++/4.5/cmath" 3
inline long double tan(long double __x)
# 455 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanl(__x); }
# 457 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 463 "/usr/include/c++/4.5/cmath" 3
using ::tanh;
# 466 "/usr/include/c++/4.5/cmath" 3
inline float tanh(float __x)
# 467 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanhf(__x); }
# 470 "/usr/include/c++/4.5/cmath" 3
inline long double tanh(long double __x)
# 471 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanhl(__x); }
# 473 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 479 "/usr/include/c++/4.5/cmath" 3
}
# 498 "/usr/include/c++/4.5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 500 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 510 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 519 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 528 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 537 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 546 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 555 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 564 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 573 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 582 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 591 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 600 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 609 "/usr/include/c++/4.5/cmath" 3
}
# 35 "/usr/include/c++/4.5/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.5/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.5/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.5/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.5/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.5/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.5/cstddef" 3
}
# 100 "/usr/include/c++/4.5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.5/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.5/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.5/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.5/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.5/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.5/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.5/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.5/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.5/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.5/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.5/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.5/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.5/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.5/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.5/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.5/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.5/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.5/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.5/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.5/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.5/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.5/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.5/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.5/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.5/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.5/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.5/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.5/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.5/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.5/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.5/cstdlib" 3
}
# 157 "/usr/include/c++/4.5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.5/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.5/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.5/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.5/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.5/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.5/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.5/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.5/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.5/cstdlib" 3
}
# 199 "/usr/include/c++/4.5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.5/cstdlib" 3
}
# 2335 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace __gnu_cxx {
# 2337 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline long long abs(long long);
# 2338 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2340 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace std {
# 2342 "/usr/local/cuda4.1/cuda/include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 2343 "/usr/local/cuda4.1/cuda/include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 2344 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2346 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::abs;
# 2347 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::fabs;
# 2348 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::ceil;
# 2349 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::floor;
# 2350 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sqrt;
# 2351 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::pow;
# 2352 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::log;
# 2353 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::log10;
# 2354 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::fmod;
# 2355 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::modf;
# 2356 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::exp;
# 2357 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::frexp;
# 2358 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::ldexp;
# 2359 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::asin;
# 2360 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sin;
# 2361 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sinh;
# 2362 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::acos;
# 2363 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::cos;
# 2364 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::cosh;
# 2365 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::atan;
# 2366 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::atan2;
# 2367 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::tan;
# 2368 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::tanh;
# 2531 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace std {
# 2534 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline long abs(long);
# 2535 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float abs(float);
# 2536 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline double abs(double);
# 2537 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float fabs(float);
# 2538 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float ceil(float);
# 2539 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float floor(float);
# 2540 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sqrt(float);
# 2541 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float pow(float, float);
# 2542 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float pow(float, int);
# 2543 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline double pow(double, int);
# 2544 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float log(float);
# 2545 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float log10(float);
# 2546 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float fmod(float, float);
# 2547 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float modf(float, float *);
# 2548 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float exp(float);
# 2549 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float frexp(float, int *);
# 2550 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float ldexp(float, int);
# 2551 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float asin(float);
# 2552 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sin(float);
# 2553 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sinh(float);
# 2554 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float acos(float);
# 2555 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float cos(float);
# 2556 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float cosh(float);
# 2557 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float atan(float);
# 2558 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float atan2(float, float);
# 2559 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float tan(float);
# 2560 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float tanh(float);
# 2563 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2566 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float logb(float a)
# 2567 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2568 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return logbf(a);
# 2569 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2571 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline int ilogb(float a)
# 2572 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2573 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ilogbf(a);
# 2574 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2576 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float scalbn(float a, int b)
# 2577 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2578 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return scalbnf(a, b);
# 2579 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2581 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float scalbln(float a, long b)
# 2582 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2583 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return scalblnf(a, b);
# 2584 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2586 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float exp2(float a)
# 2587 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2588 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return exp2f(a);
# 2589 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2591 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float exp10(float a)
# 2592 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2593 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return exp10f(a);
# 2594 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2596 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float expm1(float a)
# 2597 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2598 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return expm1f(a);
# 2599 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2601 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float log2(float a)
# 2602 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2603 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return log2f(a);
# 2604 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2606 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float log1p(float a)
# 2607 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2608 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return log1pf(a);
# 2609 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2611 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rsqrt(float a)
# 2612 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2613 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rsqrtf(a);
# 2614 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2616 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float acosh(float a)
# 2617 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2618 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return acoshf(a);
# 2619 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2621 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float asinh(float a)
# 2622 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2623 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return asinhf(a);
# 2624 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2626 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float atanh(float a)
# 2627 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2628 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return atanhf(a);
# 2629 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2631 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float hypot(float a, float b)
# 2632 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2633 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return hypotf(a, b);
# 2634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2636 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float cbrt(float a)
# 2637 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2638 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return cbrtf(a);
# 2639 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2641 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rcbrt(float a)
# 2642 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2643 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rcbrtf(a);
# 2644 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2646 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float sinpi(float a)
# 2647 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2648 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return sinpif(a);
# 2649 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2651 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float cospi(float a)
# 2652 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2653 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return cospif(a);
# 2654 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2656 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 2657 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2658 "/usr/local/cuda4.1/cuda/include/math_functions.h"
sincosf(a, sptr, cptr);
# 2659 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2661 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float j0(float a)
# 2662 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2663 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return j0f(a);
# 2664 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2666 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float j1(float a)
# 2667 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2668 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return j1f(a);
# 2669 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2671 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float jn(int n, float a)
# 2672 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2673 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return jnf(n, a);
# 2674 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2676 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float y0(float a)
# 2677 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2678 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return y0f(a);
# 2679 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2681 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float y1(float a)
# 2682 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2683 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return y1f(a);
# 2684 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2686 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float yn(int n, float a)
# 2687 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2688 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ynf(n, a);
# 2689 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2691 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erf(float a)
# 2692 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2693 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erff(a);
# 2694 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2696 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfinv(float a)
# 2697 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2698 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfinvf(a);
# 2699 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2701 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfc(float a)
# 2702 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2703 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcf(a);
# 2704 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2706 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfcinv(float a)
# 2707 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2708 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcinvf(a);
# 2709 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2711 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfcx(float a)
# 2712 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2713 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcxf(a);
# 2714 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2716 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float lgamma(float a)
# 2717 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2718 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lgammaf(a);
# 2719 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2721 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float tgamma(float a)
# 2722 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2723 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return tgammaf(a);
# 2724 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2726 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float copysign(float a, float b)
# 2727 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2728 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysignf(a, b);
# 2729 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2731 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double copysign(double a, float b)
# 2732 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2733 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysign(a, (double)b);
# 2734 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2736 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float copysign(float a, double b)
# 2737 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2738 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysignf(a, (float)b);
# 2739 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2741 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float nextafter(float a, float b)
# 2742 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2743 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return nextafterf(a, b);
# 2744 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2746 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float remainder(float a, float b)
# 2747 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2748 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return remainderf(a, b);
# 2749 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2751 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 2752 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2753 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return remquof(a, b, quo);
# 2754 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2756 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float round(float a)
# 2757 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2758 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return roundf(a);
# 2759 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2761 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long lround(float a)
# 2762 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2763 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lroundf(a);
# 2764 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2766 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long llround(float a)
# 2767 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2768 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llroundf(a);
# 2769 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2771 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float trunc(float a)
# 2772 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2773 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return truncf(a);
# 2774 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2776 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rint(float a)
# 2777 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2778 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rintf(a);
# 2779 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2781 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long lrint(float a)
# 2782 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2783 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lrintf(a);
# 2784 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2786 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long llrint(float a)
# 2787 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llrintf(a);
# 2789 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2791 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float nearbyint(float a)
# 2792 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2793 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return nearbyintf(a);
# 2794 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2796 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fdim(float a, float b)
# 2797 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2798 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fdimf(a, b);
# 2799 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2801 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fma(float a, float b, float c)
# 2802 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2803 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaf(a, b, c);
# 2804 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2806 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fmax(float a, float b)
# 2807 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2808 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaxf(a, b);
# 2809 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2811 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fmin(float a, float b)
# 2812 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2813 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fminf(a, b);
# 2814 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2816 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 2817 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2818 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin(a, b);
# 2819 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2821 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 2822 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2823 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin((unsigned)a, b);
# 2824 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2826 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 2827 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2828 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin(a, (unsigned)b);
# 2829 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2831 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long min(long long a, long long b)
# 2832 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2833 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llmin(a, b);
# 2834 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2836 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 2837 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2838 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin(a, b);
# 2839 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2841 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 2842 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2843 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 2844 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2846 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 2847 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2848 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 2849 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2851 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float min(float a, float b)
# 2852 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2853 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fminf(a, b);
# 2854 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2856 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(double a, double b)
# 2857 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2858 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin(a, b);
# 2859 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2861 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(float a, double b)
# 2862 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2863 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin((double)a, b);
# 2864 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2866 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(double a, float b)
# 2867 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2868 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin(a, (double)b);
# 2869 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2871 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 2872 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2873 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax(a, b);
# 2874 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2876 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 2877 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2878 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax((unsigned)a, b);
# 2879 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2881 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 2882 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2883 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax(a, (unsigned)b);
# 2884 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2886 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long max(long long a, long long b)
# 2887 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2888 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llmax(a, b);
# 2889 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2891 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 2892 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2893 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax(a, b);
# 2894 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2896 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 2897 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2898 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 2899 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2901 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 2902 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2903 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 2904 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2906 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float max(float a, float b)
# 2907 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2908 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaxf(a, b);
# 2909 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2911 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(double a, double b)
# 2912 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2913 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax(a, b);
# 2914 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2916 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(float a, double b)
# 2917 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2918 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax((double)a, b);
# 2919 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2921 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(double a, float b)
# 2922 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2923 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax(a, (double)b);
# 2924 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 73 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 77 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 78 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 79 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
};
# 1103 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 1104 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1106 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1108 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 1109 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1111 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1113 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 1114 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1116 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1118 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 1119 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1121 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1123 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 1124 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1126 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1128 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 1129 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1131 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1133 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 1134 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1136 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1138 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 1139 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1141 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1143 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 1144 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1146 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1148 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 1149 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1151 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1153 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 1154 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1156 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1158 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 1159 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1161 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1163 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 1164 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1166 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1168 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 1169 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;
# 1171 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1174 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = 0)
# 1175 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 1177 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1179 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 1180 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1184 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 1185 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 1202 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1204 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = true)
# 1205 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 1207 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1209 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero)
# 1210 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1215 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1217 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero)
# 1218 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1223 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1225 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest)
# 1226 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1231 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1233 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 1234 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1239 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 106 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 111 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 116 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 121 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 126 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 131 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 136 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 141 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 146 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 151 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 156 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 161 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 166 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 171 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 176 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 181 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 186 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 191 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 196 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 81 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 86 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 91 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 521 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 522 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 527 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 529 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 530 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 535 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 537 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 538 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 543 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero)
# 546 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 551 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 553 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero)
# 554 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 559 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 561 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero)
# 562 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 567 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 569 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero)
# 570 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 575 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 577 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest)
# 578 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 583 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 585 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest)
# 586 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 591 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 593 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest)
# 594 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 596 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 598 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 599 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 601 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 603 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest)
# 604 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 606 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 77 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
exit(___);}
# 239 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 240 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 242 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 244 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 245 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 247 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 249 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 250 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 252 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 254 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 255 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 257 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 99 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 100 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 110 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 111 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 112 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 120 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 122 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 139 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 151 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 157 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 179 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 197 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 203 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 217 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 237 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 249 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 295 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 301 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 307 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 387 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 447 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 459 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 469 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 481 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 487 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 499 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 505 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 519 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 527 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 533 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 539 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 551 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 565 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 579 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 585 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 591 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 597 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 603 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 623 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 631 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 637 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 643 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 649 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 655 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 669 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 735 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 741 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 747 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 755 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 795 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 796 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 797 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 806 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 807 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 808 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 816 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 817 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 818 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 823 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 829 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 835 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 847 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 853 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 867 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 875 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 887 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 905 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 913 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 927 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 933 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 939 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 945 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 957 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 965 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 985 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 997 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1003 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1017 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1083 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1089 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1095 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1103 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1143 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1144 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1155 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1156 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1177 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1195 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1215 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1247 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1267 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1287 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1305 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1319 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1327 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1357 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1365 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1431 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1437 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1443 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1451 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1491 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1492 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1503 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1504 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1512 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1514 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1519 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1525 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1531 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1543 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1549 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1577 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1583 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1589 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1595 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1601 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1615 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1623 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1635 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1641 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1647 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1653 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1675 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1681 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1693 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1705 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1713 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1779 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1785 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1791 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1799 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1840 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1850 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1851 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1852 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1860 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1862 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1867 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1873 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1879 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1885 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1891 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1897 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1905 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1925 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1931 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1937 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1943 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1957 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1963 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1977 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1983 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1995 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2015 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2023 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2029 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2035 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2041 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2053 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2061 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2139 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2147 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2189 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2199 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 2200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2211 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2222 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2234 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2254 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2260 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2274 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2292 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2312 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2320 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2326 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2332 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2338 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2350 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2364 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2372 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2378 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2390 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2402 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2410 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2476 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2496 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2539 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2559 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2561 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2566 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2567 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2576 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2577 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2581 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2582 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2587 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2591 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2596 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2597 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2601 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2602 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2607 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2611 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2621 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2622 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2627 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2631 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2636 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2637 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2641 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2642 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2646 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2647 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2651 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2652 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2656 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2657 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2671 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2676 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2677 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2681 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2682 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2686 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2691 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2692 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2696 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2697 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2701 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2706 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2707 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2711 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2712 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2716 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2717 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2765 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2766 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2770 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2771 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2775 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2776 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2781 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2819 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2821 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2843 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2849 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2853 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2854 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2859 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2863 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2869 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2873 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2874 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2878 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2879 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2883 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2884 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2889 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2903 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2904 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2909 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2913 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2914 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2918 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2923 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2924 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2929 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2933 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2938 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2939 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2943 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2944 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2953 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2959 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2963 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2964 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2969 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2973 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2974 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2978 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2983 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2988 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2993 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2999 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3048 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3052 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3053 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3057 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3058 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3063 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3102 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3103 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3123 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3125 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3131 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3135 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3141 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3146 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3150 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3151 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3155 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3156 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3160 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3161 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3170 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3175 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3181 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3195 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3196 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3205 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3211 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3215 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3221 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3225 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3226 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3236 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3245 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3256 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3260 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3265 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3270 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3330 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3335 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3340 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3383 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3385 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3405 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3406 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3412 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3413 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3417 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3418 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3422 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3423 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3427 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3428 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3432 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3433 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3437 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3438 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3442 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3443 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3447 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3452 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3453 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3457 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3462 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3463 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3467 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3473 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3477 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3478 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3483 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3487 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3492 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3497 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3498 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3503 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3507 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3508 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3512 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3517 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3518 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3522 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3523 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3527 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3532 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3533 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3542 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3543 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3547 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3548 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3552 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3553 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3562 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3611 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3621 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3622 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3627 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3665 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3688 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3689 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3695 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3700 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3704 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3705 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3709 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3710 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3715 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3719 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3720 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3724 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3725 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3729 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3730 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3734 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3735 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3739 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3740 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3744 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3745 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3749 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3750 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3754 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3755 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3759 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3760 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3764 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3765 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3769 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3770 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3774 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3775 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3779 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3784 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3785 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3789 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3790 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3794 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3795 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3799 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3800 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3805 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3809 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3810 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3814 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3815 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3819 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3824 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3825 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3829 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3830 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3834 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3835 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3840 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3844 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3845 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3903 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3904 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3909 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3947 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3969 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3970 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3977 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3981 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3982 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3987 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3997 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4002 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4007 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4011 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4012 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4016 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4017 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4021 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4022 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4026 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4027 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4031 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4032 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4036 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4037 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4041 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4042 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4046 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4051 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4052 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4056 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4057 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4061 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4066 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4067 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4071 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4072 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4076 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4077 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4081 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4082 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4086 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4087 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4091 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4092 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4096 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4097 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4102 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4106 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4107 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4111 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4112 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4116 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4117 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4122 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4126 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4175 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4181 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4252 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4259 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4263 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4264 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4273 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4274 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4279 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4288 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4294 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4303 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4304 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4308 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4309 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4318 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4319 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4323 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4328 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4338 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4343 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4348 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4349 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4353 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4354 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4359 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4363 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4364 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4368 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4369 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4373 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4374 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4378 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4379 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4383 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4388 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4389 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4394 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4398 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4404 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4408 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4409 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4457 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4462 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4463 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4467 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4473 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 107 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 114 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 121 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 128 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 142 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 149 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 156 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 169 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 190 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 197 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 204 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 211 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 218 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 238 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 252 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 259 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 266 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 273 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 280 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 359 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 373 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 453 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 461 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 531 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 556 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 563 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 570 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 577 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 591 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 598 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 605 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 618 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 639 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 646 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 653 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 660 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 667 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 687 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 694 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 701 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 708 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 715 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 722 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 729 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 848 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 908 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 986 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1011 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1032 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1039 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1046 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1053 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1087 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1094 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1101 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1108 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1115 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1142 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1149 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1156 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1163 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1170 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1177 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1270 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1284 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1297 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1357 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1449 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1460 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1474 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1481 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1488 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1495 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1502 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1509 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1536 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1543 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1550 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1557 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1564 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1591 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1598 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1605 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1612 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1619 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1626 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1712 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1719 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1726 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1733 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1746 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1806 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1937 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1944 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1951 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1958 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1999 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2006 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2013 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2020 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2054 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2061 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2068 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2075 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2082 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2168 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2182 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2195 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2207 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2215 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2239 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2247 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2255 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2293 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2301 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2309 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2317 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2372 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2379 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2386 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2400 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2407 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2434 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2441 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2448 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2455 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2462 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2469 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2482 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2496 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2503 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2510 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2517 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2524 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2531 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2617 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2631 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2644 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2656 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2664 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2688 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2696 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2704 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2712 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2726 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2742 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2750 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2758 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2766 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2774 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2782 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2807 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2842 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2849 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2856 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2883 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2897 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2904 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2911 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2918 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2959 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2966 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2973 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2980 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3059 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3066 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3093 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3105 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3113 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3121 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3129 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3137 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3145 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3153 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3191 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3199 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3207 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3215 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3256 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3270 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3284 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3291 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3298 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3305 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3332 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3346 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3353 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3360 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3367 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3408 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3415 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3422 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3429 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3542 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3554 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3562 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3570 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3578 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3586 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3594 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3602 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3640 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3648 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3656 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3664 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3781 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3785 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3786 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3790 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3791 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3793 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3795 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3798 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3800 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3801 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3803 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3805 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3806 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3808 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3810 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3811 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3813 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3816 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3818 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3820 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3823 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3825 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3830 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3831 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3838 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3841 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3843 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3845 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3846 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3848 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3851 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3853 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3855 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3856 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3863 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3865 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3870 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3871 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3873 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3875 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3878 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3880 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3881 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3883 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3886 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3888 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3891 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3893 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3895 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3896 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3900 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3901 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3903 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3905 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3906 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3908 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3910 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3911 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3913 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3915 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3918 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3920 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3921 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3925 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3926 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3928 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3933 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3935 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3940 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3941 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3943 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3948 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3950 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3951 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3953 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3955 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3956 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3958 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3967 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3968 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3972 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3973 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3977 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3982 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3983 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3987 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3988 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3990 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3993 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3995 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3997 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3998 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4002 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4003 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4005 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4007 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4008 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4010 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4012 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4013 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4015 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4017 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4020 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4022 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4023 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4027 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4028 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4030 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4032 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4035 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4037 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4038 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4042 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4043 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4045 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4048 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4050 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4052 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4053 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4055 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4057 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4058 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4062 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4063 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4065 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4067 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4068 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4070 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 66 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 126 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 164 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 222 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 228 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 231 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 238 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 241 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 248 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 251 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 257 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 260 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 267 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 270 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 278 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 289 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 290 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 291 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 292 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 293 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 294 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 296 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 297 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 298 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 300 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 301 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 302 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 303 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 304 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 305 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 306 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 308 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 309 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 310 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 312 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 313 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 314 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 315 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 316 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 317 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 318 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 320 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 321 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 322 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 324 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 325 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 326 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 327 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 328 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 329 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 330 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 331 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 333 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 334 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 335 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 343 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 344 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, char *
# 345 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 346 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 347 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 348 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 350 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 351 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 352 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 354 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 355 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 356 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, const T &
# 357 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 358 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 359 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 360 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 362 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 363 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 364 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 366 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 367 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, char *
# 368 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 369 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 370 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 371 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 372 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 374 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 375 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 376 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 378 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 379 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 380 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, const T &
# 381 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 382 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 383 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 384 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 385 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 387 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 388 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 389 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 391 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 392 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, char *
# 393 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 395 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 396 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 397 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 424 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 425 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 426 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const T &
# 427 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 429 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 430 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 431 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 439 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 440 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, char *
# 441 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 443 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 444 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 445 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 472 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 473 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 474 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, const T &
# 475 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 477 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 478 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 479 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 521 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 522 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 523 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 524 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 525 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 526 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc, size_t
# 527 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 529 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 530 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 531 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 566 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 567 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 568 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 569 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 570 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 571 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 573 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 574 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 575 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 622 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 623 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 624 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 625 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 626 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 627 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc, size_t
# 628 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 629 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height, size_t
# 630 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch)
# 632 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 633 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 634 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 680 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 681 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 682 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 683 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 684 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 685 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 686 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height, size_t
# 687 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch)
# 689 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 690 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 691 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 722 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 723 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 724 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const cudaArray *
# 725 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 726 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc)
# 728 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 729 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 730 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 760 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 761 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 762 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const cudaArray *
# 763 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array)
# 765 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 766 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 767 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 769 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 770 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 799 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 800 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 801 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex)
# 803 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 804 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 805 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 839 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 840 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 841 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 842 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex)
# 844 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 845 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 846 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 900 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 901 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 902 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
func, cudaFuncCache
# 903 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cacheConfig)
# 905 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 906 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 907 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 944 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 945 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaLaunch(T *
# 946 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
entry)
# 948 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 949 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 950 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 984 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 985 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 986 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
attr, T *
# 987 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
entry)
# 989 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 990 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 991 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 1013 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1014 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1015 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
surf, const cudaArray *
# 1016 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1017 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc)
# 1019 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 1020 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1021 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 1042 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1043 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1044 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
surf, const cudaArray *
# 1045 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array)
# 1047 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 1048 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1049 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1051 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1052 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 65 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 95 "/usr/include/wchar.h" 3
extern "C" { typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t; }
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t __attribute((__mode__(__HI__))); }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t __attribute((__mode__(__SI__))); }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t __attribute((__mode__(__HI__))); }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t __attribute((__mode__(__SI__))); }
# 40 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stdarg.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void * , char * , size_t ); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void * , const char * , size_t ); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void * , __off64_t * , int ); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void * ); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file * , int , void * , _IO_cookie_io_functions_t );
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE * );
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int , _IO_FILE * );
# 462 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE * ) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE * ) throw();
# 465 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE * );
# 471 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 472 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 473 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 492 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 494 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 495 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 497 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 498 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 500 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 111 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 117 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 165 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 166 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 167 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 175 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 177 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 182 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 202 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 206 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw();
# 212 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw();
# 224 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 225 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 234 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 239 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 249 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 259 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 269 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ );
# 275 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 294 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ );
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 303 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , _IO_cookie_io_functions_t ) throw();
# 316 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw();
# 322 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw();
# 329 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 340 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 344 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 353 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__ , const char *__restrict__ , ...);
# 359 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__ , ...);
# 361 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw();
# 368 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list );
# 374 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__ , __gnuc_va_list );
# 376 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw();
# 383 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 385 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 387 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 389 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 396 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 398 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 399 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 402 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 414 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 417 "/usr/include/stdio.h" 3
extern "C" int dprintf(int , const char *__restrict__ , ...)
# 418 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 427 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...);
# 433 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...);
# 435 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 473 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 475 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 481 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 482 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 485 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 487 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 533 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 534 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 540 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 552 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE * );
# 553 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 563 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE * );
# 575 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 576 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 582 "/usr/include/stdio.h" 3
extern "C" int putchar(int );
# 596 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int , FILE * );
# 604 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int , FILE * );
# 605 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int );
# 612 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 615 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 624 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__ , int , FILE *__restrict__ );
# 632 "/usr/include/stdio.h" 3
extern "C" char *gets(char * );
# 642 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ );
# 658 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 661 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 671 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ );
# 682 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 688 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 695 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 702 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 708 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 719 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 730 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 732 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 742 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 747 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * );
# 752 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 766 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 771 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * );
# 791 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 796 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 811 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 812 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * );
# 813 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 814 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 819 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 821 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw();
# 823 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw();
# 828 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 829 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE * ) throw();
# 830 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE * ) throw();
# 839 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 851 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw();
# 856 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw();
# 866 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * );
# 872 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 878 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 884 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 889 "/usr/include/stdio.h" 3
struct obstack;
# 892 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 894 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 895 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 898 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 906 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 910 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw();
# 913 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 46 "/usr/include/bits/stat.h" 3
extern "C" { struct stat {
# 48 "/usr/include/bits/stat.h" 3
__dev_t st_dev;
# 53 "/usr/include/bits/stat.h" 3
__ino_t st_ino;
# 61 "/usr/include/bits/stat.h" 3
__nlink_t st_nlink;
# 62 "/usr/include/bits/stat.h" 3
__mode_t st_mode;
# 64 "/usr/include/bits/stat.h" 3
__uid_t st_uid;
# 65 "/usr/include/bits/stat.h" 3
__gid_t st_gid;
# 67 "/usr/include/bits/stat.h" 3
int __pad0;
# 69 "/usr/include/bits/stat.h" 3
__dev_t st_rdev;
# 74 "/usr/include/bits/stat.h" 3
__off_t st_size;
# 78 "/usr/include/bits/stat.h" 3
__blksize_t st_blksize;
# 80 "/usr/include/bits/stat.h" 3
__blkcnt_t st_blocks;
# 91 "/usr/include/bits/stat.h" 3
timespec st_atim;
# 92 "/usr/include/bits/stat.h" 3
timespec st_mtim;
# 93 "/usr/include/bits/stat.h" 3
timespec st_ctim;
# 106 "/usr/include/bits/stat.h" 3
long __unused[3];
# 115 "/usr/include/bits/stat.h" 3
}; }
# 119 "/usr/include/bits/stat.h" 3
extern "C" { struct stat64 {
# 121 "/usr/include/bits/stat.h" 3
__dev_t st_dev;
# 123 "/usr/include/bits/stat.h" 3
__ino64_t st_ino;
# 124 "/usr/include/bits/stat.h" 3
__nlink_t st_nlink;
# 125 "/usr/include/bits/stat.h" 3
__mode_t st_mode;
# 132 "/usr/include/bits/stat.h" 3
__uid_t st_uid;
# 133 "/usr/include/bits/stat.h" 3
__gid_t st_gid;
# 135 "/usr/include/bits/stat.h" 3
int __pad0;
# 136 "/usr/include/bits/stat.h" 3
__dev_t st_rdev;
# 137 "/usr/include/bits/stat.h" 3
__off_t st_size;
# 143 "/usr/include/bits/stat.h" 3
__blksize_t st_blksize;
# 144 "/usr/include/bits/stat.h" 3
__blkcnt64_t st_blocks;
# 152 "/usr/include/bits/stat.h" 3
timespec st_atim;
# 153 "/usr/include/bits/stat.h" 3
timespec st_mtim;
# 154 "/usr/include/bits/stat.h" 3
timespec st_ctim;
# 167 "/usr/include/bits/stat.h" 3
long __unused[3];
# 171 "/usr/include/bits/stat.h" 3
}; }
# 211 "/usr/include/sys/stat.h" 3
extern "C" int stat(const char *__restrict__ , struct stat *__restrict__ ) throw()
# 212 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1, 2)));
# 216 "/usr/include/sys/stat.h" 3
extern "C" int fstat(int , struct stat * ) throw() __attribute((__nonnull__(2)));
# 230 "/usr/include/sys/stat.h" 3
extern "C" int stat64(const char *__restrict__ , struct stat64 *__restrict__ ) throw()
# 231 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1, 2)));
# 232 "/usr/include/sys/stat.h" 3
extern "C" int fstat64(int , struct stat64 * ) throw() __attribute((__nonnull__(2)));
# 240 "/usr/include/sys/stat.h" 3
extern "C" int fstatat(int , const char *__restrict__ , struct stat *__restrict__ , int ) throw()
# 242 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 255 "/usr/include/sys/stat.h" 3
extern "C" int fstatat64(int , const char *__restrict__ , struct stat64 *__restrict__ , int ) throw()
# 257 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 265 "/usr/include/sys/stat.h" 3
extern "C" int lstat(const char *__restrict__ , struct stat *__restrict__ ) throw()
# 266 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1, 2)));
# 278 "/usr/include/sys/stat.h" 3
extern "C" int lstat64(const char *__restrict__ , struct stat64 *__restrict__ ) throw()
# 280 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1, 2)));
# 286 "/usr/include/sys/stat.h" 3
extern "C" int chmod(const char * , __mode_t ) throw()
# 287 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1)));
# 293 "/usr/include/sys/stat.h" 3
extern "C" int lchmod(const char * , __mode_t ) throw()
# 294 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1)));
# 299 "/usr/include/sys/stat.h" 3
extern "C" int fchmod(int , __mode_t ) throw();
# 305 "/usr/include/sys/stat.h" 3
extern "C" int fchmodat(int , const char * , __mode_t , int ) throw()
# 307 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2)));
# 314 "/usr/include/sys/stat.h" 3
extern "C" __mode_t umask(__mode_t ) throw();
# 319 "/usr/include/sys/stat.h" 3
extern "C" __mode_t getumask() throw();
# 323 "/usr/include/sys/stat.h" 3
extern "C" int mkdir(const char * , __mode_t ) throw()
# 324 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1)));
# 330 "/usr/include/sys/stat.h" 3
extern "C" int mkdirat(int , const char * , __mode_t ) throw()
# 331 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2)));
# 338 "/usr/include/sys/stat.h" 3
extern "C" int mknod(const char * , __mode_t , __dev_t ) throw()
# 339 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1)));
# 345 "/usr/include/sys/stat.h" 3
extern "C" int mknodat(int , const char * , __mode_t , __dev_t ) throw()
# 346 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2)));
# 352 "/usr/include/sys/stat.h" 3
extern "C" int mkfifo(const char * , __mode_t ) throw()
# 353 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(1)));
# 359 "/usr/include/sys/stat.h" 3
extern "C" int mkfifoat(int , const char * , __mode_t ) throw()
# 360 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2)));
# 366 "/usr/include/sys/stat.h" 3
extern "C" int utimensat(int , const char * , const timespec [2], int ) throw()
# 369 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2)));
# 374 "/usr/include/sys/stat.h" 3
extern "C" int futimens(int , const timespec [2]) throw();
# 401 "/usr/include/sys/stat.h" 3
extern "C" int __fxstat(int , int , struct stat * ) throw()
# 402 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(3)));
# 403 "/usr/include/sys/stat.h" 3
extern "C" int __xstat(int , const char * , struct stat * ) throw()
# 404 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 405 "/usr/include/sys/stat.h" 3
extern "C" int __lxstat(int , const char * , struct stat * ) throw()
# 406 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 407 "/usr/include/sys/stat.h" 3
extern "C" int __fxstatat(int , int , const char * , struct stat * , int ) throw()
# 409 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(3, 4)));
# 434 "/usr/include/sys/stat.h" 3
extern "C" int __fxstat64(int , int , struct stat64 * ) throw()
# 435 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(3)));
# 436 "/usr/include/sys/stat.h" 3
extern "C" int __xstat64(int , const char * , struct stat64 * ) throw()
# 437 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 438 "/usr/include/sys/stat.h" 3
extern "C" int __lxstat64(int , const char * , struct stat64 * ) throw()
# 439 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 3)));
# 440 "/usr/include/sys/stat.h" 3
extern "C" int __fxstatat64(int , int , const char * , struct stat64 * , int ) throw()
# 442 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(3, 4)));
# 444 "/usr/include/sys/stat.h" 3
extern "C" int __xmknod(int , const char * , __mode_t , __dev_t * ) throw()
# 445 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(2, 4)));
# 447 "/usr/include/sys/stat.h" 3
extern "C" int __xmknodat(int , int , const char * , __mode_t , __dev_t * ) throw()
# 449 "/usr/include/sys/stat.h" 3
 __attribute((__nonnull__(3, 5)));
# 57 "/usr/include/sys/time.h" 3
extern "C" { struct timezone {
# 59 "/usr/include/sys/time.h" 3
int tz_minuteswest;
# 60 "/usr/include/sys/time.h" 3
int tz_dsttime;
# 61 "/usr/include/sys/time.h" 3
}; }
# 63 "/usr/include/sys/time.h" 3
extern "C" { typedef struct timezone *__restrict__ __timezone_ptr_t; }
# 73 "/usr/include/sys/time.h" 3
extern "C" int gettimeofday(timeval *__restrict__ , __timezone_ptr_t ) throw()
# 74 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 79 "/usr/include/sys/time.h" 3
extern "C" int settimeofday(const timeval * , const struct timezone * ) throw()
# 81 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 87 "/usr/include/sys/time.h" 3
extern "C" int adjtime(const timeval * , timeval * ) throw();
# 93 "/usr/include/sys/time.h" 3
enum __itimer_which {
# 96 "/usr/include/sys/time.h" 3
ITIMER_REAL,
# 99 "/usr/include/sys/time.h" 3
ITIMER_VIRTUAL,
# 103 "/usr/include/sys/time.h" 3
ITIMER_PROF
# 105 "/usr/include/sys/time.h" 3
};
# 109 "/usr/include/sys/time.h" 3
extern "C" { struct itimerval {
# 112 "/usr/include/sys/time.h" 3
timeval it_interval;
# 114 "/usr/include/sys/time.h" 3
timeval it_value;
# 115 "/usr/include/sys/time.h" 3
}; }
# 122 "/usr/include/sys/time.h" 3
extern "C" { typedef int __itimer_which_t; }
# 127 "/usr/include/sys/time.h" 3
extern "C" int getitimer(__itimer_which_t , itimerval * ) throw();
# 133 "/usr/include/sys/time.h" 3
extern "C" int setitimer(__itimer_which_t , const itimerval *__restrict__ , itimerval *__restrict__ ) throw();
# 140 "/usr/include/sys/time.h" 3
extern "C" int utimes(const char * , const timeval [2]) throw()
# 141 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 145 "/usr/include/sys/time.h" 3
extern "C" int lutimes(const char * , const timeval [2]) throw()
# 146 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 149 "/usr/include/sys/time.h" 3
extern "C" int futimes(int , const timeval [2]) throw();
# 156 "/usr/include/sys/time.h" 3
extern "C" int futimesat(int , const char * , const timeval [2]) throw();
# 71 "/usr/include/assert.h" 3
extern "C" void __assert_fail(const char * , const char * , unsigned , const char * ) throw()
# 73 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 76 "/usr/include/assert.h" 3
extern "C" void __assert_perror_fail(int , const char * , unsigned , const char * ) throw()
# 79 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 84 "/usr/include/assert.h" 3
extern "C" void __assert(const char * , const char * , int ) throw()
# 85 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 39 "/usr/include/c++/4.5/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 47 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 51 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 54 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 58 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 61 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 64 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 67 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 70 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 73 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 76 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 79 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 82 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 86 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 89 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 92 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 96 "/usr/include/c++/4.5/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 98 "/usr/include/c++/4.5/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value>
# 53 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 56 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? (((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0))) : ((_Value)0));
# 57 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? ((((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1) : (~((_Value)0)));
# 61 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 62 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 63 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
};
# 65 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 66 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 68 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 69 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 71 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 72 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 74 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const int
# 75 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 97 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value>
# 98 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 101 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const int __max_digits10 = (2 + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 3010) / 10000));
# 104 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 105 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 106 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 107 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
};
# 109 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const int
# 110 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 112 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 113 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 115 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const int
# 116 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 118 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value> const int
# 119 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 121 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
template< class _Value>
# 122 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 126 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
};
# 128 "/usr/include/c++/4.5/ext/numeric_traits.h" 3
}
# 95 "/usr/include/c++/4.5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 104 "/usr/include/c++/4.5/bits/move.h" 3
template < typename _Tp >
    inline void
    swap ( _Tp & __a, _Tp & __b )
    {



      _Tp __tmp = ( __a );
      __a = ( __b );
      __b = ( __tmp );
    }
# 118 "/usr/include/c++/4.5/bits/move.h" 3
template < typename _Tp, size_t _Nm >
    inline void
    swap ( _Tp ( & __a ) [ _Nm ], _Tp ( & __b ) [ _Nm ] )
    {
      for ( size_t __n = 0; __n < _Nm; ++ __n )
 swap ( __a [ __n ], __b [ __n ] );
    }
# 126 "/usr/include/c++/4.5/bits/move.h" 3
}
# 67 "/usr/include/c++/4.5/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 70 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair ( )
      : first ( ), second ( ) { }


      pair ( const _T1 & __a, const _T2 & __b )
      : first ( __a ), second ( __b ) { }

      template < class _U1, class _U2 >
        pair ( const pair < _U1, _U2 > & __p )
 : first ( __p . first ),
   second ( __p . second ) { }

    };
# 152 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator == ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first == __y . first && __x . second == __y . second; }
# 158 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator < ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first < __y . first
      || ( ! ( __y . first < __x . first ) && __x . second < __y . second ); }
# 165 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator != ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x == __y ); }
# 171 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator > ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __y < __x; }
# 177 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator <= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __y < __x ); }
# 183 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator >= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x < __y ); }
# 211 "/usr/include/c++/4.5/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline pair < _T1, _T2 >
    make_pair ( _T1 __x, _T2 __y )
    { return pair < _T1, _T2 > ( __x, __y ); }
# 257 "/usr/include/c++/4.5/bits/stl_pair.h" 3
}
# 68 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 85 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 88 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 91 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 95 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 99 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 112 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 113 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 114 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct iterator {
# 117 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 119 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 121 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 123 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 125 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 126 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
};
# 136 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 137 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 139 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 140 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 141 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 142 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 143 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 144 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
};
# 147 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 148 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 150 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 151 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 152 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 153 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 154 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 155 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
};
# 158 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 159 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 161 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 162 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 163 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 164 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 165 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 166 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
};
# 172 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
template < typename _Iter >
    inline typename iterator_traits < _Iter > :: iterator_category
    __iterator_category ( const _Iter & )
    { return typename iterator_traits < _Iter > :: iterator_category ( ); }
# 179 "/usr/include/c++/4.5/bits/stl_iterator_base_types.h" 3
}
# 67 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    __distance ( _InputIterator __first, _InputIterator __last,
               input_iterator_tag )
    {



      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      while ( __first != __last )
 {
   ++ __first;
   ++ __n;
 }
      return __n;
    }
# 86 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator >
    inline typename iterator_traits < _RandomAccessIterator > :: difference_type
    __distance ( _RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag )
    {



      return __last - __first;
    }
# 109 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    distance ( _InputIterator __first, _InputIterator __last )
    {

      return std :: __distance ( __first, __last,
        std :: __iterator_category ( __first ) );
    }
# 118 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    __advance ( _InputIterator & __i, _Distance __n, input_iterator_tag )
    {


      while ( __n -- )
 ++ __i;
    }
# 128 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    inline void
    __advance ( _BidirectionalIterator & __i, _Distance __n,
       bidirectional_iterator_tag )
    {



      if ( __n > 0 )
        while ( __n -- )
   ++ __i;
      else
        while ( __n ++ )
   -- __i;
    }
# 144 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline void
    __advance ( _RandomAccessIterator & __i, _Distance __n,
              random_access_iterator_tag )
    {



      __i += __n;
    }
# 167 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    advance ( _InputIterator & __i, _Distance __n )
    {

      typename iterator_traits < _InputIterator > :: difference_type __d = __n;
      std :: __advance ( __i, __d, std :: __iterator_category ( __i ) );
    }
# 176 "/usr/include/c++/4.5/bits/stl_iterator_base_funcs.h" 3
}
# 68 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 94 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    class reverse_iterator
    : public iterator < typename iterator_traits < _Iterator > :: iterator_category,
        typename iterator_traits < _Iterator > :: value_type,
        typename iterator_traits < _Iterator > :: difference_type,
        typename iterator_traits < _Iterator > :: pointer,
                      typename iterator_traits < _Iterator > :: reference >
    {
    protected :
      _Iterator current;

      typedef iterator_traits < _Iterator > __traits_type;

    public :
      typedef _Iterator iterator_type;
      typedef typename __traits_type :: difference_type difference_type;
      typedef typename __traits_type :: pointer pointer;
      typedef typename __traits_type :: reference reference;







      reverse_iterator ( ) : current ( ) { }




      explicit
      reverse_iterator ( iterator_type __x ) : current ( __x ) { }




      reverse_iterator ( const reverse_iterator & __x )
      : current ( __x . current ) { }





      template < typename _Iter >
        reverse_iterator ( const reverse_iterator < _Iter > & __x )
 : current ( __x . base ( ) ) { }




      iterator_type
      base ( ) const
      { return current; }






      reference
      operator * ( ) const
      {
 _Iterator __tmp = current;
 return * -- __tmp;
      }






      pointer
      operator -> ( ) const
      { return & ( operator * ( ) ); }






      reverse_iterator &
      operator ++ ( )
      {
 -- current;
 return * this;
      }






      reverse_iterator
      operator ++ ( int )
      {
 reverse_iterator __tmp = * this;
 -- current;
 return __tmp;
      }






      reverse_iterator &
      operator -- ( )
      {
 ++ current;
 return * this;
      }






      reverse_iterator
      operator -- ( int )
      {
 reverse_iterator __tmp = * this;
 ++ current;
 return __tmp;
      }






      reverse_iterator
      operator + ( difference_type __n ) const
      { return reverse_iterator ( current - __n ); }






      reverse_iterator &
      operator += ( difference_type __n )
      {
 current -= __n;
 return * this;
      }






      reverse_iterator
      operator - ( difference_type __n ) const
      { return reverse_iterator ( current + __n ); }






      reverse_iterator &
      operator -= ( difference_type __n )
      {
 current += __n;
 return * this;
      }






      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }
    };
# 281 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator == ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 287 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator < ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 293 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator != ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x == __y ); }
# 299 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator > ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y < __x; }
# 305 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator <= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __y < __x ); }
# 311 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator >= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x < __y ); }
# 317 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline typename reverse_iterator < _Iterator > :: difference_type
    operator - ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) - __x . base ( ); }
# 323 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline reverse_iterator < _Iterator >
    operator + ( typename reverse_iterator < _Iterator > :: difference_type __n,
       const reverse_iterator < _Iterator > & __x )
    { return reverse_iterator < _Iterator > ( __x . base ( ) - __n ); }
# 331 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator == ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 337 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator < ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 343 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator != ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x == __y ); }
# 349 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator > ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y < __x; }
# 355 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator <= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __y < __x ); }
# 361 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator >= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x < __y ); }
# 367 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >







    inline typename reverse_iterator < _IteratorL > :: difference_type
    operator - ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )

    { return __y . base ( ) - __x . base ( ); }
# 393 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container >
    class back_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit
      back_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      back_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_back ( __value );
 return * this;
      }

      back_insert_iterator &
      operator * ( )
      { return * this; }


      back_insert_iterator &
      operator ++ ( )
      { return * this; }


      back_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 469 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container >
    inline back_insert_iterator < _Container >
    back_inserter ( _Container & __x )
    { return back_insert_iterator < _Container > ( __x ); }
# 484 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container >
    class front_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit front_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      front_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_front ( __value );
 return * this;
      }

      front_insert_iterator &
      operator * ( )
      { return * this; }


      front_insert_iterator &
      operator ++ ( )
      { return * this; }


      front_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 559 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container >
    inline front_insert_iterator < _Container >
    front_inserter ( _Container & __x )
    { return front_insert_iterator < _Container > ( __x ); }
# 578 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container >
    class insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;
      typename _Container :: iterator iter;

    public :

      typedef _Container container_type;





      insert_iterator ( _Container & __x, typename _Container :: iterator __i )
      : container ( & __x ), iter ( __i ) { }

      insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 iter = container -> insert ( iter, __value );
 ++ iter;
 return * this;
      }

      insert_iterator &
      operator * ( )
      { return * this; }


      insert_iterator &
      operator ++ ( )
      { return * this; }


      insert_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 673 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Container, typename _Iterator >
    inline insert_iterator < _Container >
    inserter ( _Container & __x, _Iterator __i )
    {
      return insert_iterator < _Container > ( __x,
      typename _Container :: iterator ( __i ) );
    }
# 683 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
}
# 685 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 694 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
using std::iterator_traits;
# 695 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
using std::iterator;
# 696 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator
    {
    protected :
      _Iterator _M_current;

      typedef iterator_traits < _Iterator > __traits_type;

    public :
      typedef _Iterator iterator_type;
      typedef typename __traits_type :: iterator_category iterator_category;
      typedef typename __traits_type :: value_type value_type;
      typedef typename __traits_type :: difference_type difference_type;
      typedef typename __traits_type :: reference reference;
      typedef typename __traits_type :: pointer pointer;

      __normal_iterator ( ) : _M_current ( _Iterator ( ) ) { }

      explicit
      __normal_iterator ( const _Iterator & __i ) : _M_current ( __i ) { }


      template < typename _Iter >
        __normal_iterator ( const __normal_iterator < _Iter,
     typename __enable_if <
              ( std :: __are_same < _Iter, typename _Container :: pointer > :: __value ),
        _Container > :: __type > & __i )
        : _M_current ( __i . base ( ) ) { }


      reference
      operator * ( ) const
      { return * _M_current; }

      pointer
      operator -> ( ) const
      { return _M_current; }

      __normal_iterator &
      operator ++ ( )
      {
 ++ _M_current;
 return * this;
      }

      __normal_iterator
      operator ++ ( int )
      { return __normal_iterator ( _M_current ++ ); }


      __normal_iterator &
      operator -- ( )
      {
 -- _M_current;
 return * this;
      }

      __normal_iterator
      operator -- ( int )
      { return __normal_iterator ( _M_current -- ); }


      reference
      operator [ ] ( const difference_type & __n ) const
      { return _M_current [ __n ]; }

      __normal_iterator &
      operator += ( const difference_type & __n )
      { _M_current += __n; return * this; }

      __normal_iterator
      operator + ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current + __n ); }

      __normal_iterator &
      operator -= ( const difference_type & __n )
      { _M_current -= __n; return * this; }

      __normal_iterator
      operator - ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current - __n ); }

      const _Iterator &
      base ( ) const
      { return _M_current; }
    };
# 792 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 798 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 804 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 810 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 817 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 823 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 829 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 835 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 841 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 847 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 853 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 859 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 869 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >







    inline typename __normal_iterator < _IteratorL, _Container > :: difference_type
    operator - ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )

    { return __lhs . base ( ) - __rhs . base ( ); }
# 883 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline typename __normal_iterator < _Iterator, _Container > :: difference_type
    operator - ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) - __rhs . base ( ); }
# 889 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline __normal_iterator < _Iterator, _Container >
    operator + ( typename __normal_iterator < _Iterator, _Container > :: difference_type
       __n, const __normal_iterator < _Iterator, _Container > & __i )
    { return __normal_iterator < _Iterator, _Container > ( __i . base ( ) + __n ); }
# 895 "/usr/include/c++/4.5/bits/stl_iterator.h" 3
}
# 47 "/usr/include/c++/4.5/debug/debug.h" 3
namespace std {
# 49 "/usr/include/c++/4.5/debug/debug.h" 3
namespace __debug { }
# 50 "/usr/include/c++/4.5/debug/debug.h" 3
}
# 55 "/usr/include/c++/4.5/debug/debug.h" 3
namespace __gnu_debug {
# 57 "/usr/include/c++/4.5/debug/debug.h" 3
using namespace std::__debug;
# 58 "/usr/include/c++/4.5/debug/debug.h" 3
}
# 74 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 80 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __iter_swap {
# 82 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          typedef typename iterator_traits < _ForwardIterator1 > :: value_type
            _ValueType1;
          _ValueType1 __tmp = ( * __a );
          * __a = ( * __b );
          * __b = ( __tmp );
 }
# 92 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 95 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 97 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          swap ( * __a, * __b );
        }
# 103 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 115 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline void
    iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
    {
      typedef typename iterator_traits < _ForwardIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: value_type
 _ValueType2;
# 134 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
      typedef typename iterator_traits < _ForwardIterator1 > :: reference
 _ReferenceType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: reference
 _ReferenceType2;
      std :: __iter_swap < __are_same < _ValueType1, _ValueType2 > :: __value
 && __are_same < _ValueType1 &, _ReferenceType1 > :: __value
 && __are_same < _ValueType2 &, _ReferenceType2 > :: __value > ::
 iter_swap ( __a, __b );
    }
# 156 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator2
    swap_ranges ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2 )
    {





      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 std :: iter_swap ( __first1, __first2 );
      return __first2;
    }
# 184 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b )
    {



      if ( __b < __a )
 return __b;
      return __a;
    }
# 207 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b )
    {



      if ( __a < __b )
 return __b;
      return __a;
    }
# 230 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __b, __a ) )
 return __b;
      return __a;
    }
# 251 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __a, __b ) )
 return __b;
      return __a;
    }
# 264 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Iterator, bool _HasBase >
    struct _Iter_base
    {
      typedef _Iterator iterator_type;
      static iterator_type
      _S_base ( _Iterator __it )
      { return __it; }
    };
# 273 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct _Iter_base < _Iterator, true >
    {
      typedef typename _Iterator :: iterator_type iterator_type;
      static iterator_type
      _S_base ( _Iterator __it )
      { return __it . base ( ); }
    };
# 284 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class _Iterator>
# 285 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct _Niter_base : public _Iter_base< _Iterator, __is_normal_iterator< _Iterator> ::__value> {
# 287 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 289 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Iterator >
    inline typename _Niter_base < _Iterator > :: iterator_type
    __niter_base ( _Iterator __it )
    { return std :: _Niter_base < _Iterator > :: _S_base ( __it ); }
# 295 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class _Iterator>
# 296 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct _Miter_base : public _Iter_base< _Iterator, __is_move_iterator< _Iterator> ::__value> {
# 298 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 300 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Iterator >
    inline typename _Miter_base < _Iterator > :: iterator_type
    __miter_base ( _Iterator __it )
    { return std :: _Miter_base < _Iterator > :: _S_base ( __it ); }
# 311 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool __T3, bool __T4, class >
# 312 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __copy_move {
# 314 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   for (; __first != __last; ++ __result, ++ __first )
     * __result = * __first;
   return __result;
 }
# 322 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 340 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 342 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   typedef typename iterator_traits < _II > :: difference_type _Distance;
   for ( _Distance __n = __last - __first; __n > 0; -- __n )
     {
       * __result = * __first;
       ++ __first;
       ++ __result;
     }
   return __result;
 }
# 355 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 377 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 378 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 380 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_m ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   if ( _Num )
     __builtin_memmove ( __result, __first, sizeof ( _Tp ) * _Num );
   return __result + _Num;
 }
# 389 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 391 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a ( _II __first, _II __last, _OI __result )
    {
      typedef typename iterator_traits < _II > :: value_type _ValueTypeI;
      typedef typename iterator_traits < _OI > :: value_type _ValueTypeO;
      typedef typename iterator_traits < _II > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueTypeI )
                      && __is_pointer < _II > :: __value
                      && __is_pointer < _OI > :: __value
        && __are_same < _ValueTypeI, _ValueTypeO > :: __value );

      return std :: __copy_move < _IsMove, __simple,
                       _Category > :: __copy_m ( __first, __last, __result );
    }
# 409 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 412 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 415 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 418 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 424 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 430 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 436 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a2 ( _II __first, _II __last, _OI __result )
    {
      return _OI ( std :: __copy_move_a < _IsMove > ( std :: __niter_base ( __first ),
          std :: __niter_base ( __last ),
          std :: __niter_base ( __result ) ) );
    }
# 462 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
    inline _OI
    copy ( _II __first, _II __last, _OI __result )
    {




      ;

      return ( std :: __copy_move_a2 < __is_move_iterator < _II > :: __value >
       ( std :: __miter_base ( __first ), std :: __miter_base ( __last ),
        __result ) );
    }
# 514 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool __T5, bool __T6, class >
# 515 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 517 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   while ( __first != __last )
     * -- __result = * -- __last;
   return __result;
 }
# 525 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 543 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 545 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   typename iterator_traits < _BI1 > :: difference_type __n;
   for ( __n = __last - __first; __n > 0; -- __n )
     * -- __result = * -- __last;
   return __result;
 }
# 554 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 572 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 573 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 575 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_move_b ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   if ( _Num )
     __builtin_memmove ( __result - _Num, __first, sizeof ( _Tp ) * _Num );
   return __result - _Num;
 }
# 584 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 586 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      typedef typename iterator_traits < _BI1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _BI2 > :: value_type _ValueType2;
      typedef typename iterator_traits < _BI1 > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueType1 )
                      && __is_pointer < _BI1 > :: __value
                      && __is_pointer < _BI2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __copy_move_backward < _IsMove, __simple,
                                _Category > :: __copy_move_b ( __first,
         __last,
         __result );
    }
# 604 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a2 ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      return _BI2 ( std :: __copy_move_backward_a < _IsMove >
    ( std :: __niter_base ( __first ), std :: __niter_base ( __last ),
     std :: __niter_base ( __result ) ) );
    }
# 631 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
    inline _BI2
    copy_backward ( _BI1 __first, _BI1 __last, _BI2 __result )
    {






      ;

      return ( std :: __copy_move_backward_a2 < __is_move_iterator < _BI1 > :: __value >
       ( std :: __miter_base ( __first ), std :: __miter_base ( __last ),
        __result ) );
    }
# 689 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
       const _Tp & __value )
    {
      for (; __first != __last; ++ __first )
 * __first = __value;
    }
# 699 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++ __first )
 * __first = __tmp;
    }
# 711 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, void > :: __type
    __fill_a ( _Tp * __first, _Tp * __last, const _Tp & __c )
    {
      const _Tp __tmp = __c;
      __builtin_memset ( __first, static_cast < unsigned char > ( __tmp ),
         __last - __first );
    }
# 733 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    fill ( _ForwardIterator __first, _ForwardIterator __last, const _Tp & __value )
    {



      ;

      std :: __fill_a ( std :: __niter_base ( __first ), std :: __niter_base ( __last ),
      __value );
    }
# 746 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      for (; __n > 0; -- __n, ++ __first )
 * __first = __value;
      return __first;
    }
# 756 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __n > 0; -- __n, ++ __first )
 * __first = __tmp;
      return __first;
    }
# 767 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, _Tp * > :: __type
    __fill_n_a ( _Tp * __first, _Size __n, const _Tp & __c )
    {
      std :: __fill_a ( __first, __first + __n, __c );
      return __first + __n;
    }
# 791 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _OI, typename _Size, typename _Tp >
    inline _OI
    fill_n ( _OI __first, _Size __n, const _Tp & __value )
    {



      return _OI ( std :: __fill_n_a ( std :: __niter_base ( __first ), __n, __value ) );
    }
# 801 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 802 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __equal {
# 804 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool
        equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
        {
   for (; __first1 != __last1; ++ __first1, ++ __first2 )
     if ( ! ( * __first1 == * __first2 ) )
       return false;
   return true;
 }
# 813 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 816 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 818 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp >
        static bool
        equal ( const _Tp * __first1, const _Tp * __last1, const _Tp * __first2 )
        {
   return ! __builtin_memcmp ( __first1, __first2, sizeof ( _Tp )
       * ( __last1 - __first1 ) );
 }
# 825 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 827 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __equal_aux ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple = ( __is_integer < _ValueType1 > :: __value
                      && __is_pointer < _II1 > :: __value
                      && __is_pointer < _II2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __equal < __simple > :: equal ( __first1, __last1, __first2 );
    }
# 842 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< class , class >
# 843 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __lc_rai {
# 845 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static _II1
        __newlast1 ( _II1, _II1 __last1, _II2, _II2 )
        { return __last1; }
# 850 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II >
        static bool
        __cnd2 ( _II __first, _II __last )
        { return __first != __last; }
# 854 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 857 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 859 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _RAI1, typename _RAI2 >
        static _RAI1
        __newlast1 ( _RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2 )
        {
   const typename iterator_traits < _RAI1 > :: difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits < _RAI2 > :: difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }
# 871 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _RAI >
        static bool
        __cnd2 ( _RAI, _RAI )
        { return true; }
# 875 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 877 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 878 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 880 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool __lc ( _II1, _II1, _II2, _II2 );
# 882 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 884 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < bool _BoolType >
    template < typename _II1, typename _II2 >
      bool
      __lexicographical_compare < _BoolType > ::
      __lc ( _II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2 )
      {
 typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
 typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
 typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;

 __last1 = __rai_type :: __newlast1 ( __first1, __last1,
      __first2, __last2 );
 for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
      ++ __first1, ++ __first2 )
   {
     if ( * __first1 < * __first2 )
       return true;
     if ( * __first2 < * __first1 )
       return false;
   }
 return __first1 == __last1 && __first2 != __last2;
      }
# 908 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 910 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Tp, typename _Up >
        static bool
        __lc ( const _Tp * __first1, const _Tp * __last1,
      const _Up * __first2, const _Up * __last2 )
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   const int __result = __builtin_memcmp ( __first1, __first2,
      std :: min ( __len1, __len2 ) );
   return __result != 0 ? __result < 0 : __len1 < __len2;
 }
# 921 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
};
# 923 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __lexicographical_compare_aux ( _II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple =
 ( __is_byte < _ValueType1 > :: __value && __is_byte < _ValueType2 > :: __value
  && ! __gnu_cxx :: __numeric_traits < _ValueType1 > :: __is_signed
  && ! __gnu_cxx :: __numeric_traits < _ValueType2 > :: __is_signed
  && __is_pointer < _II1 > :: __value
  && __is_pointer < _II2 > :: __value );

      return std :: __lexicographical_compare < __simple > :: __lc ( __first1, __last1,
           __first2, __last2 );
    }
# 952 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    _ForwardIterator
    lower_bound ( _ForwardIterator __first, _ForwardIterator __last,
  const _Tp & __val )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;
      typedef typename iterator_traits < _ForwardIterator > :: difference_type
 _DistanceType;




      ;

      _DistanceType __len = std :: distance ( __first, __last );
      _DistanceType __half;
      _ForwardIterator __middle;

      while ( __len > 0 )
 {
   __half = __len >> 1;
   __middle = __first;
   std :: advance ( __middle, __half );
   if ( * __middle < __val )
     {
       __first = __middle;
       ++ __first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 990 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _Size >
    inline _Size
    __lg ( _Size __n )
    {
      _Size __k;
      for ( __k = 0; __n != 0; __n >>= 1 )
 ++ __k;
      return __k - 1;
    }
# 1001 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
inline int __lg(int __n)
# 1002 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1005 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
inline long __lg(long __n)
# 1006 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1009 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
inline long long __lg(long long __n)
# 1010 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1012 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
}
# 1014 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1028 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {






      ;

      return std :: __equal_aux ( std :: __niter_base ( __first1 ),
         std :: __niter_base ( __last1 ),
         std :: __niter_base ( __first2 ) );
    }
# 1060 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _IIter1, typename _IIter2, typename _BinaryPredicate >
    inline bool
    equal ( _IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 if ( ! bool ( __binary_pred ( * __first1, * __first2 ) ) )
   return false;
      return true;
    }
# 1091 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2 )
    {

      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;




      ;
      ;

      return std :: __lexicographical_compare_aux ( std :: __niter_base ( __first1 ),
      std :: __niter_base ( __last1 ),
      std :: __niter_base ( __first2 ),
      std :: __niter_base ( __last2 ) );
    }
# 1125 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _II1, typename _II2, typename _Compare >
    bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp )
    {
      typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
      typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
      typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;




      ;
      ;

      __last1 = __rai_type :: __newlast1 ( __first1, __last1, __first2, __last2 );
      for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
    ++ __first1, ++ __first2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     return true;
   if ( __comp ( * __first2, * __first1 ) )
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 1165 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2 )
    {






      ;

      while ( __first1 != __last1 && * __first1 == * __first2 )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1202 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      while ( __first1 != __last1 && bool ( __binary_pred ( * __first1, * __first2 ) ) )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1221 "/usr/include/c++/4.5/bits/stl_algobase.h" 3
}
# 43 "/usr/include/c++/4.5/exception" 3
namespace std {
# 61 "/usr/include/c++/4.5/exception" 3
class exception {
# 64 "/usr/include/c++/4.5/exception" 3
public: exception() throw() { }
# 65 "/usr/include/c++/4.5/exception" 3
virtual ~exception() throw();
# 69 "/usr/include/c++/4.5/exception" 3
virtual const char *what() const throw();
# 70 "/usr/include/c++/4.5/exception" 3
};
# 74 "/usr/include/c++/4.5/exception" 3
class bad_exception : public exception {
# 77 "/usr/include/c++/4.5/exception" 3
public: bad_exception() throw() { }
# 81 "/usr/include/c++/4.5/exception" 3
virtual ~bad_exception() throw();
# 84 "/usr/include/c++/4.5/exception" 3
virtual const char *what() const throw();
# 85 "/usr/include/c++/4.5/exception" 3
};
# 88 "/usr/include/c++/4.5/exception" 3
typedef void (*terminate_handler)(void);
# 91 "/usr/include/c++/4.5/exception" 3
typedef void (*unexpected_handler)(void);
# 94 "/usr/include/c++/4.5/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 98 "/usr/include/c++/4.5/exception" 3
void terminate() throw() __attribute((__noreturn__));
# 101 "/usr/include/c++/4.5/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 105 "/usr/include/c++/4.5/exception" 3
void unexpected() __attribute((__noreturn__));
# 118 "/usr/include/c++/4.5/exception" 3
bool uncaught_exception() throw() __attribute((__pure__));
# 121 "/usr/include/c++/4.5/exception" 3
}
# 123 "/usr/include/c++/4.5/exception" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.5/exception" 3
void __verbose_terminate_handler();
# 143 "/usr/include/c++/4.5/exception" 3
}
# 48 "/usr/include/c++/4.5/new" 3
namespace std {
# 56 "/usr/include/c++/4.5/new" 3
class bad_alloc : public exception {
# 59 "/usr/include/c++/4.5/new" 3
public: bad_alloc() throw() { }
# 63 "/usr/include/c++/4.5/new" 3
virtual ~bad_alloc() throw();
# 66 "/usr/include/c++/4.5/new" 3
virtual const char *what() const throw();
# 67 "/usr/include/c++/4.5/new" 3
};
# 69 "/usr/include/c++/4.5/new" 3
struct nothrow_t { };
# 71 "/usr/include/c++/4.5/new" 3
extern const nothrow_t nothrow;
# 75 "/usr/include/c++/4.5/new" 3
typedef void (*new_handler)(void);
# 79 "/usr/include/c++/4.5/new" 3
new_handler set_new_handler(new_handler) throw();
# 80 "/usr/include/c++/4.5/new" 3
}
# 93 "/usr/include/c++/4.5/new" 3
void *operator new(size_t) throw(std::bad_alloc);
# 94 "/usr/include/c++/4.5/new" 3
void *operator new[](size_t) throw(std::bad_alloc);
# 95 "/usr/include/c++/4.5/new" 3
void operator delete(void *) throw();
# 96 "/usr/include/c++/4.5/new" 3
void operator delete[](void *) throw();
# 97 "/usr/include/c++/4.5/new" 3
void *operator new(size_t, const std::nothrow_t &) throw();
# 98 "/usr/include/c++/4.5/new" 3
void *operator new[](size_t, const std::nothrow_t &) throw();
# 99 "/usr/include/c++/4.5/new" 3
void operator delete(void *, const std::nothrow_t &) throw();
# 100 "/usr/include/c++/4.5/new" 3
void operator delete[](void *, const std::nothrow_t &) throw();
# 103 "/usr/include/c++/4.5/new" 3
inline void *operator new(size_t, void *__p) throw() { return __p; }
# 104 "/usr/include/c++/4.5/new" 3
inline void *operator new[](size_t, void *__p) throw() { return __p; }
# 107 "/usr/include/c++/4.5/new" 3
inline void operator delete(void *, void *) throw() { }
# 108 "/usr/include/c++/4.5/new" 3
inline void operator delete[](void *, void *) throw() { }
# 37 "/usr/include/c++/4.5/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.5/ext/new_allocator.h" 3
using std::size_t;
# 40 "/usr/include/c++/4.5/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 50 "/usr/include/c++/4.5/ext/new_allocator.h" 3
template < typename _Tp >
    class new_allocator
    {
    public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef new_allocator < _Tp1 > other; };

      new_allocator ( ) throw ( ) { }

      new_allocator ( const new_allocator & ) throw ( ) { }

      template < typename _Tp1 >
        new_allocator ( const new_allocator < _Tp1 > & ) throw ( ) { }

      ~ new_allocator ( ) throw ( ) { }

      pointer
      address ( reference __x ) const { return & __x; }

      const_pointer
      address ( const_reference __x ) const { return & __x; }



      pointer
      allocate ( size_type __n, const void * = 0 )
      {
 if ( __n > this -> max_size ( ) )
   std :: __throw_bad_alloc ( );

 return static_cast < _Tp * > ( :: operator new ( __n * sizeof ( _Tp ) ) );
      }


      void
      deallocate ( pointer __p, size_type )
      { :: operator delete ( __p ); }

      size_type
      max_size ( ) const throw ( )
      { return size_t ( - 1 ) / sizeof ( _Tp ); }



      void
      construct ( pointer __p, const _Tp & __val )
      { :: new ( ( void * ) __p ) _Tp ( __val ); }

      void
      destroy ( pointer __p ) { __p -> ~ _Tp ( ); }
    };
# 118 "/usr/include/c++/4.5/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return true; }
# 123 "/usr/include/c++/4.5/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return false; }
# 128 "/usr/include/c++/4.5/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.5/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Tp >
    class allocator;
# 64 "/usr/include/c++/4.5/bits/allocator.h" 3
template<> class allocator< void> {
# 67 "/usr/include/c++/4.5/bits/allocator.h" 3
public: typedef size_t size_type;
# 68 "/usr/include/c++/4.5/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 69 "/usr/include/c++/4.5/bits/allocator.h" 3
typedef void *pointer;
# 70 "/usr/include/c++/4.5/bits/allocator.h" 3
typedef const void *const_pointer;
# 71 "/usr/include/c++/4.5/bits/allocator.h" 3
typedef void value_type;
# 73 "/usr/include/c++/4.5/bits/allocator.h" 3
template< class _Tp1>
# 74 "/usr/include/c++/4.5/bits/allocator.h" 3
struct rebind {
# 75 "/usr/include/c++/4.5/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 76 "/usr/include/c++/4.5/bits/allocator.h" 3
};
# 85 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Tp >
    class allocator : public __gnu_cxx :: new_allocator < _Tp >
    {
   public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef allocator < _Tp1 > other; };

      allocator ( ) throw ( ) { }

      allocator ( const allocator & __a ) throw ( )
      : __gnu_cxx :: new_allocator < _Tp > ( __a ) { }

      template < typename _Tp1 >
        allocator ( const allocator < _Tp1 > & ) throw ( ) { }

      ~ allocator ( ) throw ( ) { }


    };
# 114 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator == ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return true; }
# 119 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return true; }
# 124 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator != ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return false; }
# 129 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return false; }
# 138 "/usr/include/c++/4.5/bits/allocator.h" 3
extern template class allocator< char> ;
# 139 "/usr/include/c++/4.5/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 146 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_swap
    { static void _S_do_it ( _Alloc &, _Alloc & ) { } };
# 150 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_swap < _Alloc, false >
    {
      static void
      _S_do_it ( _Alloc & __one, _Alloc & __two )
      {

 if ( __one != __two )
   swap ( __one, __two );
      }
    };
# 163 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_neq
    {
      static bool
      _S_do_it ( const _Alloc &, const _Alloc & )
      { return false; }
    };
# 171 "/usr/include/c++/4.5/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_neq < _Alloc, false >
    {
      static bool
      _S_do_it ( const _Alloc & __one, const _Alloc & __two )
      { return __one != __two; }
    };
# 204 "/usr/include/c++/4.5/bits/allocator.h" 3
}
# 63 "/usr/include/c++/4.5/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 69 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _T1, typename _T2 >
    inline void




    _Construct ( _T1 * __p, const _T2 & __value )

    {


      :: new ( static_cast < void * > ( __p ) ) _T1 ( ( __value ) );
    }
# 86 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _Tp >
    inline void
    _Destroy ( _Tp * __pointer )
    { __pointer -> ~ _Tp ( ); }
# 91 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template< bool __T7>
# 92 "/usr/include/c++/4.5/bits/stl_construct.h" 3
struct _Destroy_aux {
# 94 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _ForwardIterator >
        static void
        __destroy ( _ForwardIterator __first, _ForwardIterator __last )
 {
   for (; __first != __last; ++ __first )
     std :: _Destroy ( & * __first );
 }
# 101 "/usr/include/c++/4.5/bits/stl_construct.h" 3
};
# 104 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 106 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _ForwardIterator >
        static void
        __destroy ( _ForwardIterator, _ForwardIterator ) { }
# 109 "/usr/include/c++/4.5/bits/stl_construct.h" 3
};
# 116 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _ForwardIterator >
    inline void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
                       _Value_type;
      std :: _Destroy_aux < __has_trivial_destructor ( _Value_type ) > ::
 __destroy ( __first, __last );
    }
# 132 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template< class _Tp> class allocator;
# 134 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _ForwardIterator, typename _Allocator >
    void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last,
      _Allocator & __alloc )
    {
      for (; __first != __last; ++ __first )
 __alloc . destroy ( & * __first );
    }
# 143 "/usr/include/c++/4.5/bits/stl_construct.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    _Destroy ( _ForwardIterator __first, _ForwardIterator __last,
      allocator < _Tp > & )
    {
      _Destroy ( __first, __last );
    }
# 151 "/usr/include/c++/4.5/bits/stl_construct.h" 3
}
# 60 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template< bool __T8>
# 63 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 65 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
        static _ForwardIterator
        uninitialized_copy ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result )
        {
   _ForwardIterator __cur = __result;
   try
     {
       for (; __first != __last; ++ __first, ++ __cur )
  std :: _Construct ( & * __cur, * __first );
       return __cur;
     }
   catch ( ... )
     {
       std :: _Destroy ( __result, __cur );
       throw;
     }
 }
# 83 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 86 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 88 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
        static _ForwardIterator
        uninitialized_copy ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result )
        { return std :: copy ( __first, __last, __result ); }
# 93 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 104 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator >
    inline _ForwardIterator
    uninitialized_copy ( _InputIterator __first, _InputIterator __last,
         _ForwardIterator __result )
    {
      typedef typename iterator_traits < _InputIterator > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType2;

      return std :: __uninitialized_copy < ( __is_pod ( _ValueType1 )
     && __is_pod ( _ValueType2 ) ) > ::
 uninitialized_copy ( __first, __last, __result );
    }
# 120 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template< bool __T9>
# 121 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 123 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        uninitialized_fill ( _ForwardIterator __first,
      _ForwardIterator __last, const _Tp & __x )
        {
   _ForwardIterator __cur = __first;
   try
     {
       for (; __cur != __last; ++ __cur )
  std :: _Construct ( & * __cur, __x );
     }
   catch ( ... )
     {
       std :: _Destroy ( __first, __cur );
       throw;
     }
 }
# 140 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 143 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 145 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        uninitialized_fill ( _ForwardIterator __first,
      _ForwardIterator __last, const _Tp & __x )
        { std :: fill ( __first, __last, __x ); }
# 150 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 161 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    uninitialized_fill ( _ForwardIterator __first, _ForwardIterator __last,
         const _Tp & __x )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;

      std :: __uninitialized_fill < __is_pod ( _ValueType ) > ::
 uninitialized_fill ( __first, __last, __x );
    }
# 174 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template< bool __T10>
# 175 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
struct __uninitialized_construct_range_dispatch {
# 177 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        __ucr ( _ForwardIterator __first, _ForwardIterator __last,
       _Tp & __value )
        {
   if ( __first == __last )
     return;

   _ForwardIterator __cur = __first;
   try
     {
       std :: _Construct ( & * __first, ( __value ) );
       _ForwardIterator __prev = __cur;
       ++ __cur;
       for (; __cur != __last; ++ __cur, ++ __prev )
  std :: _Construct ( & * __cur, ( * __prev ) );
       __value = ( * __prev );
     }
   catch ( ... )
     {
       std :: _Destroy ( __first, __cur );
       throw;
     }
 }
# 201 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 204 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_construct_range_dispatch< true> {
# 206 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
        static void
        __ucr ( _ForwardIterator, _ForwardIterator, _Tp & ) { }
# 209 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 221 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    __uninitialized_construct_range ( _ForwardIterator __first,
        _ForwardIterator __last,
        _Tp & __value )
    {
      typedef typename std :: iterator_traits < _ForwardIterator > :: value_type
 _ValueType;

      std :: __uninitialized_construct_range_dispatch <
        __has_trivial_constructor ( _ValueType ) > ::
   __ucr ( __first, __last, __value );
    }
# 236 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template< bool __T11>
# 237 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 239 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
        static void
        uninitialized_fill_n ( _ForwardIterator __first, _Size __n,
        const _Tp & __x )
        {
   _ForwardIterator __cur = __first;
   try
     {
       for (; __n > 0; -- __n, ++ __cur )
  std :: _Construct ( & * __cur, __x );
     }
   catch ( ... )
     {
       std :: _Destroy ( __first, __cur );
       throw;
     }
 }
# 256 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 259 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 261 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
        static void
        uninitialized_fill_n ( _ForwardIterator __first, _Size __n,
        const _Tp & __x )
        { std :: fill_n ( __first, __n, __x ); }
# 266 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
};
# 277 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp >
    inline void
    uninitialized_fill_n ( _ForwardIterator __first, _Size __n, const _Tp & __x )
    {
      typedef typename iterator_traits < _ForwardIterator > :: value_type
 _ValueType;

      std :: __uninitialized_fill_n < __is_pod ( _ValueType ) > ::
 uninitialized_fill_n ( __first, __n, __x );
    }
# 294 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _Allocator >
    _ForwardIterator
    __uninitialized_copy_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __result;
      try
 {
   for (; __first != __last; ++ __first, ++ __cur )
     __alloc . construct ( & * __cur, * __first );
   return __cur;
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __cur, __alloc );
   throw;
 }
    }
# 314 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator, typename _Tp >
    inline _ForwardIterator
    __uninitialized_copy_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, allocator < _Tp > & )
    { return std :: uninitialized_copy ( __first, __last, __result ); }
# 320 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator,
    typename _Allocator >
    inline _ForwardIterator
    __uninitialized_move_a ( _InputIterator __first, _InputIterator __last,
      _ForwardIterator __result, _Allocator & __alloc )
    {
      return std :: __uninitialized_copy_a ( ( __first ),
      ( __last ),
      __result, __alloc );
    }
# 331 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Allocator >
    void
    __uninitialized_fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __x, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __cur != __last; ++ __cur )
     __alloc . construct ( & * __cur, __x );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first, __cur, __alloc );
   throw;
 }
    }
# 349 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _Tp2 >
    inline void
    __uninitialized_fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __x, allocator < _Tp2 > & )
    { std :: uninitialized_fill ( __first, __last, __x ); }
# 355 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Allocator >
    void
    __uninitialized_fill_n_a ( _ForwardIterator __first, _Size __n,
        const _Tp & __x, _Allocator & __alloc )
    {
      _ForwardIterator __cur = __first;
      try
 {
   for (; __n > 0; -- __n, ++ __cur )
     __alloc . construct ( & * __cur, __x );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first, __cur, __alloc );
   throw;
 }
    }
# 374 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Size, typename _Tp,
    typename _Tp2 >
    inline void
    __uninitialized_fill_n_a ( _ForwardIterator __first, _Size __n,
        const _Tp & __x, allocator < _Tp2 > & )
    { std :: uninitialized_fill_n ( __first, __n, __x ); }
# 391 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator >
    inline _ForwardIterator
    __uninitialized_copy_move ( _InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid = std :: __uninitialized_copy_a ( __first1, __last1,
          __result,
          __alloc );
      try
 {
   return std :: __uninitialized_move_a ( __first2, __last2, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 419 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _ForwardIterator, typename _Allocator >
    inline _ForwardIterator
    __uninitialized_move_copy ( _InputIterator1 __first1,
         _InputIterator1 __last1,
         _InputIterator2 __first2,
         _InputIterator2 __last2,
         _ForwardIterator __result,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid = std :: __uninitialized_move_a ( __first1, __last1,
          __result,
          __alloc );
      try
 {
   return std :: __uninitialized_copy_a ( __first2, __last2, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 446 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _ForwardIterator, typename _Tp, typename _InputIterator,
    typename _Allocator >
    inline _ForwardIterator
    __uninitialized_fill_move ( _ForwardIterator __result, _ForwardIterator __mid,
         const _Tp & __x, _InputIterator __first,
         _InputIterator __last, _Allocator & __alloc )
    {
      std :: __uninitialized_fill_a ( __result, __mid, __x, __alloc );
      try
 {
   return std :: __uninitialized_move_a ( __first, __last, __mid, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __result, __mid, __alloc );
   throw;
 }
    }
# 468 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
template < typename _InputIterator, typename _ForwardIterator, typename _Tp,
    typename _Allocator >
    inline void
    __uninitialized_move_fill ( _InputIterator __first1, _InputIterator __last1,
         _ForwardIterator __first2,
         _ForwardIterator __last2, const _Tp & __x,
         _Allocator & __alloc )
    {
      _ForwardIterator __mid2 = std :: __uninitialized_move_a ( __first1, __last1,
           __first2,
           __alloc );
      try
 {
   std :: __uninitialized_fill_a ( __mid2, __last2, __x, __alloc );
 }
      catch ( ... )
 {
   std :: _Destroy ( __first2, __mid2, __alloc );
   throw;
 }
    }
# 537 "/usr/include/c++/4.5/bits/stl_uninitialized.h" 3
}
# 65 "/usr/include/c++/4.5/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    struct _Vector_base
    {
      typedef typename _Alloc :: template rebind < _Tp > :: other _Tp_alloc_type;

      struct _Vector_impl
      : public _Tp_alloc_type
      {
 typename _Tp_alloc_type :: pointer _M_start;
 typename _Tp_alloc_type :: pointer _M_finish;
 typename _Tp_alloc_type :: pointer _M_end_of_storage;

 _Vector_impl ( )
 : _Tp_alloc_type ( ), _M_start ( 0 ), _M_finish ( 0 ), _M_end_of_storage ( 0 )
 { }

 _Vector_impl ( _Tp_alloc_type const & __a )
 : _Tp_alloc_type ( __a ), _M_start ( 0 ), _M_finish ( 0 ), _M_end_of_storage ( 0 )
 { }
      };

    public :
      typedef _Alloc allocator_type;

      _Tp_alloc_type &
      _M_get_Tp_allocator ( )
      { return * static_cast < _Tp_alloc_type * > ( & this -> _M_impl ); }

      const _Tp_alloc_type &
      _M_get_Tp_allocator ( ) const
      { return * static_cast < const _Tp_alloc_type * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Tp_allocator ( ) ); }

      _Vector_base ( )
      : _M_impl ( ) { }

      _Vector_base ( const allocator_type & __a )
      : _M_impl ( __a ) { }

      _Vector_base ( size_t __n, const allocator_type & __a )
      : _M_impl ( __a )
      {
 this -> _M_impl . _M_start = this -> _M_allocate ( __n );
 this -> _M_impl . _M_finish = this -> _M_impl . _M_start;
 this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
      }

      ~ _Vector_base ( )
      { _M_deallocate ( this -> _M_impl . _M_start, this -> _M_impl . _M_end_of_storage
        - this -> _M_impl . _M_start ); }

    public :
      _Vector_impl _M_impl;

      typename _Tp_alloc_type :: pointer
      _M_allocate ( size_t __n )
      { return __n != 0 ? _M_impl . allocate ( __n ) : 0; }

      void
      _M_deallocate ( typename _Tp_alloc_type :: pointer __p, size_t __n )
      {
 if ( __p )
   _M_impl . deallocate ( __p, __n );
      }
    };
# 169 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc = std :: allocator < _Tp > >
    class vector : protected _Vector_base < _Tp, _Alloc >
    {

      typedef typename _Alloc :: value_type _Alloc_value_type;



      typedef _Vector_base < _Tp, _Alloc > _Base;
      typedef typename _Base :: _Tp_alloc_type _Tp_alloc_type;

    public :
      typedef _Tp value_type;
      typedef typename _Tp_alloc_type :: pointer pointer;
      typedef typename _Tp_alloc_type :: const_pointer const_pointer;
      typedef typename _Tp_alloc_type :: reference reference;
      typedef typename _Tp_alloc_type :: const_reference const_reference;
      typedef __gnu_cxx :: __normal_iterator < pointer, vector > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, vector >
      const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

    protected :
      using _Base :: _M_allocate;
      using _Base :: _M_deallocate;
      using _Base :: _M_impl;
      using _Base :: _M_get_Tp_allocator;

    public :





      vector ( )
      : _Base ( ) { }





      explicit
      vector ( const allocator_type & __a )
      : _Base ( __a ) { }

      explicit
      vector ( size_type __n, const value_type & __value = value_type ( ),
      const allocator_type & __a = allocator_type ( ) )
      : _Base ( __n, __a )
      { _M_fill_initialize ( __n, __value ); }

      vector ( const vector & __x )
      : _Base ( __x . size ( ), __x . _M_get_Tp_allocator ( ) )
      { this -> _M_impl . _M_finish =
   std :: __uninitialized_copy_a ( __x . begin ( ), __x . end ( ),
          this -> _M_impl . _M_start,
          _M_get_Tp_allocator ( ) );
      }

      template < typename _InputIterator >
        vector ( _InputIterator __first, _InputIterator __last,
        const allocator_type & __a = allocator_type ( ) )
 : _Base ( __a )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_initialize_dispatch ( __first, __last, _Integral ( ) );
 }







      ~ vector ( )
      { std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
        _M_get_Tp_allocator ( ) ); }

      vector &
      operator = ( const vector & __x );

      void
      assign ( size_type __n, const value_type & __val )
      { _M_fill_assign ( __n, __val ); }

      template < typename _InputIterator >
        void
        assign ( _InputIterator __first, _InputIterator __last )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_assign_dispatch ( __first, __last, _Integral ( ) );
 }

      using _Base :: get_allocator;







      iterator
      begin ( )
      { return iterator ( this -> _M_impl . _M_start ); }






      const_iterator
      begin ( ) const
      { return const_iterator ( this -> _M_impl . _M_start ); }






      iterator
      end ( )
      { return iterator ( this -> _M_impl . _M_finish ); }






      const_iterator
      end ( ) const
      { return const_iterator ( this -> _M_impl . _M_finish ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( begin ( ) ); }

      size_type
      size ( ) const
      { return size_type ( this -> _M_impl . _M_finish - this -> _M_impl . _M_start ); }


      size_type
      max_size ( ) const
      { return _M_get_Tp_allocator ( ) . max_size ( ); }

      void
      resize ( size_type __new_size, value_type __x = value_type ( ) )
      {
 if ( __new_size < size ( ) )
   _M_erase_at_end ( this -> _M_impl . _M_start + __new_size );
 else
   insert ( end ( ), __new_size - size ( ), __x );
      }

      size_type
      capacity ( ) const
      { return size_type ( this -> _M_impl . _M_end_of_storage
    - this -> _M_impl . _M_start ); }





      bool
      empty ( ) const
      { return begin ( ) == end ( ); }

      void
      reserve ( size_type __n );

      reference
      operator [ ] ( size_type __n )
      { return * ( this -> _M_impl . _M_start + __n ); }

      const_reference
      operator [ ] ( size_type __n ) const
      { return * ( this -> _M_impl . _M_start + __n ); }

    protected :

      void
      _M_range_check ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "vector::_M_range_check" ) );
      }

    public :

      reference
      at ( size_type __n )
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }

      const_reference
      at ( size_type __n ) const
      {
 _M_range_check ( __n );
 return ( * this ) [ __n ];
      }





      reference
      front ( )
      { return * begin ( ); }





      const_reference
      front ( ) const
      { return * begin ( ); }





      reference
      back ( )
      { return * ( end ( ) - 1 ); }





      const_reference
      back ( ) const
      { return * ( end ( ) - 1 ); }

      pointer
      data ( )
      { return pointer ( this -> _M_impl . _M_start ); }

      const_pointer
      data ( ) const
      { return const_pointer ( this -> _M_impl . _M_start ); }

      void
      push_back ( const value_type & __x )
      {
 if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage )
   {
     this -> _M_impl . construct ( this -> _M_impl . _M_finish, __x );
     ++ this -> _M_impl . _M_finish;
   }
 else
   _M_insert_aux ( end ( ), __x );
      }

      void
      pop_back ( )
      {
 -- this -> _M_impl . _M_finish;
 this -> _M_impl . destroy ( this -> _M_impl . _M_finish );
      }

      iterator
      insert ( iterator __position, const value_type & __x );

      void
      insert ( iterator __position, size_type __n, const value_type & __x )
      { _M_fill_insert ( __position, __n, __x ); }

      template < typename _InputIterator >
        void
        insert ( iterator __position, _InputIterator __first,
        _InputIterator __last )
        {

   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   _M_insert_dispatch ( __position, __first, __last, _Integral ( ) );
 }

      iterator
      erase ( iterator __position );

      iterator
      erase ( iterator __first, iterator __last );

      void
      swap ( vector & __x )
      {
 std :: swap ( this -> _M_impl . _M_start, __x . _M_impl . _M_start );
 std :: swap ( this -> _M_impl . _M_finish, __x . _M_impl . _M_finish );
 std :: swap ( this -> _M_impl . _M_end_of_storage,
    __x . _M_impl . _M_end_of_storage );



 std :: __alloc_swap < _Tp_alloc_type > :: _S_do_it ( _M_get_Tp_allocator ( ),
          __x . _M_get_Tp_allocator ( ) );
      }







      void
      clear ( )
      { _M_erase_at_end ( this -> _M_impl . _M_start ); }

    protected :




      template < typename _ForwardIterator >
        pointer
        _M_allocate_and_copy ( size_type __n,
        _ForwardIterator __first, _ForwardIterator __last )
        {
   pointer __result = this -> _M_allocate ( __n );
   try
     {
       std :: __uninitialized_copy_a ( __first, __last, __result,
       _M_get_Tp_allocator ( ) );
       return __result;
     }
   catch ( ... )
     {
       _M_deallocate ( __result, __n );
       throw;
     }
 }

      template < typename _Integer >
        void
        _M_initialize_dispatch ( _Integer __n, _Integer __value, __true_type )
        {
   this -> _M_impl . _M_start = _M_allocate ( static_cast < size_type > ( __n ) );
   this -> _M_impl . _M_end_of_storage =
     this -> _M_impl . _M_start + static_cast < size_type > ( __n );
   _M_fill_initialize ( static_cast < size_type > ( __n ), __value );
 }


      template < typename _InputIterator >
        void
        _M_initialize_dispatch ( _InputIterator __first, _InputIterator __last,
          __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_range_initialize ( __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_range_initialize ( _InputIterator __first,
       _InputIterator __last, std :: input_iterator_tag )
        {
   for (; __first != __last; ++ __first )
     push_back ( * __first );
 }


      template < typename _ForwardIterator >
        void
        _M_range_initialize ( _ForwardIterator __first,
       _ForwardIterator __last, std :: forward_iterator_tag )
        {
   const size_type __n = std :: distance ( __first, __last );
   this -> _M_impl . _M_start = this -> _M_allocate ( __n );
   this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
   this -> _M_impl . _M_finish =
     std :: __uninitialized_copy_a ( __first, __last,
     this -> _M_impl . _M_start,
     _M_get_Tp_allocator ( ) );
 }



      void
      _M_fill_initialize ( size_type __n, const value_type & __value )
      {
 std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_start, __n, __value,
          _M_get_Tp_allocator ( ) );
 this -> _M_impl . _M_finish = this -> _M_impl . _M_end_of_storage;
      }

      template < typename _Integer >
        void
        _M_assign_dispatch ( _Integer __n, _Integer __val, __true_type )
        { _M_fill_assign ( __n, __val ); }


      template < typename _InputIterator >
        void
        _M_assign_dispatch ( _InputIterator __first, _InputIterator __last,
      __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_assign_aux ( __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_assign_aux ( _InputIterator __first, _InputIterator __last,
        std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
        std :: forward_iterator_tag );



      void
      _M_fill_assign ( size_type __n, const value_type & __val );

      template < typename _Integer >
        void
        _M_insert_dispatch ( iterator __pos, _Integer __n, _Integer __val,
      __true_type )
        { _M_fill_insert ( __pos, __n, __val ); }


      template < typename _InputIterator >
        void
        _M_insert_dispatch ( iterator __pos, _InputIterator __first,
      _InputIterator __last, __false_type )
        {
   typedef typename std :: iterator_traits < _InputIterator > ::
     iterator_category _IterCategory;
   _M_range_insert ( __pos, __first, __last, _IterCategory ( ) );
 }


      template < typename _InputIterator >
        void
        _M_range_insert ( iterator __pos, _InputIterator __first,
   _InputIterator __last, std :: input_iterator_tag );


      template < typename _ForwardIterator >
        void
        _M_range_insert ( iterator __pos, _ForwardIterator __first,
   _ForwardIterator __last, std :: forward_iterator_tag );



      void
      _M_fill_insert ( iterator __pos, size_type __n, const value_type & __x );



      void
      _M_insert_aux ( iterator __position, const value_type & __x );







      size_type
      _M_check_len ( size_type __n, const char * __s ) const
      {
 if ( max_size ( ) - size ( ) < __n )
   __throw_length_error ( ( __s ) );

 const size_type __len = size ( ) + std :: max ( size ( ), __n );
 return ( __len < size ( ) || __len > max_size ( ) ) ? max_size ( ) : __len;
      }





      void
      _M_erase_at_end ( pointer __pos )
      {
 std :: _Destroy ( __pos, this -> _M_impl . _M_finish, _M_get_Tp_allocator ( ) );
 this -> _M_impl . _M_finish = __pos;
      }
    };
# 1170 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator == ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ( __x . size ( ) == __y . size ( )
       && std :: equal ( __x . begin ( ), __x . end ( ), __y . begin ( ) ) ); }
# 1187 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator < ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return std :: lexicographical_compare ( __x . begin ( ), __x . end ( ),
       __y . begin ( ), __y . end ( ) ); }
# 1194 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator != ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 1200 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator > ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return __y < __x; }
# 1206 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator <= ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 1212 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline bool
    operator >= ( const vector < _Tp, _Alloc > & __x, const vector < _Tp, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 1218 "/usr/include/c++/4.5/bits/stl_vector.h" 3
template < typename _Tp, typename _Alloc >
    inline void
    swap ( vector < _Tp, _Alloc > & __x, vector < _Tp, _Alloc > & __y )
    { __x . swap ( __y ); }
# 1223 "/usr/include/c++/4.5/bits/stl_vector.h" 3
}
# 62 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 65 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 67 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
struct _Bit_reference {
# 69 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 70 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 72 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 73 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ }
# 75 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_reference() : _M_p((0)), _M_mask((0)) { }
# 77 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
operator bool() const
# 78 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 81 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x)
# 82 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 83 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
if (__x) {
# 84 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 86 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 87 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 88 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 91 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x)
# 92 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 95 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 96 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 99 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 100 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 103 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
void flip()
# 104 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 105 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
};
# 107 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool, long, bool *, bool &> {
# 110 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 111 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
unsigned _M_offset;
# 113 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 114 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ }
# 117 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
void _M_bump_up()
# 118 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 119 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 120 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 121 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 122 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
++(_M_p);
# 123 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 124 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 127 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
void _M_bump_down()
# 128 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 129 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 130 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 131 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 132 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
--(_M_p);
# 133 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 134 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 137 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 138 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 139 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
difference_type __n = (__i + (_M_offset));
# 140 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 141 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 142 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
if (__n < (0))
# 143 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 144 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 145 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
--(_M_p);
# 146 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 147 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 148 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 151 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 152 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 155 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 156 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 157 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 159 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 162 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 163 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 166 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 167 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 170 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 171 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 174 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 175 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 176 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
};
# 179 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 180 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 181 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 183 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 185 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 187 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 188 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 189 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 191 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 193 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 194 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ }
# 197 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
reference operator*() const
# 198 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 201 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator &operator++()
# 202 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 203 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 204 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 205 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 208 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator operator++(int)
# 209 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 211 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 212 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return __tmp;
# 213 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 216 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator &operator--()
# 217 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 218 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 219 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 220 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 223 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator operator--(int)
# 224 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 225 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 226 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 227 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return __tmp;
# 228 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 231 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 232 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 233 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 234 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 235 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 238 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 239 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 240 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 241 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 242 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 245 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 246 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 247 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 248 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 249 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 252 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 253 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 254 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
iterator __tmp = (*this);
# 255 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 256 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 259 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 260 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 261 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
};
# 264 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 265 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 267 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 269 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef bool reference;
# 270 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 271 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 272 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 274 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 276 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 277 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ }
# 279 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 280 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ }
# 283 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_reference operator*() const
# 284 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 287 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator &operator++()
# 288 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 289 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 290 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 291 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 294 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 295 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 296 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 297 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 298 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return __tmp;
# 299 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 302 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator &operator--()
# 303 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 304 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 305 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 306 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 309 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 310 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 311 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 312 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 313 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return __tmp;
# 314 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 317 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 318 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 319 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 320 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 321 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 324 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 325 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 326 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 327 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return *this;
# 328 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 332 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 334 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 335 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 338 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 339 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 340 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_iterator __tmp = (*this);
# 341 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 342 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 345 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 346 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 347 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
};
# 350 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 351 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 354 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 355 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 356 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 357 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 358 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 361 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 362 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 363 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 364 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
{
# 365 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, (__x ? (~0) : 0));
# 366 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 367 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 368 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
} else {
# 370 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 371 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 373 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
template < typename _Alloc >
    struct _Bvector_base
    {
      typedef typename _Alloc :: template rebind < _Bit_type > :: other
        _Bit_alloc_type;

      struct _Bvector_impl
      : public _Bit_alloc_type
      {
 _Bit_iterator _M_start;
 _Bit_iterator _M_finish;
 _Bit_type * _M_end_of_storage;

 _Bvector_impl ( )
 : _Bit_alloc_type ( ), _M_start ( ), _M_finish ( ), _M_end_of_storage ( 0 )
 { }

 _Bvector_impl ( const _Bit_alloc_type & __a )
 : _Bit_alloc_type ( __a ), _M_start ( ), _M_finish ( ), _M_end_of_storage ( 0 )
 { }
      };

    public :
      typedef _Alloc allocator_type;

      _Bit_alloc_type &
      _M_get_Bit_allocator ( )
      { return * static_cast < _Bit_alloc_type * > ( & this -> _M_impl ); }

      const _Bit_alloc_type &
      _M_get_Bit_allocator ( ) const
      { return * static_cast < const _Bit_alloc_type * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Bit_allocator ( ) ); }

      _Bvector_base ( )
      : _M_impl ( ) { }

      _Bvector_base ( const allocator_type & __a )
      : _M_impl ( __a ) { }

      ~ _Bvector_base ( )
      { this -> _M_deallocate ( ); }

    protected :
      _Bvector_impl _M_impl;

      _Bit_type *
      _M_allocate ( size_t __n )
      { return _M_impl . allocate ( ( __n + int ( _S_word_bit ) - 1 )
    / int ( _S_word_bit ) ); }

      void
      _M_deallocate ( )
      {
 if ( _M_impl . _M_start . _M_p )
   _M_impl . deallocate ( _M_impl . _M_start . _M_p,
        _M_impl . _M_end_of_storage - _M_impl . _M_start . _M_p );
      }
    };
# 449 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 454 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 473 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
template < typename _Alloc >
  class vector < bool, _Alloc > : protected _Bvector_base < _Alloc >
  {
    typedef _Bvector_base < _Alloc > _Base;





  public :
    typedef bool value_type;
    typedef size_t size_type;
    typedef ptrdiff_t difference_type;
    typedef _Bit_reference reference;
    typedef bool const_reference;
    typedef _Bit_reference * pointer;
    typedef const bool * const_pointer;
    typedef _Bit_iterator iterator;
    typedef _Bit_const_iterator const_iterator;
    typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
    typedef std :: reverse_iterator < iterator > reverse_iterator;
    typedef _Alloc allocator_type;

    allocator_type get_allocator ( ) const
    { return _Base :: get_allocator ( ); }

  protected :
    using _Base :: _M_allocate;
    using _Base :: _M_deallocate;
    using _Base :: _M_get_Bit_allocator;

  public :
    vector ( )
    : _Base ( ) { }

    explicit
    vector ( const allocator_type & __a )
    : _Base ( __a ) { }

    explicit
    vector ( size_type __n, const bool & __value = bool ( ),
    const allocator_type & __a = allocator_type ( ) )
    : _Base ( __a )
    {
      _M_initialize ( __n );
      std :: fill ( this -> _M_impl . _M_start . _M_p, this -> _M_impl . _M_end_of_storage,
  __value ? ~ 0 : 0 );
    }

    vector ( const vector & __x )
    : _Base ( __x . _M_get_Bit_allocator ( ) )
    {
      _M_initialize ( __x . size ( ) );
      _M_copy_aligned ( __x . begin ( ), __x . end ( ), this -> _M_impl . _M_start );
    }

    template < typename _InputIterator >
      vector ( _InputIterator __first, _InputIterator __last,
      const allocator_type & __a = allocator_type ( ) )
      : _Base ( __a )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_initialize_dispatch ( __first, __last, _Integral ( ) );
      }

    ~ vector ( ) { }

    vector &
    operator = ( const vector & __x )
    {
      if ( & __x == this )
 return * this;
      if ( __x . size ( ) > capacity ( ) )
 {
   this -> _M_deallocate ( );
   _M_initialize ( __x . size ( ) );
 }
      this -> _M_impl . _M_finish = _M_copy_aligned ( __x . begin ( ), __x . end ( ),
      begin ( ) );
      return * this;
    }

    void
    assign ( size_type __n, const bool & __x )
    { _M_fill_assign ( __n, __x ); }

    template < typename _InputIterator >
      void
      assign ( _InputIterator __first, _InputIterator __last )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_assign_dispatch ( __first, __last, _Integral ( ) );
      }







    iterator
    begin ( )
    { return this -> _M_impl . _M_start; }

    const_iterator
    begin ( ) const
    { return this -> _M_impl . _M_start; }

    iterator
    end ( )
    { return this -> _M_impl . _M_finish; }

    const_iterator
    end ( ) const
    { return this -> _M_impl . _M_finish; }

    reverse_iterator
    rbegin ( )
    { return reverse_iterator ( end ( ) ); }

    const_reverse_iterator
    rbegin ( ) const
    { return const_reverse_iterator ( end ( ) ); }

    reverse_iterator
    rend ( )
    { return reverse_iterator ( begin ( ) ); }

    const_reverse_iterator
    rend ( ) const
    { return const_reverse_iterator ( begin ( ) ); }

    size_type
    size ( ) const
    { return size_type ( end ( ) - begin ( ) ); }

    size_type
    max_size ( ) const
    {
      const size_type __isize =
 __gnu_cxx :: __numeric_traits < difference_type > :: __max
 - int ( _S_word_bit ) + 1;
      const size_type __asize = _M_get_Bit_allocator ( ) . max_size ( );
      return ( __asize <= __isize / int ( _S_word_bit )
       ? __asize * int ( _S_word_bit ) : __isize );
    }

    size_type
    capacity ( ) const
    { return size_type ( const_iterator ( this -> _M_impl . _M_end_of_storage, 0 )
         - begin ( ) ); }

    bool
    empty ( ) const
    { return begin ( ) == end ( ); }

    reference
    operator [ ] ( size_type __n )
    {
      return * iterator ( this -> _M_impl . _M_start . _M_p
         + __n / int ( _S_word_bit ), __n % int ( _S_word_bit ) );
    }

    const_reference
    operator [ ] ( size_type __n ) const
    {
      return * const_iterator ( this -> _M_impl . _M_start . _M_p
        + __n / int ( _S_word_bit ), __n % int ( _S_word_bit ) );
    }

  protected :
    void
    _M_range_check ( size_type __n ) const
    {
      if ( __n >= this -> size ( ) )
        __throw_out_of_range ( ( "vector<bool>::_M_range_check" ) );
    }

  public :
    reference
    at ( size_type __n )
    { _M_range_check ( __n ); return ( * this ) [ __n ]; }

    const_reference
    at ( size_type __n ) const
    { _M_range_check ( __n ); return ( * this ) [ __n ]; }

    void
    reserve ( size_type __n );

    reference
    front ( )
    { return * begin ( ); }

    const_reference
    front ( ) const
    { return * begin ( ); }

    reference
    back ( )
    { return * ( end ( ) - 1 ); }

    const_reference
    back ( ) const
    { return * ( end ( ) - 1 ); }






    void
    data ( ) { }

    void
    push_back ( bool __x )
    {
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage )
        * this -> _M_impl . _M_finish ++ = __x;
      else
        _M_insert_aux ( end ( ), __x );
    }

    void
    swap ( vector & __x )
    {
      std :: swap ( this -> _M_impl . _M_start, __x . _M_impl . _M_start );
      std :: swap ( this -> _M_impl . _M_finish, __x . _M_impl . _M_finish );
      std :: swap ( this -> _M_impl . _M_end_of_storage,
  __x . _M_impl . _M_end_of_storage );



      std :: __alloc_swap < typename _Base :: _Bit_alloc_type > ::
 _S_do_it ( _M_get_Bit_allocator ( ), __x . _M_get_Bit_allocator ( ) );
    }


    static void
    swap ( reference __x, reference __y )
    {
      bool __tmp = __x;
      __x = __y;
      __y = __tmp;
    }

    iterator
    insert ( iterator __position, const bool & __x = bool ( ) )
    {
      const difference_type __n = __position - begin ( );
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage
   && __position == end ( ) )
        * this -> _M_impl . _M_finish ++ = __x;
      else
        _M_insert_aux ( __position, __x );
      return begin ( ) + __n;
    }

    template < typename _InputIterator >
      void
      insert ( iterator __position,
      _InputIterator __first, _InputIterator __last )
      {
 typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
 _M_insert_dispatch ( __position, __first, __last, _Integral ( ) );
      }

    void
    insert ( iterator __position, size_type __n, const bool & __x )
    { _M_fill_insert ( __position, __n, __x ); }






    void
    pop_back ( )
    { -- this -> _M_impl . _M_finish; }

    iterator
    erase ( iterator __position )
    {
      if ( __position + 1 != end ( ) )
        std :: copy ( __position + 1, end ( ), __position );
      -- this -> _M_impl . _M_finish;
      return __position;
    }

    iterator
    erase ( iterator __first, iterator __last )
    {
      _M_erase_at_end ( std :: copy ( __last, end ( ), __first ) );
      return __first;
    }

    void
    resize ( size_type __new_size, bool __x = bool ( ) )
    {
      if ( __new_size < size ( ) )
        _M_erase_at_end ( begin ( ) + difference_type ( __new_size ) );
      else
        insert ( end ( ), __new_size - size ( ), __x );
    }







    void
    flip ( )
    {
      for ( _Bit_type * __p = this -> _M_impl . _M_start . _M_p;
    __p != this -> _M_impl . _M_end_of_storage; ++ __p )
        * __p = ~ * __p;
    }

    void
    clear ( )
    { _M_erase_at_end ( begin ( ) ); }


  protected :

    iterator
    _M_copy_aligned ( const_iterator __first, const_iterator __last,
      iterator __result )
    {
      _Bit_type * __q = std :: copy ( __first . _M_p, __last . _M_p, __result . _M_p );
      return std :: copy ( const_iterator ( __last . _M_p, 0 ), __last,
         iterator ( __q, 0 ) );
    }

    void
    _M_initialize ( size_type __n )
    {
      _Bit_type * __q = this -> _M_allocate ( __n );
      this -> _M_impl . _M_end_of_storage = ( __q
      + ( ( __n + int ( _S_word_bit ) - 1 )
         / int ( _S_word_bit ) ) );
      this -> _M_impl . _M_start = iterator ( __q, 0 );
      this -> _M_impl . _M_finish = this -> _M_impl . _M_start + difference_type ( __n );
    }





    template < typename _Integer >
      void
      _M_initialize_dispatch ( _Integer __n, _Integer __x, __true_type )
      {
 _M_initialize ( static_cast < size_type > ( __n ) );
 std :: fill ( this -> _M_impl . _M_start . _M_p,
    this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
      }

    template < typename _InputIterator >
      void
      _M_initialize_dispatch ( _InputIterator __first, _InputIterator __last,
        __false_type )
      { _M_initialize_range ( __first, __last,
       std :: __iterator_category ( __first ) ); }

    template < typename _InputIterator >
      void
      _M_initialize_range ( _InputIterator __first, _InputIterator __last,
     std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   push_back ( * __first );
      }

    template < typename _ForwardIterator >
      void
      _M_initialize_range ( _ForwardIterator __first, _ForwardIterator __last,
     std :: forward_iterator_tag )
      {
 const size_type __n = std :: distance ( __first, __last );
 _M_initialize ( __n );
 std :: copy ( __first, __last, this -> _M_impl . _M_start );
      }



    template < typename _Integer >
      void
      _M_assign_dispatch ( _Integer __n, _Integer __val, __true_type )
      { _M_fill_assign ( __n, __val ); }

    template < class _InputIterator >
      void
      _M_assign_dispatch ( _InputIterator __first, _InputIterator __last,
    __false_type )
      { _M_assign_aux ( __first, __last, std :: __iterator_category ( __first ) ); }

    void
    _M_fill_assign ( size_t __n, bool __x )
    {
      if ( __n > size ( ) )
 {
   std :: fill ( this -> _M_impl . _M_start . _M_p,
      this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
   insert ( end ( ), __n - size ( ), __x );
 }
      else
 {
   _M_erase_at_end ( begin ( ) + __n );
   std :: fill ( this -> _M_impl . _M_start . _M_p,
      this -> _M_impl . _M_end_of_storage, __x ? ~ 0 : 0 );
 }
    }

    template < typename _InputIterator >
      void
      _M_assign_aux ( _InputIterator __first, _InputIterator __last,
      std :: input_iterator_tag )
      {
 iterator __cur = begin ( );
 for (; __first != __last && __cur != end ( ); ++ __cur, ++ __first )
   * __cur = * __first;
 if ( __first == __last )
   _M_erase_at_end ( __cur );
 else
   insert ( end ( ), __first, __last );
      }

    template < typename _ForwardIterator >
      void
      _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
      std :: forward_iterator_tag )
      {
 const size_type __len = std :: distance ( __first, __last );
 if ( __len < size ( ) )
   _M_erase_at_end ( std :: copy ( __first, __last, begin ( ) ) );
 else
   {
     _ForwardIterator __mid = __first;
     std :: advance ( __mid, size ( ) );
     std :: copy ( __first, __mid, begin ( ) );
     insert ( end ( ), __mid, __last );
   }
      }





    template < typename _Integer >
      void
      _M_insert_dispatch ( iterator __pos, _Integer __n, _Integer __x,
    __true_type )
      { _M_fill_insert ( __pos, __n, __x ); }

    template < typename _InputIterator >
      void
      _M_insert_dispatch ( iterator __pos,
    _InputIterator __first, _InputIterator __last,
    __false_type )
      { _M_insert_range ( __pos, __first, __last,
   std :: __iterator_category ( __first ) ); }

    void
    _M_fill_insert ( iterator __position, size_type __n, bool __x );

    template < typename _InputIterator >
      void
      _M_insert_range ( iterator __pos, _InputIterator __first,
        _InputIterator __last, std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   {
     __pos = insert ( __pos, * __first );
     ++ __pos;
   }
      }

    template < typename _ForwardIterator >
      void
      _M_insert_range ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag );

    void
    _M_insert_aux ( iterator __position, bool __x );

    size_type
    _M_check_len ( size_type __n, const char * __s ) const
    {
      if ( max_size ( ) - size ( ) < __n )
 __throw_length_error ( ( __s ) );

      const size_type __len = size ( ) + std :: max ( size ( ), __n );
      return ( __len < size ( ) || __len > max_size ( ) ) ? max_size ( ) : __len;
    }

    void
    _M_erase_at_end ( iterator __pos )
    { this -> _M_impl . _M_finish = __pos; }
  };
# 1029 "/usr/include/c++/4.5/bits/stl_bvector.h" 3
}
# 60 "/usr/include/c++/4.5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    reserve ( size_type __n )
    {
      if ( __n > this -> max_size ( ) )
 __throw_length_error ( ( "vector::reserve" ) );
      if ( this -> capacity ( ) < __n )
 {
   const size_type __old_size = size ( );
   pointer __tmp = _M_allocate_and_copy ( __n,
   ( this -> _M_impl . _M_start ),
   ( this -> _M_impl . _M_finish ) );
   std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
   _M_get_Tp_allocator ( ) );
   _M_deallocate ( this -> _M_impl . _M_start,
   this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_start );
   this -> _M_impl . _M_start = __tmp;
   this -> _M_impl . _M_finish = __tmp + __old_size;
   this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __n;
 }
    }
# 104 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    insert ( iterator __position, const value_type & __x )
    {
      const size_type __n = __position - begin ( );
      if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage
   && __position == end ( ) )
 {
   this -> _M_impl . construct ( this -> _M_impl . _M_finish, __x );
   ++ this -> _M_impl . _M_finish;
 }
      else
 {

     _M_insert_aux ( __position, __x );
 }
      return iterator ( this -> _M_impl . _M_start + __n );
    }
# 131 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    erase ( iterator __position )
    {
      if ( __position + 1 != end ( ) )
 std :: copy ( __position + 1, end ( ), __position );
      -- this -> _M_impl . _M_finish;
      this -> _M_impl . destroy ( this -> _M_impl . _M_finish );
      return __position;
    }
# 143 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    typename vector < _Tp, _Alloc > :: iterator
    vector < _Tp, _Alloc > ::
    erase ( iterator __first, iterator __last )
    {
      if ( __last != end ( ) )
 std :: copy ( __last, end ( ), __first );
      _M_erase_at_end ( __first . base ( ) + ( end ( ) - __last ) );
      return __first;
    }
# 154 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    vector < _Tp, _Alloc > &
    vector < _Tp, _Alloc > ::
    operator = ( const vector < _Tp, _Alloc > & __x )
    {
      if ( & __x != this )
 {
   const size_type __xlen = __x . size ( );
   if ( __xlen > capacity ( ) )
     {
       pointer __tmp = _M_allocate_and_copy ( __xlen, __x . begin ( ),
         __x . end ( ) );
       std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
       _M_deallocate ( this -> _M_impl . _M_start,
       this -> _M_impl . _M_end_of_storage
       - this -> _M_impl . _M_start );
       this -> _M_impl . _M_start = __tmp;
       this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_start + __xlen;
     }
   else if ( size ( ) >= __xlen )
     {
       std :: _Destroy ( std :: copy ( __x . begin ( ), __x . end ( ), begin ( ) ),
       end ( ), _M_get_Tp_allocator ( ) );
     }
   else
     {
       std :: copy ( __x . _M_impl . _M_start, __x . _M_impl . _M_start + size ( ),
   this -> _M_impl . _M_start );
       std :: __uninitialized_copy_a ( __x . _M_impl . _M_start + size ( ),
       __x . _M_impl . _M_finish,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
     }
   this -> _M_impl . _M_finish = this -> _M_impl . _M_start + __xlen;
 }
      return * this;
    }
# 193 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_fill_assign ( size_t __n, const value_type & __val )
    {
      if ( __n > capacity ( ) )
 {
   vector __tmp ( __n, __val, _M_get_Tp_allocator ( ) );
   __tmp . swap ( * this );
 }
      else if ( __n > size ( ) )
 {
   std :: fill ( begin ( ), end ( ), __val );
   std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_finish,
     __n - size ( ), __val,
     _M_get_Tp_allocator ( ) );
   this -> _M_impl . _M_finish += __n - size ( );
 }
      else
        _M_erase_at_end ( std :: fill_n ( this -> _M_impl . _M_start, __n, __val ) );
    }
# 215 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_assign_aux ( _InputIterator __first, _InputIterator __last,
      std :: input_iterator_tag )
      {
 pointer __cur ( this -> _M_impl . _M_start );
 for (; __first != __last && __cur != this -> _M_impl . _M_finish;
      ++ __cur, ++ __first )
   * __cur = * __first;
 if ( __first == __last )
   _M_erase_at_end ( __cur );
 else
   insert ( end ( ), __first, __last );
      }
# 232 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_assign_aux ( _ForwardIterator __first, _ForwardIterator __last,
      std :: forward_iterator_tag )
      {
 const size_type __len = std :: distance ( __first, __last );

 if ( __len > capacity ( ) )
   {
     pointer __tmp ( _M_allocate_and_copy ( __len, __first, __last ) );
     std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
     _M_get_Tp_allocator ( ) );
     _M_deallocate ( this -> _M_impl . _M_start,
     this -> _M_impl . _M_end_of_storage
     - this -> _M_impl . _M_start );
     this -> _M_impl . _M_start = __tmp;
     this -> _M_impl . _M_finish = this -> _M_impl . _M_start + __len;
     this -> _M_impl . _M_end_of_storage = this -> _M_impl . _M_finish;
   }
 else if ( size ( ) >= __len )
   _M_erase_at_end ( std :: copy ( __first, __last, this -> _M_impl . _M_start ) );
 else
   {
     _ForwardIterator __mid = __first;
     std :: advance ( __mid, size ( ) );
     std :: copy ( __first, __mid, this -> _M_impl . _M_start );
     this -> _M_impl . _M_finish =
       std :: __uninitialized_copy_a ( __mid, __last,
       this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
   }
      }
# 293 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_insert_aux ( iterator __position, const _Tp & __x )

    {
      if ( this -> _M_impl . _M_finish != this -> _M_impl . _M_end_of_storage )
 {
   this -> _M_impl . construct ( this -> _M_impl . _M_finish,
      ( * ( this -> _M_impl . _M_finish - 1 ) )
             );
   ++ this -> _M_impl . _M_finish;

   _Tp __x_copy = __x;

   std :: copy_backward ( __position . base ( ), this -> _M_impl . _M_finish - 2, this -> _M_impl . _M_finish - 1 )

                                  ;

   * __position = __x_copy;



 }
      else
 {
   const size_type __len =
     _M_check_len ( size_type ( 1 ), "vector::_M_insert_aux" );
   const size_type __elems_before = __position - begin ( );
   pointer __new_start ( this -> _M_allocate ( __len ) );
   pointer __new_finish ( __new_start );
   try
     {




       this -> _M_impl . construct ( __new_start + __elems_before,



                               __x );

       __new_finish = 0;

       __new_finish =
  std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
         __position . base ( ), __new_start,
         _M_get_Tp_allocator ( ) );
       ++ __new_finish;

       __new_finish =
  std :: __uninitialized_move_a ( __position . base ( ),
         this -> _M_impl . _M_finish,
         __new_finish,
         _M_get_Tp_allocator ( ) );
     }
          catch ( ... )
     {
       if ( ! __new_finish )
  this -> _M_impl . destroy ( __new_start + __elems_before );
       else
  std :: _Destroy ( __new_start, __new_finish, _M_get_Tp_allocator ( ) );
       _M_deallocate ( __new_start, __len );
       throw;
     }
   std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
   _M_get_Tp_allocator ( ) );
   _M_deallocate ( this -> _M_impl . _M_start,
   this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_start );
   this -> _M_impl . _M_start = __new_start;
   this -> _M_impl . _M_finish = __new_finish;
   this -> _M_impl . _M_end_of_storage = __new_start + __len;
 }
    }
# 370 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    void
    vector < _Tp, _Alloc > ::
    _M_fill_insert ( iterator __position, size_type __n, const value_type & __x )
    {
      if ( __n != 0 )
 {
   if ( size_type ( this -> _M_impl . _M_end_of_storage
   - this -> _M_impl . _M_finish ) >= __n )
     {
       value_type __x_copy = __x;
       const size_type __elems_after = end ( ) - __position;
       pointer __old_finish ( this -> _M_impl . _M_finish );
       if ( __elems_after > __n )
  {
    std :: __uninitialized_move_a ( this -> _M_impl . _M_finish - __n,
           this -> _M_impl . _M_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __n;
    std :: copy_backward ( __position . base ( ), __old_finish - __n, __old_finish )
                                        ;
    std :: fill ( __position . base ( ), __position . base ( ) + __n,
       __x_copy );
  }
       else
  {
    std :: __uninitialized_fill_n_a ( this -> _M_impl . _M_finish,
      __n - __elems_after,
      __x_copy,
      _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __n - __elems_after;
    std :: __uninitialized_move_a ( __position . base ( ), __old_finish,
           this -> _M_impl . _M_finish,
           _M_get_Tp_allocator ( ) );
    this -> _M_impl . _M_finish += __elems_after;
    std :: fill ( __position . base ( ), __old_finish, __x_copy );
  }
     }
   else
     {
       const size_type __len =
  _M_check_len ( __n, "vector::_M_fill_insert" );
       const size_type __elems_before = __position - begin ( );
       pointer __new_start ( this -> _M_allocate ( __len ) );
       pointer __new_finish ( __new_start );
       try
  {

    std :: __uninitialized_fill_n_a ( __new_start + __elems_before,
      __n, __x,
      _M_get_Tp_allocator ( ) );
    __new_finish = 0;

    __new_finish =
      std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
      __position . base ( ),
      __new_start,
      _M_get_Tp_allocator ( ) );
    __new_finish += __n;

    __new_finish =
      std :: __uninitialized_move_a ( __position . base ( ),
      this -> _M_impl . _M_finish,
      __new_finish,
      _M_get_Tp_allocator ( ) );
  }
       catch ( ... )
  {
    if ( ! __new_finish )
      std :: _Destroy ( __new_start + __elems_before,
      __new_start + __elems_before + __n,
      _M_get_Tp_allocator ( ) );
    else
      std :: _Destroy ( __new_start, __new_finish,
      _M_get_Tp_allocator ( ) );
    _M_deallocate ( __new_start, __len );
    throw;
  }
       std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
       _M_get_Tp_allocator ( ) );
       _M_deallocate ( this -> _M_impl . _M_start,
       this -> _M_impl . _M_end_of_storage
       - this -> _M_impl . _M_start );
       this -> _M_impl . _M_start = __new_start;
       this -> _M_impl . _M_finish = __new_finish;
       this -> _M_impl . _M_end_of_storage = __new_start + __len;
     }
 }
    }
# 461 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _InputIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_range_insert ( iterator __pos, _InputIterator __first,
        _InputIterator __last, std :: input_iterator_tag )
      {
 for (; __first != __last; ++ __first )
   {
     __pos = insert ( __pos, * __first );
     ++ __pos;
   }
      }
# 475 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Tp, typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < _Tp, _Alloc > ::
      _M_range_insert ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag )
      {
 if ( __first != __last )
   {
     const size_type __n = std :: distance ( __first, __last );
     if ( size_type ( this -> _M_impl . _M_end_of_storage
     - this -> _M_impl . _M_finish ) >= __n )
       {
  const size_type __elems_after = end ( ) - __position;
  pointer __old_finish ( this -> _M_impl . _M_finish );
  if ( __elems_after > __n )
    {
      std :: __uninitialized_move_a ( this -> _M_impl . _M_finish - __n,
      this -> _M_impl . _M_finish,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __n;
      std :: copy_backward ( __position . base ( ), __old_finish - __n, __old_finish )
                                          ;
      std :: copy ( __first, __last, __position );
    }
  else
    {
      _ForwardIterator __mid = __first;
      std :: advance ( __mid, __elems_after );
      std :: __uninitialized_copy_a ( __mid, __last,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __n - __elems_after;
      std :: __uninitialized_move_a ( __position . base ( ),
      __old_finish,
      this -> _M_impl . _M_finish,
      _M_get_Tp_allocator ( ) );
      this -> _M_impl . _M_finish += __elems_after;
      std :: copy ( __first, __mid, __position );
    }
       }
     else
       {
  const size_type __len =
    _M_check_len ( __n, "vector::_M_range_insert" );
  pointer __new_start ( this -> _M_allocate ( __len ) );
  pointer __new_finish ( __new_start );
  try
    {
      __new_finish =
        std :: __uninitialized_move_a ( this -> _M_impl . _M_start,
        __position . base ( ),
        __new_start,
        _M_get_Tp_allocator ( ) );
      __new_finish =
        std :: __uninitialized_copy_a ( __first, __last,
        __new_finish,
        _M_get_Tp_allocator ( ) );
      __new_finish =
        std :: __uninitialized_move_a ( __position . base ( ),
        this -> _M_impl . _M_finish,
        __new_finish,
        _M_get_Tp_allocator ( ) );
    }
  catch ( ... )
    {
      std :: _Destroy ( __new_start, __new_finish,
      _M_get_Tp_allocator ( ) );
      _M_deallocate ( __new_start, __len );
      throw;
    }
  std :: _Destroy ( this -> _M_impl . _M_start, this -> _M_impl . _M_finish,
         _M_get_Tp_allocator ( ) );
  _M_deallocate ( this -> _M_impl . _M_start,
         this -> _M_impl . _M_end_of_storage
         - this -> _M_impl . _M_start );
  this -> _M_impl . _M_start = __new_start;
  this -> _M_impl . _M_finish = __new_finish;
  this -> _M_impl . _M_end_of_storage = __new_start + __len;
       }
   }
      }
# 562 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    reserve ( size_type __n )
    {
      if ( __n > this -> max_size ( ) )
 __throw_length_error ( ( "vector::reserve" ) );
      if ( this -> capacity ( ) < __n )
 {
   _Bit_type * __q = this -> _M_allocate ( __n );
   this -> _M_impl . _M_finish = _M_copy_aligned ( begin ( ), end ( ),
          iterator ( __q, 0 ) );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
   this -> _M_impl . _M_end_of_storage = ( __q + ( __n + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) );
 }
    }
# 581 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    _M_fill_insert ( iterator __position, size_type __n, bool __x )
    {
      if ( __n == 0 )
 return;
      if ( capacity ( ) - size ( ) >= __n )
 {
   std :: copy_backward ( __position, end ( ),
        this -> _M_impl . _M_finish + difference_type ( __n ) );
   std :: fill ( __position, __position + difference_type ( __n ), __x );
   this -> _M_impl . _M_finish += difference_type ( __n );
 }
      else
 {
   const size_type __len =
     _M_check_len ( __n, "vector<bool>::_M_fill_insert" );
   _Bit_type * __q = this -> _M_allocate ( __len );
   iterator __i = _M_copy_aligned ( begin ( ), __position,
      iterator ( __q, 0 ) );
   std :: fill ( __i, __i + difference_type ( __n ), __x );
   this -> _M_impl . _M_finish = std :: copy ( __position, end ( ),
           __i + difference_type ( __n ) );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_end_of_storage = ( __q + ( ( __len
           + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) ) );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
 }
    }
# 613 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Alloc >
    template < typename _ForwardIterator >
      void
      vector < bool, _Alloc > ::
      _M_insert_range ( iterator __position, _ForwardIterator __first,
        _ForwardIterator __last, std :: forward_iterator_tag )
      {
 if ( __first != __last )
   {
     size_type __n = std :: distance ( __first, __last );
     if ( capacity ( ) - size ( ) >= __n )
       {
  std :: copy_backward ( __position, end ( ),
       this -> _M_impl . _M_finish
       + difference_type ( __n ) );
  std :: copy ( __first, __last, __position );
  this -> _M_impl . _M_finish += difference_type ( __n );
       }
     else
       {
  const size_type __len =
    _M_check_len ( __n, "vector<bool>::_M_insert_range" );
  _Bit_type * __q = this -> _M_allocate ( __len );
  iterator __i = _M_copy_aligned ( begin ( ), __position,
            iterator ( __q, 0 ) );
  __i = std :: copy ( __first, __last, __i );
  this -> _M_impl . _M_finish = std :: copy ( __position, end ( ), __i );
  this -> _M_deallocate ( );
  this -> _M_impl . _M_end_of_storage = ( __q
         + ( ( __len
             + int ( _S_word_bit ) - 1 )
            / int ( _S_word_bit ) ) );
  this -> _M_impl . _M_start = iterator ( __q, 0 );
       }
   }
      }
# 650 "/usr/include/c++/4.5/bits/vector.tcc" 3
template < typename _Alloc >
    void
    vector < bool, _Alloc > ::
    _M_insert_aux ( iterator __position, bool __x )
    {
      if ( this -> _M_impl . _M_finish . _M_p != this -> _M_impl . _M_end_of_storage )
 {
   std :: copy_backward ( __position, this -> _M_impl . _M_finish,
        this -> _M_impl . _M_finish + 1 );
   * __position = __x;
   ++ this -> _M_impl . _M_finish;
 }
      else
 {
   const size_type __len =
     _M_check_len ( size_type ( 1 ), "vector<bool>::_M_insert_aux" );
   _Bit_type * __q = this -> _M_allocate ( __len );
   iterator __i = _M_copy_aligned ( begin ( ), __position,
      iterator ( __q, 0 ) );
   * __i ++ = __x;
   this -> _M_impl . _M_finish = std :: copy ( __position, end ( ), __i );
   this -> _M_deallocate ( );
   this -> _M_impl . _M_end_of_storage = ( __q + ( ( __len
           + int ( _S_word_bit ) - 1 )
          / int ( _S_word_bit ) ) );
   this -> _M_impl . _M_start = iterator ( __q, 0 );
 }
    }
# 679 "/usr/include/c++/4.5/bits/vector.tcc" 3
}
# 60 "/usr/include/c++/4.5/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 99 "/usr/include/c++/4.5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 100 "/usr/include/c++/4.5/bits/stl_function.h" 3
struct unary_function {
# 102 "/usr/include/c++/4.5/bits/stl_function.h" 3
typedef _Arg argument_type;
# 105 "/usr/include/c++/4.5/bits/stl_function.h" 3
typedef _Result result_type;
# 106 "/usr/include/c++/4.5/bits/stl_function.h" 3
};
# 111 "/usr/include/c++/4.5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 112 "/usr/include/c++/4.5/bits/stl_function.h" 3
struct binary_function {
# 114 "/usr/include/c++/4.5/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 117 "/usr/include/c++/4.5/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 118 "/usr/include/c++/4.5/bits/stl_function.h" 3
typedef _Result result_type;
# 119 "/usr/include/c++/4.5/bits/stl_function.h" 3
};
# 134 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct plus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x + __y; }
    };
# 143 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct minus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x - __y; }
    };
# 152 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct multiplies : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x * __y; }
    };
# 161 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct divides : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x / __y; }
    };
# 170 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct modulus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x % __y; }
    };
# 179 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct negate : public unary_function < _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x ) const
      { return - __x; }
    };
# 198 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x == __y; }
    };
# 207 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct not_equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x != __y; }
    };
# 216 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct greater : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x > __y; }
    };
# 225 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct less : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x < __y; }
    };
# 234 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct greater_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x >= __y; }
    };
# 243 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct less_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x <= __y; }
    };
# 262 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_and : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x && __y; }
    };
# 271 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_or : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x || __y; }
    };
# 280 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_not : public unary_function < _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x ) const
      { return ! __x; }
    };
# 291 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_and : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x & __y; }
    };
# 299 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_or : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x | __y; }
    };
# 307 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_xor : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x ^ __y; }
    };
# 345 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Predicate >
    class unary_negate
    : public unary_function < typename _Predicate :: argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      unary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: argument_type & __x ) const
      { return ! _M_pred ( __x ); }
    };
# 362 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Predicate >
    inline unary_negate < _Predicate >
    not1 ( const _Predicate & __pred )
    { return unary_negate < _Predicate > ( __pred ); }
# 368 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Predicate >
    class binary_negate
    : public binary_function < typename _Predicate :: first_argument_type,
        typename _Predicate :: second_argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      binary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: first_argument_type & __x,
   const typename _Predicate :: second_argument_type & __y ) const
      { return ! _M_pred ( __x, __y ); }
    };
# 387 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Predicate >
    inline binary_negate < _Predicate >
    not2 ( const _Predicate & __pred )
    { return binary_negate < _Predicate > ( __pred ); }
# 416 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    class pointer_to_unary_function : public unary_function < _Arg, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg );

    public :
      pointer_to_unary_function ( ) { }

      explicit
      pointer_to_unary_function ( _Result ( * __x ) ( _Arg ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg __x ) const
      { return _M_ptr ( __x ); }
    };
# 435 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    inline pointer_to_unary_function < _Arg, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg ) )
    { return pointer_to_unary_function < _Arg, _Result > ( __x ); }
# 441 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    class pointer_to_binary_function
    : public binary_function < _Arg1, _Arg2, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg1, _Arg2 );

    public :
      pointer_to_binary_function ( ) { }

      explicit
      pointer_to_binary_function ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg1 __x, _Arg2 __y ) const
      { return _M_ptr ( __x, __y ); }
    };
# 461 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    inline pointer_to_binary_function < _Arg1, _Arg2, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
    { return pointer_to_binary_function < _Arg1, _Arg2, _Result > ( __x ); }
# 467 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Tp >
    struct _Identity : public unary_function < _Tp, _Tp >
    {
      _Tp &
      operator ( ) ( _Tp & __x ) const
      { return __x; }

      const _Tp &
      operator ( ) ( const _Tp & __x ) const
      { return __x; }
    };
# 479 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select1st : public unary_function < _Pair,
           typename _Pair :: first_type >
    {
      typename _Pair :: first_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . first; }

      const typename _Pair :: first_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . first; }
    };
# 492 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select2nd : public unary_function < _Pair,
           typename _Pair :: second_type >
    {
      typename _Pair :: second_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . second; }

      const typename _Pair :: second_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . second; }
    };
# 523 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_t : public unary_function < _Tp *, _Ret >
    {
    public :
      explicit
      mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
    };
# 541 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_t : public unary_function < const _Tp *, _Ret >
    {
    public :
      explicit
      const_mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 559 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
  };
# 577 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      const_mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 595 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_t : public binary_function < _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 613 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_t : public binary_function < const _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 631 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 649 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 667 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_t < _Ret, _Tp > ( __f ); }
# 672 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_t < _Ret, _Tp > ( __f ); }
# 677 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 682 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 687 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 692 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 697 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 702 "/usr/include/c++/4.5/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 709 "/usr/include/c++/4.5/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/4.5/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 97 "/usr/include/c++/4.5/backward/binders.h" 3
template < typename _Operation >
    class binder1st
    : public unary_function < typename _Operation :: second_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: first_argument_type value;

    public :
      binder1st ( const _Operation & __x,
  const typename _Operation :: first_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }
    };
# 123 "/usr/include/c++/4.5/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder1st < _Operation >
    bind1st ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: first_argument_type _Arg1_type;
      return binder1st < _Operation > ( __fn, _Arg1_type ( __x ) );
    }
# 132 "/usr/include/c++/4.5/backward/binders.h" 3
template < typename _Operation >
    class binder2nd
    : public unary_function < typename _Operation :: first_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: second_argument_type value;

    public :
      binder2nd ( const _Operation & __x,
  const typename _Operation :: second_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }
    };
# 158 "/usr/include/c++/4.5/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder2nd < _Operation >
    bind2nd ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: second_argument_type _Arg2_type;
      return binder2nd < _Operation > ( __fn, _Arg2_type ( __x ) );
    }
# 167 "/usr/include/c++/4.5/backward/binders.h" 3
}
# 67 "/usr/include/c++/4.5/bits/stl_tree.h" 3
namespace std __attribute((__visibility__("default"))) {
# 85 "/usr/include/c++/4.5/bits/stl_tree.h" 3
enum _Rb_tree_color { _S_red, _S_black};
# 87 "/usr/include/c++/4.5/bits/stl_tree.h" 3
struct _Rb_tree_node_base {
# 89 "/usr/include/c++/4.5/bits/stl_tree.h" 3
typedef _Rb_tree_node_base *_Base_ptr;
# 90 "/usr/include/c++/4.5/bits/stl_tree.h" 3
typedef const _Rb_tree_node_base *_Const_Base_ptr;
# 92 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_color _M_color;
# 93 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Base_ptr _M_parent;
# 94 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Base_ptr _M_left;
# 95 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Base_ptr _M_right;
# 98 "/usr/include/c++/4.5/bits/stl_tree.h" 3
static _Base_ptr _S_minimum(_Base_ptr __x)
# 99 "/usr/include/c++/4.5/bits/stl_tree.h" 3
{
# 100 "/usr/include/c++/4.5/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 101 "/usr/include/c++/4.5/bits/stl_tree.h" 3
return __x;
# 102 "/usr/include/c++/4.5/bits/stl_tree.h" 3
}
# 105 "/usr/include/c++/4.5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_minimum(_Const_Base_ptr __x)
# 106 "/usr/include/c++/4.5/bits/stl_tree.h" 3
{
# 107 "/usr/include/c++/4.5/bits/stl_tree.h" 3
while ((__x->_M_left) != (0)) { __x = (__x->_M_left); }
# 108 "/usr/include/c++/4.5/bits/stl_tree.h" 3
return __x;
# 109 "/usr/include/c++/4.5/bits/stl_tree.h" 3
}
# 112 "/usr/include/c++/4.5/bits/stl_tree.h" 3
static _Base_ptr _S_maximum(_Base_ptr __x)
# 113 "/usr/include/c++/4.5/bits/stl_tree.h" 3
{
# 114 "/usr/include/c++/4.5/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 115 "/usr/include/c++/4.5/bits/stl_tree.h" 3
return __x;
# 116 "/usr/include/c++/4.5/bits/stl_tree.h" 3
}
# 119 "/usr/include/c++/4.5/bits/stl_tree.h" 3
static _Const_Base_ptr _S_maximum(_Const_Base_ptr __x)
# 120 "/usr/include/c++/4.5/bits/stl_tree.h" 3
{
# 121 "/usr/include/c++/4.5/bits/stl_tree.h" 3
while ((__x->_M_right) != (0)) { __x = (__x->_M_right); }
# 122 "/usr/include/c++/4.5/bits/stl_tree.h" 3
return __x;
# 123 "/usr/include/c++/4.5/bits/stl_tree.h" 3
}
# 124 "/usr/include/c++/4.5/bits/stl_tree.h" 3
};
# 126 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template< class _Val>
# 127 "/usr/include/c++/4.5/bits/stl_tree.h" 3
struct _Rb_tree_node : public _Rb_tree_node_base {
# 129 "/usr/include/c++/4.5/bits/stl_tree.h" 3
typedef _Rb_tree_node *_Link_type;
# 130 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Val _M_value_field;
# 138 "/usr/include/c++/4.5/bits/stl_tree.h" 3
};
# 140 "/usr/include/c++/4.5/bits/stl_tree.h" 3
__attribute((__pure__)) _Rb_tree_node_base *
# 141 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_increment(_Rb_tree_node_base * ) throw();
# 143 "/usr/include/c++/4.5/bits/stl_tree.h" 3
__attribute((__pure__)) const _Rb_tree_node_base *
# 144 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_increment(const _Rb_tree_node_base * ) throw();
# 146 "/usr/include/c++/4.5/bits/stl_tree.h" 3
__attribute((__pure__)) _Rb_tree_node_base *
# 147 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_decrement(_Rb_tree_node_base * ) throw();
# 149 "/usr/include/c++/4.5/bits/stl_tree.h" 3
__attribute((__pure__)) const _Rb_tree_node_base *
# 150 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_decrement(const _Rb_tree_node_base * ) throw();
# 152 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Tp >
    struct _Rb_tree_iterator
    {
      typedef _Tp value_type;
      typedef _Tp & reference;
      typedef _Tp * pointer;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_iterator < _Tp > _Self;
      typedef _Rb_tree_node_base :: _Base_ptr _Base_ptr;
      typedef _Rb_tree_node < _Tp > * _Link_type;

      _Rb_tree_iterator ( )
      : _M_node ( ) { }

      explicit
      _Rb_tree_iterator ( _Link_type __x )
      : _M_node ( __x ) { }

      reference
      operator * ( ) const
      { return static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      pointer
      operator -> ( ) const
      { return & static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      _Self &
      operator ++ ( )
      {
 _M_node = _Rb_tree_increment ( _M_node );
 return * this;
      }

      _Self
      operator ++ ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_increment ( _M_node );
 return __tmp;
      }

      _Self &
      operator -- ( )
      {
 _M_node = _Rb_tree_decrement ( _M_node );
 return * this;
      }

      _Self
      operator -- ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_decrement ( _M_node );
 return __tmp;
      }

      bool
      operator == ( const _Self & __x ) const
      { return _M_node == __x . _M_node; }

      bool
      operator != ( const _Self & __x ) const
      { return _M_node != __x . _M_node; }

      _Base_ptr _M_node;
  };
# 222 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Tp >
    struct _Rb_tree_const_iterator
    {
      typedef _Tp value_type;
      typedef const _Tp & reference;
      typedef const _Tp * pointer;

      typedef _Rb_tree_iterator < _Tp > iterator;

      typedef bidirectional_iterator_tag iterator_category;
      typedef ptrdiff_t difference_type;

      typedef _Rb_tree_const_iterator < _Tp > _Self;
      typedef _Rb_tree_node_base :: _Const_Base_ptr _Base_ptr;
      typedef const _Rb_tree_node < _Tp > * _Link_type;

      _Rb_tree_const_iterator ( )
      : _M_node ( ) { }

      explicit
      _Rb_tree_const_iterator ( _Link_type __x )
      : _M_node ( __x ) { }

      _Rb_tree_const_iterator ( const iterator & __it )
      : _M_node ( __it . _M_node ) { }

      reference
      operator * ( ) const
      { return static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      pointer
      operator -> ( ) const
      { return & static_cast < _Link_type > ( _M_node ) -> _M_value_field; }

      _Self &
      operator ++ ( )
      {
 _M_node = _Rb_tree_increment ( _M_node );
 return * this;
      }

      _Self
      operator ++ ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_increment ( _M_node );
 return __tmp;
      }

      _Self &
      operator -- ( )
      {
 _M_node = _Rb_tree_decrement ( _M_node );
 return * this;
      }

      _Self
      operator -- ( int )
      {
 _Self __tmp = * this;
 _M_node = _Rb_tree_decrement ( _M_node );
 return __tmp;
      }

      bool
      operator == ( const _Self & __x ) const
      { return _M_node == __x . _M_node; }

      bool
      operator != ( const _Self & __x ) const
      { return _M_node != __x . _M_node; }

      _Base_ptr _M_node;
    };
# 297 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Val >
    inline bool
    operator == ( const _Rb_tree_iterator < _Val > & __x,
               const _Rb_tree_const_iterator < _Val > & __y )
    { return __x . _M_node == __y . _M_node; }
# 303 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Val >
    inline bool
    operator != ( const _Rb_tree_iterator < _Val > & __x,
               const _Rb_tree_const_iterator < _Val > & __y )
    { return __x . _M_node != __y . _M_node; }
# 310 "/usr/include/c++/4.5/bits/stl_tree.h" 3
void _Rb_tree_insert_and_rebalance(const bool , _Rb_tree_node_base * , _Rb_tree_node_base * , _Rb_tree_node_base & ) throw();
# 316 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_node_base *_Rb_tree_rebalance_for_erase(_Rb_tree_node_base *const , _Rb_tree_node_base & ) throw();
# 320 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc = allocator < _Val > >
    class _Rb_tree
    {
      typedef typename _Alloc :: template rebind < _Rb_tree_node < _Val > > :: other
              _Node_allocator;

    protected :
      typedef _Rb_tree_node_base * _Base_ptr;
      typedef const _Rb_tree_node_base * _Const_Base_ptr;

    public :
      typedef _Key key_type;
      typedef _Val value_type;
      typedef value_type * pointer;
      typedef const value_type * const_pointer;
      typedef value_type & reference;
      typedef const value_type & const_reference;
      typedef _Rb_tree_node < _Val > * _Link_type;
      typedef const _Rb_tree_node < _Val > * _Const_Link_type;
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Alloc allocator_type;

      _Node_allocator &
      _M_get_Node_allocator ( )
      { return * static_cast < _Node_allocator * > ( & this -> _M_impl ); }

      const _Node_allocator &
      _M_get_Node_allocator ( ) const
      { return * static_cast < const _Node_allocator * > ( & this -> _M_impl ); }

      allocator_type
      get_allocator ( ) const
      { return allocator_type ( _M_get_Node_allocator ( ) ); }

    protected :
      _Link_type
      _M_get_node ( )
      { return _M_impl . _Node_allocator :: allocate ( 1 ); }

      void
      _M_put_node ( _Link_type __p )
      { _M_impl . _Node_allocator :: deallocate ( __p, 1 ); }


      _Link_type
      _M_create_node ( const value_type & __x )
      {
 _Link_type __tmp = _M_get_node ( );
 try
   { get_allocator ( ) . construct ( & __tmp -> _M_value_field, __x ); }
 catch ( ... )
   {
     _M_put_node ( __tmp );
     throw;
   }
 return __tmp;
      }

      void
      _M_destroy_node ( _Link_type __p )
      {
 get_allocator ( ) . destroy ( & __p -> _M_value_field );
 _M_put_node ( __p );
      }

      _Link_type
      _M_clone_node ( _Const_Link_type __x )
      {
 _Link_type __tmp = _M_create_node ( __x -> _M_value_field );
 __tmp -> _M_color = __x -> _M_color;
 __tmp -> _M_left = 0;
 __tmp -> _M_right = 0;
 return __tmp;
      }

    protected :
      template < typename _Key_compare,
        bool _Is_pod_comparator = __is_pod ( _Key_compare ) >
        struct _Rb_tree_impl : public _Node_allocator
        {
   _Key_compare _M_key_compare;
   _Rb_tree_node_base _M_header;
   size_type _M_node_count;

   _Rb_tree_impl ( )
   : _Node_allocator ( ), _M_key_compare ( ), _M_header ( ),
     _M_node_count ( 0 )
   { _M_initialize ( ); }

   _Rb_tree_impl ( const _Key_compare & __comp, const _Node_allocator & __a )
   : _Node_allocator ( __a ), _M_key_compare ( __comp ), _M_header ( ),
     _M_node_count ( 0 )
   { _M_initialize ( ); }

 private :
   void
   _M_initialize ( )
   {
     this -> _M_header . _M_color = _S_red;
     this -> _M_header . _M_parent = 0;
     this -> _M_header . _M_left = & this -> _M_header;
     this -> _M_header . _M_right = & this -> _M_header;
   }
 };

      _Rb_tree_impl < _Compare > _M_impl;

    protected :
      _Base_ptr &
      _M_root ( )
      { return this -> _M_impl . _M_header . _M_parent; }

      _Const_Base_ptr
      _M_root ( ) const
      { return this -> _M_impl . _M_header . _M_parent; }

      _Base_ptr &
      _M_leftmost ( )
      { return this -> _M_impl . _M_header . _M_left; }

      _Const_Base_ptr
      _M_leftmost ( ) const
      { return this -> _M_impl . _M_header . _M_left; }

      _Base_ptr &
      _M_rightmost ( )
      { return this -> _M_impl . _M_header . _M_right; }

      _Const_Base_ptr
      _M_rightmost ( ) const
      { return this -> _M_impl . _M_header . _M_right; }

      _Link_type
      _M_begin ( )
      { return static_cast < _Link_type > ( this -> _M_impl . _M_header . _M_parent ); }

      _Const_Link_type
      _M_begin ( ) const
      {
 return static_cast < _Const_Link_type >
   ( this -> _M_impl . _M_header . _M_parent );
      }

      _Link_type
      _M_end ( )
      { return static_cast < _Link_type > ( & this -> _M_impl . _M_header ); }

      _Const_Link_type
      _M_end ( ) const
      { return static_cast < _Const_Link_type > ( & this -> _M_impl . _M_header ); }

      static const_reference
      _S_value ( _Const_Link_type __x )
      { return __x -> _M_value_field; }

      static const _Key &
      _S_key ( _Const_Link_type __x )
      { return _KeyOfValue ( ) ( _S_value ( __x ) ); }

      static _Link_type
      _S_left ( _Base_ptr __x )
      { return static_cast < _Link_type > ( __x -> _M_left ); }

      static _Const_Link_type
      _S_left ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x -> _M_left ); }

      static _Link_type
      _S_right ( _Base_ptr __x )
      { return static_cast < _Link_type > ( __x -> _M_right ); }

      static _Const_Link_type
      _S_right ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x -> _M_right ); }

      static const_reference
      _S_value ( _Const_Base_ptr __x )
      { return static_cast < _Const_Link_type > ( __x ) -> _M_value_field; }

      static const _Key &
      _S_key ( _Const_Base_ptr __x )
      { return _KeyOfValue ( ) ( _S_value ( __x ) ); }

      static _Base_ptr
      _S_minimum ( _Base_ptr __x )
      { return _Rb_tree_node_base :: _S_minimum ( __x ); }

      static _Const_Base_ptr
      _S_minimum ( _Const_Base_ptr __x )
      { return _Rb_tree_node_base :: _S_minimum ( __x ); }

      static _Base_ptr
      _S_maximum ( _Base_ptr __x )
      { return _Rb_tree_node_base :: _S_maximum ( __x ); }

      static _Const_Base_ptr
      _S_maximum ( _Const_Base_ptr __x )
      { return _Rb_tree_node_base :: _S_maximum ( __x ); }

    public :
      typedef _Rb_tree_iterator < value_type > iterator;
      typedef _Rb_tree_const_iterator < value_type > const_iterator;

      typedef std :: reverse_iterator < iterator > reverse_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;

    private :
      iterator
      _M_insert_ ( _Const_Base_ptr __x, _Const_Base_ptr __y,
   const value_type & __v );



      iterator
      _M_insert_lower ( _Base_ptr __x, _Base_ptr __y, const value_type & __v );

      iterator
      _M_insert_equal_lower ( const value_type & __x );

      _Link_type
      _M_copy ( _Const_Link_type __x, _Link_type __p );

      void
      _M_erase ( _Link_type __x );

      iterator
      _M_lower_bound ( _Link_type __x, _Link_type __y,
       const _Key & __k );

      const_iterator
      _M_lower_bound ( _Const_Link_type __x, _Const_Link_type __y,
       const _Key & __k ) const;

      iterator
      _M_upper_bound ( _Link_type __x, _Link_type __y,
       const _Key & __k );

      const_iterator
      _M_upper_bound ( _Const_Link_type __x, _Const_Link_type __y,
       const _Key & __k ) const;

    public :

      _Rb_tree ( ) { }

      _Rb_tree ( const _Compare & __comp,
        const allocator_type & __a = allocator_type ( ) )
      : _M_impl ( __comp, __a ) { }

      _Rb_tree ( const _Rb_tree & __x )
      : _M_impl ( __x . _M_impl . _M_key_compare, __x . _M_get_Node_allocator ( ) )
      {
 if ( __x . _M_root ( ) != 0 )
   {
     _M_root ( ) = _M_copy ( __x . _M_begin ( ), _M_end ( ) );
     _M_leftmost ( ) = _S_minimum ( _M_root ( ) );
     _M_rightmost ( ) = _S_maximum ( _M_root ( ) );
     _M_impl . _M_node_count = __x . _M_impl . _M_node_count;
   }
      }





      ~ _Rb_tree ( )
      { _M_erase ( _M_begin ( ) ); }

      _Rb_tree &
      operator = ( const _Rb_tree & __x );


      _Compare
      key_comp ( ) const
      { return _M_impl . _M_key_compare; }

      iterator
      begin ( )
      {
 return iterator ( static_cast < _Link_type >
   ( this -> _M_impl . _M_header . _M_left ) );
      }

      const_iterator
      begin ( ) const
      {
 return const_iterator ( static_cast < _Const_Link_type >
         ( this -> _M_impl . _M_header . _M_left ) );
      }

      iterator
      end ( )
      { return iterator ( static_cast < _Link_type > ( & this -> _M_impl . _M_header ) ); }

      const_iterator
      end ( ) const
      {
 return const_iterator ( static_cast < _Const_Link_type >
         ( & this -> _M_impl . _M_header ) );
      }

      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( end ( ) ); }

      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( end ( ) ); }

      reverse_iterator
      rend ( )
      { return reverse_iterator ( begin ( ) ); }

      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( begin ( ) ); }

      bool
      empty ( ) const
      { return _M_impl . _M_node_count == 0; }

      size_type
      size ( ) const
      { return _M_impl . _M_node_count; }

      size_type
      max_size ( ) const
      { return _M_get_Node_allocator ( ) . max_size ( ); }

      void
      swap ( _Rb_tree & __t );


      pair < iterator, bool >
      _M_insert_unique ( const value_type & __x );

      iterator
      _M_insert_equal ( const value_type & __x );

      iterator
      _M_insert_unique_ ( const_iterator __position, const value_type & __x );

      iterator
      _M_insert_equal_ ( const_iterator __position, const value_type & __x );

      template < typename _InputIterator >
        void
        _M_insert_unique ( _InputIterator __first, _InputIterator __last );

      template < typename _InputIterator >
        void
        _M_insert_equal ( _InputIterator __first, _InputIterator __last );

      void
      erase ( iterator __position );

      void
      erase ( const_iterator __position );

      size_type
      erase ( const key_type & __x );

      void
      erase ( iterator __first, iterator __last );

      void
      erase ( const_iterator __first, const_iterator __last );

      void
      erase ( const key_type * __first, const key_type * __last );

      void
      clear ( )
      {
        _M_erase ( _M_begin ( ) );
        _M_leftmost ( ) = _M_end ( );
        _M_root ( ) = 0;
        _M_rightmost ( ) = _M_end ( );
        _M_impl . _M_node_count = 0;
      }


      iterator
      find ( const key_type & __k );

      const_iterator
      find ( const key_type & __k ) const;

      size_type
      count ( const key_type & __k ) const;

      iterator
      lower_bound ( const key_type & __k )
      { return _M_lower_bound ( _M_begin ( ), _M_end ( ), __k ); }

      const_iterator
      lower_bound ( const key_type & __k ) const
      { return _M_lower_bound ( _M_begin ( ), _M_end ( ), __k ); }

      iterator
      upper_bound ( const key_type & __k )
      { return _M_upper_bound ( _M_begin ( ), _M_end ( ), __k ); }

      const_iterator
      upper_bound ( const key_type & __k ) const
      { return _M_upper_bound ( _M_begin ( ), _M_end ( ), __k ); }

      pair < iterator, iterator >
      equal_range ( const key_type & __k );

      pair < const_iterator, const_iterator >
      equal_range ( const key_type & __k ) const;


      bool
      __rb_verify ( ) const;
    };
# 788 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator == ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    {
      return __x . size ( ) == __y . size ( )
      && std :: equal ( __x . begin ( ), __x . end ( ), __y . begin ( ) );
    }
# 798 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator < ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
       const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    {
      return std :: lexicographical_compare ( __x . begin ( ), __x . end ( ),
       __y . begin ( ), __y . end ( ) );
    }
# 808 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator != ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 815 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator > ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
       const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 822 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 829 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
        const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 836 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    swap ( _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x,
  _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 867 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > &
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    operator = ( const _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __x )
    {
      if ( this != & __x )
 {

   clear ( );
   _M_impl . _M_key_compare = __x . _M_impl . _M_key_compare;
   if ( __x . _M_root ( ) != 0 )
     {
       _M_root ( ) = _M_copy ( __x . _M_begin ( ), _M_end ( ) );
       _M_leftmost ( ) = _S_minimum ( _M_root ( ) );
       _M_rightmost ( ) = _S_maximum ( _M_root ( ) );
       _M_impl . _M_node_count = __x . _M_impl . _M_node_count;
     }
 }
      return * this;
    }
# 889 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_ ( _Const_Base_ptr __x, _Const_Base_ptr __p, const _Val & __v )
    {
      bool __insert_left = ( __x != 0 || __p == _M_end ( )
       || _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
            _S_key ( __p ) ) );

      _Link_type __z = _M_create_node ( __v );

      _Rb_tree_insert_and_rebalance ( __insert_left, __z,
        const_cast < _Base_ptr > ( __p ),
        this -> _M_impl . _M_header );
      ++ _M_impl . _M_node_count;
      return iterator ( __z );
    }
# 908 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_lower ( _Base_ptr __x, _Base_ptr __p, const _Val & __v )
    {
      bool __insert_left = ( __x != 0 || __p == _M_end ( )
       || ! _M_impl . _M_key_compare ( _S_key ( __p ),
             _KeyOfValue ( ) ( __v ) ) );

      _Link_type __z = _M_create_node ( __v );

      _Rb_tree_insert_and_rebalance ( __insert_left, __z, __p,
        this -> _M_impl . _M_header );
      ++ _M_impl . _M_node_count;
      return iterator ( __z );
    }
# 926 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal_lower ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   __y = __x;
   __x = ! _M_impl . _M_key_compare ( _S_key ( __x ), _KeyOfValue ( ) ( __v ) ) ?
         _S_left ( __x ) : _S_right ( __x );
 }
      return _M_insert_lower ( __x, __y, __v );
    }
# 943 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KoV, _Compare, _Alloc > :: _Link_type
    _Rb_tree < _Key, _Val, _KoV, _Compare, _Alloc > ::
    _M_copy ( _Const_Link_type __x, _Link_type __p )
    {

      _Link_type __top = _M_clone_node ( __x );
      __top -> _M_parent = __p;

      try
 {
   if ( __x -> _M_right )
     __top -> _M_right = _M_copy ( _S_right ( __x ), __top );
   __p = __top;
   __x = _S_left ( __x );

   while ( __x != 0 )
     {
       _Link_type __y = _M_clone_node ( __x );
       __p -> _M_left = __y;
       __y -> _M_parent = __p;
       if ( __x -> _M_right )
  __y -> _M_right = _M_copy ( _S_right ( __x ), __y );
       __p = __y;
       __x = _S_left ( __x );
     }
 }
      catch ( ... )
 {
   _M_erase ( __top );
   throw;
 }
      return __top;
    }
# 979 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_erase ( _Link_type __x )
    {

      while ( __x != 0 )
 {
   _M_erase ( _S_right ( __x ) );
   _Link_type __y = _S_left ( __x );
   _M_destroy_node ( __x );
   __x = __y;
 }
    }
# 995 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_lower_bound ( _Link_type __x, _Link_type __y,
     const _Key & __k )
    {
      while ( __x != 0 )
 if ( ! _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return iterator ( __y );
    }
# 1011 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_lower_bound ( _Const_Link_type __x, _Const_Link_type __y,
     const _Key & __k ) const
    {
      while ( __x != 0 )
 if ( ! _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return const_iterator ( __y );
    }
# 1027 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_upper_bound ( _Link_type __x, _Link_type __y,
     const _Key & __k )
    {
      while ( __x != 0 )
 if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return iterator ( __y );
    }
# 1043 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_upper_bound ( _Const_Link_type __x, _Const_Link_type __y,
     const _Key & __k ) const
    {
      while ( __x != 0 )
 if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
   __y = __x, __x = _S_left ( __x );
 else
   __x = _S_right ( __x );
      return const_iterator ( __y );
    }
# 1059 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator,
  typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    equal_range ( const _Key & __k )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   if ( _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
     __x = _S_right ( __x );
   else if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
     __y = __x, __x = _S_left ( __x );
   else
     {
       _Link_type __xu ( __x ), __yu ( __y );
       __y = __x, __x = _S_left ( __x );
       __xu = _S_right ( __xu );
       return pair < iterator,
            iterator > ( _M_lower_bound ( __x, __y, __k ),
        _M_upper_bound ( __xu, __yu, __k ) );
     }
 }
      return pair < iterator, iterator > ( iterator ( __y ),
          iterator ( __y ) );
    }
# 1090 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: const_iterator,
  typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: const_iterator >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    equal_range ( const _Key & __k ) const
    {
      _Const_Link_type __x = _M_begin ( );
      _Const_Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   if ( _M_impl . _M_key_compare ( _S_key ( __x ), __k ) )
     __x = _S_right ( __x );
   else if ( _M_impl . _M_key_compare ( __k, _S_key ( __x ) ) )
     __y = __x, __x = _S_left ( __x );
   else
     {
       _Const_Link_type __xu ( __x ), __yu ( __y );
       __y = __x, __x = _S_left ( __x );
       __xu = _S_right ( __xu );
       return pair < const_iterator,
            const_iterator > ( _M_lower_bound ( __x, __y, __k ),
       _M_upper_bound ( __xu, __yu, __k ) );
     }
 }
      return pair < const_iterator, const_iterator > ( const_iterator ( __y ),
        const_iterator ( __y ) );
    }
# 1121 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    swap ( _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > & __t )
    {
      if ( _M_root ( ) == 0 )
 {
   if ( __t . _M_root ( ) != 0 )
     {
       _M_root ( ) = __t . _M_root ( );
       _M_leftmost ( ) = __t . _M_leftmost ( );
       _M_rightmost ( ) = __t . _M_rightmost ( );
       _M_root ( ) -> _M_parent = _M_end ( );

       __t . _M_root ( ) = 0;
       __t . _M_leftmost ( ) = __t . _M_end ( );
       __t . _M_rightmost ( ) = __t . _M_end ( );
     }
 }
      else if ( __t . _M_root ( ) == 0 )
 {
   __t . _M_root ( ) = _M_root ( );
   __t . _M_leftmost ( ) = _M_leftmost ( );
   __t . _M_rightmost ( ) = _M_rightmost ( );
   __t . _M_root ( ) -> _M_parent = __t . _M_end ( );

   _M_root ( ) = 0;
   _M_leftmost ( ) = _M_end ( );
   _M_rightmost ( ) = _M_end ( );
 }
      else
 {
   std :: swap ( _M_root ( ), __t . _M_root ( ) );
   std :: swap ( _M_leftmost ( ), __t . _M_leftmost ( ) );
   std :: swap ( _M_rightmost ( ), __t . _M_rightmost ( ) );

   _M_root ( ) -> _M_parent = _M_end ( );
   __t . _M_root ( ) -> _M_parent = __t . _M_end ( );
 }

      std :: swap ( this -> _M_impl . _M_node_count, __t . _M_impl . _M_node_count );
      std :: swap ( this -> _M_impl . _M_key_compare, __t . _M_impl . _M_key_compare );



      std :: __alloc_swap < _Node_allocator > ::
 _S_do_it ( _M_get_Node_allocator ( ), __t . _M_get_Node_allocator ( ) );
    }
# 1171 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    pair < typename _Rb_tree < _Key, _Val, _KeyOfValue,
      _Compare, _Alloc > :: iterator, bool >
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_unique ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      bool __comp = true;
      while ( __x != 0 )
 {
   __y = __x;
   __comp = _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ), _S_key ( __x ) );
   __x = __comp ? _S_left ( __x ) : _S_right ( __x );
 }
      iterator __j = iterator ( __y );
      if ( __comp )
 {
   if ( __j == begin ( ) )
     return pair < iterator, bool > ( _M_insert_ ( __x, __y, __v ), true );
   else
     -- __j;
 }
      if ( _M_impl . _M_key_compare ( _S_key ( __j . _M_node ), _KeyOfValue ( ) ( __v ) ) )
 return pair < iterator, bool > ( _M_insert_ ( __x, __y, __v ), true );
      return pair < iterator, bool > ( __j, false );
    }
# 1200 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal ( const _Val & __v )
    {
      _Link_type __x = _M_begin ( );
      _Link_type __y = _M_end ( );
      while ( __x != 0 )
 {
   __y = __x;
   __x = _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ), _S_key ( __x ) ) ?
         _S_left ( __x ) : _S_right ( __x );
 }
      return _M_insert_ ( __x, __y, __v );
    }
# 1217 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_unique_ ( const_iterator __position, const _Val & __v )
    {

      if ( __position . _M_node == _M_end ( ) )
 {
   if ( size ( ) > 0
       && _M_impl . _M_key_compare ( _S_key ( _M_rightmost ( ) ),
     _KeyOfValue ( ) ( __v ) ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else
     return _M_insert_unique ( __v ) . first;
 }
      else if ( _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
          _S_key ( __position . _M_node ) ) )
 {

   const_iterator __before = __position;
   if ( __position . _M_node == _M_leftmost ( ) )
     return _M_insert_ ( _M_leftmost ( ), _M_leftmost ( ), __v );
   else if ( _M_impl . _M_key_compare ( _S_key ( ( -- __before ) . _M_node ),
       _KeyOfValue ( ) ( __v ) ) )
     {
       if ( _S_right ( __before . _M_node ) == 0 )
  return _M_insert_ ( 0, __before . _M_node, __v );
       else
  return _M_insert_ ( __position . _M_node,
      __position . _M_node, __v );
     }
   else
     return _M_insert_unique ( __v ) . first;
 }
      else if ( _M_impl . _M_key_compare ( _S_key ( __position . _M_node ),
          _KeyOfValue ( ) ( __v ) ) )
 {

   const_iterator __after = __position;
   if ( __position . _M_node == _M_rightmost ( ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else if ( _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
       _S_key ( ( ++ __after ) . _M_node ) ) )
     {
       if ( _S_right ( __position . _M_node ) == 0 )
  return _M_insert_ ( 0, __position . _M_node, __v );
       else
  return _M_insert_ ( __after . _M_node, __after . _M_node, __v );
     }
   else
     return _M_insert_unique ( __v ) . first;
 }
      else

 return iterator ( static_cast < _Link_type >
   ( const_cast < _Base_ptr > ( __position . _M_node ) ) );
    }
# 1276 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    _M_insert_equal_ ( const_iterator __position, const _Val & __v )
    {

      if ( __position . _M_node == _M_end ( ) )
 {
   if ( size ( ) > 0
       && ! _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
      _S_key ( _M_rightmost ( ) ) ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else
     return _M_insert_equal ( __v );
 }
      else if ( ! _M_impl . _M_key_compare ( _S_key ( __position . _M_node ),
           _KeyOfValue ( ) ( __v ) ) )
 {

   const_iterator __before = __position;
   if ( __position . _M_node == _M_leftmost ( ) )
     return _M_insert_ ( _M_leftmost ( ), _M_leftmost ( ), __v );
   else if ( ! _M_impl . _M_key_compare ( _KeyOfValue ( ) ( __v ),
        _S_key ( ( -- __before ) . _M_node ) ) )
     {
       if ( _S_right ( __before . _M_node ) == 0 )
  return _M_insert_ ( 0, __before . _M_node, __v );
       else
  return _M_insert_ ( __position . _M_node,
      __position . _M_node, __v );
     }
   else
     return _M_insert_equal ( __v );
 }
      else
 {

   const_iterator __after = __position;
   if ( __position . _M_node == _M_rightmost ( ) )
     return _M_insert_ ( 0, _M_rightmost ( ), __v );
   else if ( ! _M_impl . _M_key_compare ( _S_key ( ( ++ __after ) . _M_node ),
        _KeyOfValue ( ) ( __v ) ) )
     {
       if ( _S_right ( __position . _M_node ) == 0 )
  return _M_insert_ ( 0, __position . _M_node, __v );
       else
  return _M_insert_ ( __after . _M_node, __after . _M_node, __v );
     }
   else
     return _M_insert_equal_lower ( __v );
 }
    }
# 1330 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc >
    template < class _II >
      void
      _Rb_tree < _Key, _Val, _KoV, _Cmp, _Alloc > ::
      _M_insert_unique ( _II __first, _II __last )
      {
 for (; __first != __last; ++ __first )
   _M_insert_unique_ ( end ( ), * __first );
      }
# 1341 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KoV,
           typename _Cmp, typename _Alloc >
    template < class _II >
      void
      _Rb_tree < _Key, _Val, _KoV, _Cmp, _Alloc > ::
      _M_insert_equal ( _II __first, _II __last )
      {
 for (; __first != __last; ++ __first )
   _M_insert_equal_ ( end ( ), * __first );
      }
# 1391 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( iterator __position )
    {
      _Link_type __y =
 static_cast < _Link_type > ( _Rb_tree_rebalance_for_erase
    ( __position . _M_node,
     this -> _M_impl . _M_header ) );
      _M_destroy_node ( __y );
      -- _M_impl . _M_node_count;
    }
# 1405 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    inline void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const_iterator __position )
    {
      _Link_type __y =
 static_cast < _Link_type > ( _Rb_tree_rebalance_for_erase
    ( const_cast < _Base_ptr > ( __position . _M_node ),
     this -> _M_impl . _M_header ) );
      _M_destroy_node ( __y );
      -- _M_impl . _M_node_count;
    }
# 1420 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: size_type
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const _Key & __x )
    {
      pair < iterator, iterator > __p = equal_range ( __x );
      const size_type __old_size = size ( );
      erase ( __p . first, __p . second );
      return __old_size - size ( );
    }
# 1475 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( iterator __first, iterator __last )
    {
      if ( __first == begin ( ) && __last == end ( ) )
 clear ( );
      else
 while ( __first != __last )
   erase ( __first ++ );
    }
# 1488 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const_iterator __first, const_iterator __last )
    {
      if ( __first == begin ( ) && __last == end ( ) )
 clear ( );
      else
 while ( __first != __last )
   erase ( __first ++ );
    }
# 1502 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    void
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    erase ( const _Key * __first, const _Key * __last )
    {
      while ( __first != __last )
 erase ( * __first ++ );
    }
# 1512 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    find ( const _Key & __k )
    {
      iterator __j = _M_lower_bound ( _M_begin ( ), _M_end ( ), __k );
      return ( __j == end ( )
       || _M_impl . _M_key_compare ( __k,
     _S_key ( __j . _M_node ) ) ) ? end ( ) : __j;
    }
# 1525 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue,
        _Compare, _Alloc > :: const_iterator
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    find ( const _Key & __k ) const
    {
      const_iterator __j = _M_lower_bound ( _M_begin ( ), _M_end ( ), __k );
      return ( __j == end ( )
       || _M_impl . _M_key_compare ( __k,
     _S_key ( __j . _M_node ) ) ) ? end ( ) : __j;
    }
# 1538 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    typename _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: size_type
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > ::
    count ( const _Key & __k ) const
    {
      pair < const_iterator, const_iterator > __p = equal_range ( __k );
      const size_type __n = std :: distance ( __p . first, __p . second );
      return __n;
    }
# 1549 "/usr/include/c++/4.5/bits/stl_tree.h" 3
__attribute((__pure__)) unsigned
# 1550 "/usr/include/c++/4.5/bits/stl_tree.h" 3
_Rb_tree_black_count(const _Rb_tree_node_base * , const _Rb_tree_node_base * ) throw();
# 1553 "/usr/include/c++/4.5/bits/stl_tree.h" 3
template < typename _Key, typename _Val, typename _KeyOfValue,
           typename _Compare, typename _Alloc >
    bool
    _Rb_tree < _Key, _Val, _KeyOfValue, _Compare, _Alloc > :: __rb_verify ( ) const
    {
      if ( _M_impl . _M_node_count == 0 || begin ( ) == end ( ) )
 return _M_impl . _M_node_count == 0 && begin ( ) == end ( )
        && this -> _M_impl . _M_header . _M_left == _M_end ( )
        && this -> _M_impl . _M_header . _M_right == _M_end ( );

      unsigned int __len = _Rb_tree_black_count ( _M_leftmost ( ), _M_root ( ) );
      for ( const_iterator __it = begin ( ); __it != end ( ); ++ __it )
 {
   _Const_Link_type __x = static_cast < _Const_Link_type > ( __it . _M_node );
   _Const_Link_type __L = _S_left ( __x );
   _Const_Link_type __R = _S_right ( __x );

   if ( __x -> _M_color == _S_red )
     if ( ( __L && __L -> _M_color == _S_red )
  || ( __R && __R -> _M_color == _S_red ) )
       return false;

   if ( __L && _M_impl . _M_key_compare ( _S_key ( __x ), _S_key ( __L ) ) )
     return false;
   if ( __R && _M_impl . _M_key_compare ( _S_key ( __R ), _S_key ( __x ) ) )
     return false;

   if ( ! __L && ! __R && _Rb_tree_black_count ( __x, _M_root ( ) ) != __len )
     return false;
 }

      if ( _M_leftmost ( ) != _Rb_tree_node_base :: _S_minimum ( _M_root ( ) ) )
 return false;
      if ( _M_rightmost ( ) != _Rb_tree_node_base :: _S_maximum ( _M_root ( ) ) )
 return false;
      return true;
    }
# 1591 "/usr/include/c++/4.5/bits/stl_tree.h" 3
}
# 64 "/usr/include/c++/4.5/bits/stl_map.h" 3
namespace std __attribute((__visibility__("default"))) {
# 84 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare = std :: less < _Key >,
            typename _Alloc = std :: allocator < std :: pair < const _Key, _Tp > > >
    class map
    {
    public :
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std :: pair < const _Key, _Tp > value_type;
      typedef _Compare key_compare;
      typedef _Alloc allocator_type;

    private :

      typedef typename _Alloc :: value_type _Alloc_value_type;





    public :
      class value_compare
      : public std :: binary_function < value_type, value_type, bool >
      {
 friend class map < _Key, _Tp, _Compare, _Alloc >;
      protected :
 _Compare comp;

 value_compare ( _Compare __c )
 : comp ( __c ) { }

      public :
 bool operator ( ) ( const value_type & __x, const value_type & __y ) const
 { return comp ( __x . first, __y . first ); }
      };

    private :

      typedef typename _Alloc :: template rebind < value_type > :: other
        _Pair_alloc_type;

      typedef _Rb_tree < key_type, value_type, _Select1st < value_type >,
         key_compare, _Pair_alloc_type > _Rep_type;


      _Rep_type _M_t;

    public :


      typedef typename _Pair_alloc_type :: pointer pointer;
      typedef typename _Pair_alloc_type :: const_pointer const_pointer;
      typedef typename _Pair_alloc_type :: reference reference;
      typedef typename _Pair_alloc_type :: const_reference const_reference;
      typedef typename _Rep_type :: iterator iterator;
      typedef typename _Rep_type :: const_iterator const_iterator;
      typedef typename _Rep_type :: size_type size_type;
      typedef typename _Rep_type :: difference_type difference_type;
      typedef typename _Rep_type :: reverse_iterator reverse_iterator;
      typedef typename _Rep_type :: const_reverse_iterator const_reverse_iterator;







      map ( )
      : _M_t ( ) { }






      explicit
      map ( const _Compare & __comp,
   const allocator_type & __a = allocator_type ( ) )
      : _M_t ( __comp, __a ) { }

      map ( const map & __x )
      : _M_t ( __x . _M_t ) { }

      template < typename _InputIterator >
        map ( _InputIterator __first, _InputIterator __last )
 : _M_t ( )
        { _M_t . _M_insert_unique ( __first, __last ); }

      template < typename _InputIterator >
        map ( _InputIterator __first, _InputIterator __last,
     const _Compare & __comp,
     const allocator_type & __a = allocator_type ( ) )
 : _M_t ( __comp, __a )
        { _M_t . _M_insert_unique ( __first, __last ); }

      map &
      operator = ( const map & __x )
      {
 _M_t = __x . _M_t;
 return * this;
      }

      allocator_type
      get_allocator ( ) const
      { return _M_t . get_allocator ( ); }







      iterator
      begin ( )
      { return _M_t . begin ( ); }






      const_iterator
      begin ( ) const
      { return _M_t . begin ( ); }






      iterator
      end ( )
      { return _M_t . end ( ); }






      const_iterator
      end ( ) const
      { return _M_t . end ( ); }






      reverse_iterator
      rbegin ( )
      { return _M_t . rbegin ( ); }






      const_reverse_iterator
      rbegin ( ) const
      { return _M_t . rbegin ( ); }






      reverse_iterator
      rend ( )
      { return _M_t . rend ( ); }






      const_reverse_iterator
      rend ( ) const
      { return _M_t . rend ( ); }

      bool
      empty ( ) const
      { return _M_t . empty ( ); }


      size_type
      size ( ) const
      { return _M_t . size ( ); }


      size_type
      max_size ( ) const
      { return _M_t . max_size ( ); }

      mapped_type &
      operator [ ] ( const key_type & __k )
      {



 iterator __i = lower_bound ( __k );

 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
          __i = insert ( __i, value_type ( __k, mapped_type ( ) ) );
 return ( * __i ) . second;
      }

      mapped_type &
      at ( const key_type & __k )
      {
 iterator __i = lower_bound ( __k );
 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
   __throw_out_of_range ( ( "map::at" ) );
 return ( * __i ) . second;
      }

      const mapped_type &
      at ( const key_type & __k ) const
      {
 const_iterator __i = lower_bound ( __k );
 if ( __i == end ( ) || key_comp ( ) ( __k, ( * __i ) . first ) )
   __throw_out_of_range ( ( "map::at" ) );
 return ( * __i ) . second;
      }

      std :: pair < iterator, bool >
      insert ( const value_type & __x )
      { return _M_t . _M_insert_unique ( __x ); }

      iterator
      insert ( iterator __position, const value_type & __x )
      { return _M_t . _M_insert_unique_ ( __position, __x ); }

      template < typename _InputIterator >
        void
        insert ( _InputIterator __first, _InputIterator __last )
        { _M_t . _M_insert_unique ( __first, __last ); }

      void
      erase ( iterator __position )
      { _M_t . erase ( __position ); }

      size_type
      erase ( const key_type & __x )
      { return _M_t . erase ( __x ); }

      void
      erase ( iterator __first, iterator __last )
      { _M_t . erase ( __first, __last ); }

      void
      swap ( map & __x )
      { _M_t . swap ( __x . _M_t ); }







      void
      clear ( )
      { _M_t . clear ( ); }






      key_compare
      key_comp ( ) const
      { return _M_t . key_comp ( ); }





      value_compare
      value_comp ( ) const
      { return value_compare ( _M_t . key_comp ( ) ); }

      iterator
      find ( const key_type & __x )
      { return _M_t . find ( __x ); }

      const_iterator
      find ( const key_type & __x ) const
      { return _M_t . find ( __x ); }

      size_type
      count ( const key_type & __x ) const
      { return _M_t . find ( __x ) == _M_t . end ( ) ? 0 : 1; }

      iterator
      lower_bound ( const key_type & __x )
      { return _M_t . lower_bound ( __x ); }

      const_iterator
      lower_bound ( const key_type & __x ) const
      { return _M_t . lower_bound ( __x ); }







      iterator
      upper_bound ( const key_type & __x )
      { return _M_t . upper_bound ( __x ); }







      const_iterator
      upper_bound ( const key_type & __x ) const
      { return _M_t . upper_bound ( __x ); }

      std :: pair < iterator, iterator >
      equal_range ( const key_type & __x )
      { return _M_t . equal_range ( __x ); }

      std :: pair < const_iterator, const_iterator >
      equal_range ( const key_type & __x ) const
      { return _M_t . equal_range ( __x ); }

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator == ( const map < _K1, _T1, _C1, _A1 > &,
     const map < _K1, _T1, _C1, _A1 > & );

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator < ( const map < _K1, _T1, _C1, _A1 > &,
    const map < _K1, _T1, _C1, _A1 > & );
    };
# 835 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator == ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t == __y . _M_t; }
# 852 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator < ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
              const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t < __y . _M_t; }
# 859 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator != ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 866 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator > ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
              const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 873 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 880 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const map < _Key, _Tp, _Compare, _Alloc > & __x,
               const map < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 887 "/usr/include/c++/4.5/bits/stl_map.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline void
    swap ( map < _Key, _Tp, _Compare, _Alloc > & __x,
  map < _Key, _Tp, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 893 "/usr/include/c++/4.5/bits/stl_map.h" 3
}
# 63 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp,
     typename _Compare = std :: less < _Key >,
     typename _Alloc = std :: allocator < std :: pair < const _Key, _Tp > > >
    class multimap
    {
    public :
      typedef _Key key_type;
      typedef _Tp mapped_type;
      typedef std :: pair < const _Key, _Tp > value_type;
      typedef _Compare key_compare;
      typedef _Alloc allocator_type;

    private :

      typedef typename _Alloc :: value_type _Alloc_value_type;





    public :
      class value_compare
      : public std :: binary_function < value_type, value_type, bool >
      {
 friend class multimap < _Key, _Tp, _Compare, _Alloc >;
      protected :
 _Compare comp;

 value_compare ( _Compare __c )
 : comp ( __c ) { }

      public :
 bool operator ( ) ( const value_type & __x, const value_type & __y ) const
 { return comp ( __x . first, __y . first ); }
      };

    private :

      typedef typename _Alloc :: template rebind < value_type > :: other
        _Pair_alloc_type;

      typedef _Rb_tree < key_type, value_type, _Select1st < value_type >,
         key_compare, _Pair_alloc_type > _Rep_type;

      _Rep_type _M_t;

    public :


      typedef typename _Pair_alloc_type :: pointer pointer;
      typedef typename _Pair_alloc_type :: const_pointer const_pointer;
      typedef typename _Pair_alloc_type :: reference reference;
      typedef typename _Pair_alloc_type :: const_reference const_reference;
      typedef typename _Rep_type :: iterator iterator;
      typedef typename _Rep_type :: const_iterator const_iterator;
      typedef typename _Rep_type :: size_type size_type;
      typedef typename _Rep_type :: difference_type difference_type;
      typedef typename _Rep_type :: reverse_iterator reverse_iterator;
      typedef typename _Rep_type :: const_reverse_iterator const_reverse_iterator;






      multimap ( )
      : _M_t ( ) { }






      explicit
      multimap ( const _Compare & __comp,
        const allocator_type & __a = allocator_type ( ) )
      : _M_t ( __comp, __a ) { }

      multimap ( const multimap & __x )
      : _M_t ( __x . _M_t ) { }

      template < typename _InputIterator >
        multimap ( _InputIterator __first, _InputIterator __last )
 : _M_t ( )
        { _M_t . _M_insert_equal ( __first, __last ); }

      template < typename _InputIterator >
        multimap ( _InputIterator __first, _InputIterator __last,
   const _Compare & __comp,
   const allocator_type & __a = allocator_type ( ) )
        : _M_t ( __comp, __a )
        { _M_t . _M_insert_equal ( __first, __last ); }

      multimap &
      operator = ( const multimap & __x )
      {
 _M_t = __x . _M_t;
 return * this;
      }

      allocator_type
      get_allocator ( ) const
      { return _M_t . get_allocator ( ); }







      iterator
      begin ( )
      { return _M_t . begin ( ); }






      const_iterator
      begin ( ) const
      { return _M_t . begin ( ); }






      iterator
      end ( )
      { return _M_t . end ( ); }






      const_iterator
      end ( ) const
      { return _M_t . end ( ); }






      reverse_iterator
      rbegin ( )
      { return _M_t . rbegin ( ); }






      const_reverse_iterator
      rbegin ( ) const
      { return _M_t . rbegin ( ); }






      reverse_iterator
      rend ( )
      { return _M_t . rend ( ); }






      const_reverse_iterator
      rend ( ) const
      { return _M_t . rend ( ); }

      bool
      empty ( ) const
      { return _M_t . empty ( ); }


      size_type
      size ( ) const
      { return _M_t . size ( ); }


      size_type
      max_size ( ) const
      { return _M_t . max_size ( ); }

      iterator
      insert ( const value_type & __x )
      { return _M_t . _M_insert_equal ( __x ); }

      iterator
      insert ( iterator __position, const value_type & __x )
      { return _M_t . _M_insert_equal_ ( __position, __x ); }

      template < typename _InputIterator >
        void
        insert ( _InputIterator __first, _InputIterator __last )
        { _M_t . _M_insert_equal ( __first, __last ); }

      void
      erase ( iterator __position )
      { _M_t . erase ( __position ); }

      size_type
      erase ( const key_type & __x )
      { return _M_t . erase ( __x ); }

      void
      erase ( iterator __first, iterator __last )
      { _M_t . erase ( __first, __last ); }

      void
      swap ( multimap & __x )
      { _M_t . swap ( __x . _M_t ); }







      void
      clear ( )
      { _M_t . clear ( ); }






      key_compare
      key_comp ( ) const
      { return _M_t . key_comp ( ); }





      value_compare
      value_comp ( ) const
      { return value_compare ( _M_t . key_comp ( ) ); }

      iterator
      find ( const key_type & __x )
      { return _M_t . find ( __x ); }

      const_iterator
      find ( const key_type & __x ) const
      { return _M_t . find ( __x ); }






      size_type
      count ( const key_type & __x ) const
      { return _M_t . count ( __x ); }

      iterator
      lower_bound ( const key_type & __x )
      { return _M_t . lower_bound ( __x ); }

      const_iterator
      lower_bound ( const key_type & __x ) const
      { return _M_t . lower_bound ( __x ); }







      iterator
      upper_bound ( const key_type & __x )
      { return _M_t . upper_bound ( __x ); }







      const_iterator
      upper_bound ( const key_type & __x ) const
      { return _M_t . upper_bound ( __x ); }

      std :: pair < iterator, iterator >
      equal_range ( const key_type & __x )
      { return _M_t . equal_range ( __x ); }

      std :: pair < const_iterator, const_iterator >
      equal_range ( const key_type & __x ) const
      { return _M_t . equal_range ( __x ); }

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator == ( const multimap < _K1, _T1, _C1, _A1 > &,
     const multimap < _K1, _T1, _C1, _A1 > & );

      template < typename _K1, typename _T1, typename _C1, typename _A1 >
        friend bool
        operator < ( const multimap < _K1, _T1, _C1, _A1 > &,
    const multimap < _K1, _T1, _C1, _A1 > & );
  };
# 766 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator == ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t == __y . _M_t; }
# 783 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator < ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
              const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __x . _M_t < __y . _M_t; }
# 790 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator != ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x == __y ); }
# 797 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator > ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
              const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return __y < __x; }
# 804 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator <= ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __y < __x ); }
# 811 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline bool
    operator >= ( const multimap < _Key, _Tp, _Compare, _Alloc > & __x,
               const multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { return ! ( __x < __y ); }
# 818 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
template < typename _Key, typename _Tp, typename _Compare, typename _Alloc >
    inline void
    swap ( multimap < _Key, _Tp, _Compare, _Alloc > & __x,
         multimap < _Key, _Tp, _Compare, _Alloc > & __y )
    { __x . swap ( __y ); }
# 824 "/usr/include/c++/4.5/bits/stl_multimap.h" 3
}
# 43 "/usr/include/c++/4.5/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.5/bits/stringfwd.h" 3
template< class _Alloc> class allocator;
# 54 "/usr/include/c++/4.5/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 57 "/usr/include/c++/4.5/bits/stringfwd.h" 3
template < typename _CharT, typename _Traits = char_traits < _CharT >,
           typename _Alloc = allocator < _CharT > >
    class basic_string;
# 61 "/usr/include/c++/4.5/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 63 "/usr/include/c++/4.5/bits/stringfwd.h" 3
typedef basic_string< char, char_traits< char> , allocator< char> > string;
# 66 "/usr/include/c++/4.5/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 68 "/usr/include/c++/4.5/bits/stringfwd.h" 3
typedef basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstring;
# 83 "/usr/include/c++/4.5/bits/stringfwd.h" 3
}
# 352 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 3
typedef unsigned wint_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 134 "/usr/include/wchar.h" 3
struct tm;
# 144 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 147 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 152 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscat(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 155 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncat(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 160 "/usr/include/wchar.h" 3
extern "C" int wcscmp(const wchar_t * , const wchar_t * ) throw()
# 161 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 163 "/usr/include/wchar.h" 3
extern "C" int wcsncmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 164 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 169 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp(const wchar_t * , const wchar_t * ) throw();
# 172 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp(const wchar_t * , const wchar_t * , size_t ) throw();
# 179 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 182 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp_l(const wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 189 "/usr/include/wchar.h" 3
extern "C" int wcscoll(const wchar_t * , const wchar_t * ) throw();
# 193 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 203 "/usr/include/wchar.h" 3
extern "C" int wcscoll_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 209 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm_l(wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 213 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsdup(const wchar_t * ) throw() __attribute((__malloc__));
# 219 "/usr/include/wchar.h" 3
wchar_t *wcschr(wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 220 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 221 "/usr/include/wchar.h" 3
const wchar_t *wcschr(const wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 222 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 229 "/usr/include/wchar.h" 3
wchar_t *wcsrchr(wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 230 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 231 "/usr/include/wchar.h" 3
const wchar_t *wcsrchr(const wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 232 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 242 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcschrnul(const wchar_t * , wchar_t ) throw()
# 243 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 249 "/usr/include/wchar.h" 3
extern "C" size_t wcscspn(const wchar_t * , const wchar_t * ) throw()
# 250 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 253 "/usr/include/wchar.h" 3
extern "C" size_t wcsspn(const wchar_t * , const wchar_t * ) throw()
# 254 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 257 "/usr/include/wchar.h" 3
wchar_t *wcspbrk(wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 258 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
const wchar_t *wcspbrk(const wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 261 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 268 "/usr/include/wchar.h" 3
wchar_t *wcsstr(wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 269 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 270 "/usr/include/wchar.h" 3
const wchar_t *wcsstr(const wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 272 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 279 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcstok(wchar_t *__restrict__ , const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 284 "/usr/include/wchar.h" 3
extern "C" size_t wcslen(const wchar_t * ) throw() __attribute((__pure__));
# 290 "/usr/include/wchar.h" 3
wchar_t *wcswcs(wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 291 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 292 "/usr/include/wchar.h" 3
const wchar_t *wcswcs(const wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 294 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 303 "/usr/include/wchar.h" 3
extern "C" size_t wcsnlen(const wchar_t * , size_t ) throw()
# 304 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 311 "/usr/include/wchar.h" 3
wchar_t *wmemchr(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 312 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 313 "/usr/include/wchar.h" 3
const wchar_t *wmemchr(const wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 315 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 322 "/usr/include/wchar.h" 3
extern "C" int wmemcmp(const wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 324 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 327 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 332 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemmove(wchar_t * , const wchar_t * , size_t ) throw();
# 336 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemset(wchar_t * , wchar_t , size_t ) throw();
# 342 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmempcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 351 "/usr/include/wchar.h" 3
extern "C" wint_t btowc(int ) throw();
# 355 "/usr/include/wchar.h" 3
extern "C" int wctob(wint_t ) throw();
# 359 "/usr/include/wchar.h" 3
extern "C" int mbsinit(const mbstate_t * ) throw() __attribute((__pure__));
# 363 "/usr/include/wchar.h" 3
extern "C" size_t mbrtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t , mbstate_t * ) throw();
# 368 "/usr/include/wchar.h" 3
extern "C" size_t wcrtomb(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw();
# 372 "/usr/include/wchar.h" 3
extern "C" size_t __mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 374 "/usr/include/wchar.h" 3
extern "C" size_t mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 406 "/usr/include/wchar.h" 3
extern "C" size_t mbsrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 412 "/usr/include/wchar.h" 3
extern "C" size_t wcsrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 421 "/usr/include/wchar.h" 3
extern "C" size_t mbsnrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 427 "/usr/include/wchar.h" 3
extern "C" size_t wcsnrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 437 "/usr/include/wchar.h" 3
extern "C" int wcwidth(wchar_t ) throw();
# 441 "/usr/include/wchar.h" 3
extern "C" int wcswidth(const wchar_t * , size_t ) throw();
# 448 "/usr/include/wchar.h" 3
extern "C" double wcstod(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 455 "/usr/include/wchar.h" 3
extern "C" float wcstof(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 457 "/usr/include/wchar.h" 3
extern "C" long double wcstold(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 466 "/usr/include/wchar.h" 3
extern "C" long wcstol(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 471 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 481 "/usr/include/wchar.h" 3
extern "C" long long wcstoll(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 488 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 498 "/usr/include/wchar.h" 3
extern "C" long long wcstoq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 505 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstouq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 528 "/usr/include/wchar.h" 3
extern "C" long wcstol_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 532 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 537 "/usr/include/wchar.h" 3
extern "C" long long wcstoll_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 542 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 547 "/usr/include/wchar.h" 3
extern "C" double wcstod_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 551 "/usr/include/wchar.h" 3
extern "C" float wcstof_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 555 "/usr/include/wchar.h" 3
extern "C" long double wcstold_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 562 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 567 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 578 "/usr/include/wchar.h" 3
extern "C" __FILE *open_wmemstream(wchar_t ** , size_t * ) throw();
# 585 "/usr/include/wchar.h" 3
extern "C" int fwide(__FILE * , int ) throw();
# 592 "/usr/include/wchar.h" 3
extern "C" int fwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 599 "/usr/include/wchar.h" 3
extern "C" int wprintf(const wchar_t *__restrict__ , ...);
# 602 "/usr/include/wchar.h" 3
extern "C" int swprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw();
# 610 "/usr/include/wchar.h" 3
extern "C" int vfwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 618 "/usr/include/wchar.h" 3
extern "C" int vwprintf(const wchar_t *__restrict__ , __gnuc_va_list );
# 623 "/usr/include/wchar.h" 3
extern "C" int vswprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 633 "/usr/include/wchar.h" 3
extern "C" int fwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 640 "/usr/include/wchar.h" 3
extern "C" int wscanf(const wchar_t *__restrict__ , ...);
# 643 "/usr/include/wchar.h" 3
extern "C" int swscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , ...) throw();
# 687 "/usr/include/wchar.h" 3
extern "C" int vfwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 695 "/usr/include/wchar.h" 3
extern "C" int vwscanf(const wchar_t *__restrict__ , __gnuc_va_list );
# 699 "/usr/include/wchar.h" 3
extern "C" int vswscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 743 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc(__FILE * );
# 744 "/usr/include/wchar.h" 3
extern "C" wint_t getwc(__FILE * );
# 750 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar();
# 757 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc(wchar_t , __FILE * );
# 758 "/usr/include/wchar.h" 3
extern "C" wint_t putwc(wchar_t , __FILE * );
# 764 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar(wchar_t );
# 772 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 779 "/usr/include/wchar.h" 3
extern "C" int fputws(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 787 "/usr/include/wchar.h" 3
extern "C" wint_t ungetwc(wint_t , __FILE * );
# 799 "/usr/include/wchar.h" 3
extern "C" wint_t getwc_unlocked(__FILE * );
# 800 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar_unlocked();
# 808 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc_unlocked(__FILE * );
# 816 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc_unlocked(wchar_t , __FILE * );
# 825 "/usr/include/wchar.h" 3
extern "C" wint_t putwc_unlocked(wchar_t , __FILE * );
# 826 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar_unlocked(wchar_t );
# 835 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws_unlocked(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 844 "/usr/include/wchar.h" 3
extern "C" int fputws_unlocked(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 853 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ ) throw();
# 863 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime_l(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 65 "/usr/include/c++/4.5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.5/cwchar" 3
using ::mbstate_t;
# 69 "/usr/include/c++/4.5/cwchar" 3
}
# 139 "/usr/include/c++/4.5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.5/cwchar" 3
using ::wint_t;
# 143 "/usr/include/c++/4.5/cwchar" 3
using ::btowc;
# 144 "/usr/include/c++/4.5/cwchar" 3
using ::fgetwc;
# 145 "/usr/include/c++/4.5/cwchar" 3
using ::fgetws;
# 146 "/usr/include/c++/4.5/cwchar" 3
using ::fputwc;
# 147 "/usr/include/c++/4.5/cwchar" 3
using ::fputws;
# 148 "/usr/include/c++/4.5/cwchar" 3
using ::fwide;
# 149 "/usr/include/c++/4.5/cwchar" 3
using ::fwprintf;
# 150 "/usr/include/c++/4.5/cwchar" 3
using ::fwscanf;
# 151 "/usr/include/c++/4.5/cwchar" 3
using ::getwc;
# 152 "/usr/include/c++/4.5/cwchar" 3
using ::getwchar;
# 153 "/usr/include/c++/4.5/cwchar" 3
using ::mbrlen;
# 154 "/usr/include/c++/4.5/cwchar" 3
using ::mbrtowc;
# 155 "/usr/include/c++/4.5/cwchar" 3
using ::mbsinit;
# 156 "/usr/include/c++/4.5/cwchar" 3
using ::mbsrtowcs;
# 157 "/usr/include/c++/4.5/cwchar" 3
using ::putwc;
# 158 "/usr/include/c++/4.5/cwchar" 3
using ::putwchar;
# 160 "/usr/include/c++/4.5/cwchar" 3
using ::swprintf;
# 162 "/usr/include/c++/4.5/cwchar" 3
using ::swscanf;
# 163 "/usr/include/c++/4.5/cwchar" 3
using ::ungetwc;
# 164 "/usr/include/c++/4.5/cwchar" 3
using ::vfwprintf;
# 166 "/usr/include/c++/4.5/cwchar" 3
using ::vfwscanf;
# 169 "/usr/include/c++/4.5/cwchar" 3
using ::vswprintf;
# 172 "/usr/include/c++/4.5/cwchar" 3
using ::vswscanf;
# 174 "/usr/include/c++/4.5/cwchar" 3
using ::vwprintf;
# 176 "/usr/include/c++/4.5/cwchar" 3
using ::vwscanf;
# 178 "/usr/include/c++/4.5/cwchar" 3
using ::wcrtomb;
# 179 "/usr/include/c++/4.5/cwchar" 3
using ::wcscat;
# 180 "/usr/include/c++/4.5/cwchar" 3
using ::wcscmp;
# 181 "/usr/include/c++/4.5/cwchar" 3
using ::wcscoll;
# 182 "/usr/include/c++/4.5/cwchar" 3
using ::wcscpy;
# 183 "/usr/include/c++/4.5/cwchar" 3
using ::wcscspn;
# 184 "/usr/include/c++/4.5/cwchar" 3
using ::wcsftime;
# 185 "/usr/include/c++/4.5/cwchar" 3
using ::wcslen;
# 186 "/usr/include/c++/4.5/cwchar" 3
using ::wcsncat;
# 187 "/usr/include/c++/4.5/cwchar" 3
using ::wcsncmp;
# 188 "/usr/include/c++/4.5/cwchar" 3
using ::wcsncpy;
# 189 "/usr/include/c++/4.5/cwchar" 3
using ::wcsrtombs;
# 190 "/usr/include/c++/4.5/cwchar" 3
using ::wcsspn;
# 191 "/usr/include/c++/4.5/cwchar" 3
using ::wcstod;
# 193 "/usr/include/c++/4.5/cwchar" 3
using ::wcstof;
# 195 "/usr/include/c++/4.5/cwchar" 3
using ::wcstok;
# 196 "/usr/include/c++/4.5/cwchar" 3
using ::wcstol;
# 197 "/usr/include/c++/4.5/cwchar" 3
using ::wcstoul;
# 198 "/usr/include/c++/4.5/cwchar" 3
using ::wcsxfrm;
# 199 "/usr/include/c++/4.5/cwchar" 3
using ::wctob;
# 200 "/usr/include/c++/4.5/cwchar" 3
using ::wmemcmp;
# 201 "/usr/include/c++/4.5/cwchar" 3
using ::wmemcpy;
# 202 "/usr/include/c++/4.5/cwchar" 3
using ::wmemmove;
# 203 "/usr/include/c++/4.5/cwchar" 3
using ::wmemset;
# 204 "/usr/include/c++/4.5/cwchar" 3
using ::wprintf;
# 205 "/usr/include/c++/4.5/cwchar" 3
using ::wscanf;
# 206 "/usr/include/c++/4.5/cwchar" 3
using ::wcschr;
# 207 "/usr/include/c++/4.5/cwchar" 3
using ::wcspbrk;
# 208 "/usr/include/c++/4.5/cwchar" 3
using ::wcsrchr;
# 209 "/usr/include/c++/4.5/cwchar" 3
using ::wcsstr;
# 210 "/usr/include/c++/4.5/cwchar" 3
using ::wmemchr;
# 234 "/usr/include/c++/4.5/cwchar" 3
}
# 242 "/usr/include/c++/4.5/cwchar" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 249 "/usr/include/c++/4.5/cwchar" 3
using ::wcstold;
# 258 "/usr/include/c++/4.5/cwchar" 3
using ::wcstoll;
# 259 "/usr/include/c++/4.5/cwchar" 3
using ::wcstoull;
# 262 "/usr/include/c++/4.5/cwchar" 3
}
# 264 "/usr/include/c++/4.5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 266 "/usr/include/c++/4.5/cwchar" 3
using __gnu_cxx::wcstold;
# 267 "/usr/include/c++/4.5/cwchar" 3
using __gnu_cxx::wcstoll;
# 268 "/usr/include/c++/4.5/cwchar" 3
using __gnu_cxx::wcstoull;
# 270 "/usr/include/c++/4.5/cwchar" 3
}
# 70 "/usr/include/c++/4.5/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.5/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.5/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.5/bits/postypes.h" 3
template < typename _StateT >
    class fpos
    {
    private :
      streamoff _M_off;
      _StateT _M_state;

    public :




      fpos ( )
      : _M_off ( 0 ), _M_state ( ) { }

      fpos ( streamoff __off )
      : _M_off ( __off ), _M_state ( ) { }


      operator streamoff ( ) const { return _M_off; }


      void
      state ( _StateT __st )
      { _M_state = __st; }


      _StateT
      state ( ) const
      { return _M_state; }





      fpos &
      operator += ( streamoff __off )
      {
 _M_off += __off;
 return * this;
      }





      fpos &
      operator -= ( streamoff __off )
      {
 _M_off -= __off;
 return * this;
      }







      fpos
      operator + ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos += __off;
 return __pos;
      }







      fpos
      operator - ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator - ( const fpos & __other ) const
      { return _M_off - __other . _M_off; }
    };
# 214 "/usr/include/c++/4.5/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator == ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) == streamoff ( __rhs ); }
# 219 "/usr/include/c++/4.5/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator != ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) != streamoff ( __rhs ); }
# 228 "/usr/include/c++/4.5/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.5/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 239 "/usr/include/c++/4.5/bits/postypes.h" 3
}
# 52 "/usr/include/c++/4.5/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.5/bits/char_traits.h" 3
template< class _CharT>
# 65 "/usr/include/c++/4.5/bits/char_traits.h" 3
struct _Char_types {
# 67 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef unsigned long int_type;
# 68 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 69 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 70 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 71 "/usr/include/c++/4.5/bits/char_traits.h" 3
};
# 89 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types < _CharT > :: int_type int_type;
      typedef typename _Char_types < _CharT > :: pos_type pos_type;
      typedef typename _Char_types < _CharT > :: off_type off_type;
      typedef typename _Char_types < _CharT > :: state_type state_type;

      static void
      assign ( char_type & __c1, const char_type & __c2 )
      { __c1 = __c2; }

      static bool
      eq ( const char_type & __c1, const char_type & __c2 )
      { return __c1 == __c2; }

      static bool
      lt ( const char_type & __c1, const char_type & __c2 )
      { return __c1 < __c2; }

      static int
      compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n );

      static std :: size_t
      length ( const char_type * __s );

      static const char_type *
      find ( const char_type * __s, std :: size_t __n, const char_type & __a );

      static char_type *
      move ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      copy ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      assign ( char_type * __s, std :: size_t __n, char_type __a );

      static char_type
      to_char_type ( const int_type & __c )
      { return static_cast < char_type > ( __c ); }

      static int_type
      to_int_type ( const char_type & __c )
      { return static_cast < int_type > ( __c ); }

      static bool
      eq_int_type ( const int_type & __c1, const int_type & __c2 )
      { return __c1 == __c2; }

      static int_type
      eof ( )
      { return static_cast < int_type > ( ( - 1 ) ); }

      static int_type
      not_eof ( const int_type & __c )
      { return ! eq_int_type ( __c, eof ( ) ) ? __c : to_int_type ( char_type ( ) ); }
    };
# 149 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    int
    char_traits < _CharT > ::
    compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
 if ( lt ( __s1 [ __i ], __s2 [ __i ] ) )
   return - 1;
 else if ( lt ( __s2 [ __i ], __s1 [ __i ] ) )
   return 1;
      return 0;
    }
# 162 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    std :: size_t
    char_traits < _CharT > ::
    length ( const char_type * __p )
    {
      std :: size_t __i = 0;
      while ( ! eq ( __p [ __i ], char_type ( ) ) )
        ++ __i;
      return __i;
    }
# 173 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    const typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    find ( const char_type * __s, std :: size_t __n, const char_type & __a )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
        if ( eq ( __s [ __i ], __a ) )
          return __s + __i;
      return 0;
    }
# 184 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    move ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      return static_cast < _CharT * > ( __builtin_memmove ( __s1, __s2,
          __n * sizeof ( char_type ) ) );
    }
# 193 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    copy ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {

      std :: copy ( __s2, __s2 + __n, __s1 );
      return __s1;
    }
# 203 "/usr/include/c++/4.5/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    assign ( char_type * __s, std :: size_t __n, char_type __a )
    {

      std :: fill_n ( __s, __n, __a );
      return __s;
    }
# 213 "/usr/include/c++/4.5/bits/char_traits.h" 3
}
# 215 "/usr/include/c++/4.5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 230 "/usr/include/c++/4.5/bits/char_traits.h" 3
template< class _CharT>
# 231 "/usr/include/c++/4.5/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 232 "/usr/include/c++/4.5/bits/char_traits.h" 3
};
# 237 "/usr/include/c++/4.5/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 239 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef char char_type;
# 240 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef int int_type;
# 241 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef streampos pos_type;
# 242 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef streamoff off_type;
# 243 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 246 "/usr/include/c++/4.5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 250 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 254 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 255 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 258 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 262 "/usr/include/c++/4.5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 263 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 266 "/usr/include/c++/4.5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 267 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 270 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 275 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 278 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 279 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 282 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 283 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 288 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 289 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< int_type>((static_cast< unsigned char>(__c))); }
# 292 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 293 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 296 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type eof()
# 297 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< int_type>((-1)); }
# 300 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 301 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 302 "/usr/include/c++/4.5/bits/char_traits.h" 3
};
# 308 "/usr/include/c++/4.5/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 310 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef wchar_t char_type;
# 311 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef wint_t int_type;
# 312 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef streamoff off_type;
# 313 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 314 "/usr/include/c++/4.5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 317 "/usr/include/c++/4.5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 321 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 325 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 326 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 329 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 330 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 333 "/usr/include/c++/4.5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 334 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wcslen(__s); }
# 337 "/usr/include/c++/4.5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 338 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 341 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 346 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 349 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 350 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 353 "/usr/include/c++/4.5/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 354 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 357 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 358 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 361 "/usr/include/c++/4.5/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 362 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 365 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type eof()
# 366 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 369 "/usr/include/c++/4.5/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 370 "/usr/include/c++/4.5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? (0) : __c; }
# 371 "/usr/include/c++/4.5/bits/char_traits.h" 3
};
# 374 "/usr/include/c++/4.5/bits/char_traits.h" 3
}
# 28 "/usr/include/bits/locale.h" 3
enum {
# 29 "/usr/include/bits/locale.h" 3
__LC_CTYPE,
# 30 "/usr/include/bits/locale.h" 3
__LC_NUMERIC,
# 31 "/usr/include/bits/locale.h" 3
__LC_TIME,
# 32 "/usr/include/bits/locale.h" 3
__LC_COLLATE,
# 33 "/usr/include/bits/locale.h" 3
__LC_MONETARY,
# 34 "/usr/include/bits/locale.h" 3
__LC_MESSAGES,
# 35 "/usr/include/bits/locale.h" 3
__LC_ALL,
# 36 "/usr/include/bits/locale.h" 3
__LC_PAPER,
# 37 "/usr/include/bits/locale.h" 3
__LC_NAME,
# 38 "/usr/include/bits/locale.h" 3
__LC_ADDRESS,
# 39 "/usr/include/bits/locale.h" 3
__LC_TELEPHONE,
# 40 "/usr/include/bits/locale.h" 3
__LC_MEASUREMENT,
# 41 "/usr/include/bits/locale.h" 3
__LC_IDENTIFICATION
# 42 "/usr/include/bits/locale.h" 3
};
# 54 "/usr/include/locale.h" 3
extern "C" { struct lconv {
# 58 "/usr/include/locale.h" 3
char *decimal_point;
# 59 "/usr/include/locale.h" 3
char *thousands_sep;
# 65 "/usr/include/locale.h" 3
char *grouping;
# 71 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 72 "/usr/include/locale.h" 3
char *currency_symbol;
# 73 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 74 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 75 "/usr/include/locale.h" 3
char *mon_grouping;
# 76 "/usr/include/locale.h" 3
char *positive_sign;
# 77 "/usr/include/locale.h" 3
char *negative_sign;
# 78 "/usr/include/locale.h" 3
char int_frac_digits;
# 79 "/usr/include/locale.h" 3
char frac_digits;
# 81 "/usr/include/locale.h" 3
char p_cs_precedes;
# 83 "/usr/include/locale.h" 3
char p_sep_by_space;
# 85 "/usr/include/locale.h" 3
char n_cs_precedes;
# 87 "/usr/include/locale.h" 3
char n_sep_by_space;
# 94 "/usr/include/locale.h" 3
char p_sign_posn;
# 95 "/usr/include/locale.h" 3
char n_sign_posn;
# 98 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 100 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 102 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 104 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 111 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 112 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 121 "/usr/include/locale.h" 3
}; }
# 125 "/usr/include/locale.h" 3
extern "C" char *setlocale(int , const char * ) throw();
# 128 "/usr/include/locale.h" 3
extern "C" lconv *localeconv() throw();
# 152 "/usr/include/locale.h" 3
extern "C" __locale_t newlocale(int , const char * , __locale_t ) throw();
# 187 "/usr/include/locale.h" 3
extern "C" __locale_t duplocale(__locale_t ) throw();
# 191 "/usr/include/locale.h" 3
extern "C" void freelocale(__locale_t ) throw();
# 198 "/usr/include/locale.h" 3
extern "C" __locale_t uselocale(__locale_t ) throw();
# 53 "/usr/include/c++/4.5/clocale" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.5/clocale" 3
using ::lconv;
# 56 "/usr/include/c++/4.5/clocale" 3
using ::setlocale;
# 57 "/usr/include/c++/4.5/clocale" 3
using ::localeconv;
# 59 "/usr/include/c++/4.5/clocale" 3
}
# 50 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 54 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 57 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 66 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 67 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__out, const int
# 68 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 69 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__fmt, ...)
# 70 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
{
# 72 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 85 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_list __args;
# 86 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_start(__args,__fmt);
# 89 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 94 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_end(__args);
# 97 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 105 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
return __ret;
# 106 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 108 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 44 "/usr/include/c++/4.5/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.5/iosfwd" 3
class ios_base;
# 76 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ios;
# 79 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_streambuf;
# 82 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_istream;
# 85 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ostream;
# 88 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_iostream;
# 91 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 92 "/usr/include/c++/4.5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 95 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 96 "/usr/include/c++/4.5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 99 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 100 "/usr/include/c++/4.5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 103 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 104 "/usr/include/c++/4.5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 107 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 110 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 113 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 116 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 119 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class istreambuf_iterator;
# 122 "/usr/include/c++/4.5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class ostreambuf_iterator;
# 128 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ios< char, char_traits< char> > ios;
# 129 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_streambuf< char, char_traits< char> > streambuf;
# 130 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_istream< char, char_traits< char> > istream;
# 131 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ostream< char, char_traits< char> > ostream;
# 132 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_iostream< char, char_traits< char> > iostream;
# 133 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_stringbuf< char, char_traits< char> , allocator< char> > stringbuf;
# 134 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_istringstream< char, char_traits< char> , allocator< char> > istringstream;
# 135 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ostringstream< char, char_traits< char> , allocator< char> > ostringstream;
# 136 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_stringstream< char, char_traits< char> , allocator< char> > stringstream;
# 137 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_filebuf< char, char_traits< char> > filebuf;
# 138 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ifstream< char, char_traits< char> > ifstream;
# 139 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ofstream< char, char_traits< char> > ofstream;
# 140 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_fstream< char, char_traits< char> > fstream;
# 143 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ios< wchar_t, char_traits< wchar_t> > wios;
# 144 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_streambuf< wchar_t, char_traits< wchar_t> > wstreambuf;
# 145 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_istream< wchar_t, char_traits< wchar_t> > wistream;
# 146 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ostream< wchar_t, char_traits< wchar_t> > wostream;
# 147 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_iostream< wchar_t, char_traits< wchar_t> > wiostream;
# 148 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_stringbuf< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringbuf;
# 149 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_istringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wistringstream;
# 150 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ostringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wostringstream;
# 151 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_stringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringstream;
# 152 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_filebuf< wchar_t, char_traits< wchar_t> > wfilebuf;
# 153 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ifstream< wchar_t, char_traits< wchar_t> > wifstream;
# 154 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_ofstream< wchar_t, char_traits< wchar_t> > wofstream;
# 155 "/usr/include/c++/4.5/iosfwd" 3
typedef basic_fstream< wchar_t, char_traits< wchar_t> > wfstream;
# 159 "/usr/include/c++/4.5/iosfwd" 3
}
# 49 "/usr/include/ctype.h" 3
enum {
# 50 "/usr/include/ctype.h" 3
_ISupper = 256,
# 51 "/usr/include/ctype.h" 3
_ISlower = 512,
# 52 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 53 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 54 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 55 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 56 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 57 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 58 "/usr/include/ctype.h" 3
_ISblank = 1,
# 59 "/usr/include/ctype.h" 3
_IScntrl,
# 60 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 61 "/usr/include/ctype.h" 3
_ISalnum = 8
# 62 "/usr/include/ctype.h" 3
};
# 81 "/usr/include/ctype.h" 3
extern "C" const unsigned short **__ctype_b_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_tolower_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 85 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_toupper_loc() throw()
# 86 "/usr/include/ctype.h" 3
 __attribute((const));
# 102 "/usr/include/ctype.h" 3
extern "C" int isalnum(int) throw();
# 103 "/usr/include/ctype.h" 3
extern "C" int isalpha(int) throw();
# 104 "/usr/include/ctype.h" 3
extern "C" int iscntrl(int) throw();
# 105 "/usr/include/ctype.h" 3
extern "C" int isdigit(int) throw();
# 106 "/usr/include/ctype.h" 3
extern "C" int islower(int) throw();
# 107 "/usr/include/ctype.h" 3
extern "C" int isgraph(int) throw();
# 108 "/usr/include/ctype.h" 3
extern "C" int isprint(int) throw();
# 109 "/usr/include/ctype.h" 3
extern "C" int ispunct(int) throw();
# 110 "/usr/include/ctype.h" 3
extern "C" int isspace(int) throw();
# 111 "/usr/include/ctype.h" 3
extern "C" int isupper(int) throw();
# 112 "/usr/include/ctype.h" 3
extern "C" int isxdigit(int) throw();
# 116 "/usr/include/ctype.h" 3
extern "C" int tolower(int ) throw();
# 119 "/usr/include/ctype.h" 3
extern "C" int toupper(int ) throw();
# 128 "/usr/include/ctype.h" 3
extern "C" int isblank(int) throw();
# 135 "/usr/include/ctype.h" 3
extern "C" int isctype(int , int ) throw();
# 142 "/usr/include/ctype.h" 3
extern "C" int isascii(int ) throw();
# 146 "/usr/include/ctype.h" 3
extern "C" int toascii(int ) throw();
# 150 "/usr/include/ctype.h" 3
extern "C" int _toupper(int) throw();
# 151 "/usr/include/ctype.h" 3
extern "C" int _tolower(int) throw();
# 247 "/usr/include/ctype.h" 3
extern "C" int isalnum_l(int, __locale_t) throw();
# 248 "/usr/include/ctype.h" 3
extern "C" int isalpha_l(int, __locale_t) throw();
# 249 "/usr/include/ctype.h" 3
extern "C" int iscntrl_l(int, __locale_t) throw();
# 250 "/usr/include/ctype.h" 3
extern "C" int isdigit_l(int, __locale_t) throw();
# 251 "/usr/include/ctype.h" 3
extern "C" int islower_l(int, __locale_t) throw();
# 252 "/usr/include/ctype.h" 3
extern "C" int isgraph_l(int, __locale_t) throw();
# 253 "/usr/include/ctype.h" 3
extern "C" int isprint_l(int, __locale_t) throw();
# 254 "/usr/include/ctype.h" 3
extern "C" int ispunct_l(int, __locale_t) throw();
# 255 "/usr/include/ctype.h" 3
extern "C" int isspace_l(int, __locale_t) throw();
# 256 "/usr/include/ctype.h" 3
extern "C" int isupper_l(int, __locale_t) throw();
# 257 "/usr/include/ctype.h" 3
extern "C" int isxdigit_l(int, __locale_t) throw();
# 259 "/usr/include/ctype.h" 3
extern "C" int isblank_l(int, __locale_t) throw();
# 263 "/usr/include/ctype.h" 3
extern "C" int __tolower_l(int , __locale_t ) throw();
# 264 "/usr/include/ctype.h" 3
extern "C" int tolower_l(int , __locale_t ) throw();
# 267 "/usr/include/ctype.h" 3
extern "C" int __toupper_l(int , __locale_t ) throw();
# 268 "/usr/include/ctype.h" 3
extern "C" int toupper_l(int , __locale_t ) throw();
# 64 "/usr/include/c++/4.5/cctype" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.5/cctype" 3
using ::isalnum;
# 67 "/usr/include/c++/4.5/cctype" 3
using ::isalpha;
# 68 "/usr/include/c++/4.5/cctype" 3
using ::iscntrl;
# 69 "/usr/include/c++/4.5/cctype" 3
using ::isdigit;
# 70 "/usr/include/c++/4.5/cctype" 3
using ::isgraph;
# 71 "/usr/include/c++/4.5/cctype" 3
using ::islower;
# 72 "/usr/include/c++/4.5/cctype" 3
using ::isprint;
# 73 "/usr/include/c++/4.5/cctype" 3
using ::ispunct;
# 74 "/usr/include/c++/4.5/cctype" 3
using ::isspace;
# 75 "/usr/include/c++/4.5/cctype" 3
using ::isupper;
# 76 "/usr/include/c++/4.5/cctype" 3
using ::isxdigit;
# 77 "/usr/include/c++/4.5/cctype" 3
using ::tolower;
# 78 "/usr/include/c++/4.5/cctype" 3
using ::toupper;
# 80 "/usr/include/c++/4.5/cctype" 3
}
# 46 "/usr/include/c++/4.5/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.5/bits/localefwd.h" 3
class locale;
# 57 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _Facet> bool has_facet(const locale &) throw();
# 61 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _Facet> const _Facet &use_facet(const locale &);
# 66 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isspace(_CharT, const locale &);
# 70 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isprint(_CharT, const locale &);
# 74 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool iscntrl(_CharT, const locale &);
# 78 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isupper(_CharT, const locale &);
# 82 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool islower(_CharT, const locale &);
# 86 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isalpha(_CharT, const locale &);
# 90 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isdigit(_CharT, const locale &);
# 94 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool ispunct(_CharT, const locale &);
# 98 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isxdigit(_CharT, const locale &);
# 102 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isalnum(_CharT, const locale &);
# 106 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> bool isgraph(_CharT, const locale &);
# 110 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> _CharT toupper(_CharT, const locale &);
# 114 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> _CharT tolower(_CharT, const locale &);
# 119 "/usr/include/c++/4.5/bits/localefwd.h" 3
class ctype_base;
# 120 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class ctype;
# 122 "/usr/include/c++/4.5/bits/localefwd.h" 3
template<> class ctype< char> ;
# 124 "/usr/include/c++/4.5/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 126 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class ctype_byname;
# 130 "/usr/include/c++/4.5/bits/localefwd.h" 3
class codecvt_base;
# 131 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 133 "/usr/include/c++/4.5/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 135 "/usr/include/c++/4.5/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 137 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 142 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class num_get;
# 144 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class num_put;
# 147 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class numpunct;
# 148 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class numpunct_byname;
# 151 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class collate;
# 153 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class collate_byname;
# 157 "/usr/include/c++/4.5/bits/localefwd.h" 3
class time_base;
# 158 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 160 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 162 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 164 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 168 "/usr/include/c++/4.5/bits/localefwd.h" 3
class money_base;
# 170 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 172 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 175 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 177 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 181 "/usr/include/c++/4.5/bits/localefwd.h" 3
class messages_base;
# 182 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class messages;
# 184 "/usr/include/c++/4.5/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 187 "/usr/include/c++/4.5/bits/localefwd.h" 3
}
# 38 "/usr/include/c++/4.5/cxxabi-forced.h" 3
namespace __cxxabiv1 {
# 47 "/usr/include/c++/4.5/cxxabi-forced.h" 3
class __forced_unwind {
# 49 "/usr/include/c++/4.5/cxxabi-forced.h" 3
virtual ~__forced_unwind() throw();
# 52 "/usr/include/c++/4.5/cxxabi-forced.h" 3
virtual void __pure_dummy() = 0;
# 53 "/usr/include/c++/4.5/cxxabi-forced.h" 3
};
# 54 "/usr/include/c++/4.5/cxxabi-forced.h" 3
}
# 38 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_write ( basic_ostream < _CharT, _Traits > & __out,
      const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const streamsize __put = __out . rdbuf ( ) -> sputn ( __s, __n );
      if ( __put != __n )
 __out . setstate ( __ios_base :: badbit );
    }
# 53 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_fill ( basic_ostream < _CharT, _Traits > & __out, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const _CharT __c = __out . fill ( );
      for (; __n > 0; -- __n )
 {
   const typename _Traits :: int_type __put = __out . rdbuf ( ) -> sputc ( __c );
   if ( _Traits :: eq_int_type ( __put, _Traits :: eof ( ) ) )
     {
       __out . setstate ( __ios_base :: badbit );
       break;
     }
 }
    }
# 72 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    __ostream_insert ( basic_ostream < _CharT, _Traits > & __out,
       const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      typename __ostream_type :: sentry __cerb ( __out );
      if ( __cerb )
 {
   try
     {
       const streamsize __w = __out . width ( );
       if ( __w > __n )
  {
    const bool __left = ( ( __out . flags ( )
     & __ios_base :: adjustfield )
           == __ios_base :: left );
    if ( ! __left )
      __ostream_fill ( __out, __w - __n );
    if ( __out . good ( ) )
      __ostream_write ( __out, __s, __n );
    if ( __left && __out . good ( ) )
      __ostream_fill ( __out, __w - __n );
  }
       else
  __ostream_write ( __out, __s, __n );
       __out . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( __ios_base :: badbit ); }
 }
      return __out;
    }
# 117 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
extern template basic_ostream< char, char_traits< char> > &__ostream_insert(basic_ostream< char, char_traits< char> > & , const char * , streamsize );
# 120 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &__ostream_insert(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * , streamsize );
# 125 "/usr/include/c++/4.5/bits/ostream_insert.h" 3
}
# 74 "/usr/include/bits/sched.h" 3
struct sched_param {
# 76 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 77 "/usr/include/bits/sched.h" 3
};
# 83 "/usr/include/bits/sched.h" 3
extern "C" int clone(int (* )(void * ), void * , int , void * , ...) throw();
# 87 "/usr/include/bits/sched.h" 3
extern "C" int unshare(int ) throw();
# 90 "/usr/include/bits/sched.h" 3
extern "C" int sched_getcpu() throw();
# 101 "/usr/include/bits/sched.h" 3
struct __sched_param {
# 103 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 104 "/usr/include/bits/sched.h" 3
};
# 116 "/usr/include/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 126 "/usr/include/bits/sched.h" 3
typedef
# 124 "/usr/include/bits/sched.h" 3
struct {
# 125 "/usr/include/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 126 "/usr/include/bits/sched.h" 3
} cpu_set_t;
# 201 "/usr/include/bits/sched.h" 3
extern "C" int __sched_cpucount(size_t , const cpu_set_t * ) throw();
# 203 "/usr/include/bits/sched.h" 3
extern "C" cpu_set_t *__sched_cpualloc(size_t ) throw();
# 204 "/usr/include/bits/sched.h" 3
extern "C" void __sched_cpufree(cpu_set_t * ) throw();
# 51 "/usr/include/sched.h" 3
extern "C" int sched_setparam(__pid_t , const sched_param * ) throw();
# 55 "/usr/include/sched.h" 3
extern "C" int sched_getparam(__pid_t , sched_param * ) throw();
# 58 "/usr/include/sched.h" 3
extern "C" int sched_setscheduler(__pid_t , int , const sched_param * ) throw();
# 62 "/usr/include/sched.h" 3
extern "C" int sched_getscheduler(__pid_t ) throw();
# 65 "/usr/include/sched.h" 3
extern "C" int sched_yield() throw();
# 68 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_max(int ) throw();
# 71 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_min(int ) throw();
# 74 "/usr/include/sched.h" 3
extern "C" int sched_rr_get_interval(__pid_t , timespec * ) throw();
# 118 "/usr/include/sched.h" 3
extern "C" int sched_setaffinity(__pid_t , size_t , const cpu_set_t * ) throw();
# 122 "/usr/include/sched.h" 3
extern "C" int sched_getaffinity(__pid_t , size_t , cpu_set_t * ) throw();
# 32 "/usr/include/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 35 "/usr/include/pthread.h" 3
enum {
# 36 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 38 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 40 "/usr/include/pthread.h" 3
};
# 45 "/usr/include/pthread.h" 3
enum {
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 48 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 49 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 54 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 55 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 59 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 61 "/usr/include/pthread.h" 3
};
# 67 "/usr/include/pthread.h" 3
enum {
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 70 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 71 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 72 "/usr/include/pthread.h" 3
};
# 79 "/usr/include/pthread.h" 3
enum {
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 81 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 82 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 83 "/usr/include/pthread.h" 3
};
# 116 "/usr/include/pthread.h" 3
enum {
# 117 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 118 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 120 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 121 "/usr/include/pthread.h" 3
};
# 148 "/usr/include/pthread.h" 3
enum {
# 149 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 151 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 153 "/usr/include/pthread.h" 3
};
# 158 "/usr/include/pthread.h" 3
enum {
# 159 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 161 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 163 "/usr/include/pthread.h" 3
};
# 168 "/usr/include/pthread.h" 3
enum {
# 169 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 171 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 173 "/usr/include/pthread.h" 3
};
# 182 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 184 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 185 "/usr/include/pthread.h" 3
void *__arg;
# 186 "/usr/include/pthread.h" 3
int __canceltype;
# 187 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 188 "/usr/include/pthread.h" 3
};
# 192 "/usr/include/pthread.h" 3
enum {
# 193 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 195 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 197 "/usr/include/pthread.h" 3
};
# 199 "/usr/include/pthread.h" 3
enum {
# 200 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 202 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 204 "/usr/include/pthread.h" 3
};
# 225 "/usr/include/pthread.h" 3
extern "C" int pthread_create(pthread_t *__restrict__ , const pthread_attr_t *__restrict__ , void *(* )(void *), void *__restrict__ ) throw()
# 228 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 234 "/usr/include/pthread.h" 3
extern "C" void pthread_exit(void * ) __attribute((__noreturn__));
# 242 "/usr/include/pthread.h" 3
extern "C" int pthread_join(pthread_t , void ** );
# 247 "/usr/include/pthread.h" 3
extern "C" int pthread_tryjoin_np(pthread_t , void ** ) throw();
# 255 "/usr/include/pthread.h" 3
extern "C" int pthread_timedjoin_np(pthread_t , void ** , const timespec * );
# 263 "/usr/include/pthread.h" 3
extern "C" int pthread_detach(pthread_t ) throw();
# 267 "/usr/include/pthread.h" 3
extern "C" pthread_t pthread_self() throw() __attribute((const));
# 270 "/usr/include/pthread.h" 3
extern "C" int pthread_equal(pthread_t , pthread_t ) throw();
# 278 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_init(pthread_attr_t * ) throw() __attribute((__nonnull__(1)));
# 281 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_destroy(pthread_attr_t * ) throw()
# 282 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 285 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getdetachstate(const pthread_attr_t * , int * ) throw()
# 287 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 290 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setdetachstate(pthread_attr_t * , int ) throw()
# 292 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 296 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getguardsize(const pthread_attr_t * , size_t * ) throw()
# 298 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 301 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setguardsize(pthread_attr_t * , size_t ) throw()
# 303 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 307 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ , sched_param *__restrict__ ) throw()
# 310 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 313 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedparam(pthread_attr_t *__restrict__ , const sched_param *__restrict__ ) throw()
# 315 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 318 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 320 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 323 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedpolicy(pthread_attr_t * , int ) throw()
# 324 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 327 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 329 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 332 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setinheritsched(pthread_attr_t * , int ) throw()
# 334 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 338 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getscope(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 340 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 343 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setscope(pthread_attr_t * , int ) throw()
# 344 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 347 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ , void **__restrict__ ) throw()
# 349 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 355 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstackaddr(pthread_attr_t * , void * ) throw()
# 357 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 360 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ , size_t *__restrict__ ) throw()
# 362 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 367 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstacksize(pthread_attr_t * , size_t ) throw()
# 369 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 373 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstack(const pthread_attr_t *__restrict__ , void **__restrict__ , size_t *__restrict__ ) throw()
# 376 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 381 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstack(pthread_attr_t * , void * , size_t ) throw()
# 382 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 388 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setaffinity_np(pthread_attr_t * , size_t , const cpu_set_t * ) throw()
# 391 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 395 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getaffinity_np(const pthread_attr_t * , size_t , cpu_set_t * ) throw()
# 398 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 404 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_np(pthread_t , pthread_attr_t * ) throw()
# 405 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 413 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedparam(pthread_t , int , const sched_param * ) throw()
# 415 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 418 "/usr/include/pthread.h" 3
extern "C" int pthread_getschedparam(pthread_t , int *__restrict__ , sched_param *__restrict__ ) throw()
# 421 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 424 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedprio(pthread_t , int ) throw();
# 430 "/usr/include/pthread.h" 3
extern "C" int pthread_getname_np(pthread_t , char * , size_t ) throw()
# 432 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 435 "/usr/include/pthread.h" 3
extern "C" int pthread_setname_np(pthread_t , const char * ) throw()
# 436 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 442 "/usr/include/pthread.h" 3
extern "C" int pthread_getconcurrency() throw();
# 445 "/usr/include/pthread.h" 3
extern "C" int pthread_setconcurrency(int ) throw();
# 453 "/usr/include/pthread.h" 3
extern "C" int pthread_yield() throw();
# 458 "/usr/include/pthread.h" 3
extern "C" int pthread_setaffinity_np(pthread_t , size_t , const cpu_set_t * ) throw()
# 460 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 463 "/usr/include/pthread.h" 3
extern "C" int pthread_getaffinity_np(pthread_t , size_t , cpu_set_t * ) throw()
# 465 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 478 "/usr/include/pthread.h" 3
extern "C" int pthread_once(pthread_once_t * , void (* )(void))
# 479 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 490 "/usr/include/pthread.h" 3
extern "C" int pthread_setcancelstate(int , int * );
# 494 "/usr/include/pthread.h" 3
extern "C" int pthread_setcanceltype(int , int * );
# 497 "/usr/include/pthread.h" 3
extern "C" int pthread_cancel(pthread_t );
# 502 "/usr/include/pthread.h" 3
extern "C" void pthread_testcancel();
# 515 "/usr/include/pthread.h" 3
extern "C" { typedef
# 508 "/usr/include/pthread.h" 3
struct {
# 510 "/usr/include/pthread.h" 3
struct {
# 511 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 512 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 513 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 514 "/usr/include/pthread.h" 3
void *__pad[4];
# 515 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__)); }
# 524 "/usr/include/pthread.h" 3
extern "C" { struct __pthread_cleanup_frame {
# 526 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 527 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 528 "/usr/include/pthread.h" 3
int __do_it;
# 529 "/usr/include/pthread.h" 3
int __cancel_type;
# 530 "/usr/include/pthread.h" 3
}; }
# 535 "/usr/include/pthread.h" 3
extern "C" { class __pthread_cleanup_class {
# 537 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 538 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 539 "/usr/include/pthread.h" 3
int __do_it;
# 540 "/usr/include/pthread.h" 3
int __cancel_type;
# 543 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 544 "/usr/include/pthread.h" 3
{ }
# 545 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 546 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 547 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 548 "/usr/include/pthread.h" 3
}
# 549 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 550 "/usr/include/pthread.h" 3
}; }
# 726 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 727 "/usr/include/pthread.h" 3
extern "C" int __sigsetjmp(__jmp_buf_tag * , int ) throw();
# 733 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * ) throw()
# 735 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 738 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_destroy(pthread_mutex_t * ) throw()
# 739 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 742 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_trylock(pthread_mutex_t * ) throw()
# 743 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 746 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_lock(pthread_mutex_t * ) throw()
# 747 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 751 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ , const timespec *__restrict__ ) throw()
# 753 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 757 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_unlock(pthread_mutex_t * ) throw()
# 758 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 762 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ , int *__restrict__ ) throw()
# 765 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 769 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ , int , int *__restrict__ ) throw()
# 772 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 777 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent(pthread_mutex_t * ) throw()
# 778 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 780 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 781 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 790 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_init(pthread_mutexattr_t * ) throw()
# 791 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 794 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_destroy(pthread_mutexattr_t * ) throw()
# 795 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 798 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 801 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 804 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setpshared(pthread_mutexattr_t * , int ) throw()
# 806 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 810 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 812 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 817 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_settype(pthread_mutexattr_t * , int ) throw()
# 818 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 822 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 825 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 829 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprotocol(pthread_mutexattr_t * , int ) throw()
# 831 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 834 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 837 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 840 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * , int ) throw()
# 842 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 846 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust(const pthread_mutexattr_t * , int * ) throw()
# 848 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 850 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * , int * ) throw()
# 852 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 856 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust(pthread_mutexattr_t * , int ) throw()
# 858 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 860 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * , int ) throw()
# 862 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 872 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_init(pthread_rwlock_t *__restrict__ , const pthread_rwlockattr_t *__restrict__ ) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 877 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_destroy(pthread_rwlock_t * ) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 881 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_rdlock(pthread_rwlock_t * ) throw()
# 882 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 885 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_tryrdlock(pthread_rwlock_t * ) throw()
# 886 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 890 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 892 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 896 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_wrlock(pthread_rwlock_t * ) throw()
# 897 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 900 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_trywrlock(pthread_rwlock_t * ) throw()
# 901 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 905 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 907 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 911 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_unlock(pthread_rwlock_t * ) throw()
# 912 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 918 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_init(pthread_rwlockattr_t * ) throw()
# 919 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 922 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) throw()
# 923 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 926 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 929 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 932 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * , int ) throw()
# 934 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 937 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 940 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 943 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * , int ) throw()
# 944 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 952 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_init(pthread_cond_t *__restrict__ , const pthread_condattr_t *__restrict__ ) throw()
# 954 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 957 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_destroy(pthread_cond_t * ) throw()
# 958 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 961 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_signal(pthread_cond_t * ) throw()
# 962 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 965 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_broadcast(pthread_cond_t * ) throw()
# 966 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 973 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_wait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ )
# 975 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 984 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_timedwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , const timespec *__restrict__ )
# 987 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 992 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_init(pthread_condattr_t * ) throw()
# 993 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 996 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_destroy(pthread_condattr_t * ) throw()
# 997 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1000 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ , int *__restrict__ ) throw()
# 1003 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1006 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setpshared(pthread_condattr_t * , int ) throw()
# 1007 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1011 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ , __clockid_t *__restrict__ ) throw()
# 1014 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1017 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setclock(pthread_condattr_t * , __clockid_t ) throw()
# 1019 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1028 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_init(pthread_spinlock_t * , int ) throw()
# 1029 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1032 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_destroy(pthread_spinlock_t * ) throw()
# 1033 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1036 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_lock(pthread_spinlock_t * ) throw()
# 1037 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1040 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_trylock(pthread_spinlock_t * ) throw()
# 1041 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_unlock(pthread_spinlock_t * ) throw()
# 1045 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1052 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_init(pthread_barrier_t *__restrict__ , const pthread_barrierattr_t *__restrict__ , unsigned ) throw()
# 1055 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1058 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_destroy(pthread_barrier_t * ) throw()
# 1059 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1062 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_wait(pthread_barrier_t * ) throw()
# 1063 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1067 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_init(pthread_barrierattr_t * ) throw()
# 1068 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1071 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_destroy(pthread_barrierattr_t * ) throw()
# 1072 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1075 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ , int *__restrict__ ) throw()
# 1078 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1081 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_setpshared(pthread_barrierattr_t * , int ) throw()
# 1083 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1095 "/usr/include/pthread.h" 3
extern "C" int pthread_key_create(pthread_key_t * , void (* )(void *)) throw()
# 1097 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1100 "/usr/include/pthread.h" 3
extern "C" int pthread_key_delete(pthread_key_t ) throw();
# 1103 "/usr/include/pthread.h" 3
extern "C" void *pthread_getspecific(pthread_key_t ) throw();
# 1106 "/usr/include/pthread.h" 3
extern "C" int pthread_setspecific(pthread_key_t , const void * ) throw();
# 1112 "/usr/include/pthread.h" 3
extern "C" int pthread_getcpuclockid(pthread_t , __clockid_t * ) throw()
# 1114 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1129 "/usr/include/pthread.h" 3
extern "C" int pthread_atfork(void (* )(void), void (* )(void), void (* )(void)) throw();
# 268 "/usr/include/unistd.h" 3
extern "C" { typedef __intptr_t intptr_t; }
# 275 "/usr/include/unistd.h" 3
extern "C" { typedef __socklen_t socklen_t; }
# 288 "/usr/include/unistd.h" 3
extern "C" int access(const char * , int ) throw() __attribute((__nonnull__(1)));
# 293 "/usr/include/unistd.h" 3
extern "C" int euidaccess(const char * , int ) throw()
# 294 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 297 "/usr/include/unistd.h" 3
extern "C" int eaccess(const char * , int ) throw()
# 298 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/unistd.h" 3
extern "C" int faccessat(int , const char * , int , int ) throw()
# 306 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 331 "/usr/include/unistd.h" 3
extern "C" __off_t lseek(int , __off_t , int ) throw();
# 342 "/usr/include/unistd.h" 3
extern "C" __off64_t lseek64(int , __off64_t , int ) throw();
# 350 "/usr/include/unistd.h" 3
extern "C" int close(int );
# 357 "/usr/include/unistd.h" 3
extern "C" ssize_t read(int , void * , size_t );
# 363 "/usr/include/unistd.h" 3
extern "C" ssize_t write(int , const void * , size_t );
# 373 "/usr/include/unistd.h" 3
extern "C" ssize_t pread(int , void * , size_t , __off_t );
# 381 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite(int , const void * , size_t , __off_t );
# 401 "/usr/include/unistd.h" 3
extern "C" ssize_t pread64(int , void * , size_t , __off64_t );
# 405 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite64(int , const void * , size_t , __off64_t );
# 414 "/usr/include/unistd.h" 3
extern "C" int pipe(int [2]) throw();
# 419 "/usr/include/unistd.h" 3
extern "C" int pipe2(int [2], int ) throw();
# 429 "/usr/include/unistd.h" 3
extern "C" unsigned alarm(unsigned ) throw();
# 441 "/usr/include/unistd.h" 3
extern "C" unsigned sleep(unsigned );
# 449 "/usr/include/unistd.h" 3
extern "C" __useconds_t ualarm(__useconds_t , __useconds_t ) throw();
# 457 "/usr/include/unistd.h" 3
extern "C" int usleep(__useconds_t );
# 466 "/usr/include/unistd.h" 3
extern "C" int pause();
# 470 "/usr/include/unistd.h" 3
extern "C" int chown(const char * , __uid_t , __gid_t ) throw()
# 471 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 475 "/usr/include/unistd.h" 3
extern "C" int fchown(int , __uid_t , __gid_t ) throw();
# 480 "/usr/include/unistd.h" 3
extern "C" int lchown(const char * , __uid_t , __gid_t ) throw()
# 481 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 488 "/usr/include/unistd.h" 3
extern "C" int fchownat(int , const char * , __uid_t , __gid_t , int ) throw()
# 490 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 494 "/usr/include/unistd.h" 3
extern "C" int chdir(const char * ) throw() __attribute((__nonnull__(1)));
# 498 "/usr/include/unistd.h" 3
extern "C" int fchdir(int ) throw();
# 508 "/usr/include/unistd.h" 3
extern "C" char *getcwd(char * , size_t ) throw();
# 514 "/usr/include/unistd.h" 3
extern "C" char *get_current_dir_name() throw();
# 522 "/usr/include/unistd.h" 3
extern "C" char *getwd(char * ) throw()
# 523 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 528 "/usr/include/unistd.h" 3
extern "C" int dup(int ) throw();
# 531 "/usr/include/unistd.h" 3
extern "C" int dup2(int , int ) throw();
# 536 "/usr/include/unistd.h" 3
extern "C" int dup3(int , int , int ) throw();
# 540 "/usr/include/unistd.h" 3
extern "C" { extern char **__environ; }
# 542 "/usr/include/unistd.h" 3
extern "C" { extern char **environ; }
# 548 "/usr/include/unistd.h" 3
extern "C" int execve(const char * , char *const [], char *const []) throw()
# 549 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 554 "/usr/include/unistd.h" 3
extern "C" int fexecve(int , char *const [], char *const []) throw()
# 555 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 560 "/usr/include/unistd.h" 3
extern "C" int execv(const char * , char *const []) throw()
# 561 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 565 "/usr/include/unistd.h" 3
extern "C" int execle(const char * , const char * , ...) throw()
# 566 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 570 "/usr/include/unistd.h" 3
extern "C" int execl(const char * , const char * , ...) throw()
# 571 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 575 "/usr/include/unistd.h" 3
extern "C" int execvp(const char * , char *const []) throw()
# 576 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 581 "/usr/include/unistd.h" 3
extern "C" int execlp(const char * , const char * , ...) throw()
# 582 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 587 "/usr/include/unistd.h" 3
extern "C" int execvpe(const char * , char *const [], char *const []) throw()
# 589 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 595 "/usr/include/unistd.h" 3
extern "C" int nice(int ) throw();
# 600 "/usr/include/unistd.h" 3
extern "C" void _exit(int ) __attribute((__noreturn__));
# 27 "/usr/include/bits/confname.h" 3
enum {
# 28 "/usr/include/bits/confname.h" 3
_PC_LINK_MAX,
# 30 "/usr/include/bits/confname.h" 3
_PC_MAX_CANON,
# 32 "/usr/include/bits/confname.h" 3
_PC_MAX_INPUT,
# 34 "/usr/include/bits/confname.h" 3
_PC_NAME_MAX,
# 36 "/usr/include/bits/confname.h" 3
_PC_PATH_MAX,
# 38 "/usr/include/bits/confname.h" 3
_PC_PIPE_BUF,
# 40 "/usr/include/bits/confname.h" 3
_PC_CHOWN_RESTRICTED,
# 42 "/usr/include/bits/confname.h" 3
_PC_NO_TRUNC,
# 44 "/usr/include/bits/confname.h" 3
_PC_VDISABLE,
# 46 "/usr/include/bits/confname.h" 3
_PC_SYNC_IO,
# 48 "/usr/include/bits/confname.h" 3
_PC_ASYNC_IO,
# 50 "/usr/include/bits/confname.h" 3
_PC_PRIO_IO,
# 52 "/usr/include/bits/confname.h" 3
_PC_SOCK_MAXBUF,
# 54 "/usr/include/bits/confname.h" 3
_PC_FILESIZEBITS,
# 56 "/usr/include/bits/confname.h" 3
_PC_REC_INCR_XFER_SIZE,
# 58 "/usr/include/bits/confname.h" 3
_PC_REC_MAX_XFER_SIZE,
# 60 "/usr/include/bits/confname.h" 3
_PC_REC_MIN_XFER_SIZE,
# 62 "/usr/include/bits/confname.h" 3
_PC_REC_XFER_ALIGN,
# 64 "/usr/include/bits/confname.h" 3
_PC_ALLOC_SIZE_MIN,
# 66 "/usr/include/bits/confname.h" 3
_PC_SYMLINK_MAX,
# 68 "/usr/include/bits/confname.h" 3
_PC_2_SYMLINKS
# 70 "/usr/include/bits/confname.h" 3
};
# 74 "/usr/include/bits/confname.h" 3
enum {
# 75 "/usr/include/bits/confname.h" 3
_SC_ARG_MAX,
# 77 "/usr/include/bits/confname.h" 3
_SC_CHILD_MAX,
# 79 "/usr/include/bits/confname.h" 3
_SC_CLK_TCK,
# 81 "/usr/include/bits/confname.h" 3
_SC_NGROUPS_MAX,
# 83 "/usr/include/bits/confname.h" 3
_SC_OPEN_MAX,
# 85 "/usr/include/bits/confname.h" 3
_SC_STREAM_MAX,
# 87 "/usr/include/bits/confname.h" 3
_SC_TZNAME_MAX,
# 89 "/usr/include/bits/confname.h" 3
_SC_JOB_CONTROL,
# 91 "/usr/include/bits/confname.h" 3
_SC_SAVED_IDS,
# 93 "/usr/include/bits/confname.h" 3
_SC_REALTIME_SIGNALS,
# 95 "/usr/include/bits/confname.h" 3
_SC_PRIORITY_SCHEDULING,
# 97 "/usr/include/bits/confname.h" 3
_SC_TIMERS,
# 99 "/usr/include/bits/confname.h" 3
_SC_ASYNCHRONOUS_IO,
# 101 "/usr/include/bits/confname.h" 3
_SC_PRIORITIZED_IO,
# 103 "/usr/include/bits/confname.h" 3
_SC_SYNCHRONIZED_IO,
# 105 "/usr/include/bits/confname.h" 3
_SC_FSYNC,
# 107 "/usr/include/bits/confname.h" 3
_SC_MAPPED_FILES,
# 109 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK,
# 111 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK_RANGE,
# 113 "/usr/include/bits/confname.h" 3
_SC_MEMORY_PROTECTION,
# 115 "/usr/include/bits/confname.h" 3
_SC_MESSAGE_PASSING,
# 117 "/usr/include/bits/confname.h" 3
_SC_SEMAPHORES,
# 119 "/usr/include/bits/confname.h" 3
_SC_SHARED_MEMORY_OBJECTS,
# 121 "/usr/include/bits/confname.h" 3
_SC_AIO_LISTIO_MAX,
# 123 "/usr/include/bits/confname.h" 3
_SC_AIO_MAX,
# 125 "/usr/include/bits/confname.h" 3
_SC_AIO_PRIO_DELTA_MAX,
# 127 "/usr/include/bits/confname.h" 3
_SC_DELAYTIMER_MAX,
# 129 "/usr/include/bits/confname.h" 3
_SC_MQ_OPEN_MAX,
# 131 "/usr/include/bits/confname.h" 3
_SC_MQ_PRIO_MAX,
# 133 "/usr/include/bits/confname.h" 3
_SC_VERSION,
# 135 "/usr/include/bits/confname.h" 3
_SC_PAGESIZE,
# 138 "/usr/include/bits/confname.h" 3
_SC_RTSIG_MAX,
# 140 "/usr/include/bits/confname.h" 3
_SC_SEM_NSEMS_MAX,
# 142 "/usr/include/bits/confname.h" 3
_SC_SEM_VALUE_MAX,
# 144 "/usr/include/bits/confname.h" 3
_SC_SIGQUEUE_MAX,
# 146 "/usr/include/bits/confname.h" 3
_SC_TIMER_MAX,
# 151 "/usr/include/bits/confname.h" 3
_SC_BC_BASE_MAX,
# 153 "/usr/include/bits/confname.h" 3
_SC_BC_DIM_MAX,
# 155 "/usr/include/bits/confname.h" 3
_SC_BC_SCALE_MAX,
# 157 "/usr/include/bits/confname.h" 3
_SC_BC_STRING_MAX,
# 159 "/usr/include/bits/confname.h" 3
_SC_COLL_WEIGHTS_MAX,
# 161 "/usr/include/bits/confname.h" 3
_SC_EQUIV_CLASS_MAX,
# 163 "/usr/include/bits/confname.h" 3
_SC_EXPR_NEST_MAX,
# 165 "/usr/include/bits/confname.h" 3
_SC_LINE_MAX,
# 167 "/usr/include/bits/confname.h" 3
_SC_RE_DUP_MAX,
# 169 "/usr/include/bits/confname.h" 3
_SC_CHARCLASS_NAME_MAX,
# 172 "/usr/include/bits/confname.h" 3
_SC_2_VERSION,
# 174 "/usr/include/bits/confname.h" 3
_SC_2_C_BIND,
# 176 "/usr/include/bits/confname.h" 3
_SC_2_C_DEV,
# 178 "/usr/include/bits/confname.h" 3
_SC_2_FORT_DEV,
# 180 "/usr/include/bits/confname.h" 3
_SC_2_FORT_RUN,
# 182 "/usr/include/bits/confname.h" 3
_SC_2_SW_DEV,
# 184 "/usr/include/bits/confname.h" 3
_SC_2_LOCALEDEF,
# 187 "/usr/include/bits/confname.h" 3
_SC_PII,
# 189 "/usr/include/bits/confname.h" 3
_SC_PII_XTI,
# 191 "/usr/include/bits/confname.h" 3
_SC_PII_SOCKET,
# 193 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET,
# 195 "/usr/include/bits/confname.h" 3
_SC_PII_OSI,
# 197 "/usr/include/bits/confname.h" 3
_SC_POLL,
# 199 "/usr/include/bits/confname.h" 3
_SC_SELECT,
# 201 "/usr/include/bits/confname.h" 3
_SC_UIO_MAXIOV,
# 203 "/usr/include/bits/confname.h" 3
_SC_IOV_MAX = 60,
# 205 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_STREAM,
# 207 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_DGRAM,
# 209 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_COTS,
# 211 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_CLTS,
# 213 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_M,
# 215 "/usr/include/bits/confname.h" 3
_SC_T_IOV_MAX,
# 219 "/usr/include/bits/confname.h" 3
_SC_THREADS,
# 221 "/usr/include/bits/confname.h" 3
_SC_THREAD_SAFE_FUNCTIONS,
# 223 "/usr/include/bits/confname.h" 3
_SC_GETGR_R_SIZE_MAX,
# 225 "/usr/include/bits/confname.h" 3
_SC_GETPW_R_SIZE_MAX,
# 227 "/usr/include/bits/confname.h" 3
_SC_LOGIN_NAME_MAX,
# 229 "/usr/include/bits/confname.h" 3
_SC_TTY_NAME_MAX,
# 231 "/usr/include/bits/confname.h" 3
_SC_THREAD_DESTRUCTOR_ITERATIONS,
# 233 "/usr/include/bits/confname.h" 3
_SC_THREAD_KEYS_MAX,
# 235 "/usr/include/bits/confname.h" 3
_SC_THREAD_STACK_MIN,
# 237 "/usr/include/bits/confname.h" 3
_SC_THREAD_THREADS_MAX,
# 239 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKADDR,
# 241 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKSIZE,
# 243 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIORITY_SCHEDULING,
# 245 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_INHERIT,
# 247 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_PROTECT,
# 249 "/usr/include/bits/confname.h" 3
_SC_THREAD_PROCESS_SHARED,
# 252 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_CONF,
# 254 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_ONLN,
# 256 "/usr/include/bits/confname.h" 3
_SC_PHYS_PAGES,
# 258 "/usr/include/bits/confname.h" 3
_SC_AVPHYS_PAGES,
# 260 "/usr/include/bits/confname.h" 3
_SC_ATEXIT_MAX,
# 262 "/usr/include/bits/confname.h" 3
_SC_PASS_MAX,
# 265 "/usr/include/bits/confname.h" 3
_SC_XOPEN_VERSION,
# 267 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XCU_VERSION,
# 269 "/usr/include/bits/confname.h" 3
_SC_XOPEN_UNIX,
# 271 "/usr/include/bits/confname.h" 3
_SC_XOPEN_CRYPT,
# 273 "/usr/include/bits/confname.h" 3
_SC_XOPEN_ENH_I18N,
# 275 "/usr/include/bits/confname.h" 3
_SC_XOPEN_SHM,
# 278 "/usr/include/bits/confname.h" 3
_SC_2_CHAR_TERM,
# 280 "/usr/include/bits/confname.h" 3
_SC_2_C_VERSION,
# 282 "/usr/include/bits/confname.h" 3
_SC_2_UPE,
# 285 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG2,
# 287 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG3,
# 289 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG4,
# 292 "/usr/include/bits/confname.h" 3
_SC_CHAR_BIT,
# 294 "/usr/include/bits/confname.h" 3
_SC_CHAR_MAX,
# 296 "/usr/include/bits/confname.h" 3
_SC_CHAR_MIN,
# 298 "/usr/include/bits/confname.h" 3
_SC_INT_MAX,
# 300 "/usr/include/bits/confname.h" 3
_SC_INT_MIN,
# 302 "/usr/include/bits/confname.h" 3
_SC_LONG_BIT,
# 304 "/usr/include/bits/confname.h" 3
_SC_WORD_BIT,
# 306 "/usr/include/bits/confname.h" 3
_SC_MB_LEN_MAX,
# 308 "/usr/include/bits/confname.h" 3
_SC_NZERO,
# 310 "/usr/include/bits/confname.h" 3
_SC_SSIZE_MAX,
# 312 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MAX,
# 314 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MIN,
# 316 "/usr/include/bits/confname.h" 3
_SC_SHRT_MAX,
# 318 "/usr/include/bits/confname.h" 3
_SC_SHRT_MIN,
# 320 "/usr/include/bits/confname.h" 3
_SC_UCHAR_MAX,
# 322 "/usr/include/bits/confname.h" 3
_SC_UINT_MAX,
# 324 "/usr/include/bits/confname.h" 3
_SC_ULONG_MAX,
# 326 "/usr/include/bits/confname.h" 3
_SC_USHRT_MAX,
# 329 "/usr/include/bits/confname.h" 3
_SC_NL_ARGMAX,
# 331 "/usr/include/bits/confname.h" 3
_SC_NL_LANGMAX,
# 333 "/usr/include/bits/confname.h" 3
_SC_NL_MSGMAX,
# 335 "/usr/include/bits/confname.h" 3
_SC_NL_NMAX,
# 337 "/usr/include/bits/confname.h" 3
_SC_NL_SETMAX,
# 339 "/usr/include/bits/confname.h" 3
_SC_NL_TEXTMAX,
# 342 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFF32,
# 344 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFFBIG,
# 346 "/usr/include/bits/confname.h" 3
_SC_XBS5_LP64_OFF64,
# 348 "/usr/include/bits/confname.h" 3
_SC_XBS5_LPBIG_OFFBIG,
# 351 "/usr/include/bits/confname.h" 3
_SC_XOPEN_LEGACY,
# 353 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME,
# 355 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME_THREADS,
# 358 "/usr/include/bits/confname.h" 3
_SC_ADVISORY_INFO,
# 360 "/usr/include/bits/confname.h" 3
_SC_BARRIERS,
# 362 "/usr/include/bits/confname.h" 3
_SC_BASE,
# 364 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT,
# 366 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT_R,
# 368 "/usr/include/bits/confname.h" 3
_SC_CLOCK_SELECTION,
# 370 "/usr/include/bits/confname.h" 3
_SC_CPUTIME,
# 372 "/usr/include/bits/confname.h" 3
_SC_THREAD_CPUTIME,
# 374 "/usr/include/bits/confname.h" 3
_SC_DEVICE_IO,
# 376 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC,
# 378 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC_R,
# 380 "/usr/include/bits/confname.h" 3
_SC_FD_MGMT,
# 382 "/usr/include/bits/confname.h" 3
_SC_FIFO,
# 384 "/usr/include/bits/confname.h" 3
_SC_PIPE,
# 386 "/usr/include/bits/confname.h" 3
_SC_FILE_ATTRIBUTES,
# 388 "/usr/include/bits/confname.h" 3
_SC_FILE_LOCKING,
# 390 "/usr/include/bits/confname.h" 3
_SC_FILE_SYSTEM,
# 392 "/usr/include/bits/confname.h" 3
_SC_MONOTONIC_CLOCK,
# 394 "/usr/include/bits/confname.h" 3
_SC_MULTI_PROCESS,
# 396 "/usr/include/bits/confname.h" 3
_SC_SINGLE_PROCESS,
# 398 "/usr/include/bits/confname.h" 3
_SC_NETWORKING,
# 400 "/usr/include/bits/confname.h" 3
_SC_READER_WRITER_LOCKS,
# 402 "/usr/include/bits/confname.h" 3
_SC_SPIN_LOCKS,
# 404 "/usr/include/bits/confname.h" 3
_SC_REGEXP,
# 406 "/usr/include/bits/confname.h" 3
_SC_REGEX_VERSION,
# 408 "/usr/include/bits/confname.h" 3
_SC_SHELL,
# 410 "/usr/include/bits/confname.h" 3
_SC_SIGNALS,
# 412 "/usr/include/bits/confname.h" 3
_SC_SPAWN,
# 414 "/usr/include/bits/confname.h" 3
_SC_SPORADIC_SERVER,
# 416 "/usr/include/bits/confname.h" 3
_SC_THREAD_SPORADIC_SERVER,
# 418 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE,
# 420 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE_R,
# 422 "/usr/include/bits/confname.h" 3
_SC_TIMEOUTS,
# 424 "/usr/include/bits/confname.h" 3
_SC_TYPED_MEMORY_OBJECTS,
# 426 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS,
# 428 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS_R,
# 430 "/usr/include/bits/confname.h" 3
_SC_2_PBS,
# 432 "/usr/include/bits/confname.h" 3
_SC_2_PBS_ACCOUNTING,
# 434 "/usr/include/bits/confname.h" 3
_SC_2_PBS_LOCATE,
# 436 "/usr/include/bits/confname.h" 3
_SC_2_PBS_MESSAGE,
# 438 "/usr/include/bits/confname.h" 3
_SC_2_PBS_TRACK,
# 440 "/usr/include/bits/confname.h" 3
_SC_SYMLOOP_MAX,
# 442 "/usr/include/bits/confname.h" 3
_SC_STREAMS,
# 444 "/usr/include/bits/confname.h" 3
_SC_2_PBS_CHECKPOINT,
# 447 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFF32,
# 449 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFFBIG,
# 451 "/usr/include/bits/confname.h" 3
_SC_V6_LP64_OFF64,
# 453 "/usr/include/bits/confname.h" 3
_SC_V6_LPBIG_OFFBIG,
# 456 "/usr/include/bits/confname.h" 3
_SC_HOST_NAME_MAX,
# 458 "/usr/include/bits/confname.h" 3
_SC_TRACE,
# 460 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_FILTER,
# 462 "/usr/include/bits/confname.h" 3
_SC_TRACE_INHERIT,
# 464 "/usr/include/bits/confname.h" 3
_SC_TRACE_LOG,
# 467 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_SIZE,
# 469 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_ASSOC,
# 471 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_LINESIZE,
# 473 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_SIZE,
# 475 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_ASSOC,
# 477 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_LINESIZE,
# 479 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_SIZE,
# 481 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_ASSOC,
# 483 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_LINESIZE,
# 485 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_SIZE,
# 487 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_ASSOC,
# 489 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_LINESIZE,
# 491 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_SIZE,
# 493 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_ASSOC,
# 495 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_LINESIZE,
# 499 "/usr/include/bits/confname.h" 3
_SC_IPV6 = 235,
# 501 "/usr/include/bits/confname.h" 3
_SC_RAW_SOCKETS,
# 504 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFF32,
# 506 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFFBIG,
# 508 "/usr/include/bits/confname.h" 3
_SC_V7_LP64_OFF64,
# 510 "/usr/include/bits/confname.h" 3
_SC_V7_LPBIG_OFFBIG,
# 513 "/usr/include/bits/confname.h" 3
_SC_SS_REPL_MAX,
# 516 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_NAME_MAX,
# 518 "/usr/include/bits/confname.h" 3
_SC_TRACE_NAME_MAX,
# 520 "/usr/include/bits/confname.h" 3
_SC_TRACE_SYS_MAX,
# 522 "/usr/include/bits/confname.h" 3
_SC_TRACE_USER_EVENT_MAX,
# 525 "/usr/include/bits/confname.h" 3
_SC_XOPEN_STREAMS,
# 528 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_INHERIT,
# 530 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_PROTECT
# 532 "/usr/include/bits/confname.h" 3
};
# 536 "/usr/include/bits/confname.h" 3
enum {
# 537 "/usr/include/bits/confname.h" 3
_CS_PATH,
# 540 "/usr/include/bits/confname.h" 3
_CS_V6_WIDTH_RESTRICTED_ENVS,
# 544 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBC_VERSION,
# 546 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBPTHREAD_VERSION,
# 549 "/usr/include/bits/confname.h" 3
_CS_V5_WIDTH_RESTRICTED_ENVS,
# 553 "/usr/include/bits/confname.h" 3
_CS_V7_WIDTH_RESTRICTED_ENVS,
# 557 "/usr/include/bits/confname.h" 3
_CS_LFS_CFLAGS = 1000,
# 559 "/usr/include/bits/confname.h" 3
_CS_LFS_LDFLAGS,
# 561 "/usr/include/bits/confname.h" 3
_CS_LFS_LIBS,
# 563 "/usr/include/bits/confname.h" 3
_CS_LFS_LINTFLAGS,
# 565 "/usr/include/bits/confname.h" 3
_CS_LFS64_CFLAGS,
# 567 "/usr/include/bits/confname.h" 3
_CS_LFS64_LDFLAGS,
# 569 "/usr/include/bits/confname.h" 3
_CS_LFS64_LIBS,
# 571 "/usr/include/bits/confname.h" 3
_CS_LFS64_LINTFLAGS,
# 574 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
# 576 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LDFLAGS,
# 578 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LIBS,
# 580 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LINTFLAGS,
# 582 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_CFLAGS,
# 584 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LDFLAGS,
# 586 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LIBS,
# 588 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
# 590 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_CFLAGS,
# 592 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LDFLAGS,
# 594 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LIBS,
# 596 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LINTFLAGS,
# 598 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_CFLAGS,
# 600 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
# 602 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LIBS,
# 604 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
# 607 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_CFLAGS,
# 609 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
# 611 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LIBS,
# 613 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
# 615 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
# 617 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
# 619 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LIBS,
# 621 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
# 623 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_CFLAGS,
# 625 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LDFLAGS,
# 627 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LIBS,
# 629 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
# 631 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
# 633 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
# 635 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
# 637 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
# 640 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_CFLAGS,
# 642 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
# 644 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LIBS,
# 646 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
# 648 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
# 650 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
# 652 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LIBS,
# 654 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
# 656 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_CFLAGS,
# 658 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LDFLAGS,
# 660 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LIBS,
# 662 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
# 664 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
# 666 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
# 668 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
# 670 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
# 673 "/usr/include/bits/confname.h" 3
_CS_V6_ENV,
# 675 "/usr/include/bits/confname.h" 3
_CS_V7_ENV
# 677 "/usr/include/bits/confname.h" 3
};
# 609 "/usr/include/unistd.h" 3
extern "C" long pathconf(const char * , int ) throw()
# 610 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 613 "/usr/include/unistd.h" 3
extern "C" long fpathconf(int , int ) throw();
# 616 "/usr/include/unistd.h" 3
extern "C" long sysconf(int ) throw();
# 620 "/usr/include/unistd.h" 3
extern "C" size_t confstr(int , char * , size_t ) throw();
# 625 "/usr/include/unistd.h" 3
extern "C" __pid_t getpid() throw();
# 628 "/usr/include/unistd.h" 3
extern "C" __pid_t getppid() throw();
# 633 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgrp() throw();
# 643 "/usr/include/unistd.h" 3
extern "C" __pid_t __getpgid(__pid_t ) throw();
# 645 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgid(__pid_t ) throw();
# 652 "/usr/include/unistd.h" 3
extern "C" int setpgid(__pid_t , __pid_t ) throw();
# 669 "/usr/include/unistd.h" 3
extern "C" int setpgrp() throw();
# 686 "/usr/include/unistd.h" 3
extern "C" __pid_t setsid() throw();
# 690 "/usr/include/unistd.h" 3
extern "C" __pid_t getsid(__pid_t ) throw();
# 694 "/usr/include/unistd.h" 3
extern "C" __uid_t getuid() throw();
# 697 "/usr/include/unistd.h" 3
extern "C" __uid_t geteuid() throw();
# 700 "/usr/include/unistd.h" 3
extern "C" __gid_t getgid() throw();
# 703 "/usr/include/unistd.h" 3
extern "C" __gid_t getegid() throw();
# 708 "/usr/include/unistd.h" 3
extern "C" int getgroups(int , __gid_t []) throw();
# 712 "/usr/include/unistd.h" 3
extern "C" int group_member(__gid_t ) throw();
# 719 "/usr/include/unistd.h" 3
extern "C" int setuid(__uid_t ) throw();
# 724 "/usr/include/unistd.h" 3
extern "C" int setreuid(__uid_t , __uid_t ) throw();
# 729 "/usr/include/unistd.h" 3
extern "C" int seteuid(__uid_t ) throw();
# 736 "/usr/include/unistd.h" 3
extern "C" int setgid(__gid_t ) throw();
# 741 "/usr/include/unistd.h" 3
extern "C" int setregid(__gid_t , __gid_t ) throw();
# 746 "/usr/include/unistd.h" 3
extern "C" int setegid(__gid_t ) throw();
# 752 "/usr/include/unistd.h" 3
extern "C" int getresuid(__uid_t * , __uid_t * , __uid_t * ) throw();
# 757 "/usr/include/unistd.h" 3
extern "C" int getresgid(__gid_t * , __gid_t * , __gid_t * ) throw();
# 762 "/usr/include/unistd.h" 3
extern "C" int setresuid(__uid_t , __uid_t , __uid_t ) throw();
# 767 "/usr/include/unistd.h" 3
extern "C" int setresgid(__gid_t , __gid_t , __gid_t ) throw();
# 775 "/usr/include/unistd.h" 3
extern "C" __pid_t fork() throw();
# 783 "/usr/include/unistd.h" 3
extern "C" __pid_t vfork() throw();
# 789 "/usr/include/unistd.h" 3
extern "C" char *ttyname(int ) throw();
# 793 "/usr/include/unistd.h" 3
extern "C" int ttyname_r(int , char * , size_t ) throw()
# 794 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 798 "/usr/include/unistd.h" 3
extern "C" int isatty(int ) throw();
# 804 "/usr/include/unistd.h" 3
extern "C" int ttyslot() throw();
# 809 "/usr/include/unistd.h" 3
extern "C" int link(const char * , const char * ) throw()
# 810 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 815 "/usr/include/unistd.h" 3
extern "C" int linkat(int , const char * , int , const char * , int ) throw()
# 817 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 4)));
# 822 "/usr/include/unistd.h" 3
extern "C" int symlink(const char * , const char * ) throw()
# 823 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 828 "/usr/include/unistd.h" 3
extern "C" ssize_t readlink(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 830 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 835 "/usr/include/unistd.h" 3
extern "C" int symlinkat(const char * , int , const char * ) throw()
# 836 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 3)));
# 839 "/usr/include/unistd.h" 3
extern "C" ssize_t readlinkat(int , const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 841 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 3)));
# 845 "/usr/include/unistd.h" 3
extern "C" int unlink(const char * ) throw() __attribute((__nonnull__(1)));
# 849 "/usr/include/unistd.h" 3
extern "C" int unlinkat(int , const char * , int ) throw()
# 850 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 854 "/usr/include/unistd.h" 3
extern "C" int rmdir(const char * ) throw() __attribute((__nonnull__(1)));
# 858 "/usr/include/unistd.h" 3
extern "C" __pid_t tcgetpgrp(int ) throw();
# 861 "/usr/include/unistd.h" 3
extern "C" int tcsetpgrp(int , __pid_t ) throw();
# 868 "/usr/include/unistd.h" 3
extern "C" char *getlogin();
# 876 "/usr/include/unistd.h" 3
extern "C" int getlogin_r(char * , size_t ) __attribute((__nonnull__(1)));
# 881 "/usr/include/unistd.h" 3
extern "C" int setlogin(const char * ) throw() __attribute((__nonnull__(1)));
# 59 "/usr/include/getopt.h" 3
extern "C" { extern char *optarg; }
# 73 "/usr/include/getopt.h" 3
extern "C" { extern int optind; }
# 78 "/usr/include/getopt.h" 3
extern "C" { extern int opterr; }
# 82 "/usr/include/getopt.h" 3
extern "C" { extern int optopt; }
# 152 "/usr/include/getopt.h" 3
extern "C" int getopt(int , char *const * , const char * ) throw();
# 898 "/usr/include/unistd.h" 3
extern "C" int gethostname(char * , size_t ) throw() __attribute((__nonnull__(1)));
# 905 "/usr/include/unistd.h" 3
extern "C" int sethostname(const char * , size_t ) throw()
# 906 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 910 "/usr/include/unistd.h" 3
extern "C" int sethostid(long ) throw();
# 916 "/usr/include/unistd.h" 3
extern "C" int getdomainname(char * , size_t ) throw()
# 917 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 918 "/usr/include/unistd.h" 3
extern "C" int setdomainname(const char * , size_t ) throw()
# 919 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 925 "/usr/include/unistd.h" 3
extern "C" int vhangup() throw();
# 928 "/usr/include/unistd.h" 3
extern "C" int revoke(const char * ) throw() __attribute((__nonnull__(1)));
# 936 "/usr/include/unistd.h" 3
extern "C" int profil(unsigned short * , size_t , size_t , unsigned ) throw()
# 938 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 944 "/usr/include/unistd.h" 3
extern "C" int acct(const char * ) throw();
# 948 "/usr/include/unistd.h" 3
extern "C" char *getusershell() throw();
# 949 "/usr/include/unistd.h" 3
extern "C" void endusershell() throw();
# 950 "/usr/include/unistd.h" 3
extern "C" void setusershell() throw();
# 956 "/usr/include/unistd.h" 3
extern "C" int daemon(int , int ) throw();
# 963 "/usr/include/unistd.h" 3
extern "C" int chroot(const char * ) throw() __attribute((__nonnull__(1)));
# 967 "/usr/include/unistd.h" 3
extern "C" char *getpass(const char * ) __attribute((__nonnull__(1)));
# 976 "/usr/include/unistd.h" 3
extern "C" int fsync(int );
# 983 "/usr/include/unistd.h" 3
extern "C" long gethostid();
# 986 "/usr/include/unistd.h" 3
extern "C" void sync() throw();
# 992 "/usr/include/unistd.h" 3
extern "C" int getpagesize() throw() __attribute((const));
# 997 "/usr/include/unistd.h" 3
extern "C" int getdtablesize() throw();
# 1007 "/usr/include/unistd.h" 3
extern "C" int truncate(const char * , __off_t ) throw()
# 1008 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1019 "/usr/include/unistd.h" 3
extern "C" int truncate64(const char * , __off64_t ) throw()
# 1020 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1029 "/usr/include/unistd.h" 3
extern "C" int ftruncate(int , __off_t ) throw();
# 1039 "/usr/include/unistd.h" 3
extern "C" int ftruncate64(int , __off64_t ) throw();
# 1050 "/usr/include/unistd.h" 3
extern "C" int brk(void * ) throw();
# 1056 "/usr/include/unistd.h" 3
extern "C" void *sbrk(intptr_t ) throw();
# 1071 "/usr/include/unistd.h" 3
extern "C" long syscall(long , ...) throw();
# 1094 "/usr/include/unistd.h" 3
extern "C" int lockf(int , int , __off_t );
# 1104 "/usr/include/unistd.h" 3
extern "C" int lockf64(int , int , __off64_t );
# 1125 "/usr/include/unistd.h" 3
extern "C" int fdatasync(int );
# 1133 "/usr/include/unistd.h" 3
extern "C" char *crypt(const char * , const char * ) throw()
# 1134 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1138 "/usr/include/unistd.h" 3
extern "C" void encrypt(char * , int ) throw() __attribute((__nonnull__(1)));
# 1145 "/usr/include/unistd.h" 3
extern "C" void swab(const void *__restrict__ , void *__restrict__ , ssize_t ) throw()
# 1146 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1154 "/usr/include/unistd.h" 3
extern "C" char *ctermid(char * ) throw();
# 44 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 45 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 46 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 47 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 48 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 49 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 50 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 118 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 119 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 120 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 122 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 123 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 124 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 125 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 126 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 127 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 128 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 130 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 131 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 134 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 137 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 138 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 139 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 141 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 142 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 143 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 144 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 145 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 148 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 149 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 150 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 151 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 152 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 238 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 239 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 240 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw_pthread_cancel));
# 242 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 243 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 649 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 650 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__args)
# 651 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 652 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 653 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 656 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 657 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 658 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 659 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 662 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 663 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 664 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 665 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 668 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 669 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 670 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 671 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 674 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 675 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 676 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 677 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 680 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 681 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 682 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 683 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 686 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 687 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 688 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 689 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 691 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return -1; }
# 692 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 695 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 696 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 697 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 698 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 701 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 702 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 703 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 704 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 707 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 708 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 709 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 710 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 713 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 714 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 715 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 716 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 719 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 720 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 721 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 722 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 724 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 725 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 728 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 729 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 730 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 731 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 733 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 734 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 737 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 738 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 739 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 740 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 742 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 743 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 748 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 749 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 750 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 751 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 752 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 754 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 755 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 760 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 761 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 762 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 763 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 765 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 766 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 792 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 793 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 794 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 795 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 798 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 799 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 800 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 801 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 806 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 807 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 808 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 809 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 810 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 815 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 816 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 817 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 818 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 821 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 822 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 823 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 824 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 827 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 828 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 829 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 830 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 833 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 834 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 835 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 836 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 839 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 840 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 841 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 842 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 843 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 846 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 847 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex)
# 848 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 849 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 850 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 853 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 854 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex, const __gthread_time_t *
# 855 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 856 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 857 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 858 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 861 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 862 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 863 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 864 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 32 "/usr/include/c++/4.5/x86_64-linux-gnu/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 37 "/usr/include/c++/4.5/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 46 "/usr/include/c++/4.5/ext/atomicity.h" 3
{ return __sync_fetch_and_add_4(__mem, __val); }
# 49 "/usr/include/c++/4.5/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 50 "/usr/include/c++/4.5/ext/atomicity.h" 3
{ __sync_fetch_and_add_4(__mem, __val); }
# 62 "/usr/include/c++/4.5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 63 "/usr/include/c++/4.5/ext/atomicity.h" 3
{
# 64 "/usr/include/c++/4.5/ext/atomicity.h" 3
_Atomic_word __result = (*__mem);
# 65 "/usr/include/c++/4.5/ext/atomicity.h" 3
(*__mem) += __val;
# 66 "/usr/include/c++/4.5/ext/atomicity.h" 3
return __result;
# 67 "/usr/include/c++/4.5/ext/atomicity.h" 3
}
# 70 "/usr/include/c++/4.5/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 71 "/usr/include/c++/4.5/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 74 "/usr/include/c++/4.5/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 75 "/usr/include/c++/4.5/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 76 "/usr/include/c++/4.5/ext/atomicity.h" 3
{
# 78 "/usr/include/c++/4.5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 79 "/usr/include/c++/4.5/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 81 "/usr/include/c++/4.5/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 85 "/usr/include/c++/4.5/ext/atomicity.h" 3
}
# 88 "/usr/include/c++/4.5/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 89 "/usr/include/c++/4.5/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 90 "/usr/include/c++/4.5/ext/atomicity.h" 3
{
# 92 "/usr/include/c++/4.5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 93 "/usr/include/c++/4.5/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 95 "/usr/include/c++/4.5/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 99 "/usr/include/c++/4.5/ext/atomicity.h" 3
}
# 101 "/usr/include/c++/4.5/ext/atomicity.h" 3
}
# 45 "/usr/include/c++/4.5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 104 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    class basic_string
    {
      typedef typename _Alloc :: template rebind < _CharT > :: other _CharT_alloc_type;


    public :
      typedef _Traits traits_type;
      typedef typename _Traits :: char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type :: size_type size_type;
      typedef typename _CharT_alloc_type :: difference_type difference_type;
      typedef typename _CharT_alloc_type :: reference reference;
      typedef typename _CharT_alloc_type :: const_reference const_reference;
      typedef typename _CharT_alloc_type :: pointer pointer;
      typedef typename _CharT_alloc_type :: const_pointer const_pointer;
      typedef __gnu_cxx :: __normal_iterator < pointer, basic_string > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, basic_string >
                                                            const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;

    private :

      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc :: template rebind < char > :: other _Raw_bytes_alloc;

 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage [ ];

        static _Rep &
        _S_empty_rep ( )
        {



   void * __p = reinterpret_cast < void * > ( & _S_empty_rep_storage );
   return * reinterpret_cast < _Rep * > ( __p );
 }

        bool
 _M_is_leaked ( ) const
        { return this -> _M_refcount < 0; }

        bool
 _M_is_shared ( ) const
        { return this -> _M_refcount > 0; }

        void
 _M_set_leaked ( )
        { this -> _M_refcount = - 1; }

        void
 _M_set_sharable ( )
        { this -> _M_refcount = 0; }

 void
 _M_set_length_and_sharable ( size_type __n )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     {
       this -> _M_set_sharable ( );
       this -> _M_length = __n;
       traits_type :: assign ( this -> _M_refdata ( ) [ __n ], _S_terminal );


     }
 }

 _CharT *
 _M_refdata ( ) throw ( )
 { return reinterpret_cast < _CharT * > ( this + 1 ); }

 _CharT *
 _M_grab ( const _Alloc & __alloc1, const _Alloc & __alloc2 )
 {
   return ( ! _M_is_leaked ( ) && __alloc1 == __alloc2 )
           ? _M_refcopy ( ) : _M_clone ( __alloc1 );
 }


 static _Rep *
 _S_create ( size_type, size_type, const _Alloc & );

 void
 _M_dispose ( const _Alloc & __a )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     if ( __gnu_cxx :: __exchange_and_add_dispatch ( & this -> _M_refcount,
             - 1 ) <= 0 )
       _M_destroy ( __a );
 }

 void
 _M_destroy ( const _Alloc & ) throw ( );

 _CharT *
 _M_refcopy ( ) throw ( )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

            __gnu_cxx :: __atomic_add_dispatch ( & this -> _M_refcount, 1 );
   return _M_refdata ( );
 }

 _CharT *
 _M_clone ( const _Alloc &, size_type __res = 0 );
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider ( _CharT * __dat, const _Alloc & __a )
 : _Alloc ( __a ), _M_p ( __dat ) { }

 _CharT * _M_p;
      };

    public :




      static const size_type npos = static_cast < size_type > ( - 1 );

    private :

      mutable _Alloc_hider _M_dataplus;

      _CharT *
      _M_data ( ) const
      { return _M_dataplus . _M_p; }

      _CharT *
      _M_data ( _CharT * __p )
      { return ( _M_dataplus . _M_p = __p ); }

      _Rep *
      _M_rep ( ) const
      { return & ( ( reinterpret_cast < _Rep * > ( _M_data ( ) ) ) [ - 1 ] ); }



      iterator
      _M_ibegin ( ) const
      { return iterator ( _M_data ( ) ); }

      iterator
      _M_iend ( ) const
      { return iterator ( _M_data ( ) + this -> size ( ) ); }

      void
      _M_leak ( )
      {
 if ( ! _M_rep ( ) -> _M_is_leaked ( ) )
   _M_leak_hard ( );
      }

      size_type
      _M_check ( size_type __pos, const char * __s ) const
      {
 if ( __pos > this -> size ( ) )
   __throw_out_of_range ( ( __s ) );
 return __pos;
      }

      void
      _M_check_length ( size_type __n1, size_type __n2, const char * __s ) const
      {
 if ( this -> max_size ( ) - ( this -> size ( ) - __n1 ) < __n2 )
   __throw_length_error ( ( __s ) );
      }


      size_type
      _M_limit ( size_type __pos, size_type __off ) const
      {
 const bool __testoff = __off < this -> size ( ) - __pos;
 return __testoff ? __off : this -> size ( ) - __pos;
      }


      bool
      _M_disjunct ( const _CharT * __s ) const
      {
 return ( less < const _CharT * > ( ) ( __s, _M_data ( ) )
  || less < const _CharT * > ( ) ( _M_data ( ) + this -> size ( ), __s ) );
      }



      static void
      _M_copy ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: copy ( __d, __s, __n );
      }

      static void
      _M_move ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: move ( __d, __s, __n );
      }

      static void
      _M_assign ( _CharT * __d, size_type __n, _CharT __c )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, __c );
 else
   traits_type :: assign ( __d, __n, __c );
      }



      template < class _Iterator >
        static void
        _S_copy_chars ( _CharT * __p, _Iterator __k1, _Iterator __k2 )
        {
   for (; __k1 != __k2; ++ __k1, ++ __p )
     traits_type :: assign ( * __p, * __k1 );
 }

      static void
      _S_copy_chars ( _CharT * __p, iterator __k1, iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, const_iterator __k1, const_iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, _CharT * __k1, _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static void
      _S_copy_chars ( _CharT * __p, const _CharT * __k1, const _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static int
      _S_compare ( size_type __n1, size_type __n2 )
      {
 const difference_type __d = difference_type ( __n1 - __n2 );

 if ( __d > __gnu_cxx :: __numeric_traits < int > :: __max )
   return __gnu_cxx :: __numeric_traits < int > :: __max;
 else if ( __d < __gnu_cxx :: __numeric_traits < int > :: __min )
   return __gnu_cxx :: __numeric_traits < int > :: __min;
 else
   return int ( __d );
      }

      void
      _M_mutate ( size_type __pos, size_type __len1, size_type __len2 );

      void
      _M_leak_hard ( );

      static _Rep &
      _S_empty_rep ( )
      { return _Rep :: _S_empty_rep ( ); }

    public :







      basic_string ( )

      : _M_dataplus ( _S_empty_rep ( ) . _M_refdata ( ), _Alloc ( ) ) { }







      explicit
      basic_string ( const _Alloc & __a );






      basic_string ( const basic_string & __str );






      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n = npos );







      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n, const _Alloc & __a );

      basic_string ( const _CharT * __s, size_type __n,
     const _Alloc & __a = _Alloc ( ) );





      basic_string ( const _CharT * __s, const _Alloc & __a = _Alloc ( ) );






      basic_string ( size_type __n, _CharT __c, const _Alloc & __a = _Alloc ( ) );

      template < class _InputIterator >
        basic_string ( _InputIterator __beg, _InputIterator __end,
       const _Alloc & __a = _Alloc ( ) );




      ~ basic_string ( )
      { _M_rep ( ) -> _M_dispose ( this -> get_allocator ( ) ); }





      basic_string &
      operator = ( const basic_string & __str )
      { return this -> assign ( __str ); }





      basic_string &
      operator = ( const _CharT * __s )
      { return this -> assign ( __s ); }

      basic_string &
      operator = ( _CharT __c )
      {
 this -> assign ( 1, __c );
 return * this;
      }

      iterator
      begin ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) );
      }





      const_iterator
      begin ( ) const
      { return const_iterator ( _M_data ( ) ); }





      iterator
      end ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) + this -> size ( ) );
      }





      const_iterator
      end ( ) const
      { return const_iterator ( _M_data ( ) + this -> size ( ) ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> begin ( ) ); }

    public :



      size_type
      size ( ) const
      { return _M_rep ( ) -> _M_length; }



      size_type
      length ( ) const
      { return _M_rep ( ) -> _M_length; }


      size_type
      max_size ( ) const
      { return _Rep :: _S_max_size; }

      void
      resize ( size_type __n, _CharT __c );

      void
      resize ( size_type __n )
      { this -> resize ( __n, _CharT ( ) ); }

      size_type
      capacity ( ) const
      { return _M_rep ( ) -> _M_capacity; }

      void
      reserve ( size_type __res_arg = 0 );




      void
      clear ( )
      { _M_mutate ( 0, this -> size ( ), 0 ); }





      bool
      empty ( ) const
      { return this -> size ( ) == 0; }

      const_reference
      operator [ ] ( size_type __pos ) const
      {
 ;
 return _M_data ( ) [ __pos ];
      }

      reference
      operator [ ] ( size_type __pos )
      {

 ;

 ;
 _M_leak ( );
 return _M_data ( ) [ __pos ];
      }

      const_reference
      at ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 return _M_data ( ) [ __n ];
      }

      reference
      at ( size_type __n )
      {
 if ( __n >= size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 _M_leak ( );
 return _M_data ( ) [ __n ];
      }







      basic_string &
      operator += ( const basic_string & __str )
      { return this -> append ( __str ); }






      basic_string &
      operator += ( const _CharT * __s )
      { return this -> append ( __s ); }






      basic_string &
      operator += ( _CharT __c )
      {
 this -> push_back ( __c );
 return * this;
      }

      basic_string &
      append ( const basic_string & __str );

      basic_string &
      append ( const basic_string & __str, size_type __pos, size_type __n );







      basic_string &
      append ( const _CharT * __s, size_type __n );






      basic_string &
      append ( const _CharT * __s )
      {
 ;
 return this -> append ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      append ( size_type __n, _CharT __c );

      template < class _InputIterator >
        basic_string &
        append ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_iend ( ), _M_iend ( ), __first, __last ); }





      void
      push_back ( _CharT __c )
      {
 const size_type __len = 1 + this -> size ( );
 if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
   this -> reserve ( __len );
 traits_type :: assign ( _M_data ( ) [ this -> size ( ) ], __c );
 _M_rep ( ) -> _M_set_length_and_sharable ( __len );
      }






      basic_string &
      assign ( const basic_string & __str );

      basic_string &
      assign ( const basic_string & __str, size_type __pos, size_type __n )
      { return this -> assign ( __str . _M_data ( )
       + __str . _M_check ( __pos, "basic_string::assign" ),
       __str . _M_limit ( __pos, __n ) ); }

      basic_string &
      assign ( const _CharT * __s, size_type __n );

      basic_string &
      assign ( const _CharT * __s )
      {
 ;
 return this -> assign ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      assign ( size_type __n, _CharT __c )
      { return _M_replace_aux ( size_type ( 0 ), this -> size ( ), __n, __c ); }

      template < class _InputIterator >
        basic_string &
        assign ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_ibegin ( ), _M_iend ( ), __first, __last ); }

      void
      insert ( iterator __p, size_type __n, _CharT __c )
      { this -> replace ( __p, __p, __n, __c ); }

      template < class _InputIterator >
        void
        insert ( iterator __p, _InputIterator __beg, _InputIterator __end )
        { this -> replace ( __p, __p, __beg, __end ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str )
      { return this -> insert ( __pos1, __str, size_type ( 0 ), __str . size ( ) ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str,
      size_type __pos2, size_type __n )
      { return this -> insert ( __pos1, __str . _M_data ( )
       + __str . _M_check ( __pos2, "basic_string::insert" ),
       __str . _M_limit ( __pos2, __n ) ); }

      basic_string &
      insert ( size_type __pos, const _CharT * __s, size_type __n );

      basic_string &
      insert ( size_type __pos, const _CharT * __s )
      {
 ;
 return this -> insert ( __pos, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      insert ( size_type __pos, size_type __n, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::insert" ),
         size_type ( 0 ), __n, __c ); }

      iterator
      insert ( iterator __p, _CharT __c )
      {
 ;
 const size_type __pos = __p - _M_ibegin ( );
 _M_replace_aux ( __pos, size_type ( 0 ), size_type ( 1 ), __c );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      erase ( size_type __pos = 0, size_type __n = npos )
      {
 _M_mutate ( _M_check ( __pos, "basic_string::erase" ),
    _M_limit ( __pos, __n ), size_type ( 0 ) );
 return * this;
      }

      iterator
      erase ( iterator __position )
      {

                               ;
 const size_type __pos = __position - _M_ibegin ( );
 _M_mutate ( __pos, size_type ( 1 ), size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      iterator
      erase ( iterator __first, iterator __last );

      basic_string &
      replace ( size_type __pos, size_type __n, const basic_string & __str )
      { return this -> replace ( __pos, __n, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 )
      { return this -> replace ( __pos1, __n1, __str . _M_data ( )
        + __str . _M_check ( __pos2, "basic_string::replace" ),
        __str . _M_limit ( __pos2, __n2 ) ); }

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 );

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s )
      {
 ;
 return this -> replace ( __pos, __n1, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( size_type __pos, size_type __n1, size_type __n2, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::replace" ),
         _M_limit ( __pos, __n1 ), __n2, __c ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const basic_string & __str )
      { return this -> replace ( __i1, __i2, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s, size_type __n )
      {

                          ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1, __s, __n );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s )
      {
 ;
 return this -> replace ( __i1, __i2, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, size_type __n, _CharT __c )
      {

                          ;
 return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __c );
      }

      template < class _InputIterator >
        basic_string &
        replace ( iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2 )
        {

                            ;
   ;
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   return _M_replace_dispatch ( __i1, __i2, __k1, __k2, _Integral ( ) );
 }



      basic_string &
      replace ( iterator __i1, iterator __i2, _CharT * __k1, _CharT * __k2 )
      {

                          ;
 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const _CharT * __k1, const _CharT * __k2 )
      {

                          ;
 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, iterator __k1, iterator __k2 )
      {

                          ;
 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2 )
      {

                          ;
 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

    private :
      template < class _Integer >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type )
        { return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __val ); }

      template < class _InputIterator >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type );

      basic_string &
      _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c );

      basic_string &
      _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
        size_type __n2 );



      template < class _InIterator >
        static _CharT *
        _S_construct_aux ( _InIterator __beg, _InIterator __end,
    const _Alloc & __a, __false_type )
 {
          typedef typename iterator_traits < _InIterator > :: iterator_category _Tag;
          return _S_construct ( __beg, __end, __a, _Tag ( ) );
 }



      template < class _Integer >
        static _CharT *
        _S_construct_aux ( _Integer __beg, _Integer __end,
    const _Alloc & __a, __true_type )
        { return _S_construct_aux_2 ( static_cast < size_type > ( __beg ),
        __end, __a ); }

      static _CharT *
      _S_construct_aux_2 ( size_type __req, _CharT __c, const _Alloc & __a )
      { return _S_construct ( __req, __c, __a ); }

      template < class _InIterator >
        static _CharT *
        _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a )
 {
   typedef typename std :: __is_integer < _InIterator > :: __type _Integral;
   return _S_construct_aux ( __beg, __end, __a, _Integral ( ) );
        }


      template < class _InIterator >
        static _CharT *
         _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
        input_iterator_tag );



      template < class _FwdIterator >
        static _CharT *
        _S_construct ( _FwdIterator __beg, _FwdIterator __end, const _Alloc & __a,
       forward_iterator_tag );

      static _CharT *
      _S_construct ( size_type __req, _CharT __c, const _Alloc & __a );

    public :

      size_type
      copy ( _CharT * __s, size_type __n, size_type __pos = 0 ) const;

      void
      swap ( basic_string & __s );

      const _CharT *
      c_str ( ) const
      { return _M_data ( ); }







      const _CharT *
      data ( ) const
      { return _M_data ( ); }




      allocator_type
      get_allocator ( ) const
      { return _M_dataplus; }

      size_type
      find ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      rfind ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> rfind ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      rfind ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      rfind ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> rfind ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      rfind ( _CharT __c, size_type __pos = npos ) const;

      size_type
      find_first_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_first_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_of ( _CharT __c, size_type __pos = 0 ) const
      { return this -> find ( __c, __pos ); }

      size_type
      find_last_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_last_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_of ( _CharT __c, size_type __pos = npos ) const
      { return this -> rfind ( __c, __pos ); }

      size_type
      find_first_not_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos,
   size_type __n ) const;

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_not_of ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      find_last_not_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos,
         size_type __n ) const;

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_not_of ( _CharT __c, size_type __pos = npos ) const;

      basic_string
      substr ( size_type __pos = 0, size_type __n = npos ) const
      { return basic_string ( * this,
       _M_check ( __pos, "basic_string::substr" ), __n ); }

      int
      compare ( const basic_string & __str ) const
      {
 const size_type __size = this -> size ( );
 const size_type __osize = __str . size ( );
 const size_type __len = std :: min ( __size, __osize );

 int __r = traits_type :: compare ( _M_data ( ), __str . data ( ), __len );
 if ( ! __r )
   __r = _S_compare ( __size, __osize );
 return __r;
      }

      int
      compare ( size_type __pos, size_type __n, const basic_string & __str ) const;

      int
      compare ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 ) const;

      int
      compare ( const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 ) const;
  };
# 2261 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2277 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2288 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2298 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
      const _CharT * __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2314 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs, _CharT __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str ( __lhs );
      __str . append ( __size_type ( 1 ), __rhs );
      return __str;
    }
# 2332 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2338 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT >
    inline
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value, bool > :: __type
    operator == ( const basic_string < _CharT > & __lhs,
        const basic_string < _CharT > & __rhs )
    { return ( __lhs . size ( ) == __rhs . size ( )
       && ! std :: char_traits < _CharT > :: compare ( __lhs . data ( ), __rhs . data ( ),
          __lhs . size ( ) ) ); }
# 2353 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) == 0; }
# 2365 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2378 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2390 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2402 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return ! ( __lhs == __rhs ); }
# 2415 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2427 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2439 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) > 0; }
# 2452 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2464 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2476 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) < 0; }
# 2489 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2501 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2513 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) >= 0; }
# 2526 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2538 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2550 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const _CharT * __lhs,
      const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) <= 0; }
# 2563 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline void
    swap ( basic_string < _CharT, _Traits, _Alloc > & __lhs,
  basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { __lhs . swap ( __rhs ); }
# 2580 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __is,
        basic_string < _CharT, _Traits, _Alloc > & __str );
# 2587 "/usr/include/c++/4.5/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 2598 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __os,
        const basic_string < _CharT, _Traits, _Alloc > & __str )
    {


      return __ostream_insert ( __os, __str . data ( ), __str . size ( ) );
    }
# 2621 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim );
# 2639 "/usr/include/c++/4.5/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str )
    { return getline ( __is, __str, __is . widen ( '\n' ) ); }
# 2647 "/usr/include/c++/4.5/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 2653 "/usr/include/c++/4.5/bits/basic_string.h" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 2657 "/usr/include/c++/4.5/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = ((((npos - sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4);
# 53 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[];
# 74 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     input_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 _CharT __buf [ 128 ];
 size_type __len = 0;
 while ( __beg != __end && __len < sizeof ( __buf ) / sizeof ( _CharT ) )
   {
     __buf [ __len ++ ] = * __beg;
     ++ __beg;
   }
 _Rep * __r = _Rep :: _S_create ( __len, size_type ( 0 ), __a );
 _M_copy ( __r -> _M_refdata ( ), __buf, __len );
 try
   {
     while ( __beg != __end )
       {
  if ( __len == __r -> _M_capacity )
    {

      _Rep * __another = _Rep :: _S_create ( __len + 1, __len, __a );
      _M_copy ( __another -> _M_refdata ( ), __r -> _M_refdata ( ), __len );
      __r -> _M_destroy ( __a );
      __r = __another;
    }
  __r -> _M_refdata ( ) [ __len ++ ] = * __beg;
  ++ __beg;
       }
   }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __len );
 return __r -> _M_refdata ( );
      }
# 120 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     forward_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 if ( __gnu_cxx :: __is_null_pointer ( __beg ) && __beg != __end )
   __throw_logic_error ( ( "basic_string::_S_construct NULL not valid" ) );

 const size_type __dnew = static_cast < size_type > ( std :: distance ( __beg,
              __end ) );

 _Rep * __r = _Rep :: _S_create ( __dnew, size_type ( 0 ), __a );
 try
   { _S_copy_chars ( __r -> _M_refdata ( ), __beg, __end ); }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __dnew );
 return __r -> _M_refdata ( );
      }
# 150 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > ::
    _S_construct ( size_type __n, _CharT __c, const _Alloc & __a )
    {

      if ( __n == 0 && __a == _Alloc ( ) )
 return _S_empty_rep ( ) . _M_refdata ( );


      _Rep * __r = _Rep :: _S_create ( __n, size_type ( 0 ), __a );
      if ( __n )
 _M_assign ( __r -> _M_refdata ( ), __n, __c );

      __r -> _M_set_length_and_sharable ( __n );
      return __r -> _M_refdata ( );
    }
# 168 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str )
    : _M_dataplus ( __str . _M_rep ( ) -> _M_grab ( _Alloc ( __str . get_allocator ( ) ),
       __str . get_allocator ( ) ),
    __str . get_allocator ( ) )
    { }
# 176 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _Alloc & __a )
    : _M_dataplus ( _S_construct ( size_type ( ), _CharT ( ), __a ), __a )
    { }
# 182 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos, size_type __n )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, _Alloc ( ) ), _Alloc ( ) )
    { }
# 192 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos,
   size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, __a ), __a )
    { }
# 204 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s + __n, __a ), __a )
    { }
# 211 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s ? __s + traits_type :: length ( __s ) :
          __s + npos, __a ), __a )
    { }
# 218 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( size_type __n, _CharT __c, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __n, __c, __a ), __a )
    { }
# 225 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( _InputIterator __beg, _InputIterator __end, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __beg, __end, __a ), __a )
    { }
# 240 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const basic_string & __str )
    {
      if ( _M_rep ( ) != __str . _M_rep ( ) )
 {

   const allocator_type __a = this -> get_allocator ( );
   _CharT * __tmp = __str . _M_rep ( ) -> _M_grab ( __a, __str . get_allocator ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
 }
      return * this;
    }
# 256 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const _CharT * __s, size_type __n )
    {
      ;
      _M_check_length ( this -> size ( ), __n, "basic_string::assign" );
      if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
 return _M_replace_safe ( size_type ( 0 ), this -> size ( ), __s, __n );
      else
 {

   const size_type __pos = __s - _M_data ( );
   if ( __pos >= __n )
     _M_copy ( _M_data ( ), __s, __n );
   else if ( __pos )
     _M_move ( _M_data ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __n );
   return * this;
 }
     }
# 278 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( size_type __n, _CharT __c )
    {
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_assign ( _M_data ( ) + this -> size ( ), __n, __c );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 295 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const _CharT * __s, size_type __n )
    {
      ;
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     {
       if ( _M_disjunct ( __s ) )
  this -> reserve ( __len );
       else
  {
    const size_type __off = __s - _M_data ( );
    this -> reserve ( __len );
    __s = _M_data ( ) + __off;
  }
     }
   _M_copy ( _M_data ( ) + this -> size ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 322 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str )
    {
      const size_type __size = __str . size ( );
      if ( __size )
 {
   const size_type __len = __size + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ), __size );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 339 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str, size_type __pos, size_type __n )
    {
      __str . _M_check ( __pos, "basic_string::append" );
      __n = __str . _M_limit ( __pos, __n );
      if ( __n )
 {
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ) + __pos, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 357 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     insert ( size_type __pos, const _CharT * __s, size_type __n )
     {
       ;
       _M_check ( __pos, "basic_string::insert" );
       _M_check_length ( size_type ( 0 ), __n, "basic_string::insert" );
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, size_type ( 0 ), __s, __n );
       else
         {

           const size_type __off = __s - _M_data ( );
           _M_mutate ( __pos, 0, __n );
           __s = _M_data ( ) + __off;
           _CharT * __p = _M_data ( ) + __pos;
           if ( __s + __n <= __p )
             _M_copy ( __p, __s, __n );
           else if ( __s >= __p )
             _M_copy ( __p, __s + __n, __n );
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy ( __p, __s, __nleft );
               _M_copy ( __p + __nleft, __p + __n, __n - __nleft );
             }
           return * this;
         }
     }
# 388 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     typename basic_string < _CharT, _Traits, _Alloc > :: iterator
     basic_string < _CharT, _Traits, _Alloc > ::
     erase ( iterator __first, iterator __last )
     {

                           ;




       const size_type __size = __last - __first;
       if ( __size )
  {
    const size_type __pos = __first - _M_ibegin ( );
    _M_mutate ( __pos, __size, size_type ( 0 ) );
    _M_rep ( ) -> _M_set_leaked ( );
    return iterator ( _M_data ( ) + __pos );
  }
       else
  return __first;
     }
# 411 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     replace ( size_type __pos, size_type __n1, const _CharT * __s,
      size_type __n2 )
     {
       ;
       _M_check ( __pos, "basic_string::replace" );
       __n1 = _M_limit ( __pos, __n1 );
       _M_check_length ( __n1, __n2, "basic_string::replace" );
       bool __left;
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, __n1, __s, __n2 );
       else if ( ( __left = __s + __n2 <= _M_data ( ) + __pos )
  || _M_data ( ) + __pos + __n1 <= __s )
  {

    size_type __off = __s - _M_data ( );
    __left ? __off : ( __off += __n2 - __n1 );
    _M_mutate ( __pos, __n1, __n2 );
    _M_copy ( _M_data ( ) + __pos, _M_data ( ) + __off, __n2 );
    return * this;
  }
       else
  {

    const basic_string __tmp ( __s, __n2 );
    return _M_replace_safe ( __pos, __n1, __tmp . _M_data ( ), __n2 );
  }
     }
# 442 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_destroy ( const _Alloc & __a ) throw ( )
    {
      const size_type __size = sizeof ( _Rep_base ) +
                        ( this -> _M_capacity + 1 ) * sizeof ( _CharT );
      _Raw_bytes_alloc ( __a ) . deallocate ( reinterpret_cast < char * > ( this ), __size );
    }
# 452 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_leak_hard ( )
    {

      if ( _M_rep ( ) == & _S_empty_rep ( ) )
 return;

      if ( _M_rep ( ) -> _M_is_shared ( ) )
 _M_mutate ( 0, 0, 0 );
      _M_rep ( ) -> _M_set_leaked ( );
    }
# 466 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_mutate ( size_type __pos, size_type __len1, size_type __len2 )
    {
      const size_type __old_size = this -> size ( );
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if ( __new_size > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
 {

   const allocator_type __a = get_allocator ( );
   _Rep * __r = _Rep :: _S_create ( __new_size, this -> capacity ( ), __a );

   if ( __pos )
     _M_copy ( __r -> _M_refdata ( ), _M_data ( ), __pos );
   if ( __how_much )
     _M_copy ( __r -> _M_refdata ( ) + __pos + __len2,
      _M_data ( ) + __pos + __len1, __how_much );

   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __r -> _M_refdata ( ) );
 }
      else if ( __how_much && __len1 != __len2 )
 {

   _M_move ( _M_data ( ) + __pos + __len2,
    _M_data ( ) + __pos + __len1, __how_much );
 }
      _M_rep ( ) -> _M_set_length_and_sharable ( __new_size );
    }
# 499 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    reserve ( size_type __res )
    {
      if ( __res != this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
        {

   if ( __res < this -> size ( ) )
     __res = this -> size ( );
   const allocator_type __a = get_allocator ( );
   _CharT * __tmp = _M_rep ( ) -> _M_clone ( __a, __res - this -> size ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
        }
    }
# 516 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    swap ( basic_string & __s )
    {
      if ( _M_rep ( ) -> _M_is_leaked ( ) )
 _M_rep ( ) -> _M_set_sharable ( );
      if ( __s . _M_rep ( ) -> _M_is_leaked ( ) )
 __s . _M_rep ( ) -> _M_set_sharable ( );
      if ( this -> get_allocator ( ) == __s . get_allocator ( ) )
 {
   _CharT * __tmp = _M_data ( );
   _M_data ( __s . _M_data ( ) );
   __s . _M_data ( __tmp );
 }

      else
 {
   const basic_string __tmp1 ( _M_ibegin ( ), _M_iend ( ),
        __s . get_allocator ( ) );
   const basic_string __tmp2 ( __s . _M_ibegin ( ), __s . _M_iend ( ),
        this -> get_allocator ( ) );
   * this = __tmp2;
   __s = __tmp1;
 }
    }
# 543 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: _Rep *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _S_create ( size_type __capacity, size_type __old_capacity,
       const _Alloc & __alloc )
    {


      if ( __capacity > _S_max_size )
 __throw_length_error ( ( "basic_string::_S_create" ) );

      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof ( void * );







      if ( __capacity > __old_capacity && __capacity < 2 * __old_capacity )
 __capacity = 2 * __old_capacity;




      size_type __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );

      const size_type __adj_size = __size + __malloc_header_size;
      if ( __adj_size > __pagesize && __capacity > __old_capacity )
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof ( _CharT );

   if ( __capacity > _S_max_size )
     __capacity = _S_max_size;
   __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );
 }



      void * __place = _Raw_bytes_alloc ( __alloc ) . allocate ( __size );
      _Rep * __p = new ( __place ) _Rep;
      __p -> _M_capacity = __capacity;







      __p -> _M_set_sharable ( );
      return __p;
    }
# 621 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_clone ( const _Alloc & __alloc, size_type __res )
    {

      const size_type __requested_cap = this -> _M_length + __res;
      _Rep * __r = _Rep :: _S_create ( __requested_cap, this -> _M_capacity,
      __alloc );
      if ( this -> _M_length )
 _M_copy ( __r -> _M_refdata ( ), _M_refdata ( ), this -> _M_length );

      __r -> _M_set_length_and_sharable ( this -> _M_length );
      return __r -> _M_refdata ( );
    }
# 637 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    resize ( size_type __n, _CharT __c )
    {
      const size_type __size = this -> size ( );
      _M_check_length ( __size, __n, "basic_string::resize" );
      if ( __size < __n )
 this -> append ( __n - __size, __c );
      else if ( __n < __size )
 this -> erase ( __n );

    }
# 651 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
      basic_string < _CharT, _Traits, _Alloc > &
      basic_string < _CharT, _Traits, _Alloc > ::
      _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type )
      {
 const basic_string __s ( __k1, __k2 );
 const size_type __n1 = __i2 - __i1;
 _M_check_length ( __n1, __s . size ( ), "basic_string::_M_replace_dispatch" );
 return _M_replace_safe ( __i1 - _M_ibegin ( ), __n1, __s . _M_data ( ),
          __s . size ( ) );
      }
# 665 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c )
    {
      _M_check_length ( __n1, __n2, "basic_string::_M_replace_aux" );
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_assign ( _M_data ( ) + __pos1, __n2, __c );
      return * this;
    }
# 678 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
      size_type __n2 )
    {
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_copy ( _M_data ( ) + __pos1, __s, __n2 );
      return * this;
    }
# 690 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      ;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      const __size_type __len = _Traits :: length ( __lhs );
      __string_type __str;
      __str . reserve ( __len + __rhs . size ( ) );
      __str . append ( __lhs, __len );
      __str . append ( __rhs );
      return __str;
    }
# 706 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs . size ( );
      __str . reserve ( __len + 1 );
      __str . append ( __size_type ( 1 ), __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 720 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    copy ( _CharT * __s, size_type __n, size_type __pos ) const
    {
      _M_check ( __pos, "basic_string::copy" );
      __n = _M_limit ( __pos, __n );
      ;
      if ( __n )
 _M_copy ( __s, _M_data ( ) + __pos, __n );

      return __n;
    }
# 734 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      const _CharT * __data = _M_data ( );

      if ( __n == 0 )
 return __pos <= __size ? __pos : npos;

      if ( __n <= __size )
 {
   for (; __pos <= __size - __n; ++ __pos )
     if ( traits_type :: eq ( __data [ __pos ], __s [ 0 ] )
  && traits_type :: compare ( __data + __pos + 1,
     __s + 1, __n - 1 ) == 0 )
       return __pos;
 }
      return npos;
    }
# 757 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( _CharT __c, size_type __pos ) const
    {
      size_type __ret = npos;
      const size_type __size = this -> size ( );
      if ( __pos < __size )
 {
   const _CharT * __data = _M_data ( );
   const size_type __n = __size - __pos;
   const _CharT * __p = traits_type :: find ( __data + __pos, __n, __c );
   if ( __p )
     __ret = __p - __data;
 }
      return __ret;
    }
# 775 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      if ( __n <= __size )
 {
   __pos = std :: min ( size_type ( __size - __n ), __pos );
   const _CharT * __data = _M_data ( );
   do
     {
       if ( traits_type :: compare ( __data + __pos, __s, __n ) == 0 )
  return __pos;
     }
   while ( __pos -- > 0 );
 }
      return npos;
    }
# 796 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   for ( ++ __size; __size -- > 0; )
     if ( traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
       return __size;
 }
      return npos;
    }
# 813 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __n && __pos < this -> size ( ); ++ __pos )
 {
   const _CharT * __p = traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] );
   if ( __p )
     return __pos;
 }
      return npos;
    }
# 828 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size && __n )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- != 0 );
 }
      return npos;
    }
# 849 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] ) )
   return __pos;
      return npos;
    }
# 861 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( _CharT __c, size_type __pos ) const
    {
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: eq ( _M_data ( ) [ __pos ], __c ) )
   return __pos;
      return npos;
    }
# 872 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 893 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 913 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n, const basic_string & __str ) const
    {
      _M_check ( __pos, "basic_string::compare" );
      __n = _M_limit ( __pos, __n );
      const size_type __osize = __str . size ( );
      const size_type __len = std :: min ( __n, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __str . data ( ), __len );
      if ( ! __r )
 __r = _S_compare ( __n, __osize );
      return __r;
    }
# 928 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos1, size_type __n1, const basic_string & __str,
     size_type __pos2, size_type __n2 ) const
    {
      _M_check ( __pos1, "basic_string::compare" );
      __str . _M_check ( __pos2, "basic_string::compare" );
      __n1 = _M_limit ( __pos1, __n1 );
      __n2 = __str . _M_limit ( __pos2, __n2 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos1,
         __str . data ( ) + __pos2, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 946 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( const _CharT * __s ) const
    {
      ;
      const size_type __size = this -> size ( );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __size, __osize );
      int __r = traits_type :: compare ( _M_data ( ), __s, __len );
      if ( ! __r )
 __r = _S_compare ( __size, __osize );
      return __r;
    }
# 961 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __n1, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __osize );
      return __r;
    }
# 977 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s,
     size_type __n2 ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 994 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in,
        basic_string < _CharT, _Traits, _Alloc > & __str )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;
      typedef ctype < _CharT > __ctype_type;
      typedef typename __ctype_type :: ctype_base __ctype_base;

      __size_type __extracted = 0;
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       __str . erase ( );
       _CharT __buf [ 128 ];
       __size_type __len = 0;
       const streamsize __w = __in . width ( );
       const __size_type __n = __w > 0 ? static_cast < __size_type > ( __w )
                                : __str . max_size ( );
       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( __ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    if ( __len == sizeof ( __buf ) / sizeof ( _CharT ) )
      {
        __str . append ( __buf, sizeof ( __buf ) / sizeof ( _CharT ) );
        __len = 0;
      }
    __buf [ __len ++ ] = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }
       __str . append ( __buf, __len );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }

      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1066 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __in,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str . max_size ( );
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, true );
      if ( __cerb )
 {
   try
     {
       __str . erase ( );
       const __int_type __idelim = _Traits :: to_int_type ( __delim );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! _Traits :: eq_int_type ( __c, __idelim ) )
  {
    __str += _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       else if ( _Traits :: eq_int_type ( __c, __idelim ) )
  {
    ++ __extracted;
    __in . rdbuf ( ) -> sbumpc ( );
  }
       else
  __err |= __ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }
      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1133 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1134 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1137 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const basic_string< char, char_traits< char> , allocator< char> > & );
# 1140 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 1143 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1148 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1149 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1152 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1155 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 1158 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1164 "/usr/include/c++/4.5/bits/basic_string.tcc" 3
}
# 49 "/usr/include/stdint.h" 3
typedef unsigned char uint8_t;
# 50 "/usr/include/stdint.h" 3
typedef unsigned short uint16_t;
# 52 "/usr/include/stdint.h" 3
typedef unsigned uint32_t;
# 56 "/usr/include/stdint.h" 3
typedef unsigned long uint64_t;
# 66 "/usr/include/stdint.h" 3
typedef signed char int_least8_t;
# 67 "/usr/include/stdint.h" 3
typedef short int_least16_t;
# 68 "/usr/include/stdint.h" 3
typedef int int_least32_t;
# 70 "/usr/include/stdint.h" 3
typedef long int_least64_t;
# 77 "/usr/include/stdint.h" 3
typedef unsigned char uint_least8_t;
# 78 "/usr/include/stdint.h" 3
typedef unsigned short uint_least16_t;
# 79 "/usr/include/stdint.h" 3
typedef unsigned uint_least32_t;
# 81 "/usr/include/stdint.h" 3
typedef unsigned long uint_least64_t;
# 91 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 93 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 94 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 95 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 104 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 106 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 107 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 108 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 123 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 135 "/usr/include/stdint.h" 3
typedef long intmax_t;
# 136 "/usr/include/stdint.h" 3
typedef unsigned long uintmax_t;
# 225 "./sdk/GL/glew.h"
extern "C" { typedef unsigned GLenum; }
# 226 "./sdk/GL/glew.h"
extern "C" { typedef unsigned GLbitfield; }
# 227 "./sdk/GL/glew.h"
extern "C" { typedef unsigned GLuint; }
# 228 "./sdk/GL/glew.h"
extern "C" { typedef int GLint; }
# 229 "./sdk/GL/glew.h"
extern "C" { typedef int GLsizei; }
# 230 "./sdk/GL/glew.h"
extern "C" { typedef unsigned char GLboolean; }
# 231 "./sdk/GL/glew.h"
extern "C" { typedef signed char GLbyte; }
# 232 "./sdk/GL/glew.h"
extern "C" { typedef short GLshort; }
# 233 "./sdk/GL/glew.h"
extern "C" { typedef unsigned char GLubyte; }
# 234 "./sdk/GL/glew.h"
extern "C" { typedef unsigned short GLushort; }
# 235 "./sdk/GL/glew.h"
extern "C" { typedef unsigned long GLulong; }
# 236 "./sdk/GL/glew.h"
extern "C" { typedef float GLfloat; }
# 237 "./sdk/GL/glew.h"
extern "C" { typedef float GLclampf; }
# 238 "./sdk/GL/glew.h"
extern "C" { typedef double GLdouble; }
# 239 "./sdk/GL/glew.h"
extern "C" { typedef double GLclampd; }
# 240 "./sdk/GL/glew.h"
extern "C" { typedef void GLvoid; }
# 253 "./sdk/GL/glew.h"
extern "C" { typedef int64_t GLint64EXT; }
# 254 "./sdk/GL/glew.h"
extern "C" { typedef uint64_t GLuint64EXT; }
# 256 "./sdk/GL/glew.h"
extern "C" { typedef GLint64EXT GLint64; }
# 257 "./sdk/GL/glew.h"
extern "C" { typedef GLuint64EXT GLuint64; }
# 258 "./sdk/GL/glew.h"
extern "C" { typedef struct __GLsync *GLsync; }
# 795 "./sdk/GL/glew.h"
extern "C" void glAccum(GLenum , GLfloat );
# 796 "./sdk/GL/glew.h"
extern "C" void glAlphaFunc(GLenum , GLclampf );
# 797 "./sdk/GL/glew.h"
extern "C" GLboolean glAreTexturesResident(GLsizei , const GLuint * , GLboolean * );
# 798 "./sdk/GL/glew.h"
extern "C" void glArrayElement(GLint );
# 799 "./sdk/GL/glew.h"
extern "C" void glBegin(GLenum );
# 800 "./sdk/GL/glew.h"
extern "C" void glBindTexture(GLenum , GLuint );
# 801 "./sdk/GL/glew.h"
extern "C" void glBitmap(GLsizei , GLsizei , GLfloat , GLfloat , GLfloat , GLfloat , const GLubyte * );
# 802 "./sdk/GL/glew.h"
extern "C" void glBlendFunc(GLenum , GLenum );
# 803 "./sdk/GL/glew.h"
extern "C" void glCallList(GLuint );
# 804 "./sdk/GL/glew.h"
extern "C" void glCallLists(GLsizei , GLenum , const GLvoid * );
# 805 "./sdk/GL/glew.h"
extern "C" void glClear(GLbitfield );
# 806 "./sdk/GL/glew.h"
extern "C" void glClearAccum(GLfloat , GLfloat , GLfloat , GLfloat );
# 807 "./sdk/GL/glew.h"
extern "C" void glClearColor(GLclampf , GLclampf , GLclampf , GLclampf );
# 808 "./sdk/GL/glew.h"
extern "C" void glClearDepth(GLclampd );
# 809 "./sdk/GL/glew.h"
extern "C" void glClearIndex(GLfloat );
# 810 "./sdk/GL/glew.h"
extern "C" void glClearStencil(GLint );
# 811 "./sdk/GL/glew.h"
extern "C" void glClipPlane(GLenum , const GLdouble * );
# 812 "./sdk/GL/glew.h"
extern "C" void glColor3b(GLbyte , GLbyte , GLbyte );
# 813 "./sdk/GL/glew.h"
extern "C" void glColor3bv(const GLbyte * );
# 814 "./sdk/GL/glew.h"
extern "C" void glColor3d(GLdouble , GLdouble , GLdouble );
# 815 "./sdk/GL/glew.h"
extern "C" void glColor3dv(const GLdouble * );
# 816 "./sdk/GL/glew.h"
extern "C" void glColor3f(GLfloat , GLfloat , GLfloat );
# 817 "./sdk/GL/glew.h"
extern "C" void glColor3fv(const GLfloat * );
# 818 "./sdk/GL/glew.h"
extern "C" void glColor3i(GLint , GLint , GLint );
# 819 "./sdk/GL/glew.h"
extern "C" void glColor3iv(const GLint * );
# 820 "./sdk/GL/glew.h"
extern "C" void glColor3s(GLshort , GLshort , GLshort );
# 821 "./sdk/GL/glew.h"
extern "C" void glColor3sv(const GLshort * );
# 822 "./sdk/GL/glew.h"
extern "C" void glColor3ub(GLubyte , GLubyte , GLubyte );
# 823 "./sdk/GL/glew.h"
extern "C" void glColor3ubv(const GLubyte * );
# 824 "./sdk/GL/glew.h"
extern "C" void glColor3ui(GLuint , GLuint , GLuint );
# 825 "./sdk/GL/glew.h"
extern "C" void glColor3uiv(const GLuint * );
# 826 "./sdk/GL/glew.h"
extern "C" void glColor3us(GLushort , GLushort , GLushort );
# 827 "./sdk/GL/glew.h"
extern "C" void glColor3usv(const GLushort * );
# 828 "./sdk/GL/glew.h"
extern "C" void glColor4b(GLbyte , GLbyte , GLbyte , GLbyte );
# 829 "./sdk/GL/glew.h"
extern "C" void glColor4bv(const GLbyte * );
# 830 "./sdk/GL/glew.h"
extern "C" void glColor4d(GLdouble , GLdouble , GLdouble , GLdouble );
# 831 "./sdk/GL/glew.h"
extern "C" void glColor4dv(const GLdouble * );
# 832 "./sdk/GL/glew.h"
extern "C" void glColor4f(GLfloat , GLfloat , GLfloat , GLfloat );
# 833 "./sdk/GL/glew.h"
extern "C" void glColor4fv(const GLfloat * );
# 834 "./sdk/GL/glew.h"
extern "C" void glColor4i(GLint , GLint , GLint , GLint );
# 835 "./sdk/GL/glew.h"
extern "C" void glColor4iv(const GLint * );
# 836 "./sdk/GL/glew.h"
extern "C" void glColor4s(GLshort , GLshort , GLshort , GLshort );
# 837 "./sdk/GL/glew.h"
extern "C" void glColor4sv(const GLshort * );
# 838 "./sdk/GL/glew.h"
extern "C" void glColor4ub(GLubyte , GLubyte , GLubyte , GLubyte );
# 839 "./sdk/GL/glew.h"
extern "C" void glColor4ubv(const GLubyte * );
# 840 "./sdk/GL/glew.h"
extern "C" void glColor4ui(GLuint , GLuint , GLuint , GLuint );
# 841 "./sdk/GL/glew.h"
extern "C" void glColor4uiv(const GLuint * );
# 842 "./sdk/GL/glew.h"
extern "C" void glColor4us(GLushort , GLushort , GLushort , GLushort );
# 843 "./sdk/GL/glew.h"
extern "C" void glColor4usv(const GLushort * );
# 844 "./sdk/GL/glew.h"
extern "C" void glColorMask(GLboolean , GLboolean , GLboolean , GLboolean );
# 845 "./sdk/GL/glew.h"
extern "C" void glColorMaterial(GLenum , GLenum );
# 846 "./sdk/GL/glew.h"
extern "C" void glColorPointer(GLint , GLenum , GLsizei , const GLvoid * );
# 847 "./sdk/GL/glew.h"
extern "C" void glCopyPixels(GLint , GLint , GLsizei , GLsizei , GLenum );
# 848 "./sdk/GL/glew.h"
extern "C" void glCopyTexImage1D(GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLint );
# 849 "./sdk/GL/glew.h"
extern "C" void glCopyTexImage2D(GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLsizei , GLint );
# 850 "./sdk/GL/glew.h"
extern "C" void glCopyTexSubImage1D(GLenum , GLint , GLint , GLint , GLint , GLsizei );
# 851 "./sdk/GL/glew.h"
extern "C" void glCopyTexSubImage2D(GLenum , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei );
# 852 "./sdk/GL/glew.h"
extern "C" void glCullFace(GLenum );
# 853 "./sdk/GL/glew.h"
extern "C" void glDeleteLists(GLuint , GLsizei );
# 854 "./sdk/GL/glew.h"
extern "C" void glDeleteTextures(GLsizei , const GLuint * );
# 855 "./sdk/GL/glew.h"
extern "C" void glDepthFunc(GLenum );
# 856 "./sdk/GL/glew.h"
extern "C" void glDepthMask(GLboolean );
# 857 "./sdk/GL/glew.h"
extern "C" void glDepthRange(GLclampd , GLclampd );
# 858 "./sdk/GL/glew.h"
extern "C" void glDisable(GLenum );
# 859 "./sdk/GL/glew.h"
extern "C" void glDisableClientState(GLenum );
# 860 "./sdk/GL/glew.h"
extern "C" void glDrawArrays(GLenum , GLint , GLsizei );
# 861 "./sdk/GL/glew.h"
extern "C" void glDrawBuffer(GLenum );
# 862 "./sdk/GL/glew.h"
extern "C" void glDrawElements(GLenum , GLsizei , GLenum , const GLvoid * );
# 863 "./sdk/GL/glew.h"
extern "C" void glDrawPixels(GLsizei , GLsizei , GLenum , GLenum , const GLvoid * );
# 864 "./sdk/GL/glew.h"
extern "C" void glEdgeFlag(GLboolean );
# 865 "./sdk/GL/glew.h"
extern "C" void glEdgeFlagPointer(GLsizei , const GLvoid * );
# 866 "./sdk/GL/glew.h"
extern "C" void glEdgeFlagv(const GLboolean * );
# 867 "./sdk/GL/glew.h"
extern "C" void glEnable(GLenum );
# 868 "./sdk/GL/glew.h"
extern "C" void glEnableClientState(GLenum );
# 869 "./sdk/GL/glew.h"
extern "C" void glEnd();
# 870 "./sdk/GL/glew.h"
extern "C" void glEndList();
# 871 "./sdk/GL/glew.h"
extern "C" void glEvalCoord1d(GLdouble );
# 872 "./sdk/GL/glew.h"
extern "C" void glEvalCoord1dv(const GLdouble * );
# 873 "./sdk/GL/glew.h"
extern "C" void glEvalCoord1f(GLfloat );
# 874 "./sdk/GL/glew.h"
extern "C" void glEvalCoord1fv(const GLfloat * );
# 875 "./sdk/GL/glew.h"
extern "C" void glEvalCoord2d(GLdouble , GLdouble );
# 876 "./sdk/GL/glew.h"
extern "C" void glEvalCoord2dv(const GLdouble * );
# 877 "./sdk/GL/glew.h"
extern "C" void glEvalCoord2f(GLfloat , GLfloat );
# 878 "./sdk/GL/glew.h"
extern "C" void glEvalCoord2fv(const GLfloat * );
# 879 "./sdk/GL/glew.h"
extern "C" void glEvalMesh1(GLenum , GLint , GLint );
# 880 "./sdk/GL/glew.h"
extern "C" void glEvalMesh2(GLenum , GLint , GLint , GLint , GLint );
# 881 "./sdk/GL/glew.h"
extern "C" void glEvalPoint1(GLint );
# 882 "./sdk/GL/glew.h"
extern "C" void glEvalPoint2(GLint , GLint );
# 883 "./sdk/GL/glew.h"
extern "C" void glFeedbackBuffer(GLsizei , GLenum , GLfloat * );
# 884 "./sdk/GL/glew.h"
extern "C" void glFinish();
# 885 "./sdk/GL/glew.h"
extern "C" void glFlush();
# 886 "./sdk/GL/glew.h"
extern "C" void glFogf(GLenum , GLfloat );
# 887 "./sdk/GL/glew.h"
extern "C" void glFogfv(GLenum , const GLfloat * );
# 888 "./sdk/GL/glew.h"
extern "C" void glFogi(GLenum , GLint );
# 889 "./sdk/GL/glew.h"
extern "C" void glFogiv(GLenum , const GLint * );
# 890 "./sdk/GL/glew.h"
extern "C" void glFrontFace(GLenum );
# 891 "./sdk/GL/glew.h"
extern "C" void glFrustum(GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble );
# 892 "./sdk/GL/glew.h"
extern "C" GLuint glGenLists(GLsizei );
# 893 "./sdk/GL/glew.h"
extern "C" void glGenTextures(GLsizei , GLuint * );
# 894 "./sdk/GL/glew.h"
extern "C" void glGetBooleanv(GLenum , GLboolean * );
# 895 "./sdk/GL/glew.h"
extern "C" void glGetClipPlane(GLenum , GLdouble * );
# 896 "./sdk/GL/glew.h"
extern "C" void glGetDoublev(GLenum , GLdouble * );
# 897 "./sdk/GL/glew.h"
extern "C" GLenum glGetError();
# 898 "./sdk/GL/glew.h"
extern "C" void glGetFloatv(GLenum , GLfloat * );
# 899 "./sdk/GL/glew.h"
extern "C" void glGetIntegerv(GLenum , GLint * );
# 900 "./sdk/GL/glew.h"
extern "C" void glGetLightfv(GLenum , GLenum , GLfloat * );
# 901 "./sdk/GL/glew.h"
extern "C" void glGetLightiv(GLenum , GLenum , GLint * );
# 902 "./sdk/GL/glew.h"
extern "C" void glGetMapdv(GLenum , GLenum , GLdouble * );
# 903 "./sdk/GL/glew.h"
extern "C" void glGetMapfv(GLenum , GLenum , GLfloat * );
# 904 "./sdk/GL/glew.h"
extern "C" void glGetMapiv(GLenum , GLenum , GLint * );
# 905 "./sdk/GL/glew.h"
extern "C" void glGetMaterialfv(GLenum , GLenum , GLfloat * );
# 906 "./sdk/GL/glew.h"
extern "C" void glGetMaterialiv(GLenum , GLenum , GLint * );
# 907 "./sdk/GL/glew.h"
extern "C" void glGetPixelMapfv(GLenum , GLfloat * );
# 908 "./sdk/GL/glew.h"
extern "C" void glGetPixelMapuiv(GLenum , GLuint * );
# 909 "./sdk/GL/glew.h"
extern "C" void glGetPixelMapusv(GLenum , GLushort * );
# 910 "./sdk/GL/glew.h"
extern "C" void glGetPointerv(GLenum , GLvoid ** );
# 911 "./sdk/GL/glew.h"
extern "C" void glGetPolygonStipple(GLubyte * );
# 912 "./sdk/GL/glew.h"
extern "C" const GLubyte *glGetString(GLenum );
# 913 "./sdk/GL/glew.h"
extern "C" void glGetTexEnvfv(GLenum , GLenum , GLfloat * );
# 914 "./sdk/GL/glew.h"
extern "C" void glGetTexEnviv(GLenum , GLenum , GLint * );
# 915 "./sdk/GL/glew.h"
extern "C" void glGetTexGendv(GLenum , GLenum , GLdouble * );
# 916 "./sdk/GL/glew.h"
extern "C" void glGetTexGenfv(GLenum , GLenum , GLfloat * );
# 917 "./sdk/GL/glew.h"
extern "C" void glGetTexGeniv(GLenum , GLenum , GLint * );
# 918 "./sdk/GL/glew.h"
extern "C" void glGetTexImage(GLenum , GLint , GLenum , GLenum , GLvoid * );
# 919 "./sdk/GL/glew.h"
extern "C" void glGetTexLevelParameterfv(GLenum , GLint , GLenum , GLfloat * );
# 920 "./sdk/GL/glew.h"
extern "C" void glGetTexLevelParameteriv(GLenum , GLint , GLenum , GLint * );
# 921 "./sdk/GL/glew.h"
extern "C" void glGetTexParameterfv(GLenum , GLenum , GLfloat * );
# 922 "./sdk/GL/glew.h"
extern "C" void glGetTexParameteriv(GLenum , GLenum , GLint * );
# 923 "./sdk/GL/glew.h"
extern "C" void glHint(GLenum , GLenum );
# 924 "./sdk/GL/glew.h"
extern "C" void glIndexMask(GLuint );
# 925 "./sdk/GL/glew.h"
extern "C" void glIndexPointer(GLenum , GLsizei , const GLvoid * );
# 926 "./sdk/GL/glew.h"
extern "C" void glIndexd(GLdouble );
# 927 "./sdk/GL/glew.h"
extern "C" void glIndexdv(const GLdouble * );
# 928 "./sdk/GL/glew.h"
extern "C" void glIndexf(GLfloat );
# 929 "./sdk/GL/glew.h"
extern "C" void glIndexfv(const GLfloat * );
# 930 "./sdk/GL/glew.h"
extern "C" void glIndexi(GLint );
# 931 "./sdk/GL/glew.h"
extern "C" void glIndexiv(const GLint * );
# 932 "./sdk/GL/glew.h"
extern "C" void glIndexs(GLshort );
# 933 "./sdk/GL/glew.h"
extern "C" void glIndexsv(const GLshort * );
# 934 "./sdk/GL/glew.h"
extern "C" void glIndexub(GLubyte );
# 935 "./sdk/GL/glew.h"
extern "C" void glIndexubv(const GLubyte * );
# 936 "./sdk/GL/glew.h"
extern "C" void glInitNames();
# 937 "./sdk/GL/glew.h"
extern "C" void glInterleavedArrays(GLenum , GLsizei , const GLvoid * );
# 938 "./sdk/GL/glew.h"
extern "C" GLboolean glIsEnabled(GLenum );
# 939 "./sdk/GL/glew.h"
extern "C" GLboolean glIsList(GLuint );
# 940 "./sdk/GL/glew.h"
extern "C" GLboolean glIsTexture(GLuint );
# 941 "./sdk/GL/glew.h"
extern "C" void glLightModelf(GLenum , GLfloat );
# 942 "./sdk/GL/glew.h"
extern "C" void glLightModelfv(GLenum , const GLfloat * );
# 943 "./sdk/GL/glew.h"
extern "C" void glLightModeli(GLenum , GLint );
# 944 "./sdk/GL/glew.h"
extern "C" void glLightModeliv(GLenum , const GLint * );
# 945 "./sdk/GL/glew.h"
extern "C" void glLightf(GLenum , GLenum , GLfloat );
# 946 "./sdk/GL/glew.h"
extern "C" void glLightfv(GLenum , GLenum , const GLfloat * );
# 947 "./sdk/GL/glew.h"
extern "C" void glLighti(GLenum , GLenum , GLint );
# 948 "./sdk/GL/glew.h"
extern "C" void glLightiv(GLenum , GLenum , const GLint * );
# 949 "./sdk/GL/glew.h"
extern "C" void glLineStipple(GLint , GLushort );
# 950 "./sdk/GL/glew.h"
extern "C" void glLineWidth(GLfloat );
# 951 "./sdk/GL/glew.h"
extern "C" void glListBase(GLuint );
# 952 "./sdk/GL/glew.h"
extern "C" void glLoadIdentity();
# 953 "./sdk/GL/glew.h"
extern "C" void glLoadMatrixd(const GLdouble * );
# 954 "./sdk/GL/glew.h"
extern "C" void glLoadMatrixf(const GLfloat * );
# 955 "./sdk/GL/glew.h"
extern "C" void glLoadName(GLuint );
# 956 "./sdk/GL/glew.h"
extern "C" void glLogicOp(GLenum );
# 957 "./sdk/GL/glew.h"
extern "C" void glMap1d(GLenum , GLdouble , GLdouble , GLint , GLint , const GLdouble * );
# 958 "./sdk/GL/glew.h"
extern "C" void glMap1f(GLenum , GLfloat , GLfloat , GLint , GLint , const GLfloat * );
# 959 "./sdk/GL/glew.h"
extern "C" void glMap2d(GLenum , GLdouble , GLdouble , GLint , GLint , GLdouble , GLdouble , GLint , GLint , const GLdouble * );
# 960 "./sdk/GL/glew.h"
extern "C" void glMap2f(GLenum , GLfloat , GLfloat , GLint , GLint , GLfloat , GLfloat , GLint , GLint , const GLfloat * );
# 961 "./sdk/GL/glew.h"
extern "C" void glMapGrid1d(GLint , GLdouble , GLdouble );
# 962 "./sdk/GL/glew.h"
extern "C" void glMapGrid1f(GLint , GLfloat , GLfloat );
# 963 "./sdk/GL/glew.h"
extern "C" void glMapGrid2d(GLint , GLdouble , GLdouble , GLint , GLdouble , GLdouble );
# 964 "./sdk/GL/glew.h"
extern "C" void glMapGrid2f(GLint , GLfloat , GLfloat , GLint , GLfloat , GLfloat );
# 965 "./sdk/GL/glew.h"
extern "C" void glMaterialf(GLenum , GLenum , GLfloat );
# 966 "./sdk/GL/glew.h"
extern "C" void glMaterialfv(GLenum , GLenum , const GLfloat * );
# 967 "./sdk/GL/glew.h"
extern "C" void glMateriali(GLenum , GLenum , GLint );
# 968 "./sdk/GL/glew.h"
extern "C" void glMaterialiv(GLenum , GLenum , const GLint * );
# 969 "./sdk/GL/glew.h"
extern "C" void glMatrixMode(GLenum );
# 970 "./sdk/GL/glew.h"
extern "C" void glMultMatrixd(const GLdouble * );
# 971 "./sdk/GL/glew.h"
extern "C" void glMultMatrixf(const GLfloat * );
# 972 "./sdk/GL/glew.h"
extern "C" void glNewList(GLuint , GLenum );
# 973 "./sdk/GL/glew.h"
extern "C" void glNormal3b(GLbyte , GLbyte , GLbyte );
# 974 "./sdk/GL/glew.h"
extern "C" void glNormal3bv(const GLbyte * );
# 975 "./sdk/GL/glew.h"
extern "C" void glNormal3d(GLdouble , GLdouble , GLdouble );
# 976 "./sdk/GL/glew.h"
extern "C" void glNormal3dv(const GLdouble * );
# 977 "./sdk/GL/glew.h"
extern "C" void glNormal3f(GLfloat , GLfloat , GLfloat );
# 978 "./sdk/GL/glew.h"
extern "C" void glNormal3fv(const GLfloat * );
# 979 "./sdk/GL/glew.h"
extern "C" void glNormal3i(GLint , GLint , GLint );
# 980 "./sdk/GL/glew.h"
extern "C" void glNormal3iv(const GLint * );
# 981 "./sdk/GL/glew.h"
extern "C" void glNormal3s(GLshort , GLshort , GLshort );
# 982 "./sdk/GL/glew.h"
extern "C" void glNormal3sv(const GLshort * );
# 983 "./sdk/GL/glew.h"
extern "C" void glNormalPointer(GLenum , GLsizei , const GLvoid * );
# 984 "./sdk/GL/glew.h"
extern "C" void glOrtho(GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble );
# 985 "./sdk/GL/glew.h"
extern "C" void glPassThrough(GLfloat );
# 986 "./sdk/GL/glew.h"
extern "C" void glPixelMapfv(GLenum , GLsizei , const GLfloat * );
# 987 "./sdk/GL/glew.h"
extern "C" void glPixelMapuiv(GLenum , GLsizei , const GLuint * );
# 988 "./sdk/GL/glew.h"
extern "C" void glPixelMapusv(GLenum , GLsizei , const GLushort * );
# 989 "./sdk/GL/glew.h"
extern "C" void glPixelStoref(GLenum , GLfloat );
# 990 "./sdk/GL/glew.h"
extern "C" void glPixelStorei(GLenum , GLint );
# 991 "./sdk/GL/glew.h"
extern "C" void glPixelTransferf(GLenum , GLfloat );
# 992 "./sdk/GL/glew.h"
extern "C" void glPixelTransferi(GLenum , GLint );
# 993 "./sdk/GL/glew.h"
extern "C" void glPixelZoom(GLfloat , GLfloat );
# 994 "./sdk/GL/glew.h"
extern "C" void glPointSize(GLfloat );
# 995 "./sdk/GL/glew.h"
extern "C" void glPolygonMode(GLenum , GLenum );
# 996 "./sdk/GL/glew.h"
extern "C" void glPolygonOffset(GLfloat , GLfloat );
# 997 "./sdk/GL/glew.h"
extern "C" void glPolygonStipple(const GLubyte * );
# 998 "./sdk/GL/glew.h"
extern "C" void glPopAttrib();
# 999 "./sdk/GL/glew.h"
extern "C" void glPopClientAttrib();
# 1000 "./sdk/GL/glew.h"
extern "C" void glPopMatrix();
# 1001 "./sdk/GL/glew.h"
extern "C" void glPopName();
# 1002 "./sdk/GL/glew.h"
extern "C" void glPrioritizeTextures(GLsizei , const GLuint * , const GLclampf * );
# 1003 "./sdk/GL/glew.h"
extern "C" void glPushAttrib(GLbitfield );
# 1004 "./sdk/GL/glew.h"
extern "C" void glPushClientAttrib(GLbitfield );
# 1005 "./sdk/GL/glew.h"
extern "C" void glPushMatrix();
# 1006 "./sdk/GL/glew.h"
extern "C" void glPushName(GLuint );
# 1007 "./sdk/GL/glew.h"
extern "C" void glRasterPos2d(GLdouble , GLdouble );
# 1008 "./sdk/GL/glew.h"
extern "C" void glRasterPos2dv(const GLdouble * );
# 1009 "./sdk/GL/glew.h"
extern "C" void glRasterPos2f(GLfloat , GLfloat );
# 1010 "./sdk/GL/glew.h"
extern "C" void glRasterPos2fv(const GLfloat * );
# 1011 "./sdk/GL/glew.h"
extern "C" void glRasterPos2i(GLint , GLint );
# 1012 "./sdk/GL/glew.h"
extern "C" void glRasterPos2iv(const GLint * );
# 1013 "./sdk/GL/glew.h"
extern "C" void glRasterPos2s(GLshort , GLshort );
# 1014 "./sdk/GL/glew.h"
extern "C" void glRasterPos2sv(const GLshort * );
# 1015 "./sdk/GL/glew.h"
extern "C" void glRasterPos3d(GLdouble , GLdouble , GLdouble );
# 1016 "./sdk/GL/glew.h"
extern "C" void glRasterPos3dv(const GLdouble * );
# 1017 "./sdk/GL/glew.h"
extern "C" void glRasterPos3f(GLfloat , GLfloat , GLfloat );
# 1018 "./sdk/GL/glew.h"
extern "C" void glRasterPos3fv(const GLfloat * );
# 1019 "./sdk/GL/glew.h"
extern "C" void glRasterPos3i(GLint , GLint , GLint );
# 1020 "./sdk/GL/glew.h"
extern "C" void glRasterPos3iv(const GLint * );
# 1021 "./sdk/GL/glew.h"
extern "C" void glRasterPos3s(GLshort , GLshort , GLshort );
# 1022 "./sdk/GL/glew.h"
extern "C" void glRasterPos3sv(const GLshort * );
# 1023 "./sdk/GL/glew.h"
extern "C" void glRasterPos4d(GLdouble , GLdouble , GLdouble , GLdouble );
# 1024 "./sdk/GL/glew.h"
extern "C" void glRasterPos4dv(const GLdouble * );
# 1025 "./sdk/GL/glew.h"
extern "C" void glRasterPos4f(GLfloat , GLfloat , GLfloat , GLfloat );
# 1026 "./sdk/GL/glew.h"
extern "C" void glRasterPos4fv(const GLfloat * );
# 1027 "./sdk/GL/glew.h"
extern "C" void glRasterPos4i(GLint , GLint , GLint , GLint );
# 1028 "./sdk/GL/glew.h"
extern "C" void glRasterPos4iv(const GLint * );
# 1029 "./sdk/GL/glew.h"
extern "C" void glRasterPos4s(GLshort , GLshort , GLshort , GLshort );
# 1030 "./sdk/GL/glew.h"
extern "C" void glRasterPos4sv(const GLshort * );
# 1031 "./sdk/GL/glew.h"
extern "C" void glReadBuffer(GLenum );
# 1032 "./sdk/GL/glew.h"
extern "C" void glReadPixels(GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , GLvoid * );
# 1033 "./sdk/GL/glew.h"
extern "C" void glRectd(GLdouble , GLdouble , GLdouble , GLdouble );
# 1034 "./sdk/GL/glew.h"
extern "C" void glRectdv(const GLdouble * , const GLdouble * );
# 1035 "./sdk/GL/glew.h"
extern "C" void glRectf(GLfloat , GLfloat , GLfloat , GLfloat );
# 1036 "./sdk/GL/glew.h"
extern "C" void glRectfv(const GLfloat * , const GLfloat * );
# 1037 "./sdk/GL/glew.h"
extern "C" void glRecti(GLint , GLint , GLint , GLint );
# 1038 "./sdk/GL/glew.h"
extern "C" void glRectiv(const GLint * , const GLint * );
# 1039 "./sdk/GL/glew.h"
extern "C" void glRects(GLshort , GLshort , GLshort , GLshort );
# 1040 "./sdk/GL/glew.h"
extern "C" void glRectsv(const GLshort * , const GLshort * );
# 1041 "./sdk/GL/glew.h"
extern "C" GLint glRenderMode(GLenum );
# 1042 "./sdk/GL/glew.h"
extern "C" void glRotated(GLdouble , GLdouble , GLdouble , GLdouble );
# 1043 "./sdk/GL/glew.h"
extern "C" void glRotatef(GLfloat , GLfloat , GLfloat , GLfloat );
# 1044 "./sdk/GL/glew.h"
extern "C" void glScaled(GLdouble , GLdouble , GLdouble );
# 1045 "./sdk/GL/glew.h"
extern "C" void glScalef(GLfloat , GLfloat , GLfloat );
# 1046 "./sdk/GL/glew.h"
extern "C" void glScissor(GLint , GLint , GLsizei , GLsizei );
# 1047 "./sdk/GL/glew.h"
extern "C" void glSelectBuffer(GLsizei , GLuint * );
# 1048 "./sdk/GL/glew.h"
extern "C" void glShadeModel(GLenum );
# 1049 "./sdk/GL/glew.h"
extern "C" void glStencilFunc(GLenum , GLint , GLuint );
# 1050 "./sdk/GL/glew.h"
extern "C" void glStencilMask(GLuint );
# 1051 "./sdk/GL/glew.h"
extern "C" void glStencilOp(GLenum , GLenum , GLenum );
# 1052 "./sdk/GL/glew.h"
extern "C" void glTexCoord1d(GLdouble );
# 1053 "./sdk/GL/glew.h"
extern "C" void glTexCoord1dv(const GLdouble * );
# 1054 "./sdk/GL/glew.h"
extern "C" void glTexCoord1f(GLfloat );
# 1055 "./sdk/GL/glew.h"
extern "C" void glTexCoord1fv(const GLfloat * );
# 1056 "./sdk/GL/glew.h"
extern "C" void glTexCoord1i(GLint );
# 1057 "./sdk/GL/glew.h"
extern "C" void glTexCoord1iv(const GLint * );
# 1058 "./sdk/GL/glew.h"
extern "C" void glTexCoord1s(GLshort );
# 1059 "./sdk/GL/glew.h"
extern "C" void glTexCoord1sv(const GLshort * );
# 1060 "./sdk/GL/glew.h"
extern "C" void glTexCoord2d(GLdouble , GLdouble );
# 1061 "./sdk/GL/glew.h"
extern "C" void glTexCoord2dv(const GLdouble * );
# 1062 "./sdk/GL/glew.h"
extern "C" void glTexCoord2f(GLfloat , GLfloat );
# 1063 "./sdk/GL/glew.h"
extern "C" void glTexCoord2fv(const GLfloat * );
# 1064 "./sdk/GL/glew.h"
extern "C" void glTexCoord2i(GLint , GLint );
# 1065 "./sdk/GL/glew.h"
extern "C" void glTexCoord2iv(const GLint * );
# 1066 "./sdk/GL/glew.h"
extern "C" void glTexCoord2s(GLshort , GLshort );
# 1067 "./sdk/GL/glew.h"
extern "C" void glTexCoord2sv(const GLshort * );
# 1068 "./sdk/GL/glew.h"
extern "C" void glTexCoord3d(GLdouble , GLdouble , GLdouble );
# 1069 "./sdk/GL/glew.h"
extern "C" void glTexCoord3dv(const GLdouble * );
# 1070 "./sdk/GL/glew.h"
extern "C" void glTexCoord3f(GLfloat , GLfloat , GLfloat );
# 1071 "./sdk/GL/glew.h"
extern "C" void glTexCoord3fv(const GLfloat * );
# 1072 "./sdk/GL/glew.h"
extern "C" void glTexCoord3i(GLint , GLint , GLint );
# 1073 "./sdk/GL/glew.h"
extern "C" void glTexCoord3iv(const GLint * );
# 1074 "./sdk/GL/glew.h"
extern "C" void glTexCoord3s(GLshort , GLshort , GLshort );
# 1075 "./sdk/GL/glew.h"
extern "C" void glTexCoord3sv(const GLshort * );
# 1076 "./sdk/GL/glew.h"
extern "C" void glTexCoord4d(GLdouble , GLdouble , GLdouble , GLdouble );
# 1077 "./sdk/GL/glew.h"
extern "C" void glTexCoord4dv(const GLdouble * );
# 1078 "./sdk/GL/glew.h"
extern "C" void glTexCoord4f(GLfloat , GLfloat , GLfloat , GLfloat );
# 1079 "./sdk/GL/glew.h"
extern "C" void glTexCoord4fv(const GLfloat * );
# 1080 "./sdk/GL/glew.h"
extern "C" void glTexCoord4i(GLint , GLint , GLint , GLint );
# 1081 "./sdk/GL/glew.h"
extern "C" void glTexCoord4iv(const GLint * );
# 1082 "./sdk/GL/glew.h"
extern "C" void glTexCoord4s(GLshort , GLshort , GLshort , GLshort );
# 1083 "./sdk/GL/glew.h"
extern "C" void glTexCoord4sv(const GLshort * );
# 1084 "./sdk/GL/glew.h"
extern "C" void glTexCoordPointer(GLint , GLenum , GLsizei , const GLvoid * );
# 1085 "./sdk/GL/glew.h"
extern "C" void glTexEnvf(GLenum , GLenum , GLfloat );
# 1086 "./sdk/GL/glew.h"
extern "C" void glTexEnvfv(GLenum , GLenum , const GLfloat * );
# 1087 "./sdk/GL/glew.h"
extern "C" void glTexEnvi(GLenum , GLenum , GLint );
# 1088 "./sdk/GL/glew.h"
extern "C" void glTexEnviv(GLenum , GLenum , const GLint * );
# 1089 "./sdk/GL/glew.h"
extern "C" void glTexGend(GLenum , GLenum , GLdouble );
# 1090 "./sdk/GL/glew.h"
extern "C" void glTexGendv(GLenum , GLenum , const GLdouble * );
# 1091 "./sdk/GL/glew.h"
extern "C" void glTexGenf(GLenum , GLenum , GLfloat );
# 1092 "./sdk/GL/glew.h"
extern "C" void glTexGenfv(GLenum , GLenum , const GLfloat * );
# 1093 "./sdk/GL/glew.h"
extern "C" void glTexGeni(GLenum , GLenum , GLint );
# 1094 "./sdk/GL/glew.h"
extern "C" void glTexGeniv(GLenum , GLenum , const GLint * );
# 1095 "./sdk/GL/glew.h"
extern "C" void glTexImage1D(GLenum , GLint , GLint , GLsizei , GLint , GLenum , GLenum , const GLvoid * );
# 1096 "./sdk/GL/glew.h"
extern "C" void glTexImage2D(GLenum , GLint , GLint , GLsizei , GLsizei , GLint , GLenum , GLenum , const GLvoid * );
# 1097 "./sdk/GL/glew.h"
extern "C" void glTexParameterf(GLenum , GLenum , GLfloat );
# 1098 "./sdk/GL/glew.h"
extern "C" void glTexParameterfv(GLenum , GLenum , const GLfloat * );
# 1099 "./sdk/GL/glew.h"
extern "C" void glTexParameteri(GLenum , GLenum , GLint );
# 1100 "./sdk/GL/glew.h"
extern "C" void glTexParameteriv(GLenum , GLenum , const GLint * );
# 1101 "./sdk/GL/glew.h"
extern "C" void glTexSubImage1D(GLenum , GLint , GLint , GLsizei , GLenum , GLenum , const GLvoid * );
# 1102 "./sdk/GL/glew.h"
extern "C" void glTexSubImage2D(GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , const GLvoid * );
# 1103 "./sdk/GL/glew.h"
extern "C" void glTranslated(GLdouble , GLdouble , GLdouble );
# 1104 "./sdk/GL/glew.h"
extern "C" void glTranslatef(GLfloat , GLfloat , GLfloat );
# 1105 "./sdk/GL/glew.h"
extern "C" void glVertex2d(GLdouble , GLdouble );
# 1106 "./sdk/GL/glew.h"
extern "C" void glVertex2dv(const GLdouble * );
# 1107 "./sdk/GL/glew.h"
extern "C" void glVertex2f(GLfloat , GLfloat );
# 1108 "./sdk/GL/glew.h"
extern "C" void glVertex2fv(const GLfloat * );
# 1109 "./sdk/GL/glew.h"
extern "C" void glVertex2i(GLint , GLint );
# 1110 "./sdk/GL/glew.h"
extern "C" void glVertex2iv(const GLint * );
# 1111 "./sdk/GL/glew.h"
extern "C" void glVertex2s(GLshort , GLshort );
# 1112 "./sdk/GL/glew.h"
extern "C" void glVertex2sv(const GLshort * );
# 1113 "./sdk/GL/glew.h"
extern "C" void glVertex3d(GLdouble , GLdouble , GLdouble );
# 1114 "./sdk/GL/glew.h"
extern "C" void glVertex3dv(const GLdouble * );
# 1115 "./sdk/GL/glew.h"
extern "C" void glVertex3f(GLfloat , GLfloat , GLfloat );
# 1116 "./sdk/GL/glew.h"
extern "C" void glVertex3fv(const GLfloat * );
# 1117 "./sdk/GL/glew.h"
extern "C" void glVertex3i(GLint , GLint , GLint );
# 1118 "./sdk/GL/glew.h"
extern "C" void glVertex3iv(const GLint * );
# 1119 "./sdk/GL/glew.h"
extern "C" void glVertex3s(GLshort , GLshort , GLshort );
# 1120 "./sdk/GL/glew.h"
extern "C" void glVertex3sv(const GLshort * );
# 1121 "./sdk/GL/glew.h"
extern "C" void glVertex4d(GLdouble , GLdouble , GLdouble , GLdouble );
# 1122 "./sdk/GL/glew.h"
extern "C" void glVertex4dv(const GLdouble * );
# 1123 "./sdk/GL/glew.h"
extern "C" void glVertex4f(GLfloat , GLfloat , GLfloat , GLfloat );
# 1124 "./sdk/GL/glew.h"
extern "C" void glVertex4fv(const GLfloat * );
# 1125 "./sdk/GL/glew.h"
extern "C" void glVertex4i(GLint , GLint , GLint , GLint );
# 1126 "./sdk/GL/glew.h"
extern "C" void glVertex4iv(const GLint * );
# 1127 "./sdk/GL/glew.h"
extern "C" void glVertex4s(GLshort , GLshort , GLshort , GLshort );
# 1128 "./sdk/GL/glew.h"
extern "C" void glVertex4sv(const GLshort * );
# 1129 "./sdk/GL/glew.h"
extern "C" void glVertexPointer(GLint , GLenum , GLsizei , const GLvoid * );
# 1130 "./sdk/GL/glew.h"
extern "C" void glViewport(GLint , GLint , GLsizei , GLsizei );
# 266 "./shared/GL/glu.h"
class GLUnurbs;
# 267 "./shared/GL/glu.h"
class GLUquadric;
# 268 "./shared/GL/glu.h"
class GLUtesselator;
# 275 "./shared/GL/glu.h"
extern "C" { typedef GLUnurbs GLUnurbsObj; }
# 276 "./shared/GL/glu.h"
extern "C" { typedef GLUquadric GLUquadricObj; }
# 277 "./shared/GL/glu.h"
extern "C" { typedef GLUtesselator GLUtesselatorObj; }
# 278 "./shared/GL/glu.h"
extern "C" { typedef GLUtesselator GLUtriangulatorObj; }
# 283 "./shared/GL/glu.h"
extern "C" { typedef void (*_GLUfuncptr)(void); }
# 285 "./shared/GL/glu.h"
extern "C" void gluBeginCurve(GLUnurbs * );
# 286 "./shared/GL/glu.h"
extern "C" void gluBeginPolygon(GLUtesselator * );
# 287 "./shared/GL/glu.h"
extern "C" void gluBeginSurface(GLUnurbs * );
# 288 "./shared/GL/glu.h"
extern "C" void gluBeginTrim(GLUnurbs * );
# 289 "./shared/GL/glu.h"
extern "C" GLint gluBuild1DMipmapLevels(GLenum , GLint , GLsizei , GLenum , GLenum , GLint , GLint , GLint , const void * );
# 290 "./shared/GL/glu.h"
extern "C" GLint gluBuild1DMipmaps(GLenum , GLint , GLsizei , GLenum , GLenum , const void * );
# 291 "./shared/GL/glu.h"
extern "C" GLint gluBuild2DMipmapLevels(GLenum , GLint , GLsizei , GLsizei , GLenum , GLenum , GLint , GLint , GLint , const void * );
# 292 "./shared/GL/glu.h"
extern "C" GLint gluBuild2DMipmaps(GLenum , GLint , GLsizei , GLsizei , GLenum , GLenum , const void * );
# 293 "./shared/GL/glu.h"
extern "C" GLint gluBuild3DMipmapLevels(GLenum , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , GLint , GLint , GLint , const void * );
# 294 "./shared/GL/glu.h"
extern "C" GLint gluBuild3DMipmaps(GLenum , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const void * );
# 295 "./shared/GL/glu.h"
extern "C" GLboolean gluCheckExtension(const GLubyte * , const GLubyte * );
# 296 "./shared/GL/glu.h"
extern "C" void gluCylinder(GLUquadric * , GLdouble , GLdouble , GLdouble , GLint , GLint );
# 297 "./shared/GL/glu.h"
extern "C" void gluDeleteNurbsRenderer(GLUnurbs * );
# 298 "./shared/GL/glu.h"
extern "C" void gluDeleteQuadric(GLUquadric * );
# 299 "./shared/GL/glu.h"
extern "C" void gluDeleteTess(GLUtesselator * );
# 300 "./shared/GL/glu.h"
extern "C" void gluDisk(GLUquadric * , GLdouble , GLdouble , GLint , GLint );
# 301 "./shared/GL/glu.h"
extern "C" void gluEndCurve(GLUnurbs * );
# 302 "./shared/GL/glu.h"
extern "C" void gluEndPolygon(GLUtesselator * );
# 303 "./shared/GL/glu.h"
extern "C" void gluEndSurface(GLUnurbs * );
# 304 "./shared/GL/glu.h"
extern "C" void gluEndTrim(GLUnurbs * );
# 305 "./shared/GL/glu.h"
extern "C" const GLubyte *gluErrorString(GLenum );
# 306 "./shared/GL/glu.h"
extern "C" void gluGetNurbsProperty(GLUnurbs * , GLenum , GLfloat * );
# 307 "./shared/GL/glu.h"
extern "C" const GLubyte *gluGetString(GLenum );
# 308 "./shared/GL/glu.h"
extern "C" void gluGetTessProperty(GLUtesselator * , GLenum , GLdouble * );
# 309 "./shared/GL/glu.h"
extern "C" void gluLoadSamplingMatrices(GLUnurbs * , const GLfloat * , const GLfloat * , const GLint * );
# 310 "./shared/GL/glu.h"
extern "C" void gluLookAt(GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble );
# 311 "./shared/GL/glu.h"
extern "C" GLUnurbs *gluNewNurbsRenderer();
# 312 "./shared/GL/glu.h"
extern "C" GLUquadric *gluNewQuadric();
# 313 "./shared/GL/glu.h"
extern "C" GLUtesselator *gluNewTess();
# 314 "./shared/GL/glu.h"
extern "C" void gluNextContour(GLUtesselator * , GLenum );
# 315 "./shared/GL/glu.h"
extern "C" void gluNurbsCallback(GLUnurbs * , GLenum , _GLUfuncptr );
# 316 "./shared/GL/glu.h"
extern "C" void gluNurbsCallbackData(GLUnurbs * , GLvoid * );
# 317 "./shared/GL/glu.h"
extern "C" void gluNurbsCallbackDataEXT(GLUnurbs * , GLvoid * );
# 318 "./shared/GL/glu.h"
extern "C" void gluNurbsCurve(GLUnurbs * , GLint , GLfloat * , GLint , GLfloat * , GLint , GLenum );
# 319 "./shared/GL/glu.h"
extern "C" void gluNurbsProperty(GLUnurbs * , GLenum , GLfloat );
# 320 "./shared/GL/glu.h"
extern "C" void gluNurbsSurface(GLUnurbs * , GLint , GLfloat * , GLint , GLfloat * , GLint , GLint , GLfloat * , GLint , GLint , GLenum );
# 321 "./shared/GL/glu.h"
extern "C" void gluOrtho2D(GLdouble , GLdouble , GLdouble , GLdouble );
# 322 "./shared/GL/glu.h"
extern "C" void gluPartialDisk(GLUquadric * , GLdouble , GLdouble , GLint , GLint , GLdouble , GLdouble );
# 323 "./shared/GL/glu.h"
extern "C" void gluPerspective(GLdouble , GLdouble , GLdouble , GLdouble );
# 324 "./shared/GL/glu.h"
extern "C" void gluPickMatrix(GLdouble , GLdouble , GLdouble , GLdouble , GLint * );
# 325 "./shared/GL/glu.h"
extern "C" GLint gluProject(GLdouble , GLdouble , GLdouble , const GLdouble * , const GLdouble * , const GLint * , GLdouble * , GLdouble * , GLdouble * );
# 326 "./shared/GL/glu.h"
extern "C" void gluPwlCurve(GLUnurbs * , GLint , GLfloat * , GLint , GLenum );
# 327 "./shared/GL/glu.h"
extern "C" void gluQuadricCallback(GLUquadric * , GLenum , _GLUfuncptr );
# 328 "./shared/GL/glu.h"
extern "C" void gluQuadricDrawStyle(GLUquadric * , GLenum );
# 329 "./shared/GL/glu.h"
extern "C" void gluQuadricNormals(GLUquadric * , GLenum );
# 330 "./shared/GL/glu.h"
extern "C" void gluQuadricOrientation(GLUquadric * , GLenum );
# 331 "./shared/GL/glu.h"
extern "C" void gluQuadricTexture(GLUquadric * , GLboolean );
# 332 "./shared/GL/glu.h"
extern "C" GLint gluScaleImage(GLenum , GLsizei , GLsizei , GLenum , const void * , GLsizei , GLsizei , GLenum , GLvoid * );
# 333 "./shared/GL/glu.h"
extern "C" void gluSphere(GLUquadric * , GLdouble , GLint , GLint );
# 334 "./shared/GL/glu.h"
extern "C" void gluTessBeginContour(GLUtesselator * );
# 335 "./shared/GL/glu.h"
extern "C" void gluTessBeginPolygon(GLUtesselator * , GLvoid * );
# 336 "./shared/GL/glu.h"
extern "C" void gluTessCallback(GLUtesselator * , GLenum , _GLUfuncptr );
# 337 "./shared/GL/glu.h"
extern "C" void gluTessEndContour(GLUtesselator * );
# 338 "./shared/GL/glu.h"
extern "C" void gluTessEndPolygon(GLUtesselator * );
# 339 "./shared/GL/glu.h"
extern "C" void gluTessNormal(GLUtesselator * , GLdouble , GLdouble , GLdouble );
# 340 "./shared/GL/glu.h"
extern "C" void gluTessProperty(GLUtesselator * , GLenum , GLdouble );
# 341 "./shared/GL/glu.h"
extern "C" void gluTessVertex(GLUtesselator * , GLdouble * , GLvoid * );
# 342 "./shared/GL/glu.h"
extern "C" GLint gluUnProject(GLdouble , GLdouble , GLdouble , const GLdouble * , const GLdouble * , const GLint * , GLdouble * , GLdouble * , GLdouble * );
# 343 "./shared/GL/glu.h"
extern "C" GLint gluUnProject4(GLdouble , GLdouble , GLdouble , GLdouble , const GLdouble * , const GLdouble * , const GLint * , GLdouble , GLdouble , GLdouble * , GLdouble * , GLdouble * , GLdouble * );
# 1192 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum , GLint , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 1193 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWRANGEELEMENTSPROC)(GLenum , GLuint , GLuint , GLsizei , GLenum , const GLvoid * ); }
# 1194 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE3DPROC)(GLenum , GLint , GLint , GLsizei , GLsizei , GLsizei , GLint , GLenum , GLenum , const GLvoid * ); }
# 1195 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSUBIMAGE3DPROC)(GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const GLvoid * ); }
# 1308 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLACTIVETEXTUREPROC)(GLenum ); }
# 1309 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLIENTACTIVETEXTUREPROC)(GLenum ); }
# 1310 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum , GLint , GLenum , GLsizei , GLint , GLsizei , const GLvoid * ); }
# 1311 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLint , GLsizei , const GLvoid * ); }
# 1312 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLint , GLsizei , const GLvoid * ); }
# 1313 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum , GLint , GLint , GLsizei , GLenum , GLsizei , const GLvoid * ); }
# 1314 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLsizei , const GLvoid * ); }
# 1315 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLsizei , const GLvoid * ); }
# 1316 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum , GLint , GLvoid * ); }
# 1317 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble [16]); }
# 1318 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat [16]); }
# 1319 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble [16]); }
# 1320 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat [16]); }
# 1321 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1DPROC)(GLenum , GLdouble ); }
# 1322 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1DVPROC)(GLenum , const GLdouble * ); }
# 1323 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1FPROC)(GLenum , GLfloat ); }
# 1324 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1FVPROC)(GLenum , const GLfloat * ); }
# 1325 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1IPROC)(GLenum , GLint ); }
# 1326 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1IVPROC)(GLenum , const GLint * ); }
# 1327 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1SPROC)(GLenum , GLshort ); }
# 1328 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1SVPROC)(GLenum , const GLshort * ); }
# 1329 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2DPROC)(GLenum , GLdouble , GLdouble ); }
# 1330 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2DVPROC)(GLenum , const GLdouble * ); }
# 1331 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2FPROC)(GLenum , GLfloat , GLfloat ); }
# 1332 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2FVPROC)(GLenum , const GLfloat * ); }
# 1333 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2IPROC)(GLenum , GLint , GLint ); }
# 1334 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2IVPROC)(GLenum , const GLint * ); }
# 1335 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2SPROC)(GLenum , GLshort , GLshort ); }
# 1336 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2SVPROC)(GLenum , const GLshort * ); }
# 1337 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3DPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 1338 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3DVPROC)(GLenum , const GLdouble * ); }
# 1339 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3FPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 1340 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3FVPROC)(GLenum , const GLfloat * ); }
# 1341 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3IPROC)(GLenum , GLint , GLint , GLint ); }
# 1342 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3IVPROC)(GLenum , const GLint * ); }
# 1343 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3SPROC)(GLenum , GLshort , GLshort , GLshort ); }
# 1344 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3SVPROC)(GLenum , const GLshort * ); }
# 1345 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4DPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 1346 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4DVPROC)(GLenum , const GLdouble * ); }
# 1347 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4FPROC)(GLenum , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 1348 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4FVPROC)(GLenum , const GLfloat * ); }
# 1349 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4IPROC)(GLenum , GLint , GLint , GLint , GLint ); }
# 1350 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4IVPROC)(GLenum , const GLint * ); }
# 1351 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4SPROC)(GLenum , GLshort , GLshort , GLshort , GLshort ); }
# 1352 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4SVPROC)(GLenum , const GLshort * ); }
# 1353 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLECOVERAGEPROC)(GLclampf , GLboolean ); }
# 1451 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDCOLORPROC)(GLclampf , GLclampf , GLclampf , GLclampf ); }
# 1452 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONPROC)(GLenum ); }
# 1453 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCSEPARATEPROC)(GLenum , GLenum , GLenum , GLenum ); }
# 1454 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDPOINTERPROC)(GLenum , GLsizei , const GLvoid * ); }
# 1455 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDDPROC)(GLdouble ); }
# 1456 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDDVPROC)(const GLdouble * ); }
# 1457 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDFPROC)(GLfloat ); }
# 1458 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDFVPROC)(const GLfloat * ); }
# 1459 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWARRAYSPROC)(GLenum , GLint * , GLsizei * , GLsizei ); }
# 1460 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWELEMENTSPROC)(GLenum , GLsizei * , GLenum , const GLvoid ** , GLsizei ); }
# 1461 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFPROC)(GLenum , GLfloat ); }
# 1462 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFVPROC)(GLenum , GLfloat * ); }
# 1463 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERIPROC)(GLenum , GLint ); }
# 1464 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERIVPROC)(GLenum , GLint * ); }
# 1465 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3BPROC)(GLbyte , GLbyte , GLbyte ); }
# 1466 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte * ); }
# 1467 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3DPROC)(GLdouble , GLdouble , GLdouble ); }
# 1468 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble * ); }
# 1469 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3FPROC)(GLfloat , GLfloat , GLfloat ); }
# 1470 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat * ); }
# 1471 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3IPROC)(GLint , GLint , GLint ); }
# 1472 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3IVPROC)(const GLint * ); }
# 1473 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3SPROC)(GLshort , GLshort , GLshort ); }
# 1474 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3SVPROC)(const GLshort * ); }
# 1475 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UBPROC)(GLubyte , GLubyte , GLubyte ); }
# 1476 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte * ); }
# 1477 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UIPROC)(GLuint , GLuint , GLuint ); }
# 1478 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint * ); }
# 1479 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3USPROC)(GLushort , GLushort , GLushort ); }
# 1480 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3USVPROC)(const GLushort * ); }
# 1481 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORPOINTERPROC)(GLint , GLenum , GLsizei , GLvoid * ); }
# 1482 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DPROC)(GLdouble , GLdouble ); }
# 1483 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DVPROC)(const GLdouble * ); }
# 1484 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FPROC)(GLfloat , GLfloat ); }
# 1485 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FVPROC)(const GLfloat * ); }
# 1486 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IPROC)(GLint , GLint ); }
# 1487 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IVPROC)(const GLint * ); }
# 1488 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SPROC)(GLshort , GLshort ); }
# 1489 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SVPROC)(const GLshort * ); }
# 1490 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DPROC)(GLdouble , GLdouble , GLdouble ); }
# 1491 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DVPROC)(const GLdouble * ); }
# 1492 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FPROC)(GLfloat , GLfloat , GLfloat ); }
# 1493 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FVPROC)(const GLfloat * ); }
# 1494 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IPROC)(GLint , GLint , GLint ); }
# 1495 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IVPROC)(const GLint * ); }
# 1496 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SPROC)(GLshort , GLshort , GLshort ); }
# 1497 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SVPROC)(const GLshort * ); }
# 1607 "./sdk/GL/glew.h"
extern "C" { typedef ptrdiff_t GLsizeiptr; }
# 1608 "./sdk/GL/glew.h"
extern "C" { typedef ptrdiff_t GLintptr; }
# 1610 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINQUERYPROC)(GLenum , GLuint ); }
# 1611 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERPROC)(GLenum , GLuint ); }
# 1612 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERDATAPROC)(GLenum , GLsizeiptr , const GLvoid * , GLenum ); }
# 1613 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERSUBDATAPROC)(GLenum , GLintptr , GLsizeiptr , const GLvoid * ); }
# 1614 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEBUFFERSPROC)(GLsizei , const GLuint * ); }
# 1615 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEQUERIESPROC)(GLsizei , const GLuint * ); }
# 1616 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDQUERYPROC)(GLenum ); }
# 1617 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENBUFFERSPROC)(GLsizei , GLuint * ); }
# 1618 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENQUERIESPROC)(GLsizei , GLuint * ); }
# 1619 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 1620 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPOINTERVPROC)(GLenum , GLenum , GLvoid ** ); }
# 1621 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERSUBDATAPROC)(GLenum , GLintptr , GLsizeiptr , GLvoid * ); }
# 1622 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTIVPROC)(GLuint , GLenum , GLint * ); }
# 1623 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTUIVPROC)(GLuint , GLenum , GLuint * ); }
# 1624 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYIVPROC)(GLenum , GLenum , GLint * ); }
# 1625 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISBUFFERPROC)(GLuint ); }
# 1626 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISQUERYPROC)(GLuint ); }
# 1627 "./sdk/GL/glew.h"
extern "C" { typedef GLvoid *(*PFNGLMAPBUFFERPROC)(GLenum , GLenum ); }
# 1628 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLUNMAPBUFFERPROC)(GLenum ); }
# 1744 "./sdk/GL/glew.h"
extern "C" { typedef char GLchar; }
# 1746 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLATTACHSHADERPROC)(GLuint , GLuint ); }
# 1747 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDATTRIBLOCATIONPROC)(GLuint , GLuint , const GLchar * ); }
# 1748 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum, GLenum); }
# 1749 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPILESHADERPROC)(GLuint ); }
# 1750 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLCREATEPROGRAMPROC)(void); }
# 1751 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLCREATESHADERPROC)(GLenum ); }
# 1752 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEPROGRAMPROC)(GLuint ); }
# 1753 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETESHADERPROC)(GLuint ); }
# 1754 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDETACHSHADERPROC)(GLuint , GLuint ); }
# 1755 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint); }
# 1756 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWBUFFERSPROC)(GLsizei , const GLenum * ); }
# 1757 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint); }
# 1758 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEATTRIBPROC)(GLuint , GLuint , GLsizei , GLsizei * , GLint * , GLenum * , GLchar * ); }
# 1759 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMPROC)(GLuint , GLuint , GLsizei , GLsizei * , GLint * , GLenum * , GLchar * ); }
# 1760 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETATTACHEDSHADERSPROC)(GLuint , GLsizei , GLsizei * , GLuint * ); }
# 1761 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETATTRIBLOCATIONPROC)(GLuint , const GLchar * ); }
# 1762 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMINFOLOGPROC)(GLuint , GLsizei , GLsizei * , GLchar * ); }
# 1763 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMIVPROC)(GLuint , GLenum , GLint * ); }
# 1764 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSHADERINFOLOGPROC)(GLuint , GLsizei , GLsizei * , GLchar * ); }
# 1765 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSHADERSOURCEPROC)(GLint , GLsizei , GLsizei * , GLchar * ); }
# 1766 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSHADERIVPROC)(GLuint , GLenum , GLint * ); }
# 1767 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETUNIFORMLOCATIONPROC)(GLuint , const GLchar * ); }
# 1768 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMFVPROC)(GLuint , GLint , GLfloat * ); }
# 1769 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMIVPROC)(GLuint , GLint , GLint * ); }
# 1770 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint, GLenum, GLvoid *); }
# 1771 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBDVPROC)(GLuint, GLenum, GLdouble *); }
# 1772 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBFVPROC)(GLuint, GLenum, GLfloat *); }
# 1773 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIVPROC)(GLuint, GLenum, GLint *); }
# 1774 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISPROGRAMPROC)(GLuint ); }
# 1775 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISSHADERPROC)(GLuint ); }
# 1776 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLINKPROGRAMPROC)(GLuint ); }
# 1777 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHADERSOURCEPROC)(GLuint , GLsizei , const GLchar ** , const GLint * ); }
# 1778 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTENCILFUNCSEPARATEPROC)(GLenum , GLenum , GLint , GLuint ); }
# 1779 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTENCILMASKSEPARATEPROC)(GLenum, GLuint); }
# 1780 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTENCILOPSEPARATEPROC)(GLenum , GLenum , GLenum , GLenum ); }
# 1781 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1FPROC)(GLint , GLfloat ); }
# 1782 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1FVPROC)(GLint , GLsizei , const GLfloat * ); }
# 1783 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1IPROC)(GLint , GLint ); }
# 1784 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1IVPROC)(GLint , GLsizei , const GLint * ); }
# 1785 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2FPROC)(GLint , GLfloat , GLfloat ); }
# 1786 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2FVPROC)(GLint , GLsizei , const GLfloat * ); }
# 1787 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2IPROC)(GLint , GLint , GLint ); }
# 1788 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2IVPROC)(GLint , GLsizei , const GLint * ); }
# 1789 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3FPROC)(GLint , GLfloat , GLfloat , GLfloat ); }
# 1790 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3FVPROC)(GLint , GLsizei , const GLfloat * ); }
# 1791 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3IPROC)(GLint , GLint , GLint , GLint ); }
# 1792 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3IVPROC)(GLint , GLsizei , const GLint * ); }
# 1793 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4FPROC)(GLint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 1794 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4FVPROC)(GLint , GLsizei , const GLfloat * ); }
# 1795 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4IPROC)(GLint , GLint , GLint , GLint , GLint ); }
# 1796 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4IVPROC)(GLint , GLsizei , const GLint * ); }
# 1797 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX2FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1798 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX3FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1799 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX4FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1800 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUSEPROGRAMPROC)(GLuint ); }
# 1801 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVALIDATEPROGRAMPROC)(GLuint ); }
# 1802 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DPROC)(GLuint , GLdouble ); }
# 1803 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DVPROC)(GLuint , const GLdouble * ); }
# 1804 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FPROC)(GLuint , GLfloat ); }
# 1805 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FVPROC)(GLuint , const GLfloat * ); }
# 1806 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SPROC)(GLuint , GLshort ); }
# 1807 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SVPROC)(GLuint , const GLshort * ); }
# 1808 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DPROC)(GLuint , GLdouble , GLdouble ); }
# 1809 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DVPROC)(GLuint , const GLdouble * ); }
# 1810 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FPROC)(GLuint , GLfloat , GLfloat ); }
# 1811 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FVPROC)(GLuint , const GLfloat * ); }
# 1812 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SPROC)(GLuint , GLshort , GLshort ); }
# 1813 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SVPROC)(GLuint , const GLshort * ); }
# 1814 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DPROC)(GLuint , GLdouble , GLdouble , GLdouble ); }
# 1815 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DVPROC)(GLuint , const GLdouble * ); }
# 1816 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FPROC)(GLuint , GLfloat , GLfloat , GLfloat ); }
# 1817 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FVPROC)(GLuint , const GLfloat * ); }
# 1818 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SPROC)(GLuint , GLshort , GLshort , GLshort ); }
# 1819 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SVPROC)(GLuint , const GLshort * ); }
# 1820 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NBVPROC)(GLuint , const GLbyte * ); }
# 1821 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NIVPROC)(GLuint , const GLint * ); }
# 1822 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NSVPROC)(GLuint , const GLshort * ); }
# 1823 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUBPROC)(GLuint , GLubyte , GLubyte , GLubyte , GLubyte ); }
# 1824 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUBVPROC)(GLuint , const GLubyte * ); }
# 1825 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUIVPROC)(GLuint , const GLuint * ); }
# 1826 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUSVPROC)(GLuint , const GLushort * ); }
# 1827 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4BVPROC)(GLuint , const GLbyte * ); }
# 1828 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DPROC)(GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 1829 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DVPROC)(GLuint , const GLdouble * ); }
# 1830 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 1831 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FVPROC)(GLuint , const GLfloat * ); }
# 1832 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4IVPROC)(GLuint , const GLint * ); }
# 1833 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SPROC)(GLuint , GLshort , GLshort , GLshort , GLshort ); }
# 1834 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SVPROC)(GLuint , const GLshort * ); }
# 1835 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UBVPROC)(GLuint , const GLubyte * ); }
# 1836 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UIVPROC)(GLuint , const GLuint * ); }
# 1837 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4USVPROC)(GLuint , const GLushort * ); }
# 1838 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBPOINTERPROC)(GLuint , GLint , GLenum , GLboolean , GLsizei , const GLvoid * ); }
# 1967 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX2X3FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1968 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX2X4FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1969 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX3X2FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1970 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX3X4FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1971 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX4X2FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 1972 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX4X3FVPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 2099 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINCONDITIONALRENDERPROC)(GLuint, GLenum); }
# 2100 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum); }
# 2101 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAGDATALOCATIONPROC)(GLuint, GLuint, const GLchar *); }
# 2102 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLAMPCOLORPROC)(GLenum, GLenum); }
# 2103 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARBUFFERFIPROC)(GLenum, GLint, GLfloat, GLint); }
# 2104 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARBUFFERFVPROC)(GLenum, GLint, const GLfloat *); }
# 2105 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARBUFFERIVPROC)(GLenum, GLint, const GLint *); }
# 2106 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARBUFFERUIVPROC)(GLenum, GLint, const GLuint *); }
# 2107 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORMASKIPROC)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean); }
# 2108 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEIPROC)(GLenum, GLuint); }
# 2109 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEIPROC)(GLenum, GLuint); }
# 2110 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDCONDITIONALRENDERPROC)(void); }
# 2111 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDTRANSFORMFEEDBACKPROC)(void); }
# 2112 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBOOLEANI_VPROC)(GLenum, GLuint, GLboolean *); }
# 2113 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETFRAGDATALOCATIONPROC)(GLuint, const GLchar *); }
# 2114 "./sdk/GL/glew.h"
extern "C" { typedef const GLubyte *(*PFNGLGETSTRINGIPROC)(GLenum, GLuint); }
# 2115 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXPARAMETERIIVPROC)(GLenum, GLenum, GLint *); }
# 2116 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXPARAMETERIUIVPROC)(GLenum, GLenum, GLuint *); }
# 2117 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint, GLuint, GLint *); }
# 2118 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMUIVPROC)(GLuint, GLint, GLuint *); }
# 2119 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIIVPROC)(GLuint, GLenum, GLint *); }
# 2120 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint, GLenum, GLuint *); }
# 2121 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISENABLEDIPROC)(GLenum, GLuint); }
# 2122 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXPARAMETERIIVPROC)(GLenum, GLenum, const GLint *); }
# 2123 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXPARAMETERIUIVPROC)(GLenum, GLenum, const GLuint *); }
# 2124 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint, GLsizei, const GLchar **, GLenum); }
# 2125 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UIPROC)(GLint, GLuint); }
# 2126 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UIVPROC)(GLint, GLsizei, const GLuint *); }
# 2127 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UIPROC)(GLint, GLuint, GLuint); }
# 2128 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UIVPROC)(GLint, GLsizei, const GLuint *); }
# 2129 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UIPROC)(GLint, GLuint, GLuint, GLuint); }
# 2130 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UIVPROC)(GLint, GLsizei, const GLuint *); }
# 2131 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UIPROC)(GLint, GLuint, GLuint, GLuint, GLuint); }
# 2132 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UIVPROC)(GLint, GLsizei, const GLuint *); }
# 2133 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1IPROC)(GLuint, GLint); }
# 2134 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1IVPROC)(GLuint, const GLint *); }
# 2135 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1UIPROC)(GLuint, GLuint); }
# 2136 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1UIVPROC)(GLuint, const GLuint *); }
# 2137 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2IPROC)(GLuint, GLint, GLint); }
# 2138 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2IVPROC)(GLuint, const GLint *); }
# 2139 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2UIPROC)(GLuint, GLuint, GLuint); }
# 2140 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2UIVPROC)(GLuint, const GLuint *); }
# 2141 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3IPROC)(GLuint, GLint, GLint, GLint); }
# 2142 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3IVPROC)(GLuint, const GLint *); }
# 2143 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3UIPROC)(GLuint, GLuint, GLuint, GLuint); }
# 2144 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3UIVPROC)(GLuint, const GLuint *); }
# 2145 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4BVPROC)(GLuint, const GLbyte *); }
# 2146 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4IPROC)(GLuint, GLint, GLint, GLint, GLint); }
# 2147 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4IVPROC)(GLuint, const GLint *); }
# 2148 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4SVPROC)(GLuint, const GLshort *); }
# 2149 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UBVPROC)(GLuint, const GLubyte *); }
# 2150 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UIPROC)(GLuint, GLuint, GLuint, GLuint, GLuint); }
# 2151 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UIVPROC)(GLuint, const GLuint *); }
# 2152 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4USVPROC)(GLuint, const GLushort *); }
# 2153 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint, GLint, GLenum, GLsizei, const GLvoid *); }
# 2255 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum, GLint, GLsizei, GLsizei); }
# 2256 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum, GLsizei, GLenum, const GLvoid *, GLsizei); }
# 2257 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint); }
# 2258 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXBUFFERPROC)(GLenum, GLenum, GLuint); }
# 2297 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum, GLenum, GLuint, GLint); }
# 2298 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum, GLenum, GLint64 *); }
# 2299 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGER64I_VPROC)(GLenum, GLuint, GLint64 *); }
# 2350 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint , GLenum , GLenum ); }
# 2351 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONIPROC)(GLuint , GLenum ); }
# 2352 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCSEPARATEIPROC)(GLuint , GLenum , GLenum , GLenum , GLenum ); }
# 2353 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCIPROC)(GLuint , GLenum , GLenum ); }
# 2354 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMINSAMPLESHADINGPROC)(GLclampf ); }
# 2385 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTBUFFERMASK3DFXPROC)(GLuint ); }
# 2410 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONINDEXEDAMDPROC)(GLuint , GLenum ); }
# 2411 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)(GLuint , GLenum , GLenum ); }
# 2412 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCINDEXEDAMDPROC)(GLuint , GLenum , GLenum ); }
# 2413 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)(GLuint , GLenum , GLenum , GLenum , GLenum ); }
# 2439 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINPERFMONITORAMDPROC)(GLuint ); }
# 2440 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEPERFMONITORSAMDPROC)(GLsizei , GLuint * ); }
# 2441 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDPERFMONITORAMDPROC)(GLuint ); }
# 2442 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENPERFMONITORSAMDPROC)(GLsizei , GLuint * ); }
# 2443 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)(GLuint , GLenum , GLsizei , GLuint * , GLint * ); }
# 2444 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)(GLuint , GLuint , GLenum , void * ); }
# 2445 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)(GLuint , GLuint , GLsizei , GLsizei * , char * ); }
# 2446 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORCOUNTERSAMDPROC)(GLuint , GLint * , GLint * , GLsizei , GLuint * ); }
# 2447 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)(GLuint , GLsizei , GLsizei * , char * ); }
# 2448 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPERFMONITORGROUPSAMDPROC)(GLint * , GLsizei , GLuint * ); }
# 2449 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)(GLuint , GLboolean , GLuint , GLint , GLuint * ); }
# 2509 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTESSELLATIONFACTORAMDPROC)(GLfloat ); }
# 2510 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTESSELLATIONMODEAMDPROC)(GLenum ); }
# 2550 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTARRAYAPPLEPROC)(GLenum , GLint , GLsizei ); }
# 2551 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum , GLuint , GLuint , GLint , GLsizei ); }
# 2552 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLELEMENTPOINTERAPPLEPROC)(GLenum , const void * ); }
# 2553 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)(GLenum , const GLint * , const GLsizei * , GLsizei ); }
# 2554 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum , GLuint , GLuint , const GLint * , const GLsizei * , GLsizei ); }
# 2574 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEFENCESAPPLEPROC)(GLsizei , const GLuint * ); }
# 2575 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFINISHFENCEAPPLEPROC)(GLuint ); }
# 2576 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFINISHOBJECTAPPLEPROC)(GLenum , GLint ); }
# 2577 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENFENCESAPPLEPROC)(GLsizei , GLuint * ); }
# 2578 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISFENCEAPPLEPROC)(GLuint ); }
# 2579 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSETFENCEAPPLEPROC)(GLuint ); }
# 2580 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLTESTFENCEAPPLEPROC)(GLuint ); }
# 2581 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLTESTOBJECTAPPLEPROC)(GLenum , GLuint ); }
# 2628 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERPARAMETERIAPPLEPROC)(GLenum , GLenum , GLint ); }
# 2629 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)(GLenum , GLintptr , GLsizeiptr ); }
# 2650 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOBJECTPARAMETERIVAPPLEPROC)(GLenum , GLuint , GLenum , GLint * ); }
# 2651 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLOBJECTPURGEABLEAPPLEPROC)(GLenum , GLuint , GLenum ); }
# 2652 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLOBJECTUNPURGEABLEAPPLEPROC)(GLenum , GLuint , GLenum ); }
# 2721 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)(GLenum , GLenum , GLvoid ** ); }
# 2722 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURERANGEAPPLEPROC)(GLenum , GLsizei , GLvoid * ); }
# 2749 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDVERTEXARRAYAPPLEPROC)(GLuint ); }
# 2750 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEVERTEXARRAYSAPPLEPROC)(GLsizei , const GLuint * ); }
# 2751 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENVERTEXARRAYSAPPLEPROC)(GLsizei , const GLuint * ); }
# 2752 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISVERTEXARRAYAPPLEPROC)(GLuint ); }
# 2776 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)(GLsizei , void * ); }
# 2777 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)(GLenum , GLint ); }
# 2778 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYRANGEAPPLEPROC)(GLsizei , void * ); }
# 2804 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVERTEXATTRIBAPPLEPROC)(GLuint , GLenum ); }
# 2805 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVERTEXATTRIBAPPLEPROC)(GLuint , GLenum ); }
# 2806 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)(GLuint , GLenum ); }
# 2807 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPVERTEXATTRIB1DAPPLEPROC)(GLuint , GLuint , GLdouble , GLdouble , GLint , GLint , const GLdouble * ); }
# 2808 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPVERTEXATTRIB1FAPPLEPROC)(GLuint , GLuint , GLfloat , GLfloat , GLint , GLint , const GLfloat * ); }
# 2809 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPVERTEXATTRIB2DAPPLEPROC)(GLuint , GLuint , GLdouble , GLdouble , GLint , GLint , GLdouble , GLdouble , GLint , GLint , const GLdouble * ); }
# 2810 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPVERTEXATTRIB2FAPPLEPROC)(GLuint , GLuint , GLfloat , GLfloat , GLint , GLint , GLfloat , GLfloat , GLint , GLint , const GLfloat * ); }
# 2847 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint , GLuint , GLuint , const char * ); }
# 2848 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETFRAGDATAINDEXPROC)(GLuint , const char * ); }
# 2868 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLAMPCOLORARBPROC)(GLenum , GLenum ); }
# 2893 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYBUFFERSUBDATAPROC)(GLenum , GLenum , GLintptr , GLintptr , GLsizeiptr ); }
# 2963 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWBUFFERSARBPROC)(GLsizei , const GLenum * ); }
# 2976 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint , GLenum , GLenum ); }
# 2977 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONIARBPROC)(GLuint , GLenum ); }
# 2978 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint , GLenum , GLenum , GLenum , GLenum ); }
# 2979 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCIARBPROC)(GLuint , GLenum , GLenum ); }
# 2995 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum , GLsizei , GLenum , void * , GLint ); }
# 2996 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum , GLsizei , GLenum , const void * , GLsizei , GLint ); }
# 2997 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum , GLuint , GLuint , GLsizei , GLenum , void * , GLint ); }
# 2998 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum , GLsizei * , GLenum , GLvoid ** , GLsizei , GLint * ); }
# 3017 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWARRAYSINDIRECTPROC)(GLenum , const void * ); }
# 3018 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum , GLenum , const void * ); }
# 3032 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum , GLint , GLsizei , GLsizei ); }
# 3033 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum , GLsizei , GLenum , const void * , GLsizei ); }
# 3187 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAMEBUFFERPROC)(GLenum , GLuint ); }
# 3188 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDRENDERBUFFERPROC)(GLenum , GLuint ); }
# 3189 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLITFRAMEBUFFERPROC)(GLint , GLint , GLint , GLint , GLint , GLint , GLint , GLint , GLbitfield , GLenum ); }
# 3190 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum ); }
# 3191 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei , const GLuint * ); }
# 3192 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETERENDERBUFFERSPROC)(GLsizei , const GLuint * ); }
# 3193 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum , GLenum , GLenum , GLuint ); }
# 3194 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum , GLenum , GLenum , GLuint , GLint ); }
# 3195 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum , GLenum , GLenum , GLuint , GLint ); }
# 3196 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum , GLenum , GLenum , GLuint , GLint , GLint ); }
# 3197 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum , GLenum , GLuint , GLint , GLint ); }
# 3198 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENFRAMEBUFFERSPROC)(GLsizei , GLuint * ); }
# 3199 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENRENDERBUFFERSPROC)(GLsizei , GLuint * ); }
# 3200 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENERATEMIPMAPPROC)(GLenum ); }
# 3201 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 3202 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 3203 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISFRAMEBUFFERPROC)(GLuint ); }
# 3204 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISRENDERBUFFERPROC)(GLuint ); }
# 3205 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRENDERBUFFERSTORAGEPROC)(GLenum , GLenum , GLsizei , GLsizei ); }
# 3206 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum , GLsizei , GLenum , GLsizei , GLsizei ); }
# 3269 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum , GLenum , GLuint , GLint ); }
# 3270 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum , GLenum , GLuint , GLint , GLenum ); }
# 3271 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum , GLenum , GLuint , GLint , GLint ); }
# 3272 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETERIARBPROC)(GLuint , GLenum , GLint ); }
# 3413 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORSUBTABLEPROC)(GLenum , GLsizei , GLsizei , GLenum , GLenum , const GLvoid * ); }
# 3414 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEPROC)(GLenum , GLenum , GLsizei , GLenum , GLenum , const GLvoid * ); }
# 3415 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEPARAMETERFVPROC)(GLenum , GLenum , const GLfloat * ); }
# 3416 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEPARAMETERIVPROC)(GLenum , GLenum , const GLint * ); }
# 3417 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONFILTER1DPROC)(GLenum , GLenum , GLsizei , GLenum , GLenum , const GLvoid * ); }
# 3418 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONFILTER2DPROC)(GLenum , GLenum , GLsizei , GLsizei , GLenum , GLenum , const GLvoid * ); }
# 3419 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERFPROC)(GLenum , GLenum , GLfloat ); }
# 3420 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERFVPROC)(GLenum , GLenum , const GLfloat * ); }
# 3421 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERIPROC)(GLenum , GLenum , GLint ); }
# 3422 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERIVPROC)(GLenum , GLenum , const GLint * ); }
# 3423 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCOLORSUBTABLEPROC)(GLenum , GLsizei , GLint , GLint , GLsizei ); }
# 3424 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCOLORTABLEPROC)(GLenum , GLenum , GLint , GLint , GLsizei ); }
# 3425 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCONVOLUTIONFILTER1DPROC)(GLenum , GLenum , GLint , GLint , GLsizei ); }
# 3426 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCONVOLUTIONFILTER2DPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLsizei ); }
# 3427 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPROC)(GLenum , GLenum , GLenum , GLvoid * ); }
# 3428 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERFVPROC)(GLenum , GLenum , GLfloat * ); }
# 3429 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 3430 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONFILTERPROC)(GLenum , GLenum , GLenum , GLvoid * ); }
# 3431 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONPARAMETERFVPROC)(GLenum , GLenum , GLfloat * ); }
# 3432 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 3433 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMPROC)(GLenum , GLboolean , GLenum , GLenum , GLvoid * ); }
# 3434 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMPARAMETERFVPROC)(GLenum , GLenum , GLfloat * ); }
# 3435 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 3436 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXPROC)(GLenum , GLboolean , GLenum , GLenum , GLvoid * ); }
# 3437 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXPARAMETERFVPROC)(GLenum , GLenum , GLfloat * ); }
# 3438 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXPARAMETERIVPROC)(GLenum , GLenum , GLint * ); }
# 3439 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSEPARABLEFILTERPROC)(GLenum , GLenum , GLenum , GLvoid * , GLvoid * , GLvoid * ); }
# 3440 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLHISTOGRAMPROC)(GLenum , GLsizei , GLenum , GLboolean ); }
# 3441 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMINMAXPROC)(GLenum , GLenum , GLboolean ); }
# 3442 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESETHISTOGRAMPROC)(GLenum ); }
# 3443 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESETMINMAXPROC)(GLenum ); }
# 3444 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSEPARABLEFILTER2DPROC)(GLenum , GLenum , GLsizei , GLsizei , GLenum , GLenum , const GLvoid * , const GLvoid * ); }
# 3490 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint , GLuint ); }
# 3510 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum , GLintptr , GLsizeiptr ); }
# 3511 "./sdk/GL/glew.h"
extern "C" { typedef GLvoid *(*PFNGLMAPBUFFERRANGEPROC)(GLenum , GLintptr , GLsizeiptr , GLbitfield ); }
# 3536 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCURRENTPALETTEMATRIXARBPROC)(GLint ); }
# 3537 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXINDEXPOINTERARBPROC)(GLint , GLenum , GLsizei , GLvoid * ); }
# 3538 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXINDEXUBVARBPROC)(GLint , GLubyte * ); }
# 3539 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXINDEXUIVARBPROC)(GLint , GLuint * ); }
# 3540 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXINDEXUSVARBPROC)(GLint , GLushort * ); }
# 3567 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLECOVERAGEARBPROC)(GLclampf , GLboolean ); }
# 3616 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLACTIVETEXTUREARBPROC)(GLenum ); }
# 3617 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum ); }
# 3618 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1DARBPROC)(GLenum , GLdouble ); }
# 3619 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1DVARBPROC)(GLenum , const GLdouble * ); }
# 3620 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1FARBPROC)(GLenum , GLfloat ); }
# 3621 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1FVARBPROC)(GLenum , const GLfloat * ); }
# 3622 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1IARBPROC)(GLenum , GLint ); }
# 3623 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1IVARBPROC)(GLenum , const GLint * ); }
# 3624 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1SARBPROC)(GLenum , GLshort ); }
# 3625 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1SVARBPROC)(GLenum , const GLshort * ); }
# 3626 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2DARBPROC)(GLenum , GLdouble , GLdouble ); }
# 3627 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2DVARBPROC)(GLenum , const GLdouble * ); }
# 3628 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2FARBPROC)(GLenum , GLfloat , GLfloat ); }
# 3629 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2FVARBPROC)(GLenum , const GLfloat * ); }
# 3630 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2IARBPROC)(GLenum , GLint , GLint ); }
# 3631 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2IVARBPROC)(GLenum , const GLint * ); }
# 3632 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2SARBPROC)(GLenum , GLshort , GLshort ); }
# 3633 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2SVARBPROC)(GLenum , const GLshort * ); }
# 3634 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3DARBPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 3635 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3DVARBPROC)(GLenum , const GLdouble * ); }
# 3636 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3FARBPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 3637 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3FVARBPROC)(GLenum , const GLfloat * ); }
# 3638 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3IARBPROC)(GLenum , GLint , GLint , GLint ); }
# 3639 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3IVARBPROC)(GLenum , const GLint * ); }
# 3640 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3SARBPROC)(GLenum , GLshort , GLshort , GLshort ); }
# 3641 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3SVARBPROC)(GLenum , const GLshort * ); }
# 3642 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4DARBPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 3643 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4DVARBPROC)(GLenum , const GLdouble * ); }
# 3644 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4FARBPROC)(GLenum , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 3645 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4FVARBPROC)(GLenum , const GLfloat * ); }
# 3646 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4IARBPROC)(GLenum , GLint , GLint , GLint , GLint ); }
# 3647 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4IVARBPROC)(GLenum , const GLint * ); }
# 3648 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4SARBPROC)(GLenum , GLshort , GLshort , GLshort , GLshort ); }
# 3649 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4SVARBPROC)(GLenum , const GLshort * ); }
# 3701 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINQUERYARBPROC)(GLenum , GLuint ); }
# 3702 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEQUERIESARBPROC)(GLsizei , const GLuint * ); }
# 3703 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDQUERYARBPROC)(GLenum ); }
# 3704 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENQUERIESARBPROC)(GLsizei , GLuint * ); }
# 3705 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTIVARBPROC)(GLuint , GLenum , GLint * ); }
# 3706 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint , GLenum , GLuint * ); }
# 3707 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYIVARBPROC)(GLenum , GLenum , GLint * ); }
# 3708 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISQUERYARBPROC)(GLuint ); }
# 3758 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFARBPROC)(GLenum , GLfloat ); }
# 3759 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFVARBPROC)(GLenum , GLfloat * ); }
# 3790 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROVOKINGVERTEXPROC)(GLenum ); }
# 3806 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMINSAMPLESHADINGARBPROC)(GLclampf ); }
# 3821 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDSAMPLERPROC)(GLenum , GLuint ); }
# 3822 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETESAMPLERSPROC)(GLsizei , const GLuint * ); }
# 3823 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENSAMPLERSPROC)(GLsizei , GLuint * ); }
# 3824 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISSAMPLERPROC)(GLuint ); }
# 3895 "./sdk/GL/glew.h"
extern "C" { typedef char GLcharARB; }
# 3896 "./sdk/GL/glew.h"
extern "C" { typedef unsigned GLhandleARB; }
# 3898 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLATTACHOBJECTARBPROC)(GLhandleARB , GLhandleARB ); }
# 3899 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPILESHADERARBPROC)(GLhandleARB ); }
# 3900 "./sdk/GL/glew.h"
extern "C" { typedef GLhandleARB (*PFNGLCREATEPROGRAMOBJECTARBPROC)(void); }
# 3901 "./sdk/GL/glew.h"
extern "C" { typedef GLhandleARB (*PFNGLCREATESHADEROBJECTARBPROC)(GLenum ); }
# 3902 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEOBJECTARBPROC)(GLhandleARB ); }
# 3903 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDETACHOBJECTARBPROC)(GLhandleARB , GLhandleARB ); }
# 3904 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB , GLuint , GLsizei , GLsizei * , GLint * , GLenum * , GLcharARB * ); }
# 3905 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB , GLsizei , GLsizei * , GLhandleARB * ); }
# 3906 "./sdk/GL/glew.h"
extern "C" { typedef GLhandleARB (*PFNGLGETHANDLEARBPROC)(GLenum ); }
# 3907 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINFOLOGARBPROC)(GLhandleARB , GLsizei , GLsizei * , GLcharARB * ); }
# 3908 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB , GLenum , GLfloat * ); }
# 3909 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB , GLenum , GLint * ); }
# 3910 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB , GLsizei , GLsizei * , GLcharARB * ); }
# 3911 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB , const GLcharARB * ); }
# 3912 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMFVARBPROC)(GLhandleARB , GLint , GLfloat * ); }
# 3913 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMIVARBPROC)(GLhandleARB , GLint , GLint * ); }
# 3914 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLINKPROGRAMARBPROC)(GLhandleARB ); }
# 3915 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHADERSOURCEARBPROC)(GLhandleARB , GLsizei , const GLcharARB ** , const GLint * ); }
# 3916 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1FARBPROC)(GLint , GLfloat ); }
# 3917 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1FVARBPROC)(GLint , GLsizei , const GLfloat * ); }
# 3918 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1IARBPROC)(GLint , GLint ); }
# 3919 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1IVARBPROC)(GLint , GLsizei , const GLint * ); }
# 3920 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2FARBPROC)(GLint , GLfloat , GLfloat ); }
# 3921 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2FVARBPROC)(GLint , GLsizei , const GLfloat * ); }
# 3922 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2IARBPROC)(GLint , GLint , GLint ); }
# 3923 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2IVARBPROC)(GLint , GLsizei , const GLint * ); }
# 3924 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3FARBPROC)(GLint , GLfloat , GLfloat , GLfloat ); }
# 3925 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3FVARBPROC)(GLint , GLsizei , const GLfloat * ); }
# 3926 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3IARBPROC)(GLint , GLint , GLint , GLint ); }
# 3927 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3IVARBPROC)(GLint , GLsizei , const GLint * ); }
# 3928 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4FARBPROC)(GLint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 3929 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4FVARBPROC)(GLint , GLsizei , const GLfloat * ); }
# 3930 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4IARBPROC)(GLint , GLint , GLint , GLint , GLint ); }
# 3931 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4IVARBPROC)(GLint , GLsizei , const GLint * ); }
# 3932 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX2FVARBPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 3933 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX3FVARBPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 3934 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMMATRIX4FVARBPROC)(GLint , GLsizei , GLboolean , const GLfloat * ); }
# 3935 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB ); }
# 3936 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB ); }
# 3997 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint , GLenum , GLuint , GLsizei , GLsizei * , char * ); }
# 3998 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint , GLenum , GLuint , GLsizei , GLsizei * , char * ); }
# 3999 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint , GLenum , GLuint , GLenum , GLint * ); }
# 4000 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMSTAGEIVPROC)(GLuint , GLenum , GLenum , GLint * ); }
# 4001 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGETSUBROUTINEINDEXPROC)(GLuint , GLenum , const char * ); }
# 4002 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint , GLenum , const char * ); }
# 4003 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum , GLint , GLuint * ); }
# 4004 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum , GLsizei , const GLuint * ); }
# 4048 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint , GLsizei , const char ** , const GLint * ); }
# 4049 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETENAMEDSTRINGARBPROC)(GLint , const char * ); }
# 4050 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDSTRINGARBPROC)(GLint , const char * , GLsizei , GLint * , char * ); }
# 4051 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDSTRINGIVARBPROC)(GLint , const char * , GLenum , GLint * ); }
# 4052 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISNAMEDSTRINGARBPROC)(GLint , const char * ); }
# 4053 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDSTRINGARBPROC)(GLenum , GLint , const char * , GLint , const char * ); }
# 4111 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLCLIENTWAITSYNCPROC)(::GLsync , GLbitfield , GLuint64 ); }
# 4112 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETESYNCPROC)(::GLsync ); }
# 4113 "./sdk/GL/glew.h"
extern "C" { typedef GLsync (*PFNGLFENCESYNCPROC)(GLenum , GLbitfield ); }
# 4114 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGER64VPROC)(GLenum , GLint64 * ); }
# 4115 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSYNCIVPROC)(::GLsync , GLenum , GLsizei , GLsizei * , GLint * ); }
# 4116 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISSYNCPROC)(::GLsync ); }
# 4117 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWAITSYNCPROC)(::GLsync , GLbitfield , GLuint64 ); }
# 4169 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPATCHPARAMETERFVPROC)(GLenum , const GLfloat * ); }
# 4170 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPATCHPARAMETERIPROC)(GLenum , GLint ); }
# 4201 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXBUFFERARBPROC)(GLenum , GLenum , GLuint ); }
# 4235 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum , GLint , GLenum , GLsizei , GLint , GLsizei , const void * ); }
# 4236 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 4237 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 4238 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum , GLint , GLint , GLsizei , GLenum , GLsizei , const void * ); }
# 4239 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 4240 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 4241 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum , GLint , void * ); }
# 4465 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTISAMPLEFVPROC)(GLenum , GLuint , GLfloat * ); }
# 4466 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEMASKIPROC)(GLuint , GLbitfield ); }
# 4467 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum , GLsizei , GLint , GLsizei , GLsizei , GLboolean ); }
# 4468 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum , GLsizei , GLint , GLsizei , GLsizei , GLsizei , GLboolean ); }
# 4582 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTI64VPROC)(GLuint , GLenum , GLint64 * ); }
# 4583 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTUI64VPROC)(GLuint , GLenum , GLuint64 * ); }
# 4584 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLQUERYCOUNTERPROC)(GLuint , GLenum ); }
# 4604 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum , GLuint ); }
# 4605 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei , const GLuint * ); }
# 4606 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum , GLuint ); }
# 4607 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei , GLuint * ); }
# 4608 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISTRANSFORMFEEDBACKPROC)(GLuint ); }
# 4609 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPAUSETRANSFORMFEEDBACKPROC)(void); }
# 4610 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESUMETRANSFORMFEEDBACKPROC)(void); }
# 4632 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINQUERYINDEXEDPROC)(GLenum , GLuint , GLuint ); }
# 4633 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum , GLuint , GLuint ); }
# 4634 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDQUERYINDEXEDPROC)(GLenum , GLuint ); }
# 4635 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYINDEXEDIVPROC)(GLenum , GLuint , GLenum , GLint * ); }
# 4656 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOADTRANSPOSEMATRIXDARBPROC)(GLdouble [16]); }
# 4657 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOADTRANSPOSEMATRIXFARBPROC)(GLfloat [16]); }
# 4658 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTTRANSPOSEMATRIXDARBPROC)(GLdouble [16]); }
# 4659 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTTRANSPOSEMATRIXFARBPROC)(GLfloat [16]); }
# 4709 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERBASEPROC)(GLenum , GLuint , GLuint ); }
# 4710 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERRANGEPROC)(GLenum , GLuint , GLuint , GLintptr , GLsizeiptr ); }
# 4711 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint , GLuint , GLsizei , GLsizei * , char * ); }
# 4712 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint , GLuint , GLenum , GLint * ); }
# 4713 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint , GLuint , GLsizei , GLsizei * , char * ); }
# 4714 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint , GLsizei , const GLuint * , GLenum , GLint * ); }
# 4715 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGERI_VPROC)(GLenum , GLuint , GLint * ); }
# 4716 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint , const char * ); }
# 4717 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMINDICESPROC)(GLuint , GLsizei , const char ** , GLuint * ); }
# 4718 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint , GLuint , GLuint ); }
# 4753 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDVERTEXARRAYPROC)(GLuint ); }
# 4754 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEVERTEXARRAYSPROC)(GLsizei , const GLuint * ); }
# 4755 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENVERTEXARRAYSPROC)(GLsizei , GLuint * ); }
# 4756 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISVERTEXARRAYPROC)(GLuint ); }
# 4815 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXBLENDARBPROC)(GLint ); }
# 4816 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTPOINTERARBPROC)(GLint , GLenum , GLsizei , GLvoid * ); }
# 4817 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTBVARBPROC)(GLint , GLbyte * ); }
# 4818 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTDVARBPROC)(GLint , GLdouble * ); }
# 4819 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTFVARBPROC)(GLint , GLfloat * ); }
# 4820 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTIVARBPROC)(GLint , GLint * ); }
# 4821 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTSVARBPROC)(GLint , GLshort * ); }
# 4822 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTUBVARBPROC)(GLint , GLubyte * ); }
# 4823 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTUIVARBPROC)(GLint , GLuint * ); }
# 4824 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWEIGHTUSVARBPROC)(GLint , GLushort * ); }
# 4878 "./sdk/GL/glew.h"
extern "C" { typedef ptrdiff_t GLsizeiptrARB; }
# 4879 "./sdk/GL/glew.h"
extern "C" { typedef ptrdiff_t GLintptrARB; }
# 4881 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERARBPROC)(GLenum , GLuint ); }
# 4882 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERDATAARBPROC)(GLenum , GLsizeiptrARB , const GLvoid * , GLenum ); }
# 4883 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERSUBDATAARBPROC)(GLenum , GLintptrARB , GLsizeiptrARB , const GLvoid * ); }
# 4884 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEBUFFERSARBPROC)(GLsizei , const GLuint * ); }
# 4885 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENBUFFERSARBPROC)(GLsizei , GLuint * ); }
# 4886 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum , GLenum , GLint * ); }
# 4887 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPOINTERVARBPROC)(GLenum , GLenum , GLvoid ** ); }
# 4888 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERSUBDATAARBPROC)(GLenum , GLintptrARB , GLsizeiptrARB , GLvoid * ); }
# 4889 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISBUFFERARBPROC)(GLuint ); }
# 4890 "./sdk/GL/glew.h"
extern "C" { typedef GLvoid *(*PFNGLMAPBUFFERARBPROC)(GLenum , GLenum ); }
# 4891 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLUNMAPBUFFERARBPROC)(GLenum ); }
# 4994 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDPROGRAMARBPROC)(GLenum , GLuint ); }
# 4995 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEPROGRAMSARBPROC)(GLsizei , const GLuint * ); }
# 4996 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint ); }
# 4997 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint ); }
# 4998 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENPROGRAMSARBPROC)(GLsizei , GLuint * ); }
# 4999 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum , GLuint , GLdouble * ); }
# 5000 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum , GLuint , GLfloat * ); }
# 5001 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum , GLuint , GLdouble * ); }
# 5002 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum , GLuint , GLfloat * ); }
# 5003 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMSTRINGARBPROC)(GLenum , GLenum , void * ); }
# 5004 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMIVARBPROC)(GLenum , GLenum , GLint * ); }
# 5005 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint , GLenum , GLvoid ** ); }
# 5006 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint , GLenum , GLdouble * ); }
# 5007 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint , GLenum , GLfloat * ); }
# 5008 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint , GLenum , GLint * ); }
# 5009 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISPROGRAMARBPROC)(GLuint ); }
# 5010 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum , GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 5011 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum , GLuint , const GLdouble * ); }
# 5012 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum , GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 5013 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum , GLuint , const GLfloat * ); }
# 5014 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum , GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 5015 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum , GLuint , const GLdouble * ); }
# 5016 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum , GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 5017 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum , GLuint , const GLfloat * ); }
# 5018 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMSTRINGARBPROC)(GLenum , GLenum , GLsizei , const void * ); }
# 5019 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DARBPROC)(GLuint , GLdouble ); }
# 5020 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DVARBPROC)(GLuint , const GLdouble * ); }
# 5021 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FARBPROC)(GLuint , GLfloat ); }
# 5022 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FVARBPROC)(GLuint , const GLfloat * ); }
# 5023 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SARBPROC)(GLuint , GLshort ); }
# 5024 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SVARBPROC)(GLuint , const GLshort * ); }
# 5025 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DARBPROC)(GLuint , GLdouble , GLdouble ); }
# 5026 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DVARBPROC)(GLuint , const GLdouble * ); }
# 5027 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FARBPROC)(GLuint , GLfloat , GLfloat ); }
# 5028 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FVARBPROC)(GLuint , const GLfloat * ); }
# 5029 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SARBPROC)(GLuint , GLshort , GLshort ); }
# 5030 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SVARBPROC)(GLuint , const GLshort * ); }
# 5031 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DARBPROC)(GLuint , GLdouble , GLdouble , GLdouble ); }
# 5032 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DVARBPROC)(GLuint , const GLdouble * ); }
# 5033 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FARBPROC)(GLuint , GLfloat , GLfloat , GLfloat ); }
# 5034 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FVARBPROC)(GLuint , const GLfloat * ); }
# 5035 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SARBPROC)(GLuint , GLshort , GLshort , GLshort ); }
# 5036 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SVARBPROC)(GLuint , const GLshort * ); }
# 5037 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint , const GLbyte * ); }
# 5038 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint , const GLint * ); }
# 5039 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint , const GLshort * ); }
# 5040 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint , GLubyte , GLubyte , GLubyte , GLubyte ); }
# 5041 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint , const GLubyte * ); }
# 5042 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint , const GLuint * ); }
# 5043 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint , const GLushort * ); }
# 5044 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4BVARBPROC)(GLuint , const GLbyte * ); }
# 5045 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DARBPROC)(GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 5046 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DVARBPROC)(GLuint , const GLdouble * ); }
# 5047 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FARBPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 5048 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FVARBPROC)(GLuint , const GLfloat * ); }
# 5049 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4IVARBPROC)(GLuint , const GLint * ); }
# 5050 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SARBPROC)(GLuint , GLshort , GLshort , GLshort , GLshort ); }
# 5051 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SVARBPROC)(GLuint , const GLshort * ); }
# 5052 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint , const GLubyte * ); }
# 5053 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint , const GLuint * ); }
# 5054 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4USVARBPROC)(GLuint , const GLushort * ); }
# 5055 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint , GLint , GLenum , GLboolean , GLsizei , const void * ); }
# 5137 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB , GLuint , const GLcharARB * ); }
# 5138 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB , GLuint , GLsizei , GLsizei * , GLint * , GLenum * , GLcharARB * ); }
# 5139 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB , const GLcharARB * ); }
# 5157 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORP3UIPROC)(GLenum , GLuint ); }
# 5158 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORP3UIVPROC)(GLenum , const GLuint * ); }
# 5159 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORP4UIPROC)(GLenum , GLuint ); }
# 5160 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORP4UIVPROC)(GLenum , const GLuint * ); }
# 5161 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP1UIPROC)(GLenum , GLenum , GLuint ); }
# 5162 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP1UIVPROC)(GLenum , GLenum , const GLuint * ); }
# 5163 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP2UIPROC)(GLenum , GLenum , GLuint ); }
# 5164 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP2UIVPROC)(GLenum , GLenum , const GLuint * ); }
# 5165 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP3UIPROC)(GLenum , GLenum , GLuint ); }
# 5166 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP3UIVPROC)(GLenum , GLenum , const GLuint * ); }
# 5167 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP4UIPROC)(GLenum , GLenum , GLuint ); }
# 5168 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDP4UIVPROC)(GLenum , GLenum , const GLuint * ); }
# 5169 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALP3UIPROC)(GLenum , GLuint ); }
# 5170 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALP3UIVPROC)(GLenum , const GLuint * ); }
# 5171 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORP3UIPROC)(GLenum , GLuint ); }
# 5172 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORP3UIVPROC)(GLenum , const GLuint * ); }
# 5173 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP1UIPROC)(GLenum , GLuint ); }
# 5174 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP1UIVPROC)(GLenum , const GLuint * ); }
# 5175 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP2UIPROC)(GLenum , GLuint ); }
# 5176 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP2UIVPROC)(GLenum , const GLuint * ); }
# 5177 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP3UIPROC)(GLenum , GLuint ); }
# 5178 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP3UIVPROC)(GLenum , const GLuint * ); }
# 5179 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP4UIPROC)(GLenum , GLuint ); }
# 5180 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDP4UIVPROC)(GLenum , const GLuint * ); }
# 5181 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP1UIPROC)(GLuint , GLenum , GLboolean , GLuint ); }
# 5182 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP1UIVPROC)(GLuint , GLenum , GLboolean , const GLuint * ); }
# 5183 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP2UIPROC)(GLuint , GLenum , GLboolean , GLuint ); }
# 5184 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP2UIVPROC)(GLuint , GLenum , GLboolean , const GLuint * ); }
# 5185 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP3UIPROC)(GLuint , GLenum , GLboolean , GLuint ); }
# 5186 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP3UIVPROC)(GLuint , GLenum , GLboolean , const GLuint * ); }
# 5187 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP4UIPROC)(GLuint , GLenum , GLboolean , GLuint ); }
# 5188 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBP4UIVPROC)(GLuint , GLenum , GLboolean , const GLuint * ); }
# 5189 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP2UIPROC)(GLenum , GLuint ); }
# 5190 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP2UIVPROC)(GLenum , const GLuint * ); }
# 5191 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP3UIPROC)(GLenum , GLuint ); }
# 5192 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP3UIVPROC)(GLenum , const GLuint * ); }
# 5193 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP4UIPROC)(GLenum , GLuint ); }
# 5194 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXP4UIVPROC)(GLenum , const GLuint * ); }
# 5244 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DARBPROC)(GLdouble , GLdouble ); }
# 5245 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DVARBPROC)(const GLdouble * ); }
# 5246 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FARBPROC)(GLfloat , GLfloat ); }
# 5247 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FVARBPROC)(const GLfloat * ); }
# 5248 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IARBPROC)(GLint , GLint ); }
# 5249 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IVARBPROC)(const GLint * ); }
# 5250 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SARBPROC)(GLshort , GLshort ); }
# 5251 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SVARBPROC)(const GLshort * ); }
# 5252 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DARBPROC)(GLdouble , GLdouble , GLdouble ); }
# 5253 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DVARBPROC)(const GLdouble * ); }
# 5254 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FARBPROC)(GLfloat , GLfloat , GLfloat ); }
# 5255 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FVARBPROC)(const GLfloat * ); }
# 5256 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IARBPROC)(GLint , GLint , GLint ); }
# 5257 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IVARBPROC)(const GLint * ); }
# 5258 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SARBPROC)(GLshort , GLshort , GLshort ); }
# 5259 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SVARBPROC)(const GLshort * ); }
# 5358 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWBUFFERSATIPROC)(GLsizei , const GLenum * ); }
# 5375 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTARRAYATIPROC)(GLenum , GLsizei ); }
# 5376 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWRANGEELEMENTARRAYATIPROC)(GLenum , GLuint , GLuint , GLsizei ); }
# 5377 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLELEMENTPOINTERATIPROC)(GLenum , const void * ); }
# 5401 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXBUMPPARAMETERFVATIPROC)(GLenum , GLfloat * ); }
# 5402 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXBUMPPARAMETERIVATIPROC)(GLenum , GLint * ); }
# 5403 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXBUMPPARAMETERFVATIPROC)(GLenum , GLfloat * ); }
# 5404 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXBUMPPARAMETERIVATIPROC)(GLenum , GLint * ); }
# 5475 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLALPHAFRAGMENTOP1ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5476 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLALPHAFRAGMENTOP2ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5477 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLALPHAFRAGMENTOP3ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5478 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINFRAGMENTSHADERATIPROC)(void); }
# 5479 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAGMENTSHADERATIPROC)(GLuint ); }
# 5480 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORFRAGMENTOP1ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5481 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORFRAGMENTOP2ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5482 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORFRAGMENTOP3ATIPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 5483 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEFRAGMENTSHADERATIPROC)(GLuint ); }
# 5484 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDFRAGMENTSHADERATIPROC)(void); }
# 5485 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGENFRAGMENTSHADERSATIPROC)(GLuint ); }
# 5486 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPASSTEXCOORDATIPROC)(GLuint , GLuint , GLenum ); }
# 5487 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEMAPATIPROC)(GLuint , GLuint , GLenum ); }
# 5488 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)(GLuint , const GLfloat * ); }
# 5514 "./sdk/GL/glew.h"
extern "C" { typedef void *(*PFNGLMAPOBJECTBUFFERATIPROC)(GLuint ); }
# 5515 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNMAPOBJECTBUFFERATIPROC)(GLuint ); }
# 5552 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPNTRIANGLESFATIPROC)(GLenum , GLfloat ); }
# 5553 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPNTRIANGLESIATIPROC)(GLenum , GLint ); }
# 5572 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTENCILFUNCSEPARATEATIPROC)(GLenum , GLenum , GLint , GLuint ); }
# 5573 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTENCILOPSEPARATEATIPROC)(GLenum , GLenum , GLenum , GLenum ); }
# 5674 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLARRAYOBJECTATIPROC)(GLenum , GLint , GLenum , GLsizei , GLuint , GLuint ); }
# 5675 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFREEOBJECTBUFFERATIPROC)(GLuint ); }
# 5676 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETARRAYOBJECTFVATIPROC)(GLenum , GLenum , GLfloat * ); }
# 5677 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETARRAYOBJECTIVATIPROC)(GLenum , GLenum , GLint * ); }
# 5678 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOBJECTBUFFERFVATIPROC)(GLuint , GLenum , GLfloat * ); }
# 5679 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOBJECTBUFFERIVATIPROC)(GLuint , GLenum , GLint * ); }
# 5680 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTARRAYOBJECTFVATIPROC)(GLuint , GLenum , GLfloat * ); }
# 5681 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTARRAYOBJECTIVATIPROC)(GLuint , GLenum , GLint * ); }
# 5682 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISOBJECTBUFFERATIPROC)(GLuint ); }
# 5683 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLNEWOBJECTBUFFERATIPROC)(GLsizei , const void * , GLenum ); }
# 5684 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUPDATEOBJECTBUFFERATIPROC)(GLuint , GLuint , GLsizei , const void * , GLenum ); }
# 5685 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTARRAYOBJECTATIPROC)(GLuint , GLenum , GLsizei , GLuint , GLuint ); }
# 5709 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)(GLuint , GLenum , GLfloat * ); }
# 5710 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)(GLuint , GLenum , GLint * ); }
# 5711 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)(GLuint , GLint , GLenum , GLboolean , GLsizei , GLuint , GLuint ); }
# 5737 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)(GLenum ); }
# 5738 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3BATIPROC)(GLenum , GLbyte , GLbyte , GLbyte ); }
# 5739 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3BVATIPROC)(GLenum , const GLbyte * ); }
# 5740 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3DATIPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 5741 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3DVATIPROC)(GLenum , const GLdouble * ); }
# 5742 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3FATIPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 5743 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3FVATIPROC)(GLenum , const GLfloat * ); }
# 5744 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3IATIPROC)(GLenum , GLint , GLint , GLint ); }
# 5745 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3IVATIPROC)(GLenum , const GLint * ); }
# 5746 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3SATIPROC)(GLenum , GLshort , GLshort , GLshort ); }
# 5747 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALSTREAM3SVATIPROC)(GLenum , const GLshort * ); }
# 5748 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXBLENDENVFATIPROC)(GLenum , GLfloat ); }
# 5749 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXBLENDENVIATIPROC)(GLenum , GLint ); }
# 5750 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2DATIPROC)(GLenum , GLdouble , GLdouble ); }
# 5751 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2DVATIPROC)(GLenum , const GLdouble * ); }
# 5752 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2FATIPROC)(GLenum , GLfloat , GLfloat ); }
# 5753 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2FVATIPROC)(GLenum , const GLfloat * ); }
# 5754 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2IATIPROC)(GLenum , GLint , GLint ); }
# 5755 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2IVATIPROC)(GLenum , const GLint * ); }
# 5756 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2SATIPROC)(GLenum , GLshort , GLshort ); }
# 5757 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM2SVATIPROC)(GLenum , const GLshort * ); }
# 5758 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3DATIPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 5759 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3DVATIPROC)(GLenum , const GLdouble * ); }
# 5760 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3FATIPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 5761 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3FVATIPROC)(GLenum , const GLfloat * ); }
# 5762 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3IATIPROC)(GLenum , GLint , GLint , GLint ); }
# 5763 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3IVATIPROC)(GLenum , const GLint * ); }
# 5764 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3SATIPROC)(GLenum , GLshort , GLshort , GLshort ); }
# 5765 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM3SVATIPROC)(GLenum , const GLshort * ); }
# 5766 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4DATIPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 5767 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4DVATIPROC)(GLenum , const GLdouble * ); }
# 5768 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4FATIPROC)(GLenum , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 5769 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4FVATIPROC)(GLenum , const GLfloat * ); }
# 5770 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4IATIPROC)(GLenum , GLint , GLint , GLint , GLint ); }
# 5771 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4IVATIPROC)(GLenum , const GLint * ); }
# 5772 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4SATIPROC)(GLenum , GLshort , GLshort , GLshort , GLshort ); }
# 5773 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXSTREAM4SVATIPROC)(GLenum , const GLshort * ); }
# 5878 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETUNIFORMBUFFERSIZEEXTPROC)(GLuint , GLint ); }
# 5879 "./sdk/GL/glew.h"
extern "C" { typedef GLintptr (*PFNGLGETUNIFORMOFFSETEXTPROC)(GLuint , GLint ); }
# 5880 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMBUFFEREXTPROC)(GLuint , GLint , GLuint ); }
# 5901 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDCOLOREXTPROC)(GLclampf , GLclampf , GLclampf , GLclampf ); }
# 5917 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONSEPARATEEXTPROC)(GLenum , GLenum ); }
# 5935 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDFUNCSEPARATEEXTPROC)(GLenum , GLenum , GLenum , GLenum ); }
# 5962 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLENDEQUATIONEXTPROC)(GLenum ); }
# 6012 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORSUBTABLEEXTPROC)(GLenum , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6013 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCOLORSUBTABLEEXTPROC)(GLenum , GLsizei , GLint , GLint , GLsizei ); }
# 6030 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOCKARRAYSEXTPROC)(GLint , GLsizei ); }
# 6031 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNLOCKARRAYSEXTPROC)(void); }
# 6066 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONFILTER1DEXTPROC)(GLenum , GLenum , GLsizei , GLenum , GLenum , const void * ); }
# 6067 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONFILTER2DEXTPROC)(GLenum , GLenum , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6068 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERFEXTPROC)(GLenum , GLenum , GLfloat ); }
# 6069 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERFVEXTPROC)(GLenum , GLenum , const GLfloat * ); }
# 6070 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERIEXTPROC)(GLenum , GLenum , GLint ); }
# 6071 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCONVOLUTIONPARAMETERIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 6072 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei ); }
# 6073 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLsizei ); }
# 6074 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONFILTEREXTPROC)(GLenum , GLenum , GLenum , void * ); }
# 6075 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 6076 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 6077 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSEPARABLEFILTEREXTPROC)(GLenum , GLenum , GLenum , void * , void * , void * ); }
# 6078 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSEPARABLEFILTER2DEXTPROC)(GLenum , GLenum , GLsizei , GLsizei , GLenum , GLenum , const void * , const void * ); }
# 6118 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINORMALPOINTEREXTPROC)(GLenum , GLsizei , void * ); }
# 6119 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTANGENTPOINTEREXTPROC)(GLenum , GLsizei , void * ); }
# 6133 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLint ); }
# 6134 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLsizei , GLint ); }
# 6135 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum , GLint , GLint , GLint , GLint , GLsizei ); }
# 6136 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6137 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum , GLint , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6154 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCULLPARAMETERDVEXTPROC)(GLenum , GLdouble * ); }
# 6155 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCULLPARAMETERFVEXTPROC)(GLenum , GLfloat * ); }
# 6172 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDEPTHBOUNDSEXTPROC)(GLclampd , GLclampd ); }
# 6189 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDMULTITEXTUREEXTPROC)(GLenum , GLenum , GLuint ); }
# 6190 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint , GLenum ); }
# 6191 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield ); }
# 6192 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLenum , GLsizei , GLint , GLsizei , const void * ); }
# 6193 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLenum , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 6194 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum , GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 6195 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLenum , GLsizei , const void * ); }
# 6196 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 6197 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 6198 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLenum , GLsizei , GLint , GLsizei , const void * ); }
# 6199 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLenum , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 6200 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint , GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLint , GLsizei , const void * ); }
# 6201 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLint , GLsizei , GLenum , GLsizei , const void * ); }
# 6202 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 6203 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLsizei , const void * ); }
# 6204 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLint ); }
# 6205 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLsizei , GLint ); }
# 6206 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLint , GLsizei ); }
# 6207 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6208 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6209 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLint ); }
# 6210 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLenum , GLint , GLint , GLsizei , GLsizei , GLint ); }
# 6211 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLsizei ); }
# 6212 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6213 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei ); }
# 6214 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum , GLuint ); }
# 6215 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum , GLuint ); }
# 6216 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint , GLuint ); }
# 6217 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint , GLenum ); }
# 6218 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum , GLuint ); }
# 6219 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum , GLuint ); }
# 6220 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint , GLuint ); }
# 6221 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint , GLenum ); }
# 6222 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint , GLintptr , GLsizeiptr ); }
# 6223 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint , GLenum ); }
# 6224 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint , GLsizei , const GLenum * ); }
# 6225 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint , GLenum ); }
# 6226 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum , GLenum ); }
# 6227 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint , GLenum ); }
# 6228 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum , GLenum , GLint , void * ); }
# 6229 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint , GLenum , GLint , void * ); }
# 6230 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum , GLuint , GLdouble * ); }
# 6231 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETDOUBLEI_VEXTPROC)(GLenum , GLuint , GLdouble * ); }
# 6232 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum , GLuint , GLfloat * ); }
# 6233 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFLOATI_VEXTPROC)(GLenum , GLuint , GLfloat * ); }
# 6234 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint , GLenum , GLint * ); }
# 6235 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXENVFVEXTPROC)(GLenum , GLenum , GLenum , GLfloat * ); }
# 6236 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXENVIVEXTPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 6237 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXGENDVEXTPROC)(GLenum , GLenum , GLenum , GLdouble * ); }
# 6238 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXGENFVEXTPROC)(GLenum , GLenum , GLenum , GLfloat * ); }
# 6239 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXGENIVEXTPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 6240 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum , GLenum , GLint , GLenum , GLenum , void * ); }
# 6241 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum , GLenum , GLint , GLenum , GLfloat * ); }
# 6242 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum , GLenum , GLint , GLenum , GLint * ); }
# 6243 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 6244 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum , GLenum , GLenum , GLuint * ); }
# 6245 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum , GLenum , GLenum , GLfloat * ); }
# 6246 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 6247 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint , GLenum , GLint * ); }
# 6248 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint , GLenum , void ** ); }
# 6249 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint , GLintptr , GLsizeiptr , void * ); }
# 6250 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint , GLenum , GLenum , GLint * ); }
# 6251 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint , GLenum , GLuint , GLint * ); }
# 6252 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint , GLenum , GLuint , GLuint * ); }
# 6253 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint , GLenum , GLuint , GLdouble * ); }
# 6254 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint , GLenum , GLuint , GLfloat * ); }
# 6255 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint , GLenum , GLenum , void * ); }
# 6256 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint , GLenum , GLenum , GLint * ); }
# 6257 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint , GLenum , GLint * ); }
# 6258 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum , GLuint , GLvoid ** ); }
# 6259 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPOINTERI_VEXTPROC)(GLenum , GLuint , GLvoid ** ); }
# 6260 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint , GLenum , GLint , GLenum , GLenum , void * ); }
# 6261 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint , GLenum , GLint , GLenum , GLfloat * ); }
# 6262 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint , GLenum , GLint , GLenum , GLint * ); }
# 6263 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint , GLenum , GLenum , GLint * ); }
# 6264 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint , GLenum , GLenum , GLuint * ); }
# 6265 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint , GLenum , GLenum , GLfloat * ); }
# 6266 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint , GLenum , GLenum , GLint * ); }
# 6267 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint , GLuint , GLenum , GLint * ); }
# 6268 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint , GLenum , GLint * ); }
# 6269 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint , GLuint , GLenum , GLvoid ** ); }
# 6270 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint , GLenum , GLvoid ** ); }
# 6271 "./sdk/GL/glew.h"
extern "C" { typedef GLvoid *(*PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint , GLenum ); }
# 6272 "./sdk/GL/glew.h"
extern "C" { typedef GLvoid *(*PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint , GLintptr , GLsizeiptr , GLbitfield ); }
# 6273 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXFRUSTUMEXTPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 6274 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum ); }
# 6275 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum , const GLdouble * ); }
# 6276 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum , const GLfloat * ); }
# 6277 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXLOADDEXTPROC)(GLenum , const GLdouble * ); }
# 6278 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXLOADFEXTPROC)(GLenum , const GLfloat * ); }
# 6279 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum , const GLdouble * ); }
# 6280 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum , const GLfloat * ); }
# 6281 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXMULTDEXTPROC)(GLenum , const GLdouble * ); }
# 6282 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXMULTFEXTPROC)(GLenum , const GLfloat * ); }
# 6283 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXORTHOEXTPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 6284 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXPOPEXTPROC)(GLenum ); }
# 6285 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXPUSHEXTPROC)(GLenum ); }
# 6286 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXROTATEDEXTPROC)(GLenum , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 6287 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXROTATEFEXTPROC)(GLenum , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 6288 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXSCALEDEXTPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 6289 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXSCALEFEXTPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 6290 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum , GLdouble , GLdouble , GLdouble ); }
# 6291 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum , GLfloat , GLfloat , GLfloat ); }
# 6292 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXBUFFEREXTPROC)(GLenum , GLenum , GLenum , GLuint ); }
# 6293 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum , GLint , GLenum , GLsizei , const void * ); }
# 6294 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXENVFEXTPROC)(GLenum , GLenum , GLenum , GLfloat ); }
# 6295 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXENVFVEXTPROC)(GLenum , GLenum , GLenum , const GLfloat * ); }
# 6296 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXENVIEXTPROC)(GLenum , GLenum , GLenum , GLint ); }
# 6297 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXENVIVEXTPROC)(GLenum , GLenum , GLenum , const GLint * ); }
# 6298 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENDEXTPROC)(GLenum , GLenum , GLenum , GLdouble ); }
# 6299 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENDVEXTPROC)(GLenum , GLenum , GLenum , const GLdouble * ); }
# 6300 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENFEXTPROC)(GLenum , GLenum , GLenum , GLfloat ); }
# 6301 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENFVEXTPROC)(GLenum , GLenum , GLenum , const GLfloat * ); }
# 6302 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENIEXTPROC)(GLenum , GLenum , GLenum , GLint ); }
# 6303 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXGENIVEXTPROC)(GLenum , GLenum , GLenum , const GLint * ); }
# 6304 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6305 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6306 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6307 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum , GLenum , GLenum , const GLint * ); }
# 6308 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum , GLenum , GLenum , const GLuint * ); }
# 6309 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum , GLenum , GLenum , GLfloat ); }
# 6310 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum , GLenum , GLenum , const GLfloat * ); }
# 6311 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum , GLenum , GLenum , GLint ); }
# 6312 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum , GLenum , GLenum , const GLint * ); }
# 6313 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum , GLenum , GLuint ); }
# 6314 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum , GLenum , GLint , GLint , GLsizei , GLenum , GLenum , const void * ); }
# 6315 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6316 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum , GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6317 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint , GLsizeiptr , const void * , GLenum ); }
# 6318 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint , GLintptr , GLsizeiptr , const void * ); }
# 6319 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint , GLuint , GLintptr , GLintptr , GLsizeiptr ); }
# 6320 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint , GLenum , GLenum , GLuint ); }
# 6321 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint , GLenum , GLenum , GLuint , GLint ); }
# 6322 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint , GLenum , GLenum , GLuint , GLint ); }
# 6323 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint , GLenum , GLenum , GLuint , GLint , GLint ); }
# 6324 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint , GLenum , GLuint , GLint ); }
# 6325 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint , GLenum , GLuint , GLint , GLenum ); }
# 6326 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint , GLenum , GLuint , GLint , GLint ); }
# 6327 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint , GLenum , GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 6328 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint , GLenum , GLuint , const GLdouble * ); }
# 6329 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint , GLenum , GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 6330 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint , GLenum , GLuint , const GLfloat * ); }
# 6331 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint , GLenum , GLuint , GLint , GLint , GLint , GLint ); }
# 6332 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint , GLenum , GLuint , const GLint * ); }
# 6333 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint , GLenum , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 6334 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint , GLenum , GLuint , const GLuint * ); }
# 6335 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint , GLenum , GLuint , GLsizei , const GLfloat * ); }
# 6336 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint , GLenum , GLuint , GLsizei , const GLint * ); }
# 6337 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint , GLenum , GLuint , GLsizei , const GLuint * ); }
# 6338 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint , GLenum , GLenum , GLsizei , const void * ); }
# 6339 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint , GLenum , GLsizei , GLsizei ); }
# 6340 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint , GLsizei , GLsizei , GLenum , GLsizei , GLsizei ); }
# 6341 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint , GLsizei , GLenum , GLsizei , GLsizei ); }
# 6342 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint , GLint , GLfloat ); }
# 6343 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint , GLint , GLsizei , const GLfloat * ); }
# 6344 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint , GLint , GLint ); }
# 6345 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint , GLint , GLsizei , const GLint * ); }
# 6346 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint , GLint , GLuint ); }
# 6347 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint , GLint , GLsizei , const GLuint * ); }
# 6348 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint , GLint , GLfloat , GLfloat ); }
# 6349 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint , GLint , GLsizei , const GLfloat * ); }
# 6350 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint , GLint , GLint , GLint ); }
# 6351 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint , GLint , GLsizei , const GLint * ); }
# 6352 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint , GLint , GLuint , GLuint ); }
# 6353 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint , GLint , GLsizei , const GLuint * ); }
# 6354 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint , GLint , GLfloat , GLfloat , GLfloat ); }
# 6355 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint , GLint , GLsizei , const GLfloat * ); }
# 6356 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint , GLint , GLint , GLint , GLint ); }
# 6357 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint , GLint , GLsizei , const GLint * ); }
# 6358 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint , GLint , GLuint , GLuint , GLuint ); }
# 6359 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint , GLint , GLsizei , const GLuint * ); }
# 6360 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint , GLint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 6361 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint , GLint , GLsizei , const GLfloat * ); }
# 6362 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint , GLint , GLint , GLint , GLint , GLint ); }
# 6363 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint , GLint , GLsizei , const GLint * ); }
# 6364 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint , GLint , GLuint , GLuint , GLuint , GLuint ); }
# 6365 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint , GLint , GLsizei , const GLuint * ); }
# 6366 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6367 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6368 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6369 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6370 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6371 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6372 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6373 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6374 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint , GLint , GLsizei , GLboolean , const GLfloat * ); }
# 6375 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield ); }
# 6376 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREBUFFEREXTPROC)(GLuint , GLenum , GLenum , GLuint ); }
# 6377 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLint , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6378 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLint , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6379 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint , GLenum , GLint , GLint , GLsizei , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 6380 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint , GLenum , GLenum , const GLint * ); }
# 6381 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint , GLenum , GLenum , const GLuint * ); }
# 6382 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint , GLenum , GLenum , GLfloat ); }
# 6383 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint , GLenum , GLenum , const GLfloat * ); }
# 6384 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint , GLenum , GLenum , GLint ); }
# 6385 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint , GLenum , GLenum , const GLint * ); }
# 6386 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint , GLenum , GLuint ); }
# 6387 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint , GLenum , GLint , GLint , GLsizei , GLenum , GLenum , const void * ); }
# 6388 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6389 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 6390 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint ); }
# 6391 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 6392 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint , GLuint , GLsizei , GLintptr ); }
# 6393 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint , GLuint , GLenum , GLsizei , GLintptr ); }
# 6394 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint , GLuint , GLenum , GLsizei , GLintptr ); }
# 6395 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint , GLuint , GLenum , GLint , GLenum , GLsizei , GLintptr ); }
# 6396 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint , GLuint , GLenum , GLsizei , GLintptr ); }
# 6397 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 6398 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 6399 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint , GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 6400 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint , GLuint , GLuint , GLint , GLenum , GLboolean , GLsizei , GLintptr ); }
# 6401 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 6626 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORMASKINDEXEDEXTPROC)(GLuint , GLboolean , GLboolean , GLboolean , GLboolean ); }
# 6627 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEINDEXEDEXTPROC)(GLenum , GLuint ); }
# 6628 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEINDEXEDEXTPROC)(GLenum , GLuint ); }
# 6629 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum , GLuint , GLboolean * ); }
# 6630 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum , GLuint , GLint * ); }
# 6631 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISENABLEDINDEXEDEXTPROC)(GLenum , GLuint ); }
# 6649 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum , GLint , GLsizei , GLsizei ); }
# 6650 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum , GLsizei , GLenum , const GLvoid * , GLsizei ); }
# 6667 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum , GLuint , GLuint , GLsizei , GLenum , const GLvoid * ); }
# 6689 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDPOINTEREXTPROC)(GLenum , GLsizei , const GLvoid * ); }
# 6690 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDDEXTPROC)(GLdouble ); }
# 6691 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDDVEXTPROC)(const GLdouble * ); }
# 6692 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDFEXTPROC)(GLfloat ); }
# 6693 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDFVEXTPROC)(const GLfloat * ); }
# 6725 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTCOLORMATERIALEXTPROC)(GLenum , GLenum ); }
# 6726 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELFEXTPROC)(GLenum , GLfloat ); }
# 6727 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELFVEXTPROC)(GLenum , GLfloat * ); }
# 6728 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELIEXTPROC)(GLenum , GLint ); }
# 6729 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELIVEXTPROC)(GLenum , GLint * ); }
# 6730 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTFEXTPROC)(GLenum , GLenum , GLfloat ); }
# 6731 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 6732 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTIEXTPROC)(GLenum , GLenum , GLint ); }
# 6733 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 6734 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALFEXTPROC)(GLenum , GLenum , const GLfloat ); }
# 6735 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALFVEXTPROC)(GLenum , GLenum , const GLfloat * ); }
# 6736 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALIEXTPROC)(GLenum , GLenum , const GLint ); }
# 6737 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 6738 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTLIGHTFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 6739 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTLIGHTIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 6740 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTMATERIALFVEXTPROC)(GLenum , GLenum , const GLfloat * ); }
# 6741 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTMATERIALIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 6742 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLIGHTENVIEXTPROC)(GLenum , GLint ); }
# 6777 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBLITFRAMEBUFFEREXTPROC)(GLint , GLint , GLint , GLint , GLint , GLint , GLint , GLint , GLbitfield , GLenum ); }
# 6794 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum , GLsizei , GLenum , GLsizei , GLsizei ); }
# 6859 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum , GLuint ); }
# 6860 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDRENDERBUFFEREXTPROC)(GLenum , GLuint ); }
# 6861 "./sdk/GL/glew.h"
extern "C" { typedef GLenum (*PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum ); }
# 6862 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei , const GLuint * ); }
# 6863 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei , const GLuint * ); }
# 6864 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum , GLenum , GLenum , GLuint ); }
# 6865 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum , GLenum , GLenum , GLuint , GLint ); }
# 6866 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum , GLenum , GLenum , GLuint , GLint ); }
# 6867 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum , GLenum , GLenum , GLuint , GLint , GLint ); }
# 6868 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei , GLuint * ); }
# 6869 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei , GLuint * ); }
# 6870 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENERATEMIPMAPEXTPROC)(GLenum ); }
# 6871 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 6872 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 6873 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISFRAMEBUFFEREXTPROC)(GLuint ); }
# 6874 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISRENDERBUFFEREXTPROC)(GLuint ); }
# 6875 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum , GLenum , GLsizei , GLsizei ); }
# 6937 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum , GLenum , GLuint , GLint ); }
# 6938 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)(GLenum , GLenum , GLuint , GLint , GLenum ); }
# 6939 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum , GLenum , GLuint , GLint , GLint ); }
# 6940 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint , GLenum , GLint ); }
# 6956 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)(GLenum , GLuint , GLsizei , const GLfloat * ); }
# 6957 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLenum , GLuint , GLsizei , const GLfloat * ); }
# 6998 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDFRAGDATALOCATIONEXTPROC)(GLuint , GLuint , const GLchar * ); }
# 6999 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETFRAGDATALOCATIONEXTPROC)(GLuint , const GLchar * ); }
# 7000 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMUIVEXTPROC)(GLuint , GLint , GLuint * ); }
# 7001 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIIVEXTPROC)(GLuint , GLenum , GLint * ); }
# 7002 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIUIVEXTPROC)(GLuint , GLenum , GLuint * ); }
# 7003 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UIEXTPROC)(GLint , GLuint ); }
# 7004 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UIVEXTPROC)(GLint , GLsizei , const GLuint * ); }
# 7005 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UIEXTPROC)(GLint , GLuint , GLuint ); }
# 7006 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UIVEXTPROC)(GLint , GLsizei , const GLuint * ); }
# 7007 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UIEXTPROC)(GLint , GLuint , GLuint , GLuint ); }
# 7008 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UIVEXTPROC)(GLint , GLsizei , const GLuint * ); }
# 7009 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UIEXTPROC)(GLint , GLuint , GLuint , GLuint , GLuint ); }
# 7010 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UIVEXTPROC)(GLint , GLsizei , const GLuint * ); }
# 7011 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1IEXTPROC)(GLuint , GLint ); }
# 7012 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1IVEXTPROC)(GLuint , const GLint * ); }
# 7013 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1UIEXTPROC)(GLuint , GLuint ); }
# 7014 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI1UIVEXTPROC)(GLuint , const GLuint * ); }
# 7015 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2IEXTPROC)(GLuint , GLint , GLint ); }
# 7016 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2IVEXTPROC)(GLuint , const GLint * ); }
# 7017 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2UIEXTPROC)(GLuint , GLuint , GLuint ); }
# 7018 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI2UIVEXTPROC)(GLuint , const GLuint * ); }
# 7019 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3IEXTPROC)(GLuint , GLint , GLint , GLint ); }
# 7020 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3IVEXTPROC)(GLuint , const GLint * ); }
# 7021 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3UIEXTPROC)(GLuint , GLuint , GLuint , GLuint ); }
# 7022 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI3UIVEXTPROC)(GLuint , const GLuint * ); }
# 7023 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4BVEXTPROC)(GLuint , const GLbyte * ); }
# 7024 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4IEXTPROC)(GLuint , GLint , GLint , GLint , GLint ); }
# 7025 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4IVEXTPROC)(GLuint , const GLint * ); }
# 7026 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4SVEXTPROC)(GLuint , const GLshort * ); }
# 7027 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UBVEXTPROC)(GLuint , const GLubyte * ); }
# 7028 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UIEXTPROC)(GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 7029 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4UIVEXTPROC)(GLuint , const GLuint * ); }
# 7030 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBI4USVEXTPROC)(GLuint , const GLushort * ); }
# 7031 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBIPOINTEREXTPROC)(GLuint , GLint , GLenum , GLsizei , const GLvoid * ); }
# 7091 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMEXTPROC)(GLenum , GLboolean , GLenum , GLenum , void * ); }
# 7092 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 7093 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 7094 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXEXTPROC)(GLenum , GLboolean , GLenum , GLenum , void * ); }
# 7095 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXPARAMETERFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 7096 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMINMAXPARAMETERIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 7097 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLHISTOGRAMEXTPROC)(GLenum , GLsizei , GLenum , GLboolean ); }
# 7098 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMINMAXEXTPROC)(GLenum , GLenum , GLboolean ); }
# 7099 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESETHISTOGRAMEXTPROC)(GLenum ); }
# 7100 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESETMINMAXEXTPROC)(GLenum ); }
# 7131 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINDEXFUNCEXTPROC)(GLenum , GLfloat ); }
# 7144 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINDEXMATERIALEXTPROC)(GLenum , GLenum ); }
# 7177 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLAPPLYTEXTUREEXTPROC)(GLenum ); }
# 7178 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURELIGHTEXTPROC)(GLenum ); }
# 7179 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREMATERIALEXTPROC)(GLenum , GLenum ); }
# 7203 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWARRAYSEXTPROC)(GLenum , GLint * , GLsizei * , GLsizei ); }
# 7204 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIDRAWELEMENTSEXTPROC)(GLenum , GLsizei * , GLenum , const GLvoid ** , GLsizei ); }
# 7236 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEMASKEXTPROC)(GLclampf , GLboolean ); }
# 7237 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEPATTERNEXTPROC)(GLenum ); }
# 7317 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEEXTPROC)(GLenum , GLenum , GLsizei , GLenum , GLenum , const void * ); }
# 7318 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEEXTPROC)(GLenum , GLenum , GLenum , void * ); }
# 7319 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)(GLenum , GLenum , GLfloat * ); }
# 7320 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 7360 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum , GLenum , const GLfloat * ); }
# 7361 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 7362 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)(GLenum , GLenum , const GLfloat ); }
# 7363 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum , GLenum , const GLfloat * ); }
# 7364 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)(GLenum , GLenum , const GLint ); }
# 7365 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 7397 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFEXTPROC)(GLenum , GLfloat ); }
# 7398 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERFVEXTPROC)(GLenum , GLfloat * ); }
# 7416 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOLYGONOFFSETEXTPROC)(GLfloat , GLfloat ); }
# 7434 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROVOKINGVERTEXEXTPROC)(GLenum ); }
# 7458 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINSCENEEXTPROC)(void); }
# 7459 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDSCENEEXTPROC)(void); }
# 7481 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3BEXTPROC)(GLbyte , GLbyte , GLbyte ); }
# 7482 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3BVEXTPROC)(const GLbyte * ); }
# 7483 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3DEXTPROC)(GLdouble , GLdouble , GLdouble ); }
# 7484 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3DVEXTPROC)(const GLdouble * ); }
# 7485 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3FEXTPROC)(GLfloat , GLfloat , GLfloat ); }
# 7486 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3FVEXTPROC)(const GLfloat * ); }
# 7487 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3IEXTPROC)(GLint , GLint , GLint ); }
# 7488 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3IVEXTPROC)(const GLint * ); }
# 7489 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3SEXTPROC)(GLshort , GLshort , GLshort ); }
# 7490 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3SVEXTPROC)(const GLshort * ); }
# 7491 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UBEXTPROC)(GLubyte , GLubyte , GLubyte ); }
# 7492 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UBVEXTPROC)(const GLubyte * ); }
# 7493 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UIEXTPROC)(GLuint , GLuint , GLuint ); }
# 7494 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3UIVEXTPROC)(const GLuint * ); }
# 7495 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3USEXTPROC)(GLushort , GLushort , GLushort ); }
# 7496 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3USVEXTPROC)(const GLushort * ); }
# 7497 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORPOINTEREXTPROC)(GLint , GLenum , GLsizei , GLvoid * ); }
# 7528 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLACTIVEPROGRAMEXTPROC)(GLuint ); }
# 7529 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLCREATESHADERPROGRAMEXTPROC)(GLenum , const char * ); }
# 7530 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUSESHADERPROGRAMEXTPROC)(GLenum , GLuint ); }
# 7614 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDIMAGETEXTUREEXTPROC)(GLuint , GLuint , GLint , GLboolean , GLint , GLenum , GLint ); }
# 7615 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMEMORYBARRIEREXTPROC)(GLbitfield ); }
# 7664 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLACTIVESTENCILFACEEXTPROC)(GLenum ); }
# 7689 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum , GLint , GLint , GLsizei , GLenum , GLenum , const void * ); }
# 7690 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum , GLint , GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 7691 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 7768 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE3DEXTPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 7805 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXBUFFEREXTPROC)(GLenum , GLenum , GLuint ); }
# 8038 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARCOLORIIEXTPROC)(GLint , GLint , GLint , GLint ); }
# 8039 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARCOLORIUIEXTPROC)(GLuint , GLuint , GLuint , GLuint ); }
# 8040 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum , GLenum , GLint * ); }
# 8041 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum , GLenum , GLuint * ); }
# 8042 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXPARAMETERIIVEXTPROC)(GLenum , GLenum , const GLint * ); }
# 8043 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum , GLenum , const GLuint * ); }
# 8093 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei , const GLuint * , GLboolean * ); }
# 8094 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDTEXTUREEXTPROC)(GLenum , GLuint ); }
# 8095 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETETEXTURESEXTPROC)(GLsizei , const GLuint * ); }
# 8096 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENTEXTURESEXTPROC)(GLsizei , GLuint * ); }
# 8097 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISTEXTUREEXTPROC)(GLuint ); }
# 8098 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei , const GLuint * , const GLclampf * ); }
# 8119 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTURENORMALEXTPROC)(GLenum ); }
# 8237 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint , GLenum , GLint64EXT * ); }
# 8238 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint , GLenum , GLuint64EXT * ); }
# 8268 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)(GLenum ); }
# 8269 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERBASEEXTPROC)(GLenum , GLuint , GLuint ); }
# 8270 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFEROFFSETEXTPROC)(GLenum , GLuint , GLuint , GLintptr ); }
# 8271 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERRANGEEXTPROC)(GLenum , GLuint , GLuint , GLintptr , GLsizeiptr ); }
# 8272 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDTRANSFORMFEEDBACKEXTPROC)(void); }
# 8273 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)(GLuint , GLuint , GLsizei , GLsizei * , GLsizei * , GLenum * , char * ); }
# 8274 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)(GLuint , GLsizei , const char ** , GLenum ); }
# 8327 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLARRAYELEMENTEXTPROC)(GLint ); }
# 8328 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORPOINTEREXTPROC)(GLint , GLenum , GLsizei , GLsizei , const void * ); }
# 8329 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWARRAYSEXTPROC)(GLenum , GLint , GLsizei ); }
# 8330 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei , GLsizei , const GLboolean * ); }
# 8331 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPOINTERVEXTPROC)(GLenum , void ** ); }
# 8332 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINDEXPOINTEREXTPROC)(GLenum , GLsizei , GLsizei , const void * ); }
# 8333 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALPOINTEREXTPROC)(GLenum , GLsizei , GLsizei , const void * ); }
# 8334 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDPOINTEREXTPROC)(GLint , GLenum , GLsizei , GLsizei , const void * ); }
# 8335 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXPOINTEREXTPROC)(GLint , GLenum , GLsizei , GLsizei , const void * ); }
# 8374 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBLDVEXTPROC)(GLuint , GLenum , GLdouble * ); }
# 8375 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint , GLuint , GLuint , GLint , GLenum , GLsizei , GLintptr ); }
# 8376 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1DEXTPROC)(GLuint , GLdouble ); }
# 8377 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1DVEXTPROC)(GLuint , const GLdouble * ); }
# 8378 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2DEXTPROC)(GLuint , GLdouble , GLdouble ); }
# 8379 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2DVEXTPROC)(GLuint , const GLdouble * ); }
# 8380 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3DEXTPROC)(GLuint , GLdouble , GLdouble , GLdouble ); }
# 8381 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3DVEXTPROC)(GLuint , const GLdouble * ); }
# 8382 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4DEXTPROC)(GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 8383 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4DVEXTPROC)(GLuint , const GLdouble * ); }
# 8384 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBLPOINTEREXTPROC)(GLuint , GLint , GLenum , GLsizei , const void * ); }
# 8518 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINVERTEXSHADEREXTPROC)(void); }
# 8519 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBINDLIGHTPARAMETEREXTPROC)(GLenum , GLenum ); }
# 8520 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBINDMATERIALPARAMETEREXTPROC)(GLenum , GLenum ); }
# 8521 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBINDPARAMETEREXTPROC)(GLenum ); }
# 8522 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBINDTEXGENPARAMETEREXTPROC)(GLenum , GLenum , GLenum ); }
# 8523 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)(GLenum , GLenum ); }
# 8524 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDVERTEXSHADEREXTPROC)(GLuint ); }
# 8525 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEVERTEXSHADEREXTPROC)(GLuint ); }
# 8526 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)(GLuint ); }
# 8527 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)(GLuint ); }
# 8528 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDVERTEXSHADEREXTPROC)(void); }
# 8529 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEXTRACTCOMPONENTEXTPROC)(GLuint , GLuint , GLuint ); }
# 8530 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGENSYMBOLSEXTPROC)(GLenum , GLenum , GLenum , GLuint ); }
# 8531 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGENVERTEXSHADERSEXTPROC)(GLuint ); }
# 8532 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINVARIANTBOOLEANVEXTPROC)(GLuint , GLenum , GLboolean * ); }
# 8533 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINVARIANTFLOATVEXTPROC)(GLuint , GLenum , GLfloat * ); }
# 8534 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINVARIANTINTEGERVEXTPROC)(GLuint , GLenum , GLint * ); }
# 8535 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)(GLuint , GLenum , GLboolean * ); }
# 8536 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETLOCALCONSTANTFLOATVEXTPROC)(GLuint , GLenum , GLfloat * ); }
# 8537 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)(GLuint , GLenum , GLint * ); }
# 8538 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTBOOLEANVEXTPROC)(GLuint , GLenum , GLboolean * ); }
# 8539 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTFLOATVEXTPROC)(GLuint , GLenum , GLfloat * ); }
# 8540 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTINTEGERVEXTPROC)(GLuint , GLenum , GLint * ); }
# 8541 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVARIANTPOINTERVEXTPROC)(GLuint , GLenum , GLvoid ** ); }
# 8542 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINSERTCOMPONENTEXTPROC)(GLuint , GLuint , GLuint ); }
# 8543 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISVARIANTENABLEDEXTPROC)(GLuint , GLenum ); }
# 8544 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSETINVARIANTEXTPROC)(GLuint , GLenum , GLvoid * ); }
# 8545 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSETLOCALCONSTANTEXTPROC)(GLuint , GLenum , GLvoid * ); }
# 8546 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHADEROP1EXTPROC)(GLenum , GLuint , GLuint ); }
# 8547 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHADEROP2EXTPROC)(GLenum , GLuint , GLuint , GLuint ); }
# 8548 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHADEROP3EXTPROC)(GLenum , GLuint , GLuint , GLuint , GLuint ); }
# 8549 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSWIZZLEEXTPROC)(GLuint , GLuint , GLenum , GLenum , GLenum , GLenum ); }
# 8550 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTPOINTEREXTPROC)(GLuint , GLenum , GLuint , GLvoid * ); }
# 8551 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTBVEXTPROC)(GLuint , GLbyte * ); }
# 8552 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTDVEXTPROC)(GLuint , GLdouble * ); }
# 8553 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTFVEXTPROC)(GLuint , GLfloat * ); }
# 8554 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTIVEXTPROC)(GLuint , GLint * ); }
# 8555 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTSVEXTPROC)(GLuint , GLshort * ); }
# 8556 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTUBVEXTPROC)(GLuint , GLubyte * ); }
# 8557 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTUIVEXTPROC)(GLuint , GLuint * ); }
# 8558 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVARIANTUSVEXTPROC)(GLuint , GLushort * ); }
# 8559 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWRITEMASKEXTPROC)(GLuint , GLuint , GLenum , GLenum , GLenum , GLenum ); }
# 8627 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXWEIGHTPOINTEREXTPROC)(GLint , GLenum , GLsizei , void * ); }
# 8628 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXWEIGHTFEXTPROC)(GLfloat ); }
# 8629 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXWEIGHTFVEXTPROC)(GLfloat * ); }
# 8644 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMETERMINATORGREMEDYPROC)(void); }
# 8657 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSTRINGMARKERGREMEDYPROC)(GLsizei , const void * ); }
# 8679 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum , GLenum , const GLfloat * ); }
# 8680 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum , GLenum , const GLint * ); }
# 8681 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLIMAGETRANSFORMPARAMETERFHPPROC)(GLenum , GLenum , const GLfloat ); }
# 8682 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum , GLenum , const GLfloat * ); }
# 8683 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLIMAGETRANSFORMPARAMETERIHPPROC)(GLenum , GLenum , const GLint ); }
# 8684 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum , GLenum , const GLint * ); }
# 8734 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIMODEDRAWARRAYSIBMPROC)(const GLenum * , const GLint * , const GLsizei * , GLsizei , GLint ); }
# 8735 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTIMODEDRAWELEMENTSIBMPROC)(const GLenum * , const GLsizei * , GLenum , const GLvoid *const * , GLsizei , GLint ); }
# 8800 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORPOINTERLISTIBMPROC)(GLint , GLenum , GLint , const GLvoid ** , GLint ); }
# 8801 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEDGEFLAGPOINTERLISTIBMPROC)(GLint , const GLboolean ** , GLint ); }
# 8802 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDPOINTERLISTIBMPROC)(GLenum , GLint , const GLvoid ** , GLint ); }
# 8803 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINDEXPOINTERLISTIBMPROC)(GLenum , GLint , const GLvoid ** , GLint ); }
# 8804 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALPOINTERLISTIBMPROC)(GLenum , GLint , const GLvoid ** , GLint ); }
# 8805 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)(GLint , GLenum , GLint , const GLvoid ** , GLint ); }
# 8806 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDPOINTERLISTIBMPROC)(GLint , GLenum , GLint , const GLvoid ** , GLint ); }
# 8807 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXPOINTERLISTIBMPROC)(GLint , GLenum , GLint , const GLvoid ** , GLint ); }
# 8862 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORPOINTERVINTELPROC)(GLint , GLenum , const void ** ); }
# 8863 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALPOINTERVINTELPROC)(GLenum , const void ** ); }
# 8864 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDPOINTERVINTELPROC)(GLint , GLenum , const void ** ); }
# 8865 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXPOINTERVINTELPROC)(GLint , GLenum , const void ** ); }
# 8881 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSCISSORFUNCINTELPROC)(GLenum , GLenum , GLenum ); }
# 8882 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSCISSORINTELPROC)(GLenum , GLclampf , GLclampf ); }
# 8901 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLBUFFERREGIONENABLEDEXTPROC)(void); }
# 8902 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEBUFFERREGIONEXTPROC)(GLenum ); }
# 8903 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWBUFFERREGIONEXTPROC)(GLuint , GLint , GLint , GLsizei , GLsizei , GLint , GLint ); }
# 8904 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLNEWBUFFERREGIONEXTPROC)(GLenum ); }
# 8905 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREADBUFFERREGIONEXTPROC)(GLuint , GLint , GLint , GLsizei , GLsizei ); }
# 8949 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESIZEBUFFERSMESAPROC)(void); }
# 8962 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DMESAPROC)(GLdouble , GLdouble ); }
# 8963 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2DVMESAPROC)(const GLdouble * ); }
# 8964 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FMESAPROC)(GLfloat , GLfloat ); }
# 8965 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2FVMESAPROC)(const GLfloat * ); }
# 8966 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IMESAPROC)(GLint , GLint ); }
# 8967 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2IVMESAPROC)(const GLint * ); }
# 8968 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SMESAPROC)(GLshort , GLshort ); }
# 8969 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS2SVMESAPROC)(const GLshort * ); }
# 8970 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DMESAPROC)(GLdouble , GLdouble , GLdouble ); }
# 8971 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3DVMESAPROC)(const GLdouble * ); }
# 8972 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FMESAPROC)(GLfloat , GLfloat , GLfloat ); }
# 8973 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3FVMESAPROC)(const GLfloat * ); }
# 8974 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IMESAPROC)(GLint , GLint , GLint ); }
# 8975 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3IVMESAPROC)(const GLint * ); }
# 8976 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SMESAPROC)(GLshort , GLshort , GLshort ); }
# 8977 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS3SVMESAPROC)(const GLshort * ); }
# 8978 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4DMESAPROC)(GLdouble , GLdouble , GLdouble , GLdouble); }
# 8979 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4DVMESAPROC)(const GLdouble * ); }
# 8980 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4FMESAPROC)(GLfloat , GLfloat , GLfloat , GLfloat ); }
# 8981 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4FVMESAPROC)(const GLfloat * ); }
# 8982 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4IMESAPROC)(GLint , GLint , GLint , GLint ); }
# 8983 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4IVMESAPROC)(const GLint * ); }
# 8984 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4SMESAPROC)(GLshort , GLshort , GLshort , GLshort ); }
# 8985 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLWINDOWPOS4SVMESAPROC)(const GLshort * ); }
# 9048 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINCONDITIONALRENDERNVPROC)(GLuint , GLenum ); }
# 9049 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDCONDITIONALRENDERNVPROC)(void); }
# 9075 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYIMAGESUBDATANVPROC)(GLuint , GLenum , GLint , GLint , GLint , GLint , GLuint , GLenum , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei ); }
# 9093 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARDEPTHDNVPROC)(GLdouble ); }
# 9094 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDEPTHBOUNDSDNVPROC)(GLdouble , GLdouble ); }
# 9095 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDEPTHRANGEDNVPROC)(GLdouble , GLdouble ); }
# 9161 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEVALMAPSNVPROC)(GLenum , GLenum ); }
# 9162 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMAPATTRIBPARAMETERFVNVPROC)(GLenum , GLuint , GLenum , GLfloat * ); }
# 9163 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMAPATTRIBPARAMETERIVNVPROC)(GLenum , GLuint , GLenum , GLint * ); }
# 9164 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMAPCONTROLPOINTSNVPROC)(GLenum , GLuint , GLenum , GLsizei , GLsizei , GLboolean , void * ); }
# 9165 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMAPPARAMETERFVNVPROC)(GLenum , GLenum , GLfloat * ); }
# 9166 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMAPPARAMETERIVNVPROC)(GLenum , GLenum , GLint * ); }
# 9167 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPCONTROLPOINTSNVPROC)(GLenum , GLuint , GLenum , GLsizei , GLsizei , GLint , GLint , GLboolean , const void * ); }
# 9168 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPPARAMETERFVNVPROC)(GLenum , GLenum , const GLfloat * ); }
# 9169 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAPPARAMETERIVNVPROC)(GLenum , GLenum , const GLint * ); }
# 9201 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETMULTISAMPLEFVNVPROC)(GLenum , GLuint , GLfloat * ); }
# 9202 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEMASKINDEXEDNVPROC)(GLuint , GLbitfield ); }
# 9203 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXRENDERBUFFERNVPROC)(GLenum , GLuint ); }
# 9222 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEFENCESNVPROC)(GLsizei , const GLuint * ); }
# 9223 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFINISHFENCENVPROC)(GLuint ); }
# 9224 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENFENCESNVPROC)(GLsizei , GLuint * ); }
# 9225 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFENCEIVNVPROC)(GLuint , GLenum , GLint * ); }
# 9226 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISFENCENVPROC)(GLuint ); }
# 9227 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSETFENCENVPROC)(GLuint , GLenum ); }
# 9228 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLTESTFENCENVPROC)(GLuint ); }
# 9292 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)(GLuint , GLsizei , const GLubyte * , GLdouble * ); }
# 9293 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)(GLuint , GLsizei , const GLubyte * , GLfloat * ); }
# 9294 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)(GLuint , GLsizei , const GLubyte * , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 9295 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)(GLuint , GLsizei , const GLubyte * , const GLdouble []); }
# 9296 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)(GLuint , GLsizei , const GLubyte * , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 9297 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)(GLuint , GLsizei , const GLubyte * , const GLfloat []); }
# 9353 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)(GLenum , GLsizei , GLsizei , GLenum , GLsizei , GLsizei ); }
# 9370 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMVERTEXLIMITNVPROC)(GLenum , GLint ); }
# 9401 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERI4INVPROC)(GLenum , GLuint , GLint , GLint , GLint , GLint ); }
# 9402 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERI4IVNVPROC)(GLenum , GLuint , const GLint * ); }
# 9403 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERI4UINVPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 9404 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)(GLenum , GLuint , const GLuint * ); }
# 9405 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)(GLenum , GLuint , GLsizei , const GLint * ); }
# 9406 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)(GLenum , GLuint , GLsizei , const GLuint * ); }
# 9407 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERI4INVPROC)(GLenum , GLuint , GLint , GLint , GLint , GLint ); }
# 9408 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)(GLenum , GLuint , const GLint * ); }
# 9409 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)(GLenum , GLuint , GLuint , GLuint , GLuint , GLuint ); }
# 9410 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)(GLenum , GLuint , const GLuint * ); }
# 9411 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)(GLenum , GLuint , GLsizei , const GLint * ); }
# 9412 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)(GLenum , GLuint , GLsizei , const GLuint * ); }
# 9510 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMI64VNVPROC)(GLuint , GLint , GLint64EXT * ); }
# 9511 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETUNIFORMUI64VNVPROC)(GLuint , GLint , GLint64EXT * ); }
# 9512 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint , GLint , GLint64EXT ); }
# 9513 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint , GLint , GLsizei , const GLint64EXT * ); }
# 9514 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint , GLint , GLuint64EXT ); }
# 9515 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint , GLint , GLsizei , const GLuint64EXT * ); }
# 9516 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint , GLint , GLint64EXT , GLint64EXT ); }
# 9517 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint , GLint , GLsizei , const GLint64EXT * ); }
# 9518 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint , GLint , GLuint64EXT , GLuint64EXT ); }
# 9519 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint , GLint , GLsizei , const GLuint64EXT * ); }
# 9520 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint , GLint , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 9521 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint , GLint , GLsizei , const GLint64EXT * ); }
# 9522 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint , GLint , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 9523 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint , GLint , GLsizei , const GLuint64EXT * ); }
# 9524 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint , GLint , GLint64EXT , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 9525 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint , GLint , GLsizei , const GLint64EXT * ); }
# 9526 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint , GLint , GLuint64EXT , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 9527 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint , GLint , GLsizei , const GLuint64EXT * ); }
# 9528 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1I64NVPROC)(GLint , GLint64EXT ); }
# 9529 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1I64VNVPROC)(GLint , GLsizei , const GLint64EXT * ); }
# 9530 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UI64NVPROC)(GLint , GLuint64EXT ); }
# 9531 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM1UI64VNVPROC)(GLint , GLsizei , const GLuint64EXT * ); }
# 9532 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2I64NVPROC)(GLint , GLint64EXT , GLint64EXT ); }
# 9533 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2I64VNVPROC)(GLint , GLsizei , const GLint64EXT * ); }
# 9534 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UI64NVPROC)(GLint , GLuint64EXT , GLuint64EXT ); }
# 9535 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM2UI64VNVPROC)(GLint , GLsizei , const GLuint64EXT * ); }
# 9536 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3I64NVPROC)(GLint , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 9537 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3I64VNVPROC)(GLint , GLsizei , const GLint64EXT * ); }
# 9538 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UI64NVPROC)(GLint , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 9539 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM3UI64VNVPROC)(GLint , GLsizei , const GLuint64EXT * ); }
# 9540 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4I64NVPROC)(GLint , GLint64EXT , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 9541 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4I64VNVPROC)(GLint , GLsizei , const GLint64EXT * ); }
# 9542 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UI64NVPROC)(GLint , GLuint64EXT , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 9543 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORM4UI64VNVPROC)(GLint , GLsizei , const GLuint64EXT * ); }
# 9591 "./sdk/GL/glew.h"
extern "C" { typedef unsigned short GLhalf; }
# 9593 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR3HNVPROC)(GLhalf , GLhalf , GLhalf ); }
# 9594 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR3HVNVPROC)(const GLhalf * ); }
# 9595 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4HNVPROC)(GLhalf , GLhalf , GLhalf , GLhalf ); }
# 9596 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4HVNVPROC)(const GLhalf * ); }
# 9597 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDHNVPROC)(GLhalf ); }
# 9598 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDHVNVPROC)(const GLhalf * ); }
# 9599 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1HNVPROC)(GLenum , GLhalf ); }
# 9600 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD1HVNVPROC)(GLenum , const GLhalf * ); }
# 9601 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2HNVPROC)(GLenum , GLhalf , GLhalf ); }
# 9602 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD2HVNVPROC)(GLenum , const GLhalf * ); }
# 9603 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3HNVPROC)(GLenum , GLhalf , GLhalf , GLhalf ); }
# 9604 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD3HVNVPROC)(GLenum , const GLhalf * ); }
# 9605 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4HNVPROC)(GLenum , GLhalf , GLhalf , GLhalf , GLhalf ); }
# 9606 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMULTITEXCOORD4HVNVPROC)(GLenum , const GLhalf * ); }
# 9607 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMAL3HNVPROC)(GLhalf , GLhalf , GLhalf ); }
# 9608 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMAL3HVNVPROC)(const GLhalf * ); }
# 9609 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3HNVPROC)(GLhalf , GLhalf , GLhalf ); }
# 9610 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLOR3HVNVPROC)(const GLhalf * ); }
# 9611 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD1HNVPROC)(GLhalf ); }
# 9612 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD1HVNVPROC)(const GLhalf * ); }
# 9613 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2HNVPROC)(GLhalf , GLhalf ); }
# 9614 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2HVNVPROC)(const GLhalf * ); }
# 9615 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD3HNVPROC)(GLhalf , GLhalf , GLhalf ); }
# 9616 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD3HVNVPROC)(const GLhalf * ); }
# 9617 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4HNVPROC)(GLhalf , GLhalf , GLhalf , GLhalf ); }
# 9618 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4HVNVPROC)(const GLhalf * ); }
# 9619 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX2HNVPROC)(GLhalf , GLhalf ); }
# 9620 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX2HVNVPROC)(const GLhalf * ); }
# 9621 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX3HNVPROC)(GLhalf , GLhalf , GLhalf ); }
# 9622 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX3HVNVPROC)(const GLhalf * ); }
# 9623 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX4HNVPROC)(GLhalf , GLhalf , GLhalf , GLhalf ); }
# 9624 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEX4HVNVPROC)(const GLhalf * ); }
# 9625 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1HNVPROC)(GLuint , GLhalf ); }
# 9626 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1HVNVPROC)(GLuint , const GLhalf * ); }
# 9627 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2HNVPROC)(GLuint , GLhalf , GLhalf ); }
# 9628 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2HVNVPROC)(GLuint , const GLhalf * ); }
# 9629 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3HNVPROC)(GLuint , GLhalf , GLhalf , GLhalf ); }
# 9630 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3HVNVPROC)(GLuint , const GLhalf * ); }
# 9631 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4HNVPROC)(GLuint , GLhalf , GLhalf , GLhalf , GLhalf ); }
# 9632 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4HVNVPROC)(GLuint , const GLhalf * ); }
# 9633 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS1HVNVPROC)(GLuint , GLsizei , const GLhalf * ); }
# 9634 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS2HVNVPROC)(GLuint , GLsizei , const GLhalf * ); }
# 9635 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS3HVNVPROC)(GLuint , GLsizei , const GLhalf * ); }
# 9636 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS4HVNVPROC)(GLuint , GLsizei , const GLhalf * ); }
# 9637 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXWEIGHTHNVPROC)(GLhalf ); }
# 9638 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXWEIGHTHVNVPROC)(const GLhalf * ); }
# 9724 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINOCCLUSIONQUERYNVPROC)(GLuint ); }
# 9725 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEOCCLUSIONQUERIESNVPROC)(GLsizei , const GLuint * ); }
# 9726 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDOCCLUSIONQUERYNVPROC)(void); }
# 9727 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENOCCLUSIONQUERIESNVPROC)(GLsizei , GLuint * ); }
# 9728 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOCCLUSIONQUERYIVNVPROC)(GLuint , GLenum , GLint * ); }
# 9729 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETOCCLUSIONQUERYUIVNVPROC)(GLuint , GLenum , GLuint * ); }
# 9730 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISOCCLUSIONQUERYNVPROC)(GLuint ); }
# 9767 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)(GLenum , GLuint , GLuint , GLsizei , const GLint * ); }
# 9768 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)(GLenum , GLuint , GLuint , GLsizei , const GLuint * ); }
# 9769 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)(GLenum , GLuint , GLuint , GLsizei , const GLfloat * ); }
# 9800 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHPIXELDATARANGENVPROC)(GLenum ); }
# 9801 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELDATARANGENVPROC)(GLenum , GLsizei , void * ); }
# 9819 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERINVPROC)(GLenum , GLint ); }
# 9820 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPOINTPARAMETERIVNVPROC)(GLenum , const GLint * ); }
# 9841 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVIDEOI64VNVPROC)(GLuint , GLenum , GLint64EXT * ); }
# 9842 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVIDEOIVNVPROC)(GLuint , GLenum , GLint * ); }
# 9843 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVIDEOUI64VNVPROC)(GLuint , GLenum , GLuint64EXT * ); }
# 9844 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVIDEOUIVNVPROC)(GLuint , GLenum , GLuint * ); }
# 9845 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRESENTFRAMEDUALFILLNVPROC)(GLuint , GLuint64EXT , GLuint , GLuint , GLenum , GLenum , GLuint , GLenum , GLuint , GLenum , GLuint , GLenum , GLuint ); }
# 9846 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRESENTFRAMEKEYEDNVPROC)(GLuint , GLuint64EXT , GLuint , GLuint , GLenum , GLenum , GLuint , GLuint , GLenum , GLuint , GLuint ); }
# 9867 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRIMITIVERESTARTINDEXNVPROC)(GLuint ); }
# 9868 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPRIMITIVERESTARTNVPROC)(void); }
# 9934 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERINPUTNVPROC)(GLenum , GLenum , GLenum , GLenum , GLenum , GLenum ); }
# 9935 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINEROUTPUTNVPROC)(GLenum , GLenum , GLenum , GLenum , GLenum , GLenum , GLenum , GLboolean , GLboolean , GLboolean ); }
# 9936 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERPARAMETERFNVPROC)(GLenum , GLfloat ); }
# 9937 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERPARAMETERFVNVPROC)(GLenum , const GLfloat * ); }
# 9938 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERPARAMETERINVPROC)(GLenum , GLint ); }
# 9939 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERPARAMETERIVNVPROC)(GLenum , const GLint * ); }
# 9940 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFINALCOMBINERINPUTNVPROC)(GLenum , GLenum , GLenum , GLenum ); }
# 9941 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)(GLenum , GLenum , GLenum , GLenum , GLfloat * ); }
# 9942 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)(GLenum , GLenum , GLenum , GLenum , GLint * ); }
# 9943 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)(GLenum , GLenum , GLenum , GLfloat * ); }
# 9944 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)(GLenum , GLenum , GLenum , GLint * ); }
# 9945 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)(GLenum , GLenum , GLfloat * ); }
# 9946 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)(GLenum , GLenum , GLint * ); }
# 9973 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum , GLenum , const GLfloat * ); }
# 9974 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum , GLenum , GLfloat * ); }
# 9992 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETBUFFERPARAMETERUI64VNVPROC)(GLenum , GLenum , GLuint64EXT * ); }
# 9993 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGERUI64VNVPROC)(GLenum , GLuint64EXT * ); }
# 9994 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)(GLuint , GLenum , GLuint64EXT * ); }
# 9995 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISBUFFERRESIDENTNVPROC)(GLenum ); }
# 9996 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISNAMEDBUFFERRESIDENTNVPROC)(GLuint ); }
# 9997 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAKEBUFFERNONRESIDENTNVPROC)(GLenum ); }
# 9998 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAKEBUFFERRESIDENTNVPROC)(GLenum , GLenum ); }
# 9999 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)(GLuint ); }
# 10000 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)(GLuint , GLenum ); }
# 10001 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMUI64NVPROC)(GLuint , GLint , GLuint64EXT ); }
# 10002 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMUNIFORMUI64VNVPROC)(GLuint , GLint , GLsizei , const GLuint64EXT * ); }
# 10003 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMUI64NVPROC)(GLint , GLuint64EXT ); }
# 10004 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLUNIFORMUI64VNVPROC)(GLint , GLsizei , const GLuint64EXT * ); }
# 10043 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPATCHPARAMETERFVNVPROC)(GLenum , const GLfloat * ); }
# 10044 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPATCHPARAMETERINVPROC)(GLenum , GLint ); }
# 10083 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREBARRIERNVPROC)(void); }
# 10134 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLenum , GLsizei , GLsizei , GLint , GLsizei , GLsizei , GLboolean ); }
# 10135 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLenum , GLsizei , GLsizei , GLint , GLsizei , GLsizei , GLsizei , GLboolean ); }
# 10136 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLuint , GLenum , GLsizei , GLsizei , GLint , GLsizei , GLsizei , GLboolean ); }
# 10137 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)(GLuint , GLenum , GLsizei , GLint , GLsizei , GLsizei , GLboolean ); }
# 10138 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLuint , GLenum , GLsizei , GLsizei , GLint , GLsizei , GLsizei , GLsizei , GLboolean ); }
# 10139 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)(GLuint , GLenum , GLsizei , GLint , GLsizei , GLsizei , GLsizei , GLboolean ); }
# 10345 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLACTIVEVARYINGNVPROC)(GLuint , const GLchar * ); }
# 10346 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBEGINTRANSFORMFEEDBACKNVPROC)(GLenum ); }
# 10347 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERBASENVPROC)(GLenum , GLuint , GLuint ); }
# 10348 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFEROFFSETNVPROC)(GLenum , GLuint , GLuint , GLintptr ); }
# 10349 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDBUFFERRANGENVPROC)(GLenum , GLuint , GLuint , GLintptr , GLsizeiptr ); }
# 10350 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLENDTRANSFORMFEEDBACKNVPROC)(void); }
# 10351 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETACTIVEVARYINGNVPROC)(GLuint , GLuint , GLsizei , GLsizei * , GLsizei * , GLenum * , GLchar * ); }
# 10352 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)(GLuint , GLuint , GLint * ); }
# 10353 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLGETVARYINGLOCATIONNVPROC)(GLuint , const GLchar * ); }
# 10354 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)(GLuint , const GLint * , GLenum ); }
# 10355 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)(GLuint , GLsizei , const GLint * , GLenum ); }
# 10383 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDTRANSFORMFEEDBACKNVPROC)(GLenum , GLuint ); }
# 10384 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETETRANSFORMFEEDBACKSNVPROC)(GLsizei , const GLuint * ); }
# 10385 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDRAWTRANSFORMFEEDBACKNVPROC)(GLenum , GLuint ); }
# 10386 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENTRANSFORMFEEDBACKSNVPROC)(GLsizei , GLuint * ); }
# 10387 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISTRANSFORMFEEDBACKNVPROC)(GLuint ); }
# 10388 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPAUSETRANSFORMFEEDBACKNVPROC)(void); }
# 10389 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLRESUMETRANSFORMFEEDBACKNVPROC)(void); }
# 10414 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHVERTEXARRAYRANGENVPROC)(void); }
# 10415 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXARRAYRANGENVPROC)(GLsizei , void * ); }
# 10443 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBLI64VNVPROC)(GLuint , GLenum , GLint64EXT * ); }
# 10444 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBLUI64VNVPROC)(GLuint , GLenum , GLuint64EXT * ); }
# 10445 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1I64NVPROC)(GLuint , GLint64EXT ); }
# 10446 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1I64VNVPROC)(GLuint , const GLint64EXT * ); }
# 10447 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1UI64NVPROC)(GLuint , GLuint64EXT ); }
# 10448 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL1UI64VNVPROC)(GLuint , const GLuint64EXT * ); }
# 10449 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2I64NVPROC)(GLuint , GLint64EXT , GLint64EXT ); }
# 10450 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2I64VNVPROC)(GLuint , const GLint64EXT * ); }
# 10451 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2UI64NVPROC)(GLuint , GLuint64EXT , GLuint64EXT ); }
# 10452 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL2UI64VNVPROC)(GLuint , const GLuint64EXT * ); }
# 10453 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3I64NVPROC)(GLuint , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 10454 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3I64VNVPROC)(GLuint , const GLint64EXT * ); }
# 10455 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3UI64NVPROC)(GLuint , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 10456 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL3UI64VNVPROC)(GLuint , const GLuint64EXT * ); }
# 10457 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4I64NVPROC)(GLuint , GLint64EXT , GLint64EXT , GLint64EXT , GLint64EXT ); }
# 10458 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4I64VNVPROC)(GLuint , const GLint64EXT * ); }
# 10459 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4UI64NVPROC)(GLuint , GLuint64EXT , GLuint64EXT , GLuint64EXT , GLuint64EXT ); }
# 10460 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBL4UI64VNVPROC)(GLuint , const GLuint64EXT * ); }
# 10461 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBLFORMATNVPROC)(GLuint , GLint , GLenum , GLsizei ); }
# 10515 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBUFFERADDRESSRANGENVPROC)(GLenum , GLuint , GLuint64EXT , GLsizeiptr ); }
# 10516 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORFORMATNVPROC)(GLint , GLenum , GLsizei ); }
# 10517 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEDGEFLAGFORMATNVPROC)(GLsizei ); }
# 10518 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGCOORDFORMATNVPROC)(GLenum , GLsizei ); }
# 10519 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETINTEGERUI64I_VNVPROC)(GLenum , GLuint , GLuint64EXT []); }
# 10520 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLINDEXFORMATNVPROC)(GLenum , GLsizei ); }
# 10521 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMALFORMATNVPROC)(GLenum , GLsizei ); }
# 10522 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSECONDARYCOLORFORMATNVPROC)(GLint , GLenum , GLsizei ); }
# 10523 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORDFORMATNVPROC)(GLint , GLenum , GLsizei ); }
# 10524 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBFORMATNVPROC)(GLuint , GLint , GLenum , GLboolean , GLsizei ); }
# 10525 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBIFORMATNVPROC)(GLuint , GLint , GLenum , GLsizei ); }
# 10526 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXFORMATNVPROC)(GLint , GLenum , GLsizei ); }
# 10634 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLAREPROGRAMSRESIDENTNVPROC)(GLsizei , const GLuint * , GLboolean * ); }
# 10635 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLBINDPROGRAMNVPROC)(GLenum , GLuint ); }
# 10636 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEPROGRAMSNVPROC)(GLsizei , const GLuint * ); }
# 10637 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLEXECUTEPROGRAMNVPROC)(GLenum , GLuint , const GLfloat * ); }
# 10638 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGENPROGRAMSNVPROC)(GLsizei , GLuint * ); }
# 10639 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMPARAMETERDVNVPROC)(GLenum , GLuint , GLenum , GLdouble * ); }
# 10640 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMPARAMETERFVNVPROC)(GLenum , GLuint , GLenum , GLfloat * ); }
# 10641 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMSTRINGNVPROC)(GLuint , GLenum , GLubyte * ); }
# 10642 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETPROGRAMIVNVPROC)(GLuint , GLenum , GLint * ); }
# 10643 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTRACKMATRIXIVNVPROC)(GLenum , GLuint , GLenum , GLint * ); }
# 10644 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBPOINTERVNVPROC)(GLuint , GLenum , GLvoid ** ); }
# 10645 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBDVNVPROC)(GLuint , GLenum , GLdouble * ); }
# 10646 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBFVNVPROC)(GLuint , GLenum , GLfloat * ); }
# 10647 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETVERTEXATTRIBIVNVPROC)(GLuint , GLenum , GLint * ); }
# 10648 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISPROGRAMNVPROC)(GLuint ); }
# 10649 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLLOADPROGRAMNVPROC)(GLenum , GLuint , GLsizei , const GLubyte * ); }
# 10650 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETER4DNVPROC)(GLenum , GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 10651 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETER4DVNVPROC)(GLenum , GLuint , const GLdouble * ); }
# 10652 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETER4FNVPROC)(GLenum , GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 10653 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETER4FVNVPROC)(GLenum , GLuint , const GLfloat * ); }
# 10654 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETERS4DVNVPROC)(GLenum , GLuint , GLuint , const GLdouble * ); }
# 10655 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPROGRAMPARAMETERS4FVNVPROC)(GLenum , GLuint , GLuint , const GLfloat * ); }
# 10656 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREQUESTRESIDENTPROGRAMSNVPROC)(GLsizei , GLuint * ); }
# 10657 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTRACKMATRIXNVPROC)(GLenum , GLuint , GLenum , GLenum ); }
# 10658 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DNVPROC)(GLuint , GLdouble ); }
# 10659 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1DVNVPROC)(GLuint , const GLdouble * ); }
# 10660 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FNVPROC)(GLuint , GLfloat ); }
# 10661 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1FVNVPROC)(GLuint , const GLfloat * ); }
# 10662 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SNVPROC)(GLuint , GLshort ); }
# 10663 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB1SVNVPROC)(GLuint , const GLshort * ); }
# 10664 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DNVPROC)(GLuint , GLdouble , GLdouble ); }
# 10665 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2DVNVPROC)(GLuint , const GLdouble * ); }
# 10666 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FNVPROC)(GLuint , GLfloat , GLfloat ); }
# 10667 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2FVNVPROC)(GLuint , const GLfloat * ); }
# 10668 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SNVPROC)(GLuint , GLshort , GLshort ); }
# 10669 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB2SVNVPROC)(GLuint , const GLshort * ); }
# 10670 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DNVPROC)(GLuint , GLdouble , GLdouble , GLdouble ); }
# 10671 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3DVNVPROC)(GLuint , const GLdouble * ); }
# 10672 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FNVPROC)(GLuint , GLfloat , GLfloat , GLfloat ); }
# 10673 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3FVNVPROC)(GLuint , const GLfloat * ); }
# 10674 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SNVPROC)(GLuint , GLshort , GLshort , GLshort ); }
# 10675 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB3SVNVPROC)(GLuint , const GLshort * ); }
# 10676 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DNVPROC)(GLuint , GLdouble , GLdouble , GLdouble , GLdouble ); }
# 10677 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4DVNVPROC)(GLuint , const GLdouble * ); }
# 10678 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FNVPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 10679 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4FVNVPROC)(GLuint , const GLfloat * ); }
# 10680 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SNVPROC)(GLuint , GLshort , GLshort , GLshort , GLshort ); }
# 10681 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4SVNVPROC)(GLuint , const GLshort * ); }
# 10682 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UBNVPROC)(GLuint , GLubyte , GLubyte , GLubyte , GLubyte ); }
# 10683 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIB4UBVNVPROC)(GLuint , const GLubyte * ); }
# 10684 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBPOINTERNVPROC)(GLuint , GLint , GLenum , GLsizei , const void * ); }
# 10685 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS1DVNVPROC)(GLuint , GLsizei , const GLdouble * ); }
# 10686 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS1FVNVPROC)(GLuint , GLsizei , const GLfloat * ); }
# 10687 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS1SVNVPROC)(GLuint , GLsizei , const GLshort * ); }
# 10688 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS2DVNVPROC)(GLuint , GLsizei , const GLdouble * ); }
# 10689 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS2FVNVPROC)(GLuint , GLsizei , const GLfloat * ); }
# 10690 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS2SVNVPROC)(GLuint , GLsizei , const GLshort * ); }
# 10691 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS3DVNVPROC)(GLuint , GLsizei , const GLdouble * ); }
# 10692 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS3FVNVPROC)(GLuint , GLsizei , const GLfloat * ); }
# 10693 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS3SVNVPROC)(GLuint , GLsizei , const GLshort * ); }
# 10694 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS4DVNVPROC)(GLuint , GLsizei , const GLdouble * ); }
# 10695 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS4FVNVPROC)(GLuint , GLsizei , const GLfloat * ); }
# 10696 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS4SVNVPROC)(GLuint , GLsizei , const GLshort * ); }
# 10697 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLVERTEXATTRIBS4UBVNVPROC)(GLuint , GLsizei , const GLubyte * ); }
# 10866 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLEARDEPTHFOESPROC)(GLclampd ); }
# 10867 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCLIPPLANEFOESPROC)(GLenum , const GLfloat * ); }
# 10868 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDEPTHRANGEFOESPROC)(GLclampf , GLclampf ); }
# 10869 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRUSTUMFOESPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 10870 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCLIPPLANEFOESPROC)(GLenum , GLfloat * ); }
# 10871 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLORTHOFOESPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11038 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDETAILTEXFUNCSGISPROC)(GLenum , GLsizei , const GLfloat * ); }
# 11039 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETDETAILTEXFUNCSGISPROC)(GLenum , GLfloat * ); }
# 11053 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFOGFUNCSGISPROC)(GLsizei , const GLfloat * ); }
# 11054 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFOGFUNCSGISPROC)(GLfloat * ); }
# 11098 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEMASKSGISPROC)(GLclampf , GLboolean ); }
# 11099 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSAMPLEPATTERNSGISPROC)(GLenum ); }
# 11140 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETSHARPENTEXFUNCSGISPROC)(GLenum , GLfloat * ); }
# 11141 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSHARPENTEXFUNCSGISPROC)(GLenum , GLsizei , const GLfloat * ); }
# 11155 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXIMAGE4DSGISPROC)(GLenum , GLint , GLenum , GLsizei , GLsizei , GLsizei , GLsizei , GLint , GLenum , GLenum , const void * ); }
# 11156 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXSUBIMAGE4DSGISPROC)(GLenum , GLint , GLint , GLint , GLint , GLint , GLsizei , GLsizei , GLsizei , GLsizei , GLenum , GLenum , const void * ); }
# 11192 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETTEXFILTERFUNCSGISPROC)(GLenum , GLenum , GLfloat * ); }
# 11193 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXFILTERFUNCSGISPROC)(GLenum , GLenum , GLsizei , const GLfloat * ); }
# 11232 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLASYNCMARKERSGIXPROC)(GLuint ); }
# 11233 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLDELETEASYNCMARKERSSGIXPROC)(GLuint , GLsizei ); }
# 11234 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLFINISHASYNCSGIXPROC)(GLuint * ); }
# 11235 "./sdk/GL/glew.h"
extern "C" { typedef GLuint (*PFNGLGENASYNCMARKERSSGIXPROC)(GLsizei ); }
# 11236 "./sdk/GL/glew.h"
extern "C" { typedef GLboolean (*PFNGLISASYNCMARKERSGIXPROC)(GLuint ); }
# 11237 "./sdk/GL/glew.h"
extern "C" { typedef GLint (*PFNGLPOLLASYNCSGIXPROC)(GLuint * ); }
# 11328 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFLUSHRASTERSGIXPROC)(void); }
# 11357 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXTUREFOGSGIXPROC)(GLenum ); }
# 11370 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTCOLORMATERIALSGIXPROC)(GLenum , GLenum ); }
# 11371 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELFSGIXPROC)(GLenum , GLfloat ); }
# 11372 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)(GLenum , GLfloat * ); }
# 11373 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELISGIXPROC)(GLenum , GLint ); }
# 11374 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)(GLenum , GLint * ); }
# 11375 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTFSGIXPROC)(GLenum , GLenum , GLfloat ); }
# 11376 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTFVSGIXPROC)(GLenum , GLenum , GLfloat * ); }
# 11377 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTISGIXPROC)(GLenum , GLenum , GLint ); }
# 11378 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTLIGHTIVSGIXPROC)(GLenum , GLenum , GLint * ); }
# 11379 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALFSGIXPROC)(GLenum , GLenum , const GLfloat ); }
# 11380 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALFVSGIXPROC)(GLenum , GLenum , const GLfloat * ); }
# 11381 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALISGIXPROC)(GLenum , GLenum , const GLint ); }
# 11382 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAGMENTMATERIALIVSGIXPROC)(GLenum , GLenum , const GLint * ); }
# 11383 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTLIGHTFVSGIXPROC)(GLenum , GLenum , GLfloat * ); }
# 11384 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTLIGHTIVSGIXPROC)(GLenum , GLenum , GLint * ); }
# 11385 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTMATERIALFVSGIXPROC)(GLenum , GLenum , const GLfloat * ); }
# 11386 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETFRAGMENTMATERIALIVSGIXPROC)(GLenum , GLenum , const GLint * ); }
# 11415 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFRAMEZOOMSGIXPROC)(GLint ); }
# 11457 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLPIXELTEXGENSGIXPROC)(GLenum ); }
# 11479 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREFERENCEPLANESGIXPROC)(const GLdouble * ); }
# 11532 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSPRITEPARAMETERFSGIXPROC)(GLenum , GLfloat ); }
# 11533 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSPRITEPARAMETERFVSGIXPROC)(GLenum , GLfloat * ); }
# 11534 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSPRITEPARAMETERISGIXPROC)(GLenum , GLint ); }
# 11535 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLSPRITEPARAMETERIVSGIXPROC)(GLenum , GLint * ); }
# 11551 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTAGSAMPLEBUFFERSGIXPROC)(void); }
# 11729 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEPARAMETERFVSGIPROC)(GLenum , GLenum , const GLfloat * ); }
# 11730 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLEPARAMETERIVSGIPROC)(GLenum , GLenum , const GLint * ); }
# 11731 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLORTABLESGIPROC)(GLenum , GLenum , GLsizei , GLenum , GLenum , const void * ); }
# 11732 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOPYCOLORTABLESGIPROC)(GLenum , GLenum , GLint , GLint , GLsizei ); }
# 11733 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)(GLenum , GLenum , GLfloat * ); }
# 11734 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)(GLenum , GLenum , GLint * ); }
# 11735 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGETCOLORTABLESGIPROC)(GLenum , GLenum , GLenum , void * ); }
# 11769 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLFINISHTEXTURESUNXPROC)(void); }
# 11796 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORBSUNPROC)(GLbyte ); }
# 11797 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORDSUNPROC)(GLdouble ); }
# 11798 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORFSUNPROC)(GLfloat ); }
# 11799 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORISUNPROC)(GLint ); }
# 11800 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORSSUNPROC)(GLshort ); }
# 11801 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORUBSUNPROC)(GLubyte ); }
# 11802 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORUISUNPROC)(GLuint ); }
# 11803 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLGLOBALALPHAFACTORUSSUNPROC)(GLushort ); }
# 11835 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREADVIDEOPIXELSSUNPROC)(GLint , GLint , GLsizei , GLsizei , GLenum , GLenum , GLvoid * ); }
# 11877 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEPOINTERSUNPROC)(GLenum , GLsizei , const void * ); }
# 11878 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUBSUNPROC)(GLubyte ); }
# 11879 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUBVSUNPROC)(const GLubyte * ); }
# 11880 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUISUNPROC)(GLuint ); }
# 11881 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUIVSUNPROC)(const GLuint * ); }
# 11882 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUSSUNPROC)(GLushort ); }
# 11883 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUSVSUNPROC)(const GLushort * ); }
# 11902 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11903 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * ); }
# 11904 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11905 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11906 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4UBVERTEX2FSUNPROC)(GLubyte , GLubyte , GLubyte , GLubyte , GLfloat , GLfloat ); }
# 11907 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4UBVERTEX2FVSUNPROC)(const GLubyte * , const GLfloat * ); }
# 11908 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4UBVERTEX3FSUNPROC)(GLubyte , GLubyte , GLubyte , GLubyte , GLfloat , GLfloat , GLfloat ); }
# 11909 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLCOLOR4UBVERTEX3FVSUNPROC)(const GLubyte * , const GLfloat * ); }
# 11910 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMAL3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11911 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * ); }
# 11912 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11913 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * ); }
# 11914 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11915 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11916 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)(GLuint , GLubyte , GLubyte , GLubyte , GLubyte , GLfloat , GLfloat , GLfloat ); }
# 11917 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)(const GLuint * , const GLubyte * , const GLfloat * ); }
# 11918 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11919 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * ); }
# 11920 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11921 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11922 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11923 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11924 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11925 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * , const GLfloat * ); }
# 11926 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)(GLuint , GLfloat , GLfloat , GLfloat ); }
# 11927 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)(const GLuint * , const GLfloat * ); }
# 11928 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11929 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11930 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11931 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11932 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)(GLfloat , GLfloat , GLubyte , GLubyte , GLubyte , GLubyte , GLfloat , GLfloat , GLfloat ); }
# 11933 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)(const GLfloat * , const GLubyte * , const GLfloat * ); }
# 11934 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11935 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11936 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FVERTEX3FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11937 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD2FVERTEX3FVSUNPROC)(const GLfloat * , const GLfloat * ); }
# 11938 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11939 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)(const GLfloat * , const GLfloat * , const GLfloat * , const GLfloat * ); }
# 11940 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4FVERTEX4FSUNPROC)(GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat , GLfloat ); }
# 11941 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLTEXCOORD4FVERTEX4FVSUNPROC)(const GLfloat * , const GLfloat * ); }
# 12016 "./sdk/GL/glew.h"
extern "C" { typedef void (*PFNGLADDSWAPHINTRECTWINPROC)(GLint , GLint , GLsizei , GLsizei ); }
# 12043 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXSUBIMAGE3DPROC __glewCopyTexSubImage3D; }
# 12044 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWRANGEELEMENTSPROC __glewDrawRangeElements; }
# 12045 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE3DPROC __glewTexImage3D; }
# 12046 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSUBIMAGE3DPROC __glewTexSubImage3D; }
# 12048 "./sdk/GL/glew.h"
extern "C" { extern PFNGLACTIVETEXTUREPROC __glewActiveTexture; }
# 12049 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIENTACTIVETEXTUREPROC __glewClientActiveTexture; }
# 12050 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE1DPROC __glewCompressedTexImage1D; }
# 12051 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE2DPROC __glewCompressedTexImage2D; }
# 12052 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE3DPROC __glewCompressedTexImage3D; }
# 12053 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __glewCompressedTexSubImage1D; }
# 12054 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __glewCompressedTexSubImage2D; }
# 12055 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __glewCompressedTexSubImage3D; }
# 12056 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMPRESSEDTEXIMAGEPROC __glewGetCompressedTexImage; }
# 12057 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOADTRANSPOSEMATRIXDPROC __glewLoadTransposeMatrixd; }
# 12058 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOADTRANSPOSEMATRIXFPROC __glewLoadTransposeMatrixf; }
# 12059 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTTRANSPOSEMATRIXDPROC __glewMultTransposeMatrixd; }
# 12060 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTTRANSPOSEMATRIXFPROC __glewMultTransposeMatrixf; }
# 12061 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1DPROC __glewMultiTexCoord1d; }
# 12062 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1DVPROC __glewMultiTexCoord1dv; }
# 12063 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1FPROC __glewMultiTexCoord1f; }
# 12064 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1FVPROC __glewMultiTexCoord1fv; }
# 12065 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1IPROC __glewMultiTexCoord1i; }
# 12066 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1IVPROC __glewMultiTexCoord1iv; }
# 12067 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1SPROC __glewMultiTexCoord1s; }
# 12068 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1SVPROC __glewMultiTexCoord1sv; }
# 12069 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2DPROC __glewMultiTexCoord2d; }
# 12070 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2DVPROC __glewMultiTexCoord2dv; }
# 12071 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2FPROC __glewMultiTexCoord2f; }
# 12072 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2FVPROC __glewMultiTexCoord2fv; }
# 12073 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2IPROC __glewMultiTexCoord2i; }
# 12074 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2IVPROC __glewMultiTexCoord2iv; }
# 12075 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2SPROC __glewMultiTexCoord2s; }
# 12076 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2SVPROC __glewMultiTexCoord2sv; }
# 12077 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3DPROC __glewMultiTexCoord3d; }
# 12078 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3DVPROC __glewMultiTexCoord3dv; }
# 12079 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3FPROC __glewMultiTexCoord3f; }
# 12080 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3FVPROC __glewMultiTexCoord3fv; }
# 12081 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3IPROC __glewMultiTexCoord3i; }
# 12082 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3IVPROC __glewMultiTexCoord3iv; }
# 12083 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3SPROC __glewMultiTexCoord3s; }
# 12084 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3SVPROC __glewMultiTexCoord3sv; }
# 12085 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4DPROC __glewMultiTexCoord4d; }
# 12086 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4DVPROC __glewMultiTexCoord4dv; }
# 12087 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4FPROC __glewMultiTexCoord4f; }
# 12088 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4FVPROC __glewMultiTexCoord4fv; }
# 12089 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4IPROC __glewMultiTexCoord4i; }
# 12090 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4IVPROC __glewMultiTexCoord4iv; }
# 12091 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4SPROC __glewMultiTexCoord4s; }
# 12092 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4SVPROC __glewMultiTexCoord4sv; }
# 12093 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLECOVERAGEPROC __glewSampleCoverage; }
# 12095 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDCOLORPROC __glewBlendColor; }
# 12096 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONPROC __glewBlendEquation; }
# 12097 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCSEPARATEPROC __glewBlendFuncSeparate; }
# 12098 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDPOINTERPROC __glewFogCoordPointer; }
# 12099 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDDPROC __glewFogCoordd; }
# 12100 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDDVPROC __glewFogCoorddv; }
# 12101 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDFPROC __glewFogCoordf; }
# 12102 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDFVPROC __glewFogCoordfv; }
# 12103 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWARRAYSPROC __glewMultiDrawArrays; }
# 12104 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWELEMENTSPROC __glewMultiDrawElements; }
# 12105 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFPROC __glewPointParameterf; }
# 12106 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFVPROC __glewPointParameterfv; }
# 12107 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERIPROC __glewPointParameteri; }
# 12108 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERIVPROC __glewPointParameteriv; }
# 12109 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3BPROC __glewSecondaryColor3b; }
# 12110 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3BVPROC __glewSecondaryColor3bv; }
# 12111 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3DPROC __glewSecondaryColor3d; }
# 12112 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3DVPROC __glewSecondaryColor3dv; }
# 12113 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3FPROC __glewSecondaryColor3f; }
# 12114 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3FVPROC __glewSecondaryColor3fv; }
# 12115 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3IPROC __glewSecondaryColor3i; }
# 12116 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3IVPROC __glewSecondaryColor3iv; }
# 12117 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3SPROC __glewSecondaryColor3s; }
# 12118 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3SVPROC __glewSecondaryColor3sv; }
# 12119 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UBPROC __glewSecondaryColor3ub; }
# 12120 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UBVPROC __glewSecondaryColor3ubv; }
# 12121 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UIPROC __glewSecondaryColor3ui; }
# 12122 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UIVPROC __glewSecondaryColor3uiv; }
# 12123 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3USPROC __glewSecondaryColor3us; }
# 12124 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3USVPROC __glewSecondaryColor3usv; }
# 12125 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORPOINTERPROC __glewSecondaryColorPointer; }
# 12126 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DPROC __glewWindowPos2d; }
# 12127 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DVPROC __glewWindowPos2dv; }
# 12128 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FPROC __glewWindowPos2f; }
# 12129 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FVPROC __glewWindowPos2fv; }
# 12130 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IPROC __glewWindowPos2i; }
# 12131 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IVPROC __glewWindowPos2iv; }
# 12132 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SPROC __glewWindowPos2s; }
# 12133 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SVPROC __glewWindowPos2sv; }
# 12134 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DPROC __glewWindowPos3d; }
# 12135 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DVPROC __glewWindowPos3dv; }
# 12136 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FPROC __glewWindowPos3f; }
# 12137 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FVPROC __glewWindowPos3fv; }
# 12138 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IPROC __glewWindowPos3i; }
# 12139 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IVPROC __glewWindowPos3iv; }
# 12140 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SPROC __glewWindowPos3s; }
# 12141 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SVPROC __glewWindowPos3sv; }
# 12143 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINQUERYPROC __glewBeginQuery; }
# 12144 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERPROC __glewBindBuffer; }
# 12145 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERDATAPROC __glewBufferData; }
# 12146 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERSUBDATAPROC __glewBufferSubData; }
# 12147 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEBUFFERSPROC __glewDeleteBuffers; }
# 12148 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEQUERIESPROC __glewDeleteQueries; }
# 12149 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDQUERYPROC __glewEndQuery; }
# 12150 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENBUFFERSPROC __glewGenBuffers; }
# 12151 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENQUERIESPROC __glewGenQueries; }
# 12152 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPARAMETERIVPROC __glewGetBufferParameteriv; }
# 12153 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPOINTERVPROC __glewGetBufferPointerv; }
# 12154 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERSUBDATAPROC __glewGetBufferSubData; }
# 12155 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTIVPROC __glewGetQueryObjectiv; }
# 12156 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTUIVPROC __glewGetQueryObjectuiv; }
# 12157 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYIVPROC __glewGetQueryiv; }
# 12158 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISBUFFERPROC __glewIsBuffer; }
# 12159 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISQUERYPROC __glewIsQuery; }
# 12160 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPBUFFERPROC __glewMapBuffer; }
# 12161 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNMAPBUFFERPROC __glewUnmapBuffer; }
# 12163 "./sdk/GL/glew.h"
extern "C" { extern PFNGLATTACHSHADERPROC __glewAttachShader; }
# 12164 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDATTRIBLOCATIONPROC __glewBindAttribLocation; }
# 12165 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONSEPARATEPROC __glewBlendEquationSeparate; }
# 12166 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPILESHADERPROC __glewCompileShader; }
# 12167 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCREATEPROGRAMPROC __glewCreateProgram; }
# 12168 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCREATESHADERPROC __glewCreateShader; }
# 12169 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEPROGRAMPROC __glewDeleteProgram; }
# 12170 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETESHADERPROC __glewDeleteShader; }
# 12171 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDETACHSHADERPROC __glewDetachShader; }
# 12172 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVERTEXATTRIBARRAYPROC __glewDisableVertexAttribArray; }
# 12173 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWBUFFERSPROC __glewDrawBuffers; }
# 12174 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVERTEXATTRIBARRAYPROC __glewEnableVertexAttribArray; }
# 12175 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEATTRIBPROC __glewGetActiveAttrib; }
# 12176 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMPROC __glewGetActiveUniform; }
# 12177 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders; }
# 12178 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation; }
# 12179 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog; }
# 12180 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMIVPROC __glewGetProgramiv; }
# 12181 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog; }
# 12182 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSHADERSOURCEPROC __glewGetShaderSource; }
# 12183 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSHADERIVPROC __glewGetShaderiv; }
# 12184 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMLOCATIONPROC __glewGetUniformLocation; }
# 12185 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMFVPROC __glewGetUniformfv; }
# 12186 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMIVPROC __glewGetUniformiv; }
# 12187 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBPOINTERVPROC __glewGetVertexAttribPointerv; }
# 12188 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBDVPROC __glewGetVertexAttribdv; }
# 12189 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBFVPROC __glewGetVertexAttribfv; }
# 12190 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIVPROC __glewGetVertexAttribiv; }
# 12191 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISPROGRAMPROC __glewIsProgram; }
# 12192 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISSHADERPROC __glewIsShader; }
# 12193 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLINKPROGRAMPROC __glewLinkProgram; }
# 12194 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHADERSOURCEPROC __glewShaderSource; }
# 12195 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTENCILFUNCSEPARATEPROC __glewStencilFuncSeparate; }
# 12196 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTENCILMASKSEPARATEPROC __glewStencilMaskSeparate; }
# 12197 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTENCILOPSEPARATEPROC __glewStencilOpSeparate; }
# 12198 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1FPROC __glewUniform1f; }
# 12199 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1FVPROC __glewUniform1fv; }
# 12200 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1IPROC __glewUniform1i; }
# 12201 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1IVPROC __glewUniform1iv; }
# 12202 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2FPROC __glewUniform2f; }
# 12203 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2FVPROC __glewUniform2fv; }
# 12204 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2IPROC __glewUniform2i; }
# 12205 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2IVPROC __glewUniform2iv; }
# 12206 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3FPROC __glewUniform3f; }
# 12207 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3FVPROC __glewUniform3fv; }
# 12208 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3IPROC __glewUniform3i; }
# 12209 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3IVPROC __glewUniform3iv; }
# 12210 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4FPROC __glewUniform4f; }
# 12211 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4FVPROC __glewUniform4fv; }
# 12212 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4IPROC __glewUniform4i; }
# 12213 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4IVPROC __glewUniform4iv; }
# 12214 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX2FVPROC __glewUniformMatrix2fv; }
# 12215 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX3FVPROC __glewUniformMatrix3fv; }
# 12216 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX4FVPROC __glewUniformMatrix4fv; }
# 12217 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUSEPROGRAMPROC __glewUseProgram; }
# 12218 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVALIDATEPROGRAMPROC __glewValidateProgram; }
# 12219 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DPROC __glewVertexAttrib1d; }
# 12220 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DVPROC __glewVertexAttrib1dv; }
# 12221 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FPROC __glewVertexAttrib1f; }
# 12222 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FVPROC __glewVertexAttrib1fv; }
# 12223 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SPROC __glewVertexAttrib1s; }
# 12224 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SVPROC __glewVertexAttrib1sv; }
# 12225 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DPROC __glewVertexAttrib2d; }
# 12226 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DVPROC __glewVertexAttrib2dv; }
# 12227 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FPROC __glewVertexAttrib2f; }
# 12228 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FVPROC __glewVertexAttrib2fv; }
# 12229 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SPROC __glewVertexAttrib2s; }
# 12230 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SVPROC __glewVertexAttrib2sv; }
# 12231 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DPROC __glewVertexAttrib3d; }
# 12232 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DVPROC __glewVertexAttrib3dv; }
# 12233 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FPROC __glewVertexAttrib3f; }
# 12234 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FVPROC __glewVertexAttrib3fv; }
# 12235 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SPROC __glewVertexAttrib3s; }
# 12236 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SVPROC __glewVertexAttrib3sv; }
# 12237 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NBVPROC __glewVertexAttrib4Nbv; }
# 12238 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NIVPROC __glewVertexAttrib4Niv; }
# 12239 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NSVPROC __glewVertexAttrib4Nsv; }
# 12240 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUBPROC __glewVertexAttrib4Nub; }
# 12241 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUBVPROC __glewVertexAttrib4Nubv; }
# 12242 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUIVPROC __glewVertexAttrib4Nuiv; }
# 12243 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUSVPROC __glewVertexAttrib4Nusv; }
# 12244 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4BVPROC __glewVertexAttrib4bv; }
# 12245 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DPROC __glewVertexAttrib4d; }
# 12246 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DVPROC __glewVertexAttrib4dv; }
# 12247 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FPROC __glewVertexAttrib4f; }
# 12248 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FVPROC __glewVertexAttrib4fv; }
# 12249 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4IVPROC __glewVertexAttrib4iv; }
# 12250 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SPROC __glewVertexAttrib4s; }
# 12251 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SVPROC __glewVertexAttrib4sv; }
# 12252 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UBVPROC __glewVertexAttrib4ubv; }
# 12253 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UIVPROC __glewVertexAttrib4uiv; }
# 12254 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4USVPROC __glewVertexAttrib4usv; }
# 12255 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBPOINTERPROC __glewVertexAttribPointer; }
# 12257 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX2X3FVPROC __glewUniformMatrix2x3fv; }
# 12258 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX2X4FVPROC __glewUniformMatrix2x4fv; }
# 12259 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX3X2FVPROC __glewUniformMatrix3x2fv; }
# 12260 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX3X4FVPROC __glewUniformMatrix3x4fv; }
# 12261 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX4X2FVPROC __glewUniformMatrix4x2fv; }
# 12262 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX4X3FVPROC __glewUniformMatrix4x3fv; }
# 12264 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINCONDITIONALRENDERPROC __glewBeginConditionalRender; }
# 12265 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINTRANSFORMFEEDBACKPROC __glewBeginTransformFeedback; }
# 12266 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAGDATALOCATIONPROC __glewBindFragDataLocation; }
# 12267 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLAMPCOLORPROC __glewClampColor; }
# 12268 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARBUFFERFIPROC __glewClearBufferfi; }
# 12269 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARBUFFERFVPROC __glewClearBufferfv; }
# 12270 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARBUFFERIVPROC __glewClearBufferiv; }
# 12271 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARBUFFERUIVPROC __glewClearBufferuiv; }
# 12272 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORMASKIPROC __glewColorMaski; }
# 12273 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEIPROC __glewDisablei; }
# 12274 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEIPROC __glewEnablei; }
# 12275 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDCONDITIONALRENDERPROC __glewEndConditionalRender; }
# 12276 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDTRANSFORMFEEDBACKPROC __glewEndTransformFeedback; }
# 12277 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBOOLEANI_VPROC __glewGetBooleani_v; }
# 12278 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGDATALOCATIONPROC __glewGetFragDataLocation; }
# 12279 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSTRINGIPROC __glewGetStringi; }
# 12280 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXPARAMETERIIVPROC __glewGetTexParameterIiv; }
# 12281 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXPARAMETERIUIVPROC __glewGetTexParameterIuiv; }
# 12282 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __glewGetTransformFeedbackVarying; }
# 12283 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMUIVPROC __glewGetUniformuiv; }
# 12284 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIIVPROC __glewGetVertexAttribIiv; }
# 12285 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIUIVPROC __glewGetVertexAttribIuiv; }
# 12286 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISENABLEDIPROC __glewIsEnabledi; }
# 12287 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXPARAMETERIIVPROC __glewTexParameterIiv; }
# 12288 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXPARAMETERIUIVPROC __glewTexParameterIuiv; }
# 12289 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC __glewTransformFeedbackVaryings; }
# 12290 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UIPROC __glewUniform1ui; }
# 12291 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UIVPROC __glewUniform1uiv; }
# 12292 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UIPROC __glewUniform2ui; }
# 12293 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UIVPROC __glewUniform2uiv; }
# 12294 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UIPROC __glewUniform3ui; }
# 12295 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UIVPROC __glewUniform3uiv; }
# 12296 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UIPROC __glewUniform4ui; }
# 12297 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UIVPROC __glewUniform4uiv; }
# 12298 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1IPROC __glewVertexAttribI1i; }
# 12299 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1IVPROC __glewVertexAttribI1iv; }
# 12300 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1UIPROC __glewVertexAttribI1ui; }
# 12301 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1UIVPROC __glewVertexAttribI1uiv; }
# 12302 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2IPROC __glewVertexAttribI2i; }
# 12303 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2IVPROC __glewVertexAttribI2iv; }
# 12304 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2UIPROC __glewVertexAttribI2ui; }
# 12305 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2UIVPROC __glewVertexAttribI2uiv; }
# 12306 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3IPROC __glewVertexAttribI3i; }
# 12307 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3IVPROC __glewVertexAttribI3iv; }
# 12308 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3UIPROC __glewVertexAttribI3ui; }
# 12309 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3UIVPROC __glewVertexAttribI3uiv; }
# 12310 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4BVPROC __glewVertexAttribI4bv; }
# 12311 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4IPROC __glewVertexAttribI4i; }
# 12312 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4IVPROC __glewVertexAttribI4iv; }
# 12313 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4SVPROC __glewVertexAttribI4sv; }
# 12314 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UBVPROC __glewVertexAttribI4ubv; }
# 12315 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UIPROC __glewVertexAttribI4ui; }
# 12316 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UIVPROC __glewVertexAttribI4uiv; }
# 12317 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4USVPROC __glewVertexAttribI4usv; }
# 12318 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer; }
# 12320 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWARRAYSINSTANCEDPROC __glewDrawArraysInstanced; }
# 12321 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSINSTANCEDPROC __glewDrawElementsInstanced; }
# 12322 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRIMITIVERESTARTINDEXPROC __glewPrimitiveRestartIndex; }
# 12323 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXBUFFERPROC __glewTexBuffer; }
# 12325 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTUREPROC __glewFramebufferTexture; }
# 12326 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPARAMETERI64VPROC __glewGetBufferParameteri64v; }
# 12327 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGER64I_VPROC __glewGetInteger64i_v; }
# 12329 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONSEPARATEIPROC __glewBlendEquationSeparatei; }
# 12330 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONIPROC __glewBlendEquationi; }
# 12331 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei; }
# 12332 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCIPROC __glewBlendFunci; }
# 12333 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading; }
# 12335 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX; }
# 12337 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONINDEXEDAMDPROC __glewBlendEquationIndexedAMD; }
# 12338 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC __glewBlendEquationSeparateIndexedAMD; }
# 12339 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCINDEXEDAMDPROC __glewBlendFuncIndexedAMD; }
# 12340 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC __glewBlendFuncSeparateIndexedAMD; }
# 12342 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINPERFMONITORAMDPROC __glewBeginPerfMonitorAMD; }
# 12343 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEPERFMONITORSAMDPROC __glewDeletePerfMonitorsAMD; }
# 12344 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDPERFMONITORAMDPROC __glewEndPerfMonitorAMD; }
# 12345 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENPERFMONITORSAMDPROC __glewGenPerfMonitorsAMD; }
# 12346 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORCOUNTERDATAAMDPROC __glewGetPerfMonitorCounterDataAMD; }
# 12347 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORCOUNTERINFOAMDPROC __glewGetPerfMonitorCounterInfoAMD; }
# 12348 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC __glewGetPerfMonitorCounterStringAMD; }
# 12349 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORCOUNTERSAMDPROC __glewGetPerfMonitorCountersAMD; }
# 12350 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORGROUPSTRINGAMDPROC __glewGetPerfMonitorGroupStringAMD; }
# 12351 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPERFMONITORGROUPSAMDPROC __glewGetPerfMonitorGroupsAMD; }
# 12352 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSELECTPERFMONITORCOUNTERSAMDPROC __glewSelectPerfMonitorCountersAMD; }
# 12354 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTESSELLATIONFACTORAMDPROC __glewTessellationFactorAMD; }
# 12355 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTESSELLATIONMODEAMDPROC __glewTessellationModeAMD; }
# 12357 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTARRAYAPPLEPROC __glewDrawElementArrayAPPLE; }
# 12358 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC __glewDrawRangeElementArrayAPPLE; }
# 12359 "./sdk/GL/glew.h"
extern "C" { extern PFNGLELEMENTPOINTERAPPLEPROC __glewElementPointerAPPLE; }
# 12360 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC __glewMultiDrawElementArrayAPPLE; }
# 12361 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC __glewMultiDrawRangeElementArrayAPPLE; }
# 12363 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEFENCESAPPLEPROC __glewDeleteFencesAPPLE; }
# 12364 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINISHFENCEAPPLEPROC __glewFinishFenceAPPLE; }
# 12365 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINISHOBJECTAPPLEPROC __glewFinishObjectAPPLE; }
# 12366 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENFENCESAPPLEPROC __glewGenFencesAPPLE; }
# 12367 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISFENCEAPPLEPROC __glewIsFenceAPPLE; }
# 12368 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSETFENCEAPPLEPROC __glewSetFenceAPPLE; }
# 12369 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTESTFENCEAPPLEPROC __glewTestFenceAPPLE; }
# 12370 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTESTOBJECTAPPLEPROC __glewTestObjectAPPLE; }
# 12372 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERPARAMETERIAPPLEPROC __glewBufferParameteriAPPLE; }
# 12373 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC __glewFlushMappedBufferRangeAPPLE; }
# 12375 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOBJECTPARAMETERIVAPPLEPROC __glewGetObjectParameterivAPPLE; }
# 12376 "./sdk/GL/glew.h"
extern "C" { extern PFNGLOBJECTPURGEABLEAPPLEPROC __glewObjectPurgeableAPPLE; }
# 12377 "./sdk/GL/glew.h"
extern "C" { extern PFNGLOBJECTUNPURGEABLEAPPLEPROC __glewObjectUnpurgeableAPPLE; }
# 12379 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC __glewGetTexParameterPointervAPPLE; }
# 12380 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURERANGEAPPLEPROC __glewTextureRangeAPPLE; }
# 12382 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDVERTEXARRAYAPPLEPROC __glewBindVertexArrayAPPLE; }
# 12383 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEVERTEXARRAYSAPPLEPROC __glewDeleteVertexArraysAPPLE; }
# 12384 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENVERTEXARRAYSAPPLEPROC __glewGenVertexArraysAPPLE; }
# 12385 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISVERTEXARRAYAPPLEPROC __glewIsVertexArrayAPPLE; }
# 12387 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC __glewFlushVertexArrayRangeAPPLE; }
# 12388 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYPARAMETERIAPPLEPROC __glewVertexArrayParameteriAPPLE; }
# 12389 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYRANGEAPPLEPROC __glewVertexArrayRangeAPPLE; }
# 12391 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVERTEXATTRIBAPPLEPROC __glewDisableVertexAttribAPPLE; }
# 12392 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVERTEXATTRIBAPPLEPROC __glewEnableVertexAttribAPPLE; }
# 12393 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISVERTEXATTRIBENABLEDAPPLEPROC __glewIsVertexAttribEnabledAPPLE; }
# 12394 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPVERTEXATTRIB1DAPPLEPROC __glewMapVertexAttrib1dAPPLE; }
# 12395 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPVERTEXATTRIB1FAPPLEPROC __glewMapVertexAttrib1fAPPLE; }
# 12396 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPVERTEXATTRIB2DAPPLEPROC __glewMapVertexAttrib2dAPPLE; }
# 12397 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPVERTEXATTRIB2FAPPLEPROC __glewMapVertexAttrib2fAPPLE; }
# 12399 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __glewBindFragDataLocationIndexed; }
# 12400 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGDATAINDEXPROC __glewGetFragDataIndex; }
# 12402 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLAMPCOLORARBPROC __glewClampColorARB; }
# 12404 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYBUFFERSUBDATAPROC __glewCopyBufferSubData; }
# 12406 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWBUFFERSARBPROC __glewDrawBuffersARB; }
# 12408 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONSEPARATEIARBPROC __glewBlendEquationSeparateiARB; }
# 12409 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONIARBPROC __glewBlendEquationiARB; }
# 12410 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCSEPARATEIARBPROC __glewBlendFuncSeparateiARB; }
# 12411 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCIARBPROC __glewBlendFunciARB; }
# 12413 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSBASEVERTEXPROC __glewDrawElementsBaseVertex; }
# 12414 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __glewDrawElementsInstancedBaseVertex; }
# 12415 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __glewDrawRangeElementsBaseVertex; }
# 12416 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __glewMultiDrawElementsBaseVertex; }
# 12418 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWARRAYSINDIRECTPROC __glewDrawArraysIndirect; }
# 12419 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSINDIRECTPROC __glewDrawElementsIndirect; }
# 12421 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWARRAYSINSTANCEDARBPROC __glewDrawArraysInstancedARB; }
# 12422 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSINSTANCEDARBPROC __glewDrawElementsInstancedARB; }
# 12424 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAMEBUFFERPROC __glewBindFramebuffer; }
# 12425 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDRENDERBUFFERPROC __glewBindRenderbuffer; }
# 12426 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLITFRAMEBUFFERPROC __glewBlitFramebuffer; }
# 12427 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCHECKFRAMEBUFFERSTATUSPROC __glewCheckFramebufferStatus; }
# 12428 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEFRAMEBUFFERSPROC __glewDeleteFramebuffers; }
# 12429 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETERENDERBUFFERSPROC __glewDeleteRenderbuffers; }
# 12430 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERRENDERBUFFERPROC __glewFramebufferRenderbuffer; }
# 12431 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE1DPROC __glewFramebufferTexture1D; }
# 12432 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE2DPROC __glewFramebufferTexture2D; }
# 12433 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE3DPROC __glewFramebufferTexture3D; }
# 12434 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURELAYERPROC __glewFramebufferTextureLayer; }
# 12435 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENFRAMEBUFFERSPROC __glewGenFramebuffers; }
# 12436 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENRENDERBUFFERSPROC __glewGenRenderbuffers; }
# 12437 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENERATEMIPMAPPROC __glewGenerateMipmap; }
# 12438 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetFramebufferAttachmentParameteriv; }
# 12439 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETRENDERBUFFERPARAMETERIVPROC __glewGetRenderbufferParameteriv; }
# 12440 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISFRAMEBUFFERPROC __glewIsFramebuffer; }
# 12441 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISRENDERBUFFERPROC __glewIsRenderbuffer; }
# 12442 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRENDERBUFFERSTORAGEPROC __glewRenderbufferStorage; }
# 12443 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewRenderbufferStorageMultisample; }
# 12445 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTUREARBPROC __glewFramebufferTextureARB; }
# 12446 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC __glewFramebufferTextureFaceARB; }
# 12447 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC __glewFramebufferTextureLayerARB; }
# 12448 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETERIARBPROC __glewProgramParameteriARB; }
# 12450 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORSUBTABLEPROC __glewColorSubTable; }
# 12451 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEPROC __glewColorTable; }
# 12452 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEPARAMETERFVPROC __glewColorTableParameterfv; }
# 12453 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEPARAMETERIVPROC __glewColorTableParameteriv; }
# 12454 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONFILTER1DPROC __glewConvolutionFilter1D; }
# 12455 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONFILTER2DPROC __glewConvolutionFilter2D; }
# 12456 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERFPROC __glewConvolutionParameterf; }
# 12457 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERFVPROC __glewConvolutionParameterfv; }
# 12458 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERIPROC __glewConvolutionParameteri; }
# 12459 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERIVPROC __glewConvolutionParameteriv; }
# 12460 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCOLORSUBTABLEPROC __glewCopyColorSubTable; }
# 12461 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCOLORTABLEPROC __glewCopyColorTable; }
# 12462 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCONVOLUTIONFILTER1DPROC __glewCopyConvolutionFilter1D; }
# 12463 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCONVOLUTIONFILTER2DPROC __glewCopyConvolutionFilter2D; }
# 12464 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPROC __glewGetColorTable; }
# 12465 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERFVPROC __glewGetColorTableParameterfv; }
# 12466 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERIVPROC __glewGetColorTableParameteriv; }
# 12467 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONFILTERPROC __glewGetConvolutionFilter; }
# 12468 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONPARAMETERFVPROC __glewGetConvolutionParameterfv; }
# 12469 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONPARAMETERIVPROC __glewGetConvolutionParameteriv; }
# 12470 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMPROC __glewGetHistogram; }
# 12471 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv; }
# 12472 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv; }
# 12473 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXPROC __glewGetMinmax; }
# 12474 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv; }
# 12475 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv; }
# 12476 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter; }
# 12477 "./sdk/GL/glew.h"
extern "C" { extern PFNGLHISTOGRAMPROC __glewHistogram; }
# 12478 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMINMAXPROC __glewMinmax; }
# 12479 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESETHISTOGRAMPROC __glewResetHistogram; }
# 12480 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESETMINMAXPROC __glewResetMinmax; }
# 12481 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D; }
# 12483 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBDIVISORARBPROC __glewVertexAttribDivisorARB; }
# 12485 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC __glewFlushMappedBufferRange; }
# 12486 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPBUFFERRANGEPROC __glewMapBufferRange; }
# 12488 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCURRENTPALETTEMATRIXARBPROC __glewCurrentPaletteMatrixARB; }
# 12489 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXINDEXPOINTERARBPROC __glewMatrixIndexPointerARB; }
# 12490 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXINDEXUBVARBPROC __glewMatrixIndexubvARB; }
# 12491 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXINDEXUIVARBPROC __glewMatrixIndexuivARB; }
# 12492 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXINDEXUSVARBPROC __glewMatrixIndexusvARB; }
# 12494 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLECOVERAGEARBPROC __glewSampleCoverageARB; }
# 12496 "./sdk/GL/glew.h"
extern "C" { extern PFNGLACTIVETEXTUREARBPROC __glewActiveTextureARB; }
# 12497 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIENTACTIVETEXTUREARBPROC __glewClientActiveTextureARB; }
# 12498 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1DARBPROC __glewMultiTexCoord1dARB; }
# 12499 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1DVARBPROC __glewMultiTexCoord1dvARB; }
# 12500 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1FARBPROC __glewMultiTexCoord1fARB; }
# 12501 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1FVARBPROC __glewMultiTexCoord1fvARB; }
# 12502 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1IARBPROC __glewMultiTexCoord1iARB; }
# 12503 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1IVARBPROC __glewMultiTexCoord1ivARB; }
# 12504 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1SARBPROC __glewMultiTexCoord1sARB; }
# 12505 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1SVARBPROC __glewMultiTexCoord1svARB; }
# 12506 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2DARBPROC __glewMultiTexCoord2dARB; }
# 12507 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2DVARBPROC __glewMultiTexCoord2dvARB; }
# 12508 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2FARBPROC __glewMultiTexCoord2fARB; }
# 12509 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2FVARBPROC __glewMultiTexCoord2fvARB; }
# 12510 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2IARBPROC __glewMultiTexCoord2iARB; }
# 12511 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2IVARBPROC __glewMultiTexCoord2ivARB; }
# 12512 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2SARBPROC __glewMultiTexCoord2sARB; }
# 12513 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2SVARBPROC __glewMultiTexCoord2svARB; }
# 12514 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3DARBPROC __glewMultiTexCoord3dARB; }
# 12515 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3DVARBPROC __glewMultiTexCoord3dvARB; }
# 12516 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3FARBPROC __glewMultiTexCoord3fARB; }
# 12517 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3FVARBPROC __glewMultiTexCoord3fvARB; }
# 12518 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3IARBPROC __glewMultiTexCoord3iARB; }
# 12519 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3IVARBPROC __glewMultiTexCoord3ivARB; }
# 12520 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3SARBPROC __glewMultiTexCoord3sARB; }
# 12521 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3SVARBPROC __glewMultiTexCoord3svARB; }
# 12522 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4DARBPROC __glewMultiTexCoord4dARB; }
# 12523 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4DVARBPROC __glewMultiTexCoord4dvARB; }
# 12524 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4FARBPROC __glewMultiTexCoord4fARB; }
# 12525 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4FVARBPROC __glewMultiTexCoord4fvARB; }
# 12526 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4IARBPROC __glewMultiTexCoord4iARB; }
# 12527 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4IVARBPROC __glewMultiTexCoord4ivARB; }
# 12528 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4SARBPROC __glewMultiTexCoord4sARB; }
# 12529 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4SVARBPROC __glewMultiTexCoord4svARB; }
# 12531 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINQUERYARBPROC __glewBeginQueryARB; }
# 12532 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEQUERIESARBPROC __glewDeleteQueriesARB; }
# 12533 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDQUERYARBPROC __glewEndQueryARB; }
# 12534 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENQUERIESARBPROC __glewGenQueriesARB; }
# 12535 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTIVARBPROC __glewGetQueryObjectivARB; }
# 12536 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTUIVARBPROC __glewGetQueryObjectuivARB; }
# 12537 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYIVARBPROC __glewGetQueryivARB; }
# 12538 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISQUERYARBPROC __glewIsQueryARB; }
# 12540 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFARBPROC __glewPointParameterfARB; }
# 12541 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB; }
# 12543 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROVOKINGVERTEXPROC __glewProvokingVertex; }
# 12545 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB; }
# 12547 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDSAMPLERPROC __glewBindSampler; }
# 12548 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETESAMPLERSPROC __glewDeleteSamplers; }
# 12549 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENSAMPLERSPROC __glewGenSamplers; }
# 12550 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISSAMPLERPROC __glewIsSampler; }
# 12552 "./sdk/GL/glew.h"
extern "C" { extern PFNGLATTACHOBJECTARBPROC __glewAttachObjectARB; }
# 12553 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPILESHADERARBPROC __glewCompileShaderARB; }
# 12554 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCREATEPROGRAMOBJECTARBPROC __glewCreateProgramObjectARB; }
# 12555 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCREATESHADEROBJECTARBPROC __glewCreateShaderObjectARB; }
# 12556 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEOBJECTARBPROC __glewDeleteObjectARB; }
# 12557 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDETACHOBJECTARBPROC __glewDetachObjectARB; }
# 12558 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMARBPROC __glewGetActiveUniformARB; }
# 12559 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETATTACHEDOBJECTSARBPROC __glewGetAttachedObjectsARB; }
# 12560 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHANDLEARBPROC __glewGetHandleARB; }
# 12561 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINFOLOGARBPROC __glewGetInfoLogARB; }
# 12562 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOBJECTPARAMETERFVARBPROC __glewGetObjectParameterfvARB; }
# 12563 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOBJECTPARAMETERIVARBPROC __glewGetObjectParameterivARB; }
# 12564 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSHADERSOURCEARBPROC __glewGetShaderSourceARB; }
# 12565 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMLOCATIONARBPROC __glewGetUniformLocationARB; }
# 12566 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMFVARBPROC __glewGetUniformfvARB; }
# 12567 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMIVARBPROC __glewGetUniformivARB; }
# 12568 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLINKPROGRAMARBPROC __glewLinkProgramARB; }
# 12569 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHADERSOURCEARBPROC __glewShaderSourceARB; }
# 12570 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1FARBPROC __glewUniform1fARB; }
# 12571 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1FVARBPROC __glewUniform1fvARB; }
# 12572 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1IARBPROC __glewUniform1iARB; }
# 12573 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1IVARBPROC __glewUniform1ivARB; }
# 12574 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2FARBPROC __glewUniform2fARB; }
# 12575 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2FVARBPROC __glewUniform2fvARB; }
# 12576 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2IARBPROC __glewUniform2iARB; }
# 12577 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2IVARBPROC __glewUniform2ivARB; }
# 12578 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3FARBPROC __glewUniform3fARB; }
# 12579 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3FVARBPROC __glewUniform3fvARB; }
# 12580 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3IARBPROC __glewUniform3iARB; }
# 12581 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3IVARBPROC __glewUniform3ivARB; }
# 12582 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4FARBPROC __glewUniform4fARB; }
# 12583 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4FVARBPROC __glewUniform4fvARB; }
# 12584 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4IARBPROC __glewUniform4iARB; }
# 12585 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4IVARBPROC __glewUniform4ivARB; }
# 12586 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX2FVARBPROC __glewUniformMatrix2fvARB; }
# 12587 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX3FVARBPROC __glewUniformMatrix3fvARB; }
# 12588 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMMATRIX4FVARBPROC __glewUniformMatrix4fvARB; }
# 12589 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUSEPROGRAMOBJECTARBPROC __glewUseProgramObjectARB; }
# 12590 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVALIDATEPROGRAMARBPROC __glewValidateProgramARB; }
# 12592 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVESUBROUTINENAMEPROC __glewGetActiveSubroutineName; }
# 12593 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __glewGetActiveSubroutineUniformName; }
# 12594 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __glewGetActiveSubroutineUniformiv; }
# 12595 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMSTAGEIVPROC __glewGetProgramStageiv; }
# 12596 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSUBROUTINEINDEXPROC __glewGetSubroutineIndex; }
# 12597 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __glewGetSubroutineUniformLocation; }
# 12598 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMSUBROUTINEUIVPROC __glewGetUniformSubroutineuiv; }
# 12599 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMSUBROUTINESUIVPROC __glewUniformSubroutinesuiv; }
# 12601 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPILESHADERINCLUDEARBPROC __glewCompileShaderIncludeARB; }
# 12602 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETENAMEDSTRINGARBPROC __glewDeleteNamedStringARB; }
# 12603 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDSTRINGARBPROC __glewGetNamedStringARB; }
# 12604 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDSTRINGIVARBPROC __glewGetNamedStringivARB; }
# 12605 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISNAMEDSTRINGARBPROC __glewIsNamedStringARB; }
# 12606 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDSTRINGARBPROC __glewNamedStringARB; }
# 12608 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIENTWAITSYNCPROC __glewClientWaitSync; }
# 12609 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETESYNCPROC __glewDeleteSync; }
# 12610 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFENCESYNCPROC __glewFenceSync; }
# 12611 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGER64VPROC __glewGetInteger64v; }
# 12612 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSYNCIVPROC __glewGetSynciv; }
# 12613 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISSYNCPROC __glewIsSync; }
# 12614 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWAITSYNCPROC __glewWaitSync; }
# 12616 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPATCHPARAMETERFVPROC __glewPatchParameterfv; }
# 12617 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPATCHPARAMETERIPROC __glewPatchParameteri; }
# 12619 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXBUFFERARBPROC __glewTexBufferARB; }
# 12621 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE1DARBPROC __glewCompressedTexImage1DARB; }
# 12622 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE2DARBPROC __glewCompressedTexImage2DARB; }
# 12623 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXIMAGE3DARBPROC __glewCompressedTexImage3DARB; }
# 12624 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __glewCompressedTexSubImage1DARB; }
# 12625 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __glewCompressedTexSubImage2DARB; }
# 12626 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __glewCompressedTexSubImage3DARB; }
# 12627 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC __glewGetCompressedTexImageARB; }
# 12629 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTISAMPLEFVPROC __glewGetMultisamplefv; }
# 12630 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEMASKIPROC __glewSampleMaski; }
# 12631 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE2DMULTISAMPLEPROC __glewTexImage2DMultisample; }
# 12632 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE3DMULTISAMPLEPROC __glewTexImage3DMultisample; }
# 12634 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTI64VPROC __glewGetQueryObjecti64v; }
# 12635 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTUI64VPROC __glewGetQueryObjectui64v; }
# 12636 "./sdk/GL/glew.h"
extern "C" { extern PFNGLQUERYCOUNTERPROC __glewQueryCounter; }
# 12638 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDTRANSFORMFEEDBACKPROC __glewBindTransformFeedback; }
# 12639 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETETRANSFORMFEEDBACKSPROC __glewDeleteTransformFeedbacks; }
# 12640 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWTRANSFORMFEEDBACKPROC __glewDrawTransformFeedback; }
# 12641 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENTRANSFORMFEEDBACKSPROC __glewGenTransformFeedbacks; }
# 12642 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISTRANSFORMFEEDBACKPROC __glewIsTransformFeedback; }
# 12643 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPAUSETRANSFORMFEEDBACKPROC __glewPauseTransformFeedback; }
# 12644 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESUMETRANSFORMFEEDBACKPROC __glewResumeTransformFeedback; }
# 12646 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINQUERYINDEXEDPROC __glewBeginQueryIndexed; }
# 12647 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __glewDrawTransformFeedbackStream; }
# 12648 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDQUERYINDEXEDPROC __glewEndQueryIndexed; }
# 12649 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYINDEXEDIVPROC __glewGetQueryIndexediv; }
# 12651 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB; }
# 12652 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOADTRANSPOSEMATRIXFARBPROC __glewLoadTransposeMatrixfARB; }
# 12653 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTTRANSPOSEMATRIXDARBPROC __glewMultTransposeMatrixdARB; }
# 12654 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTTRANSPOSEMATRIXFARBPROC __glewMultTransposeMatrixfARB; }
# 12656 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERBASEPROC __glewBindBufferBase; }
# 12657 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERRANGEPROC __glewBindBufferRange; }
# 12658 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __glewGetActiveUniformBlockName; }
# 12659 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC __glewGetActiveUniformBlockiv; }
# 12660 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMNAMEPROC __glewGetActiveUniformName; }
# 12661 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEUNIFORMSIVPROC __glewGetActiveUniformsiv; }
# 12662 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v; }
# 12663 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex; }
# 12664 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices; }
# 12665 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding; }
# 12667 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDVERTEXARRAYPROC __glewBindVertexArray; }
# 12668 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEVERTEXARRAYSPROC __glewDeleteVertexArrays; }
# 12669 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENVERTEXARRAYSPROC __glewGenVertexArrays; }
# 12670 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISVERTEXARRAYPROC __glewIsVertexArray; }
# 12672 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXBLENDARBPROC __glewVertexBlendARB; }
# 12673 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTPOINTERARBPROC __glewWeightPointerARB; }
# 12674 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTBVARBPROC __glewWeightbvARB; }
# 12675 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTDVARBPROC __glewWeightdvARB; }
# 12676 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTFVARBPROC __glewWeightfvARB; }
# 12677 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTIVARBPROC __glewWeightivARB; }
# 12678 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTSVARBPROC __glewWeightsvARB; }
# 12679 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTUBVARBPROC __glewWeightubvARB; }
# 12680 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTUIVARBPROC __glewWeightuivARB; }
# 12681 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWEIGHTUSVARBPROC __glewWeightusvARB; }
# 12683 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERARBPROC __glewBindBufferARB; }
# 12684 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERDATAARBPROC __glewBufferDataARB; }
# 12685 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERSUBDATAARBPROC __glewBufferSubDataARB; }
# 12686 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEBUFFERSARBPROC __glewDeleteBuffersARB; }
# 12687 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENBUFFERSARBPROC __glewGenBuffersARB; }
# 12688 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPARAMETERIVARBPROC __glewGetBufferParameterivARB; }
# 12689 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPOINTERVARBPROC __glewGetBufferPointervARB; }
# 12690 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERSUBDATAARBPROC __glewGetBufferSubDataARB; }
# 12691 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISBUFFERARBPROC __glewIsBufferARB; }
# 12692 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPBUFFERARBPROC __glewMapBufferARB; }
# 12693 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNMAPBUFFERARBPROC __glewUnmapBufferARB; }
# 12695 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDPROGRAMARBPROC __glewBindProgramARB; }
# 12696 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEPROGRAMSARBPROC __glewDeleteProgramsARB; }
# 12697 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC __glewDisableVertexAttribArrayARB; }
# 12698 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC __glewEnableVertexAttribArrayARB; }
# 12699 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENPROGRAMSARBPROC __glewGenProgramsARB; }
# 12700 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC __glewGetProgramEnvParameterdvARB; }
# 12701 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC __glewGetProgramEnvParameterfvARB; }
# 12702 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC __glewGetProgramLocalParameterdvARB; }
# 12703 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC __glewGetProgramLocalParameterfvARB; }
# 12704 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMSTRINGARBPROC __glewGetProgramStringARB; }
# 12705 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMIVARBPROC __glewGetProgramivARB; }
# 12706 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC __glewGetVertexAttribPointervARB; }
# 12707 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBDVARBPROC __glewGetVertexAttribdvARB; }
# 12708 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBFVARBPROC __glewGetVertexAttribfvARB; }
# 12709 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIVARBPROC __glewGetVertexAttribivARB; }
# 12710 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISPROGRAMARBPROC __glewIsProgramARB; }
# 12711 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETER4DARBPROC __glewProgramEnvParameter4dARB; }
# 12712 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETER4DVARBPROC __glewProgramEnvParameter4dvARB; }
# 12713 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETER4FARBPROC __glewProgramEnvParameter4fARB; }
# 12714 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETER4FVARBPROC __glewProgramEnvParameter4fvARB; }
# 12715 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC __glewProgramLocalParameter4dARB; }
# 12716 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC __glewProgramLocalParameter4dvARB; }
# 12717 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC __glewProgramLocalParameter4fARB; }
# 12718 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC __glewProgramLocalParameter4fvARB; }
# 12719 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMSTRINGARBPROC __glewProgramStringARB; }
# 12720 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DARBPROC __glewVertexAttrib1dARB; }
# 12721 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DVARBPROC __glewVertexAttrib1dvARB; }
# 12722 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FARBPROC __glewVertexAttrib1fARB; }
# 12723 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FVARBPROC __glewVertexAttrib1fvARB; }
# 12724 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SARBPROC __glewVertexAttrib1sARB; }
# 12725 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SVARBPROC __glewVertexAttrib1svARB; }
# 12726 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DARBPROC __glewVertexAttrib2dARB; }
# 12727 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DVARBPROC __glewVertexAttrib2dvARB; }
# 12728 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FARBPROC __glewVertexAttrib2fARB; }
# 12729 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FVARBPROC __glewVertexAttrib2fvARB; }
# 12730 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SARBPROC __glewVertexAttrib2sARB; }
# 12731 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SVARBPROC __glewVertexAttrib2svARB; }
# 12732 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DARBPROC __glewVertexAttrib3dARB; }
# 12733 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DVARBPROC __glewVertexAttrib3dvARB; }
# 12734 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FARBPROC __glewVertexAttrib3fARB; }
# 12735 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FVARBPROC __glewVertexAttrib3fvARB; }
# 12736 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SARBPROC __glewVertexAttrib3sARB; }
# 12737 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SVARBPROC __glewVertexAttrib3svARB; }
# 12738 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NBVARBPROC __glewVertexAttrib4NbvARB; }
# 12739 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NIVARBPROC __glewVertexAttrib4NivARB; }
# 12740 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NSVARBPROC __glewVertexAttrib4NsvARB; }
# 12741 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUBARBPROC __glewVertexAttrib4NubARB; }
# 12742 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUBVARBPROC __glewVertexAttrib4NubvARB; }
# 12743 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUIVARBPROC __glewVertexAttrib4NuivARB; }
# 12744 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4NUSVARBPROC __glewVertexAttrib4NusvARB; }
# 12745 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4BVARBPROC __glewVertexAttrib4bvARB; }
# 12746 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DARBPROC __glewVertexAttrib4dARB; }
# 12747 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DVARBPROC __glewVertexAttrib4dvARB; }
# 12748 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FARBPROC __glewVertexAttrib4fARB; }
# 12749 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FVARBPROC __glewVertexAttrib4fvARB; }
# 12750 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4IVARBPROC __glewVertexAttrib4ivARB; }
# 12751 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SARBPROC __glewVertexAttrib4sARB; }
# 12752 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SVARBPROC __glewVertexAttrib4svARB; }
# 12753 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UBVARBPROC __glewVertexAttrib4ubvARB; }
# 12754 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UIVARBPROC __glewVertexAttrib4uivARB; }
# 12755 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4USVARBPROC __glewVertexAttrib4usvARB; }
# 12756 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBPOINTERARBPROC __glewVertexAttribPointerARB; }
# 12758 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDATTRIBLOCATIONARBPROC __glewBindAttribLocationARB; }
# 12759 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEATTRIBARBPROC __glewGetActiveAttribARB; }
# 12760 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETATTRIBLOCATIONARBPROC __glewGetAttribLocationARB; }
# 12762 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORP3UIPROC __glewColorP3ui; }
# 12763 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORP3UIVPROC __glewColorP3uiv; }
# 12764 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORP4UIPROC __glewColorP4ui; }
# 12765 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORP4UIVPROC __glewColorP4uiv; }
# 12766 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP1UIPROC __glewMultiTexCoordP1ui; }
# 12767 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP1UIVPROC __glewMultiTexCoordP1uiv; }
# 12768 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP2UIPROC __glewMultiTexCoordP2ui; }
# 12769 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP2UIVPROC __glewMultiTexCoordP2uiv; }
# 12770 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP3UIPROC __glewMultiTexCoordP3ui; }
# 12771 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP3UIVPROC __glewMultiTexCoordP3uiv; }
# 12772 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP4UIPROC __glewMultiTexCoordP4ui; }
# 12773 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDP4UIVPROC __glewMultiTexCoordP4uiv; }
# 12774 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALP3UIPROC __glewNormalP3ui; }
# 12775 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALP3UIVPROC __glewNormalP3uiv; }
# 12776 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORP3UIPROC __glewSecondaryColorP3ui; }
# 12777 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORP3UIVPROC __glewSecondaryColorP3uiv; }
# 12778 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP1UIPROC __glewTexCoordP1ui; }
# 12779 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP1UIVPROC __glewTexCoordP1uiv; }
# 12780 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP2UIPROC __glewTexCoordP2ui; }
# 12781 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP2UIVPROC __glewTexCoordP2uiv; }
# 12782 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP3UIPROC __glewTexCoordP3ui; }
# 12783 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP3UIVPROC __glewTexCoordP3uiv; }
# 12784 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP4UIPROC __glewTexCoordP4ui; }
# 12785 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDP4UIVPROC __glewTexCoordP4uiv; }
# 12786 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP1UIPROC __glewVertexAttribP1ui; }
# 12787 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP1UIVPROC __glewVertexAttribP1uiv; }
# 12788 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP2UIPROC __glewVertexAttribP2ui; }
# 12789 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP2UIVPROC __glewVertexAttribP2uiv; }
# 12790 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP3UIPROC __glewVertexAttribP3ui; }
# 12791 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP3UIVPROC __glewVertexAttribP3uiv; }
# 12792 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP4UIPROC __glewVertexAttribP4ui; }
# 12793 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBP4UIVPROC __glewVertexAttribP4uiv; }
# 12794 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP2UIPROC __glewVertexP2ui; }
# 12795 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP2UIVPROC __glewVertexP2uiv; }
# 12796 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP3UIPROC __glewVertexP3ui; }
# 12797 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP3UIVPROC __glewVertexP3uiv; }
# 12798 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP4UIPROC __glewVertexP4ui; }
# 12799 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXP4UIVPROC __glewVertexP4uiv; }
# 12801 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB; }
# 12802 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DVARBPROC __glewWindowPos2dvARB; }
# 12803 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FARBPROC __glewWindowPos2fARB; }
# 12804 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FVARBPROC __glewWindowPos2fvARB; }
# 12805 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IARBPROC __glewWindowPos2iARB; }
# 12806 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IVARBPROC __glewWindowPos2ivARB; }
# 12807 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SARBPROC __glewWindowPos2sARB; }
# 12808 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SVARBPROC __glewWindowPos2svARB; }
# 12809 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DARBPROC __glewWindowPos3dARB; }
# 12810 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DVARBPROC __glewWindowPos3dvARB; }
# 12811 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FARBPROC __glewWindowPos3fARB; }
# 12812 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FVARBPROC __glewWindowPos3fvARB; }
# 12813 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IARBPROC __glewWindowPos3iARB; }
# 12814 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IVARBPROC __glewWindowPos3ivARB; }
# 12815 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SARBPROC __glewWindowPos3sARB; }
# 12816 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SVARBPROC __glewWindowPos3svARB; }
# 12818 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWBUFFERSATIPROC __glewDrawBuffersATI; }
# 12820 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTARRAYATIPROC __glewDrawElementArrayATI; }
# 12821 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWRANGEELEMENTARRAYATIPROC __glewDrawRangeElementArrayATI; }
# 12822 "./sdk/GL/glew.h"
extern "C" { extern PFNGLELEMENTPOINTERATIPROC __glewElementPointerATI; }
# 12824 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXBUMPPARAMETERFVATIPROC __glewGetTexBumpParameterfvATI; }
# 12825 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXBUMPPARAMETERIVATIPROC __glewGetTexBumpParameterivATI; }
# 12826 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXBUMPPARAMETERFVATIPROC __glewTexBumpParameterfvATI; }
# 12827 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXBUMPPARAMETERIVATIPROC __glewTexBumpParameterivATI; }
# 12829 "./sdk/GL/glew.h"
extern "C" { extern PFNGLALPHAFRAGMENTOP1ATIPROC __glewAlphaFragmentOp1ATI; }
# 12830 "./sdk/GL/glew.h"
extern "C" { extern PFNGLALPHAFRAGMENTOP2ATIPROC __glewAlphaFragmentOp2ATI; }
# 12831 "./sdk/GL/glew.h"
extern "C" { extern PFNGLALPHAFRAGMENTOP3ATIPROC __glewAlphaFragmentOp3ATI; }
# 12832 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINFRAGMENTSHADERATIPROC __glewBeginFragmentShaderATI; }
# 12833 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAGMENTSHADERATIPROC __glewBindFragmentShaderATI; }
# 12834 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORFRAGMENTOP1ATIPROC __glewColorFragmentOp1ATI; }
# 12835 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORFRAGMENTOP2ATIPROC __glewColorFragmentOp2ATI; }
# 12836 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORFRAGMENTOP3ATIPROC __glewColorFragmentOp3ATI; }
# 12837 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEFRAGMENTSHADERATIPROC __glewDeleteFragmentShaderATI; }
# 12838 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDFRAGMENTSHADERATIPROC __glewEndFragmentShaderATI; }
# 12839 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENFRAGMENTSHADERSATIPROC __glewGenFragmentShadersATI; }
# 12840 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPASSTEXCOORDATIPROC __glewPassTexCoordATI; }
# 12841 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEMAPATIPROC __glewSampleMapATI; }
# 12842 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSETFRAGMENTSHADERCONSTANTATIPROC __glewSetFragmentShaderConstantATI; }
# 12844 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPOBJECTBUFFERATIPROC __glewMapObjectBufferATI; }
# 12845 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNMAPOBJECTBUFFERATIPROC __glewUnmapObjectBufferATI; }
# 12847 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPNTRIANGLESFATIPROC __glPNTrianglewesfATI; }
# 12848 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPNTRIANGLESIATIPROC __glPNTrianglewesiATI; }
# 12850 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTENCILFUNCSEPARATEATIPROC __glewStencilFuncSeparateATI; }
# 12851 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTENCILOPSEPARATEATIPROC __glewStencilOpSeparateATI; }
# 12853 "./sdk/GL/glew.h"
extern "C" { extern PFNGLARRAYOBJECTATIPROC __glewArrayObjectATI; }
# 12854 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFREEOBJECTBUFFERATIPROC __glewFreeObjectBufferATI; }
# 12855 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETARRAYOBJECTFVATIPROC __glewGetArrayObjectfvATI; }
# 12856 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETARRAYOBJECTIVATIPROC __glewGetArrayObjectivATI; }
# 12857 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOBJECTBUFFERFVATIPROC __glewGetObjectBufferfvATI; }
# 12858 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOBJECTBUFFERIVATIPROC __glewGetObjectBufferivATI; }
# 12859 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTARRAYOBJECTFVATIPROC __glewGetVariantArrayObjectfvATI; }
# 12860 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTARRAYOBJECTIVATIPROC __glewGetVariantArrayObjectivATI; }
# 12861 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISOBJECTBUFFERATIPROC __glewIsObjectBufferATI; }
# 12862 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNEWOBJECTBUFFERATIPROC __glewNewObjectBufferATI; }
# 12863 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUPDATEOBJECTBUFFERATIPROC __glewUpdateObjectBufferATI; }
# 12864 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTARRAYOBJECTATIPROC __glewVariantArrayObjectATI; }
# 12866 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC __glewGetVertexAttribArrayObjectfvATI; }
# 12867 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC __glewGetVertexAttribArrayObjectivATI; }
# 12868 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBARRAYOBJECTATIPROC __glewVertexAttribArrayObjectATI; }
# 12870 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC __glewClientActiveVertexStreamATI; }
# 12871 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3BATIPROC __glewNormalStream3bATI; }
# 12872 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3BVATIPROC __glewNormalStream3bvATI; }
# 12873 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3DATIPROC __glewNormalStream3dATI; }
# 12874 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3DVATIPROC __glewNormalStream3dvATI; }
# 12875 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3FATIPROC __glewNormalStream3fATI; }
# 12876 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3FVATIPROC __glewNormalStream3fvATI; }
# 12877 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3IATIPROC __glewNormalStream3iATI; }
# 12878 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3IVATIPROC __glewNormalStream3ivATI; }
# 12879 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3SATIPROC __glewNormalStream3sATI; }
# 12880 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALSTREAM3SVATIPROC __glewNormalStream3svATI; }
# 12881 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXBLENDENVFATIPROC __glewVertexBlendEnvfATI; }
# 12882 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXBLENDENVIATIPROC __glewVertexBlendEnviATI; }
# 12883 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2DATIPROC __glewVertexStream2dATI; }
# 12884 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2DVATIPROC __glewVertexStream2dvATI; }
# 12885 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2FATIPROC __glewVertexStream2fATI; }
# 12886 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2FVATIPROC __glewVertexStream2fvATI; }
# 12887 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2IATIPROC __glewVertexStream2iATI; }
# 12888 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2IVATIPROC __glewVertexStream2ivATI; }
# 12889 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2SATIPROC __glewVertexStream2sATI; }
# 12890 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM2SVATIPROC __glewVertexStream2svATI; }
# 12891 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3DATIPROC __glewVertexStream3dATI; }
# 12892 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3DVATIPROC __glewVertexStream3dvATI; }
# 12893 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3FATIPROC __glewVertexStream3fATI; }
# 12894 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3FVATIPROC __glewVertexStream3fvATI; }
# 12895 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3IATIPROC __glewVertexStream3iATI; }
# 12896 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3IVATIPROC __glewVertexStream3ivATI; }
# 12897 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3SATIPROC __glewVertexStream3sATI; }
# 12898 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM3SVATIPROC __glewVertexStream3svATI; }
# 12899 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4DATIPROC __glewVertexStream4dATI; }
# 12900 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4DVATIPROC __glewVertexStream4dvATI; }
# 12901 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4FATIPROC __glewVertexStream4fATI; }
# 12902 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4FVATIPROC __glewVertexStream4fvATI; }
# 12903 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4IATIPROC __glewVertexStream4iATI; }
# 12904 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4IVATIPROC __glewVertexStream4ivATI; }
# 12905 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4SATIPROC __glewVertexStream4sATI; }
# 12906 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXSTREAM4SVATIPROC __glewVertexStream4svATI; }
# 12908 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMBUFFERSIZEEXTPROC __glewGetUniformBufferSizeEXT; }
# 12909 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMOFFSETEXTPROC __glewGetUniformOffsetEXT; }
# 12910 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMBUFFEREXTPROC __glewUniformBufferEXT; }
# 12912 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDCOLOREXTPROC __glewBlendColorEXT; }
# 12914 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONSEPARATEEXTPROC __glewBlendEquationSeparateEXT; }
# 12916 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDFUNCSEPARATEEXTPROC __glewBlendFuncSeparateEXT; }
# 12918 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLENDEQUATIONEXTPROC __glewBlendEquationEXT; }
# 12920 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORSUBTABLEEXTPROC __glewColorSubTableEXT; }
# 12921 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCOLORSUBTABLEEXTPROC __glewCopyColorSubTableEXT; }
# 12923 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOCKARRAYSEXTPROC __glewLockArraysEXT; }
# 12924 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNLOCKARRAYSEXTPROC __glewUnlockArraysEXT; }
# 12926 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONFILTER1DEXTPROC __glewConvolutionFilter1DEXT; }
# 12927 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONFILTER2DEXTPROC __glewConvolutionFilter2DEXT; }
# 12928 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERFEXTPROC __glewConvolutionParameterfEXT; }
# 12929 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERFVEXTPROC __glewConvolutionParameterfvEXT; }
# 12930 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERIEXTPROC __glewConvolutionParameteriEXT; }
# 12931 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCONVOLUTIONPARAMETERIVEXTPROC __glewConvolutionParameterivEXT; }
# 12932 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC __glewCopyConvolutionFilter1DEXT; }
# 12933 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC __glewCopyConvolutionFilter2DEXT; }
# 12934 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONFILTEREXTPROC __glewGetConvolutionFilterEXT; }
# 12935 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC __glewGetConvolutionParameterfvEXT; }
# 12936 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC __glewGetConvolutionParameterivEXT; }
# 12937 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSEPARABLEFILTEREXTPROC __glewGetSeparableFilterEXT; }
# 12938 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSEPARABLEFILTER2DEXTPROC __glewSeparableFilter2DEXT; }
# 12940 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINORMALPOINTEREXTPROC __glewBinormalPointerEXT; }
# 12941 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTANGENTPOINTEREXTPROC __glewTangentPointerEXT; }
# 12943 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXIMAGE1DEXTPROC __glewCopyTexImage1DEXT; }
# 12944 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXIMAGE2DEXTPROC __glewCopyTexImage2DEXT; }
# 12945 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXSUBIMAGE1DEXTPROC __glewCopyTexSubImage1DEXT; }
# 12946 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXSUBIMAGE2DEXTPROC __glewCopyTexSubImage2DEXT; }
# 12947 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXSUBIMAGE3DEXTPROC __glewCopyTexSubImage3DEXT; }
# 12949 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCULLPARAMETERDVEXTPROC __glewCullParameterdvEXT; }
# 12950 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCULLPARAMETERFVEXTPROC __glewCullParameterfvEXT; }
# 12952 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDEPTHBOUNDSEXTPROC __glewDepthBoundsEXT; }
# 12954 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDMULTITEXTUREEXTPROC __glewBindMultiTextureEXT; }
# 12955 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC __glewCheckNamedFramebufferStatusEXT; }
# 12956 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIENTATTRIBDEFAULTEXTPROC __glewClientAttribDefaultEXT; }
# 12957 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC __glewCompressedMultiTexImage1DEXT; }
# 12958 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC __glewCompressedMultiTexImage2DEXT; }
# 12959 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC __glewCompressedMultiTexImage3DEXT; }
# 12960 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC __glewCompressedMultiTexSubImage1DEXT; }
# 12961 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC __glewCompressedMultiTexSubImage2DEXT; }
# 12962 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC __glewCompressedMultiTexSubImage3DEXT; }
# 12963 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC __glewCompressedTextureImage1DEXT; }
# 12964 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC __glewCompressedTextureImage2DEXT; }
# 12965 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC __glewCompressedTextureImage3DEXT; }
# 12966 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC __glewCompressedTextureSubImage1DEXT; }
# 12967 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC __glewCompressedTextureSubImage2DEXT; }
# 12968 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC __glewCompressedTextureSubImage3DEXT; }
# 12969 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYMULTITEXIMAGE1DEXTPROC __glewCopyMultiTexImage1DEXT; }
# 12970 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYMULTITEXIMAGE2DEXTPROC __glewCopyMultiTexImage2DEXT; }
# 12971 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC __glewCopyMultiTexSubImage1DEXT; }
# 12972 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC __glewCopyMultiTexSubImage2DEXT; }
# 12973 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC __glewCopyMultiTexSubImage3DEXT; }
# 12974 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXTUREIMAGE1DEXTPROC __glewCopyTextureImage1DEXT; }
# 12975 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXTUREIMAGE2DEXTPROC __glewCopyTextureImage2DEXT; }
# 12976 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC __glewCopyTextureSubImage1DEXT; }
# 12977 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC __glewCopyTextureSubImage2DEXT; }
# 12978 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC __glewCopyTextureSubImage3DEXT; }
# 12979 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC __glewDisableClientStateIndexedEXT; }
# 12980 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLECLIENTSTATEIEXTPROC __glewDisableClientStateiEXT; }
# 12981 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC __glewDisableVertexArrayAttribEXT; }
# 12982 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVERTEXARRAYEXTPROC __glewDisableVertexArrayEXT; }
# 12983 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC __glewEnableClientStateIndexedEXT; }
# 12984 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLECLIENTSTATEIEXTPROC __glewEnableClientStateiEXT; }
# 12985 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC __glewEnableVertexArrayAttribEXT; }
# 12986 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVERTEXARRAYEXTPROC __glewEnableVertexArrayEXT; }
# 12987 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC __glewFlushMappedNamedBufferRangeEXT; }
# 12988 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC __glewFramebufferDrawBufferEXT; }
# 12989 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC __glewFramebufferDrawBuffersEXT; }
# 12990 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC __glewFramebufferReadBufferEXT; }
# 12991 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC __glewGenerateMultiTexMipmapEXT; }
# 12992 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENERATETEXTUREMIPMAPEXTPROC __glewGenerateTextureMipmapEXT; }
# 12993 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC __glewGetCompressedMultiTexImageEXT; }
# 12994 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC __glewGetCompressedTextureImageEXT; }
# 12995 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETDOUBLEINDEXEDVEXTPROC __glewGetDoubleIndexedvEXT; }
# 12996 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETDOUBLEI_VEXTPROC __glewGetDoublei_vEXT; }
# 12997 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFLOATINDEXEDVEXTPROC __glewGetFloatIndexedvEXT; }
# 12998 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFLOATI_VEXTPROC __glewGetFloati_vEXT; }
# 12999 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC __glewGetFramebufferParameterivEXT; }
# 13000 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXENVFVEXTPROC __glewGetMultiTexEnvfvEXT; }
# 13001 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXENVIVEXTPROC __glewGetMultiTexEnvivEXT; }
# 13002 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXGENDVEXTPROC __glewGetMultiTexGendvEXT; }
# 13003 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXGENFVEXTPROC __glewGetMultiTexGenfvEXT; }
# 13004 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXGENIVEXTPROC __glewGetMultiTexGenivEXT; }
# 13005 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXIMAGEEXTPROC __glewGetMultiTexImageEXT; }
# 13006 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC __glewGetMultiTexLevelParameterfvEXT; }
# 13007 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC __glewGetMultiTexLevelParameterivEXT; }
# 13008 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC __glewGetMultiTexParameterIivEXT; }
# 13009 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC __glewGetMultiTexParameterIuivEXT; }
# 13010 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXPARAMETERFVEXTPROC __glewGetMultiTexParameterfvEXT; }
# 13011 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTITEXPARAMETERIVEXTPROC __glewGetMultiTexParameterivEXT; }
# 13012 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC __glewGetNamedBufferParameterivEXT; }
# 13013 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC __glewGetNamedBufferPointervEXT; }
# 13014 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC __glewGetNamedBufferSubDataEXT; }
# 13015 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetNamedFramebufferAttachmentParameterivEXT; }
# 13016 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC __glewGetNamedProgramLocalParameterIivEXT; }
# 13017 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC __glewGetNamedProgramLocalParameterIuivEXT; }
# 13018 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC __glewGetNamedProgramLocalParameterdvEXT; }
# 13019 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC __glewGetNamedProgramLocalParameterfvEXT; }
# 13020 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC __glewGetNamedProgramStringEXT; }
# 13021 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDPROGRAMIVEXTPROC __glewGetNamedProgramivEXT; }
# 13022 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC __glewGetNamedRenderbufferParameterivEXT; }
# 13023 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPOINTERINDEXEDVEXTPROC __glewGetPointerIndexedvEXT; }
# 13024 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPOINTERI_VEXTPROC __glewGetPointeri_vEXT; }
# 13025 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTUREIMAGEEXTPROC __glewGetTextureImageEXT; }
# 13026 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC __glewGetTextureLevelParameterfvEXT; }
# 13027 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC __glewGetTextureLevelParameterivEXT; }
# 13028 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC __glewGetTextureParameterIivEXT; }
# 13029 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC __glewGetTextureParameterIuivEXT; }
# 13030 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTUREPARAMETERFVEXTPROC __glewGetTextureParameterfvEXT; }
# 13031 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXTUREPARAMETERIVEXTPROC __glewGetTextureParameterivEXT; }
# 13032 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC __glewGetVertexArrayIntegeri_vEXT; }
# 13033 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC __glewGetVertexArrayIntegervEXT; }
# 13034 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC __glewGetVertexArrayPointeri_vEXT; }
# 13035 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC __glewGetVertexArrayPointervEXT; }
# 13036 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPNAMEDBUFFEREXTPROC __glewMapNamedBufferEXT; }
# 13037 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC __glewMapNamedBufferRangeEXT; }
# 13038 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXFRUSTUMEXTPROC __glewMatrixFrustumEXT; }
# 13039 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXLOADIDENTITYEXTPROC __glewMatrixLoadIdentityEXT; }
# 13040 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC __glewMatrixLoadTransposedEXT; }
# 13041 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC __glewMatrixLoadTransposefEXT; }
# 13042 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXLOADDEXTPROC __glewMatrixLoaddEXT; }
# 13043 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXLOADFEXTPROC __glewMatrixLoadfEXT; }
# 13044 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC __glewMatrixMultTransposedEXT; }
# 13045 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC __glewMatrixMultTransposefEXT; }
# 13046 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXMULTDEXTPROC __glewMatrixMultdEXT; }
# 13047 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXMULTFEXTPROC __glewMatrixMultfEXT; }
# 13048 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXORTHOEXTPROC __glewMatrixOrthoEXT; }
# 13049 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXPOPEXTPROC __glewMatrixPopEXT; }
# 13050 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXPUSHEXTPROC __glewMatrixPushEXT; }
# 13051 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXROTATEDEXTPROC __glewMatrixRotatedEXT; }
# 13052 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXROTATEFEXTPROC __glewMatrixRotatefEXT; }
# 13053 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXSCALEDEXTPROC __glewMatrixScaledEXT; }
# 13054 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXSCALEFEXTPROC __glewMatrixScalefEXT; }
# 13055 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXTRANSLATEDEXTPROC __glewMatrixTranslatedEXT; }
# 13056 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMATRIXTRANSLATEFEXTPROC __glewMatrixTranslatefEXT; }
# 13057 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXBUFFEREXTPROC __glewMultiTexBufferEXT; }
# 13058 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORDPOINTEREXTPROC __glewMultiTexCoordPointerEXT; }
# 13059 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXENVFEXTPROC __glewMultiTexEnvfEXT; }
# 13060 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXENVFVEXTPROC __glewMultiTexEnvfvEXT; }
# 13061 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXENVIEXTPROC __glewMultiTexEnviEXT; }
# 13062 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXENVIVEXTPROC __glewMultiTexEnvivEXT; }
# 13063 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENDEXTPROC __glewMultiTexGendEXT; }
# 13064 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENDVEXTPROC __glewMultiTexGendvEXT; }
# 13065 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENFEXTPROC __glewMultiTexGenfEXT; }
# 13066 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENFVEXTPROC __glewMultiTexGenfvEXT; }
# 13067 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENIEXTPROC __glewMultiTexGeniEXT; }
# 13068 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXGENIVEXTPROC __glewMultiTexGenivEXT; }
# 13069 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXIMAGE1DEXTPROC __glewMultiTexImage1DEXT; }
# 13070 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXIMAGE2DEXTPROC __glewMultiTexImage2DEXT; }
# 13071 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXIMAGE3DEXTPROC __glewMultiTexImage3DEXT; }
# 13072 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERIIVEXTPROC __glewMultiTexParameterIivEXT; }
# 13073 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERIUIVEXTPROC __glewMultiTexParameterIuivEXT; }
# 13074 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERFEXTPROC __glewMultiTexParameterfEXT; }
# 13075 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERFVEXTPROC __glewMultiTexParameterfvEXT; }
# 13076 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERIEXTPROC __glewMultiTexParameteriEXT; }
# 13077 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXPARAMETERIVEXTPROC __glewMultiTexParameterivEXT; }
# 13078 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXRENDERBUFFEREXTPROC __glewMultiTexRenderbufferEXT; }
# 13079 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXSUBIMAGE1DEXTPROC __glewMultiTexSubImage1DEXT; }
# 13080 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXSUBIMAGE2DEXTPROC __glewMultiTexSubImage2DEXT; }
# 13081 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXSUBIMAGE3DEXTPROC __glewMultiTexSubImage3DEXT; }
# 13082 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDBUFFERDATAEXTPROC __glewNamedBufferDataEXT; }
# 13083 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDBUFFERSUBDATAEXTPROC __glewNamedBufferSubDataEXT; }
# 13084 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC __glewNamedCopyBufferSubDataEXT; }
# 13085 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC __glewNamedFramebufferRenderbufferEXT; }
# 13086 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC __glewNamedFramebufferTexture1DEXT; }
# 13087 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC __glewNamedFramebufferTexture2DEXT; }
# 13088 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC __glewNamedFramebufferTexture3DEXT; }
# 13089 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC __glewNamedFramebufferTextureEXT; }
# 13090 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC __glewNamedFramebufferTextureFaceEXT; }
# 13091 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC __glewNamedFramebufferTextureLayerEXT; }
# 13092 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC __glewNamedProgramLocalParameter4dEXT; }
# 13093 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC __glewNamedProgramLocalParameter4dvEXT; }
# 13094 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC __glewNamedProgramLocalParameter4fEXT; }
# 13095 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC __glewNamedProgramLocalParameter4fvEXT; }
# 13096 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC __glewNamedProgramLocalParameterI4iEXT; }
# 13097 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC __glewNamedProgramLocalParameterI4ivEXT; }
# 13098 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC __glewNamedProgramLocalParameterI4uiEXT; }
# 13099 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC __glewNamedProgramLocalParameterI4uivEXT; }
# 13100 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC __glewNamedProgramLocalParameters4fvEXT; }
# 13101 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC __glewNamedProgramLocalParametersI4ivEXT; }
# 13102 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC __glewNamedProgramLocalParametersI4uivEXT; }
# 13103 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDPROGRAMSTRINGEXTPROC __glewNamedProgramStringEXT; }
# 13104 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC __glewNamedRenderbufferStorageEXT; }
# 13105 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC __glewNamedRenderbufferStorageMultisampleCoverageEXT; }
# 13106 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewNamedRenderbufferStorageMultisampleEXT; }
# 13107 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1FEXTPROC __glewProgramUniform1fEXT; }
# 13108 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1FVEXTPROC __glewProgramUniform1fvEXT; }
# 13109 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1IEXTPROC __glewProgramUniform1iEXT; }
# 13110 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1IVEXTPROC __glewProgramUniform1ivEXT; }
# 13111 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1UIEXTPROC __glewProgramUniform1uiEXT; }
# 13112 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1UIVEXTPROC __glewProgramUniform1uivEXT; }
# 13113 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2FEXTPROC __glewProgramUniform2fEXT; }
# 13114 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2FVEXTPROC __glewProgramUniform2fvEXT; }
# 13115 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2IEXTPROC __glewProgramUniform2iEXT; }
# 13116 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2IVEXTPROC __glewProgramUniform2ivEXT; }
# 13117 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2UIEXTPROC __glewProgramUniform2uiEXT; }
# 13118 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2UIVEXTPROC __glewProgramUniform2uivEXT; }
# 13119 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3FEXTPROC __glewProgramUniform3fEXT; }
# 13120 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3FVEXTPROC __glewProgramUniform3fvEXT; }
# 13121 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3IEXTPROC __glewProgramUniform3iEXT; }
# 13122 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3IVEXTPROC __glewProgramUniform3ivEXT; }
# 13123 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3UIEXTPROC __glewProgramUniform3uiEXT; }
# 13124 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3UIVEXTPROC __glewProgramUniform3uivEXT; }
# 13125 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4FEXTPROC __glewProgramUniform4fEXT; }
# 13126 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4FVEXTPROC __glewProgramUniform4fvEXT; }
# 13127 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4IEXTPROC __glewProgramUniform4iEXT; }
# 13128 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4IVEXTPROC __glewProgramUniform4ivEXT; }
# 13129 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4UIEXTPROC __glewProgramUniform4uiEXT; }
# 13130 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4UIVEXTPROC __glewProgramUniform4uivEXT; }
# 13131 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC __glewProgramUniformMatrix2fvEXT; }
# 13132 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC __glewProgramUniformMatrix2x3fvEXT; }
# 13133 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC __glewProgramUniformMatrix2x4fvEXT; }
# 13134 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC __glewProgramUniformMatrix3fvEXT; }
# 13135 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC __glewProgramUniformMatrix3x2fvEXT; }
# 13136 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC __glewProgramUniformMatrix3x4fvEXT; }
# 13137 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC __glewProgramUniformMatrix4fvEXT; }
# 13138 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC __glewProgramUniformMatrix4x2fvEXT; }
# 13139 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC __glewProgramUniformMatrix4x3fvEXT; }
# 13140 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC __glewPushClientAttribDefaultEXT; }
# 13141 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREBUFFEREXTPROC __glewTextureBufferEXT; }
# 13142 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE1DEXTPROC __glewTextureImage1DEXT; }
# 13143 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE2DEXTPROC __glewTextureImage2DEXT; }
# 13144 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE3DEXTPROC __glewTextureImage3DEXT; }
# 13145 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERIIVEXTPROC __glewTextureParameterIivEXT; }
# 13146 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERIUIVEXTPROC __glewTextureParameterIuivEXT; }
# 13147 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERFEXTPROC __glewTextureParameterfEXT; }
# 13148 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERFVEXTPROC __glewTextureParameterfvEXT; }
# 13149 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERIEXTPROC __glewTextureParameteriEXT; }
# 13150 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREPARAMETERIVEXTPROC __glewTextureParameterivEXT; }
# 13151 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURERENDERBUFFEREXTPROC __glewTextureRenderbufferEXT; }
# 13152 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURESUBIMAGE1DEXTPROC __glewTextureSubImage1DEXT; }
# 13153 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURESUBIMAGE2DEXTPROC __glewTextureSubImage2DEXT; }
# 13154 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURESUBIMAGE3DEXTPROC __glewTextureSubImage3DEXT; }
# 13155 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNMAPNAMEDBUFFEREXTPROC __glewUnmapNamedBufferEXT; }
# 13156 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYCOLOROFFSETEXTPROC __glewVertexArrayColorOffsetEXT; }
# 13157 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC __glewVertexArrayEdgeFlagOffsetEXT; }
# 13158 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC __glewVertexArrayFogCoordOffsetEXT; }
# 13159 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYINDEXOFFSETEXTPROC __glewVertexArrayIndexOffsetEXT; }
# 13160 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC __glewVertexArrayMultiTexCoordOffsetEXT; }
# 13161 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYNORMALOFFSETEXTPROC __glewVertexArrayNormalOffsetEXT; }
# 13162 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC __glewVertexArraySecondaryColorOffsetEXT; }
# 13163 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC __glewVertexArrayTexCoordOffsetEXT; }
# 13164 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC __glewVertexArrayVertexAttribIOffsetEXT; }
# 13165 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC __glewVertexArrayVertexAttribOffsetEXT; }
# 13166 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC __glewVertexArrayVertexOffsetEXT; }
# 13168 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORMASKINDEXEDEXTPROC __glewColorMaskIndexedEXT; }
# 13169 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEINDEXEDEXTPROC __glewDisableIndexedEXT; }
# 13170 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEINDEXEDEXTPROC __glewEnableIndexedEXT; }
# 13171 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBOOLEANINDEXEDVEXTPROC __glewGetBooleanIndexedvEXT; }
# 13172 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGERINDEXEDVEXTPROC __glewGetIntegerIndexedvEXT; }
# 13173 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISENABLEDINDEXEDEXTPROC __glewIsEnabledIndexedEXT; }
# 13175 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWARRAYSINSTANCEDEXTPROC __glewDrawArraysInstancedEXT; }
# 13176 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC __glewDrawElementsInstancedEXT; }
# 13178 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWRANGEELEMENTSEXTPROC __glewDrawRangeElementsEXT; }
# 13180 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDPOINTEREXTPROC __glewFogCoordPointerEXT; }
# 13181 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDDEXTPROC __glewFogCoorddEXT; }
# 13182 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDDVEXTPROC __glewFogCoorddvEXT; }
# 13183 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDFEXTPROC __glewFogCoordfEXT; }
# 13184 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDFVEXTPROC __glewFogCoordfvEXT; }
# 13186 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTCOLORMATERIALEXTPROC __glewFragmentColorMaterialEXT; }
# 13187 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELFEXTPROC __glewFragmentLightModelfEXT; }
# 13188 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELFVEXTPROC __glewFragmentLightModelfvEXT; }
# 13189 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELIEXTPROC __glewFragmentLightModeliEXT; }
# 13190 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELIVEXTPROC __glewFragmentLightModelivEXT; }
# 13191 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTFEXTPROC __glewFragmentLightfEXT; }
# 13192 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTFVEXTPROC __glewFragmentLightfvEXT; }
# 13193 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTIEXTPROC __glewFragmentLightiEXT; }
# 13194 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTIVEXTPROC __glewFragmentLightivEXT; }
# 13195 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALFEXTPROC __glewFragmentMaterialfEXT; }
# 13196 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALFVEXTPROC __glewFragmentMaterialfvEXT; }
# 13197 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALIEXTPROC __glewFragmentMaterialiEXT; }
# 13198 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALIVEXTPROC __glewFragmentMaterialivEXT; }
# 13199 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTLIGHTFVEXTPROC __glewGetFragmentLightfvEXT; }
# 13200 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTLIGHTIVEXTPROC __glewGetFragmentLightivEXT; }
# 13201 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTMATERIALFVEXTPROC __glewGetFragmentMaterialfvEXT; }
# 13202 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTMATERIALIVEXTPROC __glewGetFragmentMaterialivEXT; }
# 13203 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLIGHTENVIEXTPROC __glewLightEnviEXT; }
# 13205 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBLITFRAMEBUFFEREXTPROC __glewBlitFramebufferEXT; }
# 13207 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewRenderbufferStorageMultisampleEXT; }
# 13209 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAMEBUFFEREXTPROC __glewBindFramebufferEXT; }
# 13210 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDRENDERBUFFEREXTPROC __glewBindRenderbufferEXT; }
# 13211 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC __glewCheckFramebufferStatusEXT; }
# 13212 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEFRAMEBUFFERSEXTPROC __glewDeleteFramebuffersEXT; }
# 13213 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETERENDERBUFFERSEXTPROC __glewDeleteRenderbuffersEXT; }
# 13214 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC __glewFramebufferRenderbufferEXT; }
# 13215 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC __glewFramebufferTexture1DEXT; }
# 13216 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC __glewFramebufferTexture2DEXT; }
# 13217 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC __glewFramebufferTexture3DEXT; }
# 13218 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENFRAMEBUFFERSEXTPROC __glewGenFramebuffersEXT; }
# 13219 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENRENDERBUFFERSEXTPROC __glewGenRenderbuffersEXT; }
# 13220 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENERATEMIPMAPEXTPROC __glewGenerateMipmapEXT; }
# 13221 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetFramebufferAttachmentParameterivEXT; }
# 13222 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC __glewGetRenderbufferParameterivEXT; }
# 13223 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISFRAMEBUFFEREXTPROC __glewIsFramebufferEXT; }
# 13224 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISRENDERBUFFEREXTPROC __glewIsRenderbufferEXT; }
# 13225 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRENDERBUFFERSTORAGEEXTPROC __glewRenderbufferStorageEXT; }
# 13227 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTUREEXTPROC __glewFramebufferTextureEXT; }
# 13228 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC __glewFramebufferTextureFaceEXT; }
# 13229 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC __glewFramebufferTextureLayerEXT; }
# 13230 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETERIEXTPROC __glewProgramParameteriEXT; }
# 13232 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERS4FVEXTPROC __glewProgramEnvParameters4fvEXT; }
# 13233 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC __glewProgramLocalParameters4fvEXT; }
# 13235 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDFRAGDATALOCATIONEXTPROC __glewBindFragDataLocationEXT; }
# 13236 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGDATALOCATIONEXTPROC __glewGetFragDataLocationEXT; }
# 13237 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMUIVEXTPROC __glewGetUniformuivEXT; }
# 13238 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIIVEXTPROC __glewGetVertexAttribIivEXT; }
# 13239 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIUIVEXTPROC __glewGetVertexAttribIuivEXT; }
# 13240 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UIEXTPROC __glewUniform1uiEXT; }
# 13241 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UIVEXTPROC __glewUniform1uivEXT; }
# 13242 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UIEXTPROC __glewUniform2uiEXT; }
# 13243 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UIVEXTPROC __glewUniform2uivEXT; }
# 13244 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UIEXTPROC __glewUniform3uiEXT; }
# 13245 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UIVEXTPROC __glewUniform3uivEXT; }
# 13246 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UIEXTPROC __glewUniform4uiEXT; }
# 13247 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UIVEXTPROC __glewUniform4uivEXT; }
# 13248 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1IEXTPROC __glewVertexAttribI1iEXT; }
# 13249 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1IVEXTPROC __glewVertexAttribI1ivEXT; }
# 13250 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1UIEXTPROC __glewVertexAttribI1uiEXT; }
# 13251 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI1UIVEXTPROC __glewVertexAttribI1uivEXT; }
# 13252 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2IEXTPROC __glewVertexAttribI2iEXT; }
# 13253 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2IVEXTPROC __glewVertexAttribI2ivEXT; }
# 13254 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2UIEXTPROC __glewVertexAttribI2uiEXT; }
# 13255 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI2UIVEXTPROC __glewVertexAttribI2uivEXT; }
# 13256 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3IEXTPROC __glewVertexAttribI3iEXT; }
# 13257 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3IVEXTPROC __glewVertexAttribI3ivEXT; }
# 13258 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3UIEXTPROC __glewVertexAttribI3uiEXT; }
# 13259 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI3UIVEXTPROC __glewVertexAttribI3uivEXT; }
# 13260 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4BVEXTPROC __glewVertexAttribI4bvEXT; }
# 13261 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4IEXTPROC __glewVertexAttribI4iEXT; }
# 13262 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4IVEXTPROC __glewVertexAttribI4ivEXT; }
# 13263 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4SVEXTPROC __glewVertexAttribI4svEXT; }
# 13264 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UBVEXTPROC __glewVertexAttribI4ubvEXT; }
# 13265 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UIEXTPROC __glewVertexAttribI4uiEXT; }
# 13266 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4UIVEXTPROC __glewVertexAttribI4uivEXT; }
# 13267 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBI4USVEXTPROC __glewVertexAttribI4usvEXT; }
# 13268 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBIPOINTEREXTPROC __glewVertexAttribIPointerEXT; }
# 13270 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMEXTPROC __glewGetHistogramEXT; }
# 13271 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT; }
# 13272 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT; }
# 13273 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT; }
# 13274 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT; }
# 13275 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT; }
# 13276 "./sdk/GL/glew.h"
extern "C" { extern PFNGLHISTOGRAMEXTPROC __glewHistogramEXT; }
# 13277 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMINMAXEXTPROC __glewMinmaxEXT; }
# 13278 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT; }
# 13279 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT; }
# 13281 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT; }
# 13283 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINDEXMATERIALEXTPROC __glewIndexMaterialEXT; }
# 13285 "./sdk/GL/glew.h"
extern "C" { extern PFNGLAPPLYTEXTUREEXTPROC __glewApplyTextureEXT; }
# 13286 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURELIGHTEXTPROC __glewTextureLightEXT; }
# 13287 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREMATERIALEXTPROC __glewTextureMaterialEXT; }
# 13289 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWARRAYSEXTPROC __glewMultiDrawArraysEXT; }
# 13290 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIDRAWELEMENTSEXTPROC __glewMultiDrawElementsEXT; }
# 13292 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEMASKEXTPROC __glewSampleMaskEXT; }
# 13293 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEPATTERNEXTPROC __glewSamplePatternEXT; }
# 13295 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEEXTPROC __glewColorTableEXT; }
# 13296 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEEXTPROC __glewGetColorTableEXT; }
# 13297 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERFVEXTPROC __glewGetColorTableParameterfvEXT; }
# 13298 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERIVEXTPROC __glewGetColorTableParameterivEXT; }
# 13300 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC __glewGetPixelTransformParameterfvEXT; }
# 13301 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC __glewGetPixelTransformParameterivEXT; }
# 13302 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELTRANSFORMPARAMETERFEXTPROC __glewPixelTransformParameterfEXT; }
# 13303 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC __glewPixelTransformParameterfvEXT; }
# 13304 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELTRANSFORMPARAMETERIEXTPROC __glewPixelTransformParameteriEXT; }
# 13305 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC __glewPixelTransformParameterivEXT; }
# 13307 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFEXTPROC __glewPointParameterfEXT; }
# 13308 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERFVEXTPROC __glewPointParameterfvEXT; }
# 13310 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOLYGONOFFSETEXTPROC __glewPolygonOffsetEXT; }
# 13312 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROVOKINGVERTEXEXTPROC __glewProvokingVertexEXT; }
# 13314 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINSCENEEXTPROC __glewBeginSceneEXT; }
# 13315 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDSCENEEXTPROC __glewEndSceneEXT; }
# 13317 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3BEXTPROC __glewSecondaryColor3bEXT; }
# 13318 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3BVEXTPROC __glewSecondaryColor3bvEXT; }
# 13319 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3DEXTPROC __glewSecondaryColor3dEXT; }
# 13320 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3DVEXTPROC __glewSecondaryColor3dvEXT; }
# 13321 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3FEXTPROC __glewSecondaryColor3fEXT; }
# 13322 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3FVEXTPROC __glewSecondaryColor3fvEXT; }
# 13323 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3IEXTPROC __glewSecondaryColor3iEXT; }
# 13324 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3IVEXTPROC __glewSecondaryColor3ivEXT; }
# 13325 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3SEXTPROC __glewSecondaryColor3sEXT; }
# 13326 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3SVEXTPROC __glewSecondaryColor3svEXT; }
# 13327 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UBEXTPROC __glewSecondaryColor3ubEXT; }
# 13328 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UBVEXTPROC __glewSecondaryColor3ubvEXT; }
# 13329 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UIEXTPROC __glewSecondaryColor3uiEXT; }
# 13330 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3UIVEXTPROC __glewSecondaryColor3uivEXT; }
# 13331 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3USEXTPROC __glewSecondaryColor3usEXT; }
# 13332 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3USVEXTPROC __glewSecondaryColor3usvEXT; }
# 13333 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORPOINTEREXTPROC __glewSecondaryColorPointerEXT; }
# 13335 "./sdk/GL/glew.h"
extern "C" { extern PFNGLACTIVEPROGRAMEXTPROC __glewActiveProgramEXT; }
# 13336 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCREATESHADERPROGRAMEXTPROC __glewCreateShaderProgramEXT; }
# 13337 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUSESHADERPROGRAMEXTPROC __glewUseShaderProgramEXT; }
# 13339 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDIMAGETEXTUREEXTPROC __glewBindImageTextureEXT; }
# 13340 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMEMORYBARRIEREXTPROC __glewMemoryBarrierEXT; }
# 13342 "./sdk/GL/glew.h"
extern "C" { extern PFNGLACTIVESTENCILFACEEXTPROC __glewActiveStencilFaceEXT; }
# 13344 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSUBIMAGE1DEXTPROC __glewTexSubImage1DEXT; }
# 13345 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSUBIMAGE2DEXTPROC __glewTexSubImage2DEXT; }
# 13346 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSUBIMAGE3DEXTPROC __glewTexSubImage3DEXT; }
# 13348 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE3DEXTPROC __glewTexImage3DEXT; }
# 13350 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXBUFFEREXTPROC __glewTexBufferEXT; }
# 13352 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARCOLORIIEXTPROC __glewClearColorIiEXT; }
# 13353 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARCOLORIUIEXTPROC __glewClearColorIuiEXT; }
# 13354 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXPARAMETERIIVEXTPROC __glewGetTexParameterIivEXT; }
# 13355 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXPARAMETERIUIVEXTPROC __glewGetTexParameterIuivEXT; }
# 13356 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXPARAMETERIIVEXTPROC __glewTexParameterIivEXT; }
# 13357 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXPARAMETERIUIVEXTPROC __glewTexParameterIuivEXT; }
# 13359 "./sdk/GL/glew.h"
extern "C" { extern PFNGLARETEXTURESRESIDENTEXTPROC __glewAreTexturesResidentEXT; }
# 13360 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDTEXTUREEXTPROC __glewBindTextureEXT; }
# 13361 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETETEXTURESEXTPROC __glewDeleteTexturesEXT; }
# 13362 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENTEXTURESEXTPROC __glewGenTexturesEXT; }
# 13363 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISTEXTUREEXTPROC __glewIsTextureEXT; }
# 13364 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRIORITIZETEXTURESEXTPROC __glewPrioritizeTexturesEXT; }
# 13366 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTURENORMALEXTPROC __glewTextureNormalEXT; }
# 13368 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTI64VEXTPROC __glewGetQueryObjecti64vEXT; }
# 13369 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETQUERYOBJECTUI64VEXTPROC __glewGetQueryObjectui64vEXT; }
# 13371 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINTRANSFORMFEEDBACKEXTPROC __glewBeginTransformFeedbackEXT; }
# 13372 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERBASEEXTPROC __glewBindBufferBaseEXT; }
# 13373 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFEROFFSETEXTPROC __glewBindBufferOffsetEXT; }
# 13374 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERRANGEEXTPROC __glewBindBufferRangeEXT; }
# 13375 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDTRANSFORMFEEDBACKEXTPROC __glewEndTransformFeedbackEXT; }
# 13376 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC __glewGetTransformFeedbackVaryingEXT; }
# 13377 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC __glewTransformFeedbackVaryingsEXT; }
# 13379 "./sdk/GL/glew.h"
extern "C" { extern PFNGLARRAYELEMENTEXTPROC __glewArrayElementEXT; }
# 13380 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORPOINTEREXTPROC __glewColorPointerEXT; }
# 13381 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWARRAYSEXTPROC __glewDrawArraysEXT; }
# 13382 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEDGEFLAGPOINTEREXTPROC __glewEdgeFlagPointerEXT; }
# 13383 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPOINTERVEXTPROC __glewGetPointervEXT; }
# 13384 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINDEXPOINTEREXTPROC __glewIndexPointerEXT; }
# 13385 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALPOINTEREXTPROC __glewNormalPointerEXT; }
# 13386 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDPOINTEREXTPROC __glewTexCoordPointerEXT; }
# 13387 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXPOINTEREXTPROC __glewVertexPointerEXT; }
# 13389 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBLDVEXTPROC __glewGetVertexAttribLdvEXT; }
# 13390 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC __glewVertexArrayVertexAttribLOffsetEXT; }
# 13391 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1DEXTPROC __glewVertexAttribL1dEXT; }
# 13392 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1DVEXTPROC __glewVertexAttribL1dvEXT; }
# 13393 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2DEXTPROC __glewVertexAttribL2dEXT; }
# 13394 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2DVEXTPROC __glewVertexAttribL2dvEXT; }
# 13395 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3DEXTPROC __glewVertexAttribL3dEXT; }
# 13396 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3DVEXTPROC __glewVertexAttribL3dvEXT; }
# 13397 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4DEXTPROC __glewVertexAttribL4dEXT; }
# 13398 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4DVEXTPROC __glewVertexAttribL4dvEXT; }
# 13399 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBLPOINTEREXTPROC __glewVertexAttribLPointerEXT; }
# 13401 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINVERTEXSHADEREXTPROC __glewBeginVertexShaderEXT; }
# 13402 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDLIGHTPARAMETEREXTPROC __glewBindLightParameterEXT; }
# 13403 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDMATERIALPARAMETEREXTPROC __glewBindMaterialParameterEXT; }
# 13404 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDPARAMETEREXTPROC __glewBindParameterEXT; }
# 13405 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDTEXGENPARAMETEREXTPROC __glewBindTexGenParameterEXT; }
# 13406 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDTEXTUREUNITPARAMETEREXTPROC __glewBindTextureUnitParameterEXT; }
# 13407 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDVERTEXSHADEREXTPROC __glewBindVertexShaderEXT; }
# 13408 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEVERTEXSHADEREXTPROC __glewDeleteVertexShaderEXT; }
# 13409 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC __glewDisableVariantClientStateEXT; }
# 13410 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENABLEVARIANTCLIENTSTATEEXTPROC __glewEnableVariantClientStateEXT; }
# 13411 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDVERTEXSHADEREXTPROC __glewEndVertexShaderEXT; }
# 13412 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEXTRACTCOMPONENTEXTPROC __glewExtractComponentEXT; }
# 13413 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENSYMBOLSEXTPROC __glewGenSymbolsEXT; }
# 13414 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENVERTEXSHADERSEXTPROC __glewGenVertexShadersEXT; }
# 13415 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINVARIANTBOOLEANVEXTPROC __glewGetInvariantBooleanvEXT; }
# 13416 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINVARIANTFLOATVEXTPROC __glewGetInvariantFloatvEXT; }
# 13417 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINVARIANTINTEGERVEXTPROC __glewGetInvariantIntegervEXT; }
# 13418 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC __glewGetLocalConstantBooleanvEXT; }
# 13419 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETLOCALCONSTANTFLOATVEXTPROC __glewGetLocalConstantFloatvEXT; }
# 13420 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETLOCALCONSTANTINTEGERVEXTPROC __glewGetLocalConstantIntegervEXT; }
# 13421 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTBOOLEANVEXTPROC __glewGetVariantBooleanvEXT; }
# 13422 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTFLOATVEXTPROC __glewGetVariantFloatvEXT; }
# 13423 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTINTEGERVEXTPROC __glewGetVariantIntegervEXT; }
# 13424 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARIANTPOINTERVEXTPROC __glewGetVariantPointervEXT; }
# 13425 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINSERTCOMPONENTEXTPROC __glewInsertComponentEXT; }
# 13426 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISVARIANTENABLEDEXTPROC __glewIsVariantEnabledEXT; }
# 13427 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSETINVARIANTEXTPROC __glewSetInvariantEXT; }
# 13428 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSETLOCALCONSTANTEXTPROC __glewSetLocalConstantEXT; }
# 13429 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHADEROP1EXTPROC __glewShaderOp1EXT; }
# 13430 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHADEROP2EXTPROC __glewShaderOp2EXT; }
# 13431 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHADEROP3EXTPROC __glewShaderOp3EXT; }
# 13432 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSWIZZLEEXTPROC __glewSwizzleEXT; }
# 13433 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTPOINTEREXTPROC __glewVariantPointerEXT; }
# 13434 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTBVEXTPROC __glewVariantbvEXT; }
# 13435 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTDVEXTPROC __glewVariantdvEXT; }
# 13436 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTFVEXTPROC __glewVariantfvEXT; }
# 13437 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTIVEXTPROC __glewVariantivEXT; }
# 13438 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTSVEXTPROC __glewVariantsvEXT; }
# 13439 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTUBVEXTPROC __glewVariantubvEXT; }
# 13440 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTUIVEXTPROC __glewVariantuivEXT; }
# 13441 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVARIANTUSVEXTPROC __glewVariantusvEXT; }
# 13442 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWRITEMASKEXTPROC __glewWriteMaskEXT; }
# 13444 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXWEIGHTPOINTEREXTPROC __glewVertexWeightPointerEXT; }
# 13445 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXWEIGHTFEXTPROC __glewVertexWeightfEXT; }
# 13446 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXWEIGHTFVEXTPROC __glewVertexWeightfvEXT; }
# 13448 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY; }
# 13450 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY; }
# 13452 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC __glewGetImageTransformParameterfvHP; }
# 13453 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC __glewGetImageTransformParameterivHP; }
# 13454 "./sdk/GL/glew.h"
extern "C" { extern PFNGLIMAGETRANSFORMPARAMETERFHPPROC __glewImageTransformParameterfHP; }
# 13455 "./sdk/GL/glew.h"
extern "C" { extern PFNGLIMAGETRANSFORMPARAMETERFVHPPROC __glewImageTransformParameterfvHP; }
# 13456 "./sdk/GL/glew.h"
extern "C" { extern PFNGLIMAGETRANSFORMPARAMETERIHPPROC __glewImageTransformParameteriHP; }
# 13457 "./sdk/GL/glew.h"
extern "C" { extern PFNGLIMAGETRANSFORMPARAMETERIVHPPROC __glewImageTransformParameterivHP; }
# 13459 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIMODEDRAWARRAYSIBMPROC __glewMultiModeDrawArraysIBM; }
# 13460 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTIMODEDRAWELEMENTSIBMPROC __glewMultiModeDrawElementsIBM; }
# 13462 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORPOINTERLISTIBMPROC __glewColorPointerListIBM; }
# 13463 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEDGEFLAGPOINTERLISTIBMPROC __glewEdgeFlagPointerListIBM; }
# 13464 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDPOINTERLISTIBMPROC __glewFogCoordPointerListIBM; }
# 13465 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINDEXPOINTERLISTIBMPROC __glewIndexPointerListIBM; }
# 13466 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALPOINTERLISTIBMPROC __glewNormalPointerListIBM; }
# 13467 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORPOINTERLISTIBMPROC __glewSecondaryColorPointerListIBM; }
# 13468 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDPOINTERLISTIBMPROC __glewTexCoordPointerListIBM; }
# 13469 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXPOINTERLISTIBMPROC __glewVertexPointerListIBM; }
# 13471 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORPOINTERVINTELPROC __glewColorPointervINTEL; }
# 13472 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALPOINTERVINTELPROC __glewNormalPointervINTEL; }
# 13473 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDPOINTERVINTELPROC __glewTexCoordPointervINTEL; }
# 13474 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXPOINTERVINTELPROC __glewVertexPointervINTEL; }
# 13476 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSCISSORFUNCINTELPROC __glewTexScissorFuncINTEL; }
# 13477 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSCISSORINTELPROC __glewTexScissorINTEL; }
# 13479 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERREGIONENABLEDEXTPROC __glewBufferRegionEnabledEXT; }
# 13480 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEBUFFERREGIONEXTPROC __glewDeleteBufferRegionEXT; }
# 13481 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWBUFFERREGIONEXTPROC __glewDrawBufferRegionEXT; }
# 13482 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNEWBUFFERREGIONEXTPROC __glewNewBufferRegionEXT; }
# 13483 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREADBUFFERREGIONEXTPROC __glewReadBufferRegionEXT; }
# 13485 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESIZEBUFFERSMESAPROC __glewResizeBuffersMESA; }
# 13487 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DMESAPROC __glewWindowPos2dMESA; }
# 13488 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2DVMESAPROC __glewWindowPos2dvMESA; }
# 13489 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FMESAPROC __glewWindowPos2fMESA; }
# 13490 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2FVMESAPROC __glewWindowPos2fvMESA; }
# 13491 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IMESAPROC __glewWindowPos2iMESA; }
# 13492 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2IVMESAPROC __glewWindowPos2ivMESA; }
# 13493 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SMESAPROC __glewWindowPos2sMESA; }
# 13494 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS2SVMESAPROC __glewWindowPos2svMESA; }
# 13495 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DMESAPROC __glewWindowPos3dMESA; }
# 13496 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3DVMESAPROC __glewWindowPos3dvMESA; }
# 13497 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FMESAPROC __glewWindowPos3fMESA; }
# 13498 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3FVMESAPROC __glewWindowPos3fvMESA; }
# 13499 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IMESAPROC __glewWindowPos3iMESA; }
# 13500 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3IVMESAPROC __glewWindowPos3ivMESA; }
# 13501 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SMESAPROC __glewWindowPos3sMESA; }
# 13502 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS3SVMESAPROC __glewWindowPos3svMESA; }
# 13503 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4DMESAPROC __glewWindowPos4dMESA; }
# 13504 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4DVMESAPROC __glewWindowPos4dvMESA; }
# 13505 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4FMESAPROC __glewWindowPos4fMESA; }
# 13506 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4FVMESAPROC __glewWindowPos4fvMESA; }
# 13507 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4IMESAPROC __glewWindowPos4iMESA; }
# 13508 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4IVMESAPROC __glewWindowPos4ivMESA; }
# 13509 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4SMESAPROC __glewWindowPos4sMESA; }
# 13510 "./sdk/GL/glew.h"
extern "C" { extern PFNGLWINDOWPOS4SVMESAPROC __glewWindowPos4svMESA; }
# 13512 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINCONDITIONALRENDERNVPROC __glewBeginConditionalRenderNV; }
# 13513 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDCONDITIONALRENDERNVPROC __glewEndConditionalRenderNV; }
# 13515 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYIMAGESUBDATANVPROC __glewCopyImageSubDataNV; }
# 13517 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARDEPTHDNVPROC __glewClearDepthdNV; }
# 13518 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDEPTHBOUNDSDNVPROC __glewDepthBoundsdNV; }
# 13519 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDEPTHRANGEDNVPROC __glewDepthRangedNV; }
# 13521 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEVALMAPSNVPROC __glewEvalMapsNV; }
# 13522 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMAPATTRIBPARAMETERFVNVPROC __glewGetMapAttribParameterfvNV; }
# 13523 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMAPATTRIBPARAMETERIVNVPROC __glewGetMapAttribParameterivNV; }
# 13524 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMAPCONTROLPOINTSNVPROC __glewGetMapControlPointsNV; }
# 13525 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMAPPARAMETERFVNVPROC __glewGetMapParameterfvNV; }
# 13526 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMAPPARAMETERIVNVPROC __glewGetMapParameterivNV; }
# 13527 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPCONTROLPOINTSNVPROC __glewMapControlPointsNV; }
# 13528 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPPARAMETERFVNVPROC __glewMapParameterfvNV; }
# 13529 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAPPARAMETERIVNVPROC __glewMapParameterivNV; }
# 13531 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETMULTISAMPLEFVNVPROC __glewGetMultisamplefvNV; }
# 13532 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEMASKINDEXEDNVPROC __glewSampleMaskIndexedNV; }
# 13533 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXRENDERBUFFERNVPROC __glewTexRenderbufferNV; }
# 13535 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEFENCESNVPROC __glewDeleteFencesNV; }
# 13536 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINISHFENCENVPROC __glewFinishFenceNV; }
# 13537 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENFENCESNVPROC __glewGenFencesNV; }
# 13538 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFENCEIVNVPROC __glewGetFenceivNV; }
# 13539 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISFENCENVPROC __glewIsFenceNV; }
# 13540 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSETFENCENVPROC __glewSetFenceNV; }
# 13541 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTESTFENCENVPROC __glewTestFenceNV; }
# 13543 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC __glewGetProgramNamedParameterdvNV; }
# 13544 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC __glewGetProgramNamedParameterfvNV; }
# 13545 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMNAMEDPARAMETER4DNVPROC __glewProgramNamedParameter4dNV; }
# 13546 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC __glewProgramNamedParameter4dvNV; }
# 13547 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMNAMEDPARAMETER4FNVPROC __glewProgramNamedParameter4fNV; }
# 13548 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC __glewProgramNamedParameter4fvNV; }
# 13550 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC __glewRenderbufferStorageMultisampleCoverageNV; }
# 13552 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMVERTEXLIMITNVPROC __glewProgramVertexLimitNV; }
# 13554 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERI4INVPROC __glewProgramEnvParameterI4iNV; }
# 13555 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERI4IVNVPROC __glewProgramEnvParameterI4ivNV; }
# 13556 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERI4UINVPROC __glewProgramEnvParameterI4uiNV; }
# 13557 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERI4UIVNVPROC __glewProgramEnvParameterI4uivNV; }
# 13558 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERSI4IVNVPROC __glewProgramEnvParametersI4ivNV; }
# 13559 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC __glewProgramEnvParametersI4uivNV; }
# 13560 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERI4INVPROC __glewProgramLocalParameterI4iNV; }
# 13561 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC __glewProgramLocalParameterI4ivNV; }
# 13562 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERI4UINVPROC __glewProgramLocalParameterI4uiNV; }
# 13563 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC __glewProgramLocalParameterI4uivNV; }
# 13564 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC __glewProgramLocalParametersI4ivNV; }
# 13565 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC __glewProgramLocalParametersI4uivNV; }
# 13567 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMI64VNVPROC __glewGetUniformi64vNV; }
# 13568 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETUNIFORMUI64VNVPROC __glewGetUniformui64vNV; }
# 13569 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1I64NVPROC __glewProgramUniform1i64NV; }
# 13570 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1I64VNVPROC __glewProgramUniform1i64vNV; }
# 13571 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1UI64NVPROC __glewProgramUniform1ui64NV; }
# 13572 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM1UI64VNVPROC __glewProgramUniform1ui64vNV; }
# 13573 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2I64NVPROC __glewProgramUniform2i64NV; }
# 13574 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2I64VNVPROC __glewProgramUniform2i64vNV; }
# 13575 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2UI64NVPROC __glewProgramUniform2ui64NV; }
# 13576 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM2UI64VNVPROC __glewProgramUniform2ui64vNV; }
# 13577 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3I64NVPROC __glewProgramUniform3i64NV; }
# 13578 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3I64VNVPROC __glewProgramUniform3i64vNV; }
# 13579 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3UI64NVPROC __glewProgramUniform3ui64NV; }
# 13580 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM3UI64VNVPROC __glewProgramUniform3ui64vNV; }
# 13581 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4I64NVPROC __glewProgramUniform4i64NV; }
# 13582 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4I64VNVPROC __glewProgramUniform4i64vNV; }
# 13583 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4UI64NVPROC __glewProgramUniform4ui64NV; }
# 13584 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORM4UI64VNVPROC __glewProgramUniform4ui64vNV; }
# 13585 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1I64NVPROC __glewUniform1i64NV; }
# 13586 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1I64VNVPROC __glewUniform1i64vNV; }
# 13587 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UI64NVPROC __glewUniform1ui64NV; }
# 13588 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM1UI64VNVPROC __glewUniform1ui64vNV; }
# 13589 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2I64NVPROC __glewUniform2i64NV; }
# 13590 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2I64VNVPROC __glewUniform2i64vNV; }
# 13591 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UI64NVPROC __glewUniform2ui64NV; }
# 13592 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM2UI64VNVPROC __glewUniform2ui64vNV; }
# 13593 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3I64NVPROC __glewUniform3i64NV; }
# 13594 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3I64VNVPROC __glewUniform3i64vNV; }
# 13595 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UI64NVPROC __glewUniform3ui64NV; }
# 13596 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM3UI64VNVPROC __glewUniform3ui64vNV; }
# 13597 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4I64NVPROC __glewUniform4i64NV; }
# 13598 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4I64VNVPROC __glewUniform4i64vNV; }
# 13599 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UI64NVPROC __glewUniform4ui64NV; }
# 13600 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORM4UI64VNVPROC __glewUniform4ui64vNV; }
# 13602 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR3HNVPROC __glewColor3hNV; }
# 13603 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR3HVNVPROC __glewColor3hvNV; }
# 13604 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4HNVPROC __glewColor4hNV; }
# 13605 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4HVNVPROC __glewColor4hvNV; }
# 13606 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDHNVPROC __glewFogCoordhNV; }
# 13607 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDHVNVPROC __glewFogCoordhvNV; }
# 13608 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1HNVPROC __glewMultiTexCoord1hNV; }
# 13609 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD1HVNVPROC __glewMultiTexCoord1hvNV; }
# 13610 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2HNVPROC __glewMultiTexCoord2hNV; }
# 13611 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD2HVNVPROC __glewMultiTexCoord2hvNV; }
# 13612 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3HNVPROC __glewMultiTexCoord3hNV; }
# 13613 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD3HVNVPROC __glewMultiTexCoord3hvNV; }
# 13614 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4HNVPROC __glewMultiTexCoord4hNV; }
# 13615 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMULTITEXCOORD4HVNVPROC __glewMultiTexCoord4hvNV; }
# 13616 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMAL3HNVPROC __glewNormal3hNV; }
# 13617 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMAL3HVNVPROC __glewNormal3hvNV; }
# 13618 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3HNVPROC __glewSecondaryColor3hNV; }
# 13619 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLOR3HVNVPROC __glewSecondaryColor3hvNV; }
# 13620 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD1HNVPROC __glewTexCoord1hNV; }
# 13621 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD1HVNVPROC __glewTexCoord1hvNV; }
# 13622 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2HNVPROC __glewTexCoord2hNV; }
# 13623 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2HVNVPROC __glewTexCoord2hvNV; }
# 13624 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD3HNVPROC __glewTexCoord3hNV; }
# 13625 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD3HVNVPROC __glewTexCoord3hvNV; }
# 13626 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4HNVPROC __glewTexCoord4hNV; }
# 13627 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4HVNVPROC __glewTexCoord4hvNV; }
# 13628 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX2HNVPROC __glewVertex2hNV; }
# 13629 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX2HVNVPROC __glewVertex2hvNV; }
# 13630 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX3HNVPROC __glewVertex3hNV; }
# 13631 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX3HVNVPROC __glewVertex3hvNV; }
# 13632 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX4HNVPROC __glewVertex4hNV; }
# 13633 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEX4HVNVPROC __glewVertex4hvNV; }
# 13634 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1HNVPROC __glewVertexAttrib1hNV; }
# 13635 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1HVNVPROC __glewVertexAttrib1hvNV; }
# 13636 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2HNVPROC __glewVertexAttrib2hNV; }
# 13637 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2HVNVPROC __glewVertexAttrib2hvNV; }
# 13638 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3HNVPROC __glewVertexAttrib3hNV; }
# 13639 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3HVNVPROC __glewVertexAttrib3hvNV; }
# 13640 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4HNVPROC __glewVertexAttrib4hNV; }
# 13641 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4HVNVPROC __glewVertexAttrib4hvNV; }
# 13642 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS1HVNVPROC __glewVertexAttribs1hvNV; }
# 13643 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS2HVNVPROC __glewVertexAttribs2hvNV; }
# 13644 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS3HVNVPROC __glewVertexAttribs3hvNV; }
# 13645 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS4HVNVPROC __glewVertexAttribs4hvNV; }
# 13646 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXWEIGHTHNVPROC __glewVertexWeighthNV; }
# 13647 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXWEIGHTHVNVPROC __glewVertexWeighthvNV; }
# 13649 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINOCCLUSIONQUERYNVPROC __glewBeginOcclusionQueryNV; }
# 13650 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEOCCLUSIONQUERIESNVPROC __glewDeleteOcclusionQueriesNV; }
# 13651 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDOCCLUSIONQUERYNVPROC __glewEndOcclusionQueryNV; }
# 13652 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENOCCLUSIONQUERIESNVPROC __glewGenOcclusionQueriesNV; }
# 13653 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOCCLUSIONQUERYIVNVPROC __glewGetOcclusionQueryivNV; }
# 13654 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETOCCLUSIONQUERYUIVNVPROC __glewGetOcclusionQueryuivNV; }
# 13655 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISOCCLUSIONQUERYNVPROC __glewIsOcclusionQueryNV; }
# 13657 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC __glewProgramBufferParametersIivNV; }
# 13658 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC __glewProgramBufferParametersIuivNV; }
# 13659 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC __glewProgramBufferParametersfvNV; }
# 13661 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHPIXELDATARANGENVPROC __glewFlushPixelDataRangeNV; }
# 13662 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELDATARANGENVPROC __glewPixelDataRangeNV; }
# 13664 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERINVPROC __glewPointParameteriNV; }
# 13665 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOINTPARAMETERIVNVPROC __glewPointParameterivNV; }
# 13667 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVIDEOI64VNVPROC __glewGetVideoi64vNV; }
# 13668 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVIDEOIVNVPROC __glewGetVideoivNV; }
# 13669 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVIDEOUI64VNVPROC __glewGetVideoui64vNV; }
# 13670 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVIDEOUIVNVPROC __glewGetVideouivNV; }
# 13671 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRESENTFRAMEDUALFILLNVPROC __glewPresentFrameDualFillNV; }
# 13672 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRESENTFRAMEKEYEDNVPROC __glewPresentFrameKeyedNV; }
# 13674 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRIMITIVERESTARTINDEXNVPROC __glewPrimitiveRestartIndexNV; }
# 13675 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPRIMITIVERESTARTNVPROC __glewPrimitiveRestartNV; }
# 13677 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERINPUTNVPROC __glewCombinerInputNV; }
# 13678 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINEROUTPUTNVPROC __glewCombinerOutputNV; }
# 13679 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERPARAMETERFNVPROC __glewCombinerParameterfNV; }
# 13680 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERPARAMETERFVNVPROC __glewCombinerParameterfvNV; }
# 13681 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERPARAMETERINVPROC __glewCombinerParameteriNV; }
# 13682 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERPARAMETERIVNVPROC __glewCombinerParameterivNV; }
# 13683 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINALCOMBINERINPUTNVPROC __glewFinalCombinerInputNV; }
# 13684 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC __glewGetCombinerInputParameterfvNV; }
# 13685 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC __glewGetCombinerInputParameterivNV; }
# 13686 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC __glewGetCombinerOutputParameterfvNV; }
# 13687 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC __glewGetCombinerOutputParameterivNV; }
# 13688 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC __glewGetFinalCombinerInputParameterfvNV; }
# 13689 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC __glewGetFinalCombinerInputParameterivNV; }
# 13691 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOMBINERSTAGEPARAMETERFVNVPROC __glewCombinerStageParameterfvNV; }
# 13692 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC __glewGetCombinerStageParameterfvNV; }
# 13694 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETBUFFERPARAMETERUI64VNVPROC __glewGetBufferParameterui64vNV; }
# 13695 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGERUI64VNVPROC __glewGetIntegerui64vNV; }
# 13696 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC __glewGetNamedBufferParameterui64vNV; }
# 13697 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISBUFFERRESIDENTNVPROC __glewIsBufferResidentNV; }
# 13698 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISNAMEDBUFFERRESIDENTNVPROC __glewIsNamedBufferResidentNV; }
# 13699 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAKEBUFFERNONRESIDENTNVPROC __glewMakeBufferNonResidentNV; }
# 13700 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAKEBUFFERRESIDENTNVPROC __glewMakeBufferResidentNV; }
# 13701 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC __glewMakeNamedBufferNonResidentNV; }
# 13702 "./sdk/GL/glew.h"
extern "C" { extern PFNGLMAKENAMEDBUFFERRESIDENTNVPROC __glewMakeNamedBufferResidentNV; }
# 13703 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMUI64NVPROC __glewProgramUniformui64NV; }
# 13704 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMUNIFORMUI64VNVPROC __glewProgramUniformui64vNV; }
# 13705 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMUI64NVPROC __glewUniformui64NV; }
# 13706 "./sdk/GL/glew.h"
extern "C" { extern PFNGLUNIFORMUI64VNVPROC __glewUniformui64vNV; }
# 13708 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPATCHPARAMETERFVNVPROC __glewPatchParameterfvNV; }
# 13709 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPATCHPARAMETERINVPROC __glewPatchParameteriNV; }
# 13711 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREBARRIERNVPROC __glewTextureBarrierNV; }
# 13713 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTexImage2DMultisampleCoverageNV; }
# 13714 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTexImage3DMultisampleCoverageNV; }
# 13715 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTextureImage2DMultisampleCoverageNV; }
# 13716 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC __glewTextureImage2DMultisampleNV; }
# 13717 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTextureImage3DMultisampleCoverageNV; }
# 13718 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC __glewTextureImage3DMultisampleNV; }
# 13720 "./sdk/GL/glew.h"
extern "C" { extern PFNGLACTIVEVARYINGNVPROC __glewActiveVaryingNV; }
# 13721 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBEGINTRANSFORMFEEDBACKNVPROC __glewBeginTransformFeedbackNV; }
# 13722 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERBASENVPROC __glewBindBufferBaseNV; }
# 13723 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFEROFFSETNVPROC __glewBindBufferOffsetNV; }
# 13724 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDBUFFERRANGENVPROC __glewBindBufferRangeNV; }
# 13725 "./sdk/GL/glew.h"
extern "C" { extern PFNGLENDTRANSFORMFEEDBACKNVPROC __glewEndTransformFeedbackNV; }
# 13726 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETACTIVEVARYINGNVPROC __glewGetActiveVaryingNV; }
# 13727 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC __glewGetTransformFeedbackVaryingNV; }
# 13728 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVARYINGLOCATIONNVPROC __glewGetVaryingLocationNV; }
# 13729 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC __glewTransformFeedbackAttribsNV; }
# 13730 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC __glewTransformFeedbackVaryingsNV; }
# 13732 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDTRANSFORMFEEDBACKNVPROC __glewBindTransformFeedbackNV; }
# 13733 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC __glewDeleteTransformFeedbacksNV; }
# 13734 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC __glewDrawTransformFeedbackNV; }
# 13735 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENTRANSFORMFEEDBACKSNVPROC __glewGenTransformFeedbacksNV; }
# 13736 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISTRANSFORMFEEDBACKNVPROC __glewIsTransformFeedbackNV; }
# 13737 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC __glewPauseTransformFeedbackNV; }
# 13738 "./sdk/GL/glew.h"
extern "C" { extern PFNGLRESUMETRANSFORMFEEDBACKNVPROC __glewResumeTransformFeedbackNV; }
# 13740 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHVERTEXARRAYRANGENVPROC __glewFlushVertexArrayRangeNV; }
# 13741 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXARRAYRANGENVPROC __glewVertexArrayRangeNV; }
# 13743 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBLI64VNVPROC __glewGetVertexAttribLi64vNV; }
# 13744 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBLUI64VNVPROC __glewGetVertexAttribLui64vNV; }
# 13745 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1I64NVPROC __glewVertexAttribL1i64NV; }
# 13746 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1I64VNVPROC __glewVertexAttribL1i64vNV; }
# 13747 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1UI64NVPROC __glewVertexAttribL1ui64NV; }
# 13748 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL1UI64VNVPROC __glewVertexAttribL1ui64vNV; }
# 13749 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2I64NVPROC __glewVertexAttribL2i64NV; }
# 13750 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2I64VNVPROC __glewVertexAttribL2i64vNV; }
# 13751 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2UI64NVPROC __glewVertexAttribL2ui64NV; }
# 13752 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL2UI64VNVPROC __glewVertexAttribL2ui64vNV; }
# 13753 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3I64NVPROC __glewVertexAttribL3i64NV; }
# 13754 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3I64VNVPROC __glewVertexAttribL3i64vNV; }
# 13755 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3UI64NVPROC __glewVertexAttribL3ui64NV; }
# 13756 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL3UI64VNVPROC __glewVertexAttribL3ui64vNV; }
# 13757 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4I64NVPROC __glewVertexAttribL4i64NV; }
# 13758 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4I64VNVPROC __glewVertexAttribL4i64vNV; }
# 13759 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4UI64NVPROC __glewVertexAttribL4ui64NV; }
# 13760 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBL4UI64VNVPROC __glewVertexAttribL4ui64vNV; }
# 13761 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBLFORMATNVPROC __glewVertexAttribLFormatNV; }
# 13763 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBUFFERADDRESSRANGENVPROC __glewBufferAddressRangeNV; }
# 13764 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORFORMATNVPROC __glewColorFormatNV; }
# 13765 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEDGEFLAGFORMATNVPROC __glewEdgeFlagFormatNV; }
# 13766 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGCOORDFORMATNVPROC __glewFogCoordFormatNV; }
# 13767 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETINTEGERUI64I_VNVPROC __glewGetIntegerui64i_vNV; }
# 13768 "./sdk/GL/glew.h"
extern "C" { extern PFNGLINDEXFORMATNVPROC __glewIndexFormatNV; }
# 13769 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMALFORMATNVPROC __glewNormalFormatNV; }
# 13770 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSECONDARYCOLORFORMATNVPROC __glewSecondaryColorFormatNV; }
# 13771 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORDFORMATNVPROC __glewTexCoordFormatNV; }
# 13772 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBFORMATNVPROC __glewVertexAttribFormatNV; }
# 13773 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBIFORMATNVPROC __glewVertexAttribIFormatNV; }
# 13774 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXFORMATNVPROC __glewVertexFormatNV; }
# 13776 "./sdk/GL/glew.h"
extern "C" { extern PFNGLAREPROGRAMSRESIDENTNVPROC __glewAreProgramsResidentNV; }
# 13777 "./sdk/GL/glew.h"
extern "C" { extern PFNGLBINDPROGRAMNVPROC __glewBindProgramNV; }
# 13778 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEPROGRAMSNVPROC __glewDeleteProgramsNV; }
# 13779 "./sdk/GL/glew.h"
extern "C" { extern PFNGLEXECUTEPROGRAMNVPROC __glewExecuteProgramNV; }
# 13780 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENPROGRAMSNVPROC __glewGenProgramsNV; }
# 13781 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMPARAMETERDVNVPROC __glewGetProgramParameterdvNV; }
# 13782 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMPARAMETERFVNVPROC __glewGetProgramParameterfvNV; }
# 13783 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMSTRINGNVPROC __glewGetProgramStringNV; }
# 13784 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETPROGRAMIVNVPROC __glewGetProgramivNV; }
# 13785 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTRACKMATRIXIVNVPROC __glewGetTrackMatrixivNV; }
# 13786 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC __glewGetVertexAttribPointervNV; }
# 13787 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBDVNVPROC __glewGetVertexAttribdvNV; }
# 13788 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBFVNVPROC __glewGetVertexAttribfvNV; }
# 13789 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETVERTEXATTRIBIVNVPROC __glewGetVertexAttribivNV; }
# 13790 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISPROGRAMNVPROC __glewIsProgramNV; }
# 13791 "./sdk/GL/glew.h"
extern "C" { extern PFNGLLOADPROGRAMNVPROC __glewLoadProgramNV; }
# 13792 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETER4DNVPROC __glewProgramParameter4dNV; }
# 13793 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETER4DVNVPROC __glewProgramParameter4dvNV; }
# 13794 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETER4FNVPROC __glewProgramParameter4fNV; }
# 13795 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETER4FVNVPROC __glewProgramParameter4fvNV; }
# 13796 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETERS4DVNVPROC __glewProgramParameters4dvNV; }
# 13797 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPROGRAMPARAMETERS4FVNVPROC __glewProgramParameters4fvNV; }
# 13798 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREQUESTRESIDENTPROGRAMSNVPROC __glewRequestResidentProgramsNV; }
# 13799 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTRACKMATRIXNVPROC __glewTrackMatrixNV; }
# 13800 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DNVPROC __glewVertexAttrib1dNV; }
# 13801 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1DVNVPROC __glewVertexAttrib1dvNV; }
# 13802 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FNVPROC __glewVertexAttrib1fNV; }
# 13803 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1FVNVPROC __glewVertexAttrib1fvNV; }
# 13804 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SNVPROC __glewVertexAttrib1sNV; }
# 13805 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB1SVNVPROC __glewVertexAttrib1svNV; }
# 13806 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DNVPROC __glewVertexAttrib2dNV; }
# 13807 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2DVNVPROC __glewVertexAttrib2dvNV; }
# 13808 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FNVPROC __glewVertexAttrib2fNV; }
# 13809 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2FVNVPROC __glewVertexAttrib2fvNV; }
# 13810 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SNVPROC __glewVertexAttrib2sNV; }
# 13811 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB2SVNVPROC __glewVertexAttrib2svNV; }
# 13812 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DNVPROC __glewVertexAttrib3dNV; }
# 13813 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3DVNVPROC __glewVertexAttrib3dvNV; }
# 13814 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FNVPROC __glewVertexAttrib3fNV; }
# 13815 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3FVNVPROC __glewVertexAttrib3fvNV; }
# 13816 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SNVPROC __glewVertexAttrib3sNV; }
# 13817 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB3SVNVPROC __glewVertexAttrib3svNV; }
# 13818 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DNVPROC __glewVertexAttrib4dNV; }
# 13819 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4DVNVPROC __glewVertexAttrib4dvNV; }
# 13820 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FNVPROC __glewVertexAttrib4fNV; }
# 13821 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4FVNVPROC __glewVertexAttrib4fvNV; }
# 13822 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SNVPROC __glewVertexAttrib4sNV; }
# 13823 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4SVNVPROC __glewVertexAttrib4svNV; }
# 13824 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UBNVPROC __glewVertexAttrib4ubNV; }
# 13825 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIB4UBVNVPROC __glewVertexAttrib4ubvNV; }
# 13826 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBPOINTERNVPROC __glewVertexAttribPointerNV; }
# 13827 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS1DVNVPROC __glewVertexAttribs1dvNV; }
# 13828 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS1FVNVPROC __glewVertexAttribs1fvNV; }
# 13829 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS1SVNVPROC __glewVertexAttribs1svNV; }
# 13830 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS2DVNVPROC __glewVertexAttribs2dvNV; }
# 13831 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS2FVNVPROC __glewVertexAttribs2fvNV; }
# 13832 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS2SVNVPROC __glewVertexAttribs2svNV; }
# 13833 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS3DVNVPROC __glewVertexAttribs3dvNV; }
# 13834 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS3FVNVPROC __glewVertexAttribs3fvNV; }
# 13835 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS3SVNVPROC __glewVertexAttribs3svNV; }
# 13836 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS4DVNVPROC __glewVertexAttribs4dvNV; }
# 13837 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS4FVNVPROC __glewVertexAttribs4fvNV; }
# 13838 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS4SVNVPROC __glewVertexAttribs4svNV; }
# 13839 "./sdk/GL/glew.h"
extern "C" { extern PFNGLVERTEXATTRIBS4UBVNVPROC __glewVertexAttribs4ubvNV; }
# 13841 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLEARDEPTHFOESPROC __glewClearDepthfOES; }
# 13842 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCLIPPLANEFOESPROC __glewClipPlanefOES; }
# 13843 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDEPTHRANGEFOESPROC __glewDepthRangefOES; }
# 13844 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRUSTUMFOESPROC __glewFrustumfOES; }
# 13845 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCLIPPLANEFOESPROC __glewGetClipPlanefOES; }
# 13846 "./sdk/GL/glew.h"
extern "C" { extern PFNGLORTHOFOESPROC __glewOrthofOES; }
# 13848 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDETAILTEXFUNCSGISPROC __glewDetailTexFuncSGIS; }
# 13849 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETDETAILTEXFUNCSGISPROC __glewGetDetailTexFuncSGIS; }
# 13851 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFOGFUNCSGISPROC __glewFogFuncSGIS; }
# 13852 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFOGFUNCSGISPROC __glewGetFogFuncSGIS; }
# 13854 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEMASKSGISPROC __glewSampleMaskSGIS; }
# 13855 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSAMPLEPATTERNSGISPROC __glewSamplePatternSGIS; }
# 13857 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETSHARPENTEXFUNCSGISPROC __glewGetSharpenTexFuncSGIS; }
# 13858 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSHARPENTEXFUNCSGISPROC __glewSharpenTexFuncSGIS; }
# 13860 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXIMAGE4DSGISPROC __glewTexImage4DSGIS; }
# 13861 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXSUBIMAGE4DSGISPROC __glewTexSubImage4DSGIS; }
# 13863 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETTEXFILTERFUNCSGISPROC __glewGetTexFilterFuncSGIS; }
# 13864 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXFILTERFUNCSGISPROC __glewTexFilterFuncSGIS; }
# 13866 "./sdk/GL/glew.h"
extern "C" { extern PFNGLASYNCMARKERSGIXPROC __glewAsyncMarkerSGIX; }
# 13867 "./sdk/GL/glew.h"
extern "C" { extern PFNGLDELETEASYNCMARKERSSGIXPROC __glewDeleteAsyncMarkersSGIX; }
# 13868 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINISHASYNCSGIXPROC __glewFinishAsyncSGIX; }
# 13869 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGENASYNCMARKERSSGIXPROC __glewGenAsyncMarkersSGIX; }
# 13870 "./sdk/GL/glew.h"
extern "C" { extern PFNGLISASYNCMARKERSGIXPROC __glewIsAsyncMarkerSGIX; }
# 13871 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPOLLASYNCSGIXPROC __glewPollAsyncSGIX; }
# 13873 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFLUSHRASTERSGIXPROC __glewFlushRasterSGIX; }
# 13875 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXTUREFOGSGIXPROC __glewTextureFogSGIX; }
# 13877 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTCOLORMATERIALSGIXPROC __glewFragmentColorMaterialSGIX; }
# 13878 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELFSGIXPROC __glewFragmentLightModelfSGIX; }
# 13879 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELFVSGIXPROC __glewFragmentLightModelfvSGIX; }
# 13880 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELISGIXPROC __glewFragmentLightModeliSGIX; }
# 13881 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTMODELIVSGIXPROC __glewFragmentLightModelivSGIX; }
# 13882 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTFSGIXPROC __glewFragmentLightfSGIX; }
# 13883 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTFVSGIXPROC __glewFragmentLightfvSGIX; }
# 13884 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTISGIXPROC __glewFragmentLightiSGIX; }
# 13885 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTLIGHTIVSGIXPROC __glewFragmentLightivSGIX; }
# 13886 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALFSGIXPROC __glewFragmentMaterialfSGIX; }
# 13887 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALFVSGIXPROC __glewFragmentMaterialfvSGIX; }
# 13888 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALISGIXPROC __glewFragmentMaterialiSGIX; }
# 13889 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAGMENTMATERIALIVSGIXPROC __glewFragmentMaterialivSGIX; }
# 13890 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTLIGHTFVSGIXPROC __glewGetFragmentLightfvSGIX; }
# 13891 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTLIGHTIVSGIXPROC __glewGetFragmentLightivSGIX; }
# 13892 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTMATERIALFVSGIXPROC __glewGetFragmentMaterialfvSGIX; }
# 13893 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETFRAGMENTMATERIALIVSGIXPROC __glewGetFragmentMaterialivSGIX; }
# 13895 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFRAMEZOOMSGIXPROC __glewFrameZoomSGIX; }
# 13897 "./sdk/GL/glew.h"
extern "C" { extern PFNGLPIXELTEXGENSGIXPROC __glewPixelTexGenSGIX; }
# 13899 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREFERENCEPLANESGIXPROC __glewReferencePlaneSGIX; }
# 13901 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSPRITEPARAMETERFSGIXPROC __glewSpriteParameterfSGIX; }
# 13902 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSPRITEPARAMETERFVSGIXPROC __glewSpriteParameterfvSGIX; }
# 13903 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSPRITEPARAMETERISGIXPROC __glewSpriteParameteriSGIX; }
# 13904 "./sdk/GL/glew.h"
extern "C" { extern PFNGLSPRITEPARAMETERIVSGIXPROC __glewSpriteParameterivSGIX; }
# 13906 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTAGSAMPLEBUFFERSGIXPROC __glewTagSampleBufferSGIX; }
# 13908 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEPARAMETERFVSGIPROC __glewColorTableParameterfvSGI; }
# 13909 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLEPARAMETERIVSGIPROC __glewColorTableParameterivSGI; }
# 13910 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLORTABLESGIPROC __glewColorTableSGI; }
# 13911 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOPYCOLORTABLESGIPROC __glewCopyColorTableSGI; }
# 13912 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERFVSGIPROC __glewGetColorTableParameterfvSGI; }
# 13913 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLEPARAMETERIVSGIPROC __glewGetColorTableParameterivSGI; }
# 13914 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGETCOLORTABLESGIPROC __glewGetColorTableSGI; }
# 13916 "./sdk/GL/glew.h"
extern "C" { extern PFNGLFINISHTEXTURESUNXPROC __glewFinishTextureSUNX; }
# 13918 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORBSUNPROC __glewGlobalAlphaFactorbSUN; }
# 13919 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORDSUNPROC __glewGlobalAlphaFactordSUN; }
# 13920 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORFSUNPROC __glewGlobalAlphaFactorfSUN; }
# 13921 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORISUNPROC __glewGlobalAlphaFactoriSUN; }
# 13922 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORSSUNPROC __glewGlobalAlphaFactorsSUN; }
# 13923 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORUBSUNPROC __glewGlobalAlphaFactorubSUN; }
# 13924 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORUISUNPROC __glewGlobalAlphaFactoruiSUN; }
# 13925 "./sdk/GL/glew.h"
extern "C" { extern PFNGLGLOBALALPHAFACTORUSSUNPROC __glewGlobalAlphaFactorusSUN; }
# 13927 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREADVIDEOPIXELSSUNPROC __glewReadVideoPixelsSUN; }
# 13929 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEPOINTERSUNPROC __glewReplacementCodePointerSUN; }
# 13930 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUBSUNPROC __glewReplacementCodeubSUN; }
# 13931 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUBVSUNPROC __glewReplacementCodeubvSUN; }
# 13932 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUISUNPROC __glewReplacementCodeuiSUN; }
# 13933 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUIVSUNPROC __glewReplacementCodeuivSUN; }
# 13934 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUSSUNPROC __glewReplacementCodeusSUN; }
# 13935 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUSVSUNPROC __glewReplacementCodeusvSUN; }
# 13937 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR3FVERTEX3FSUNPROC __glewColor3fVertex3fSUN; }
# 13938 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR3FVERTEX3FVSUNPROC __glewColor3fVertex3fvSUN; }
# 13939 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewColor4fNormal3fVertex3fSUN; }
# 13940 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewColor4fNormal3fVertex3fvSUN; }
# 13941 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4UBVERTEX2FSUNPROC __glewColor4ubVertex2fSUN; }
# 13942 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4UBVERTEX2FVSUNPROC __glewColor4ubVertex2fvSUN; }
# 13943 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4UBVERTEX3FSUNPROC __glewColor4ubVertex3fSUN; }
# 13944 "./sdk/GL/glew.h"
extern "C" { extern PFNGLCOLOR4UBVERTEX3FVSUNPROC __glewColor4ubVertex3fvSUN; }
# 13945 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMAL3FVERTEX3FSUNPROC __glewNormal3fVertex3fSUN; }
# 13946 "./sdk/GL/glew.h"
extern "C" { extern PFNGLNORMAL3FVERTEX3FVSUNPROC __glewNormal3fVertex3fvSUN; }
# 13947 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC __glewReplacementCodeuiColor3fVertex3fSUN; }
# 13948 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor3fVertex3fvSUN; }
# 13949 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fSUN; }
# 13950 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fvSUN; }
# 13951 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC __glewReplacementCodeuiColor4ubVertex3fSUN; }
# 13952 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC __glewReplacementCodeuiColor4ubVertex3fvSUN; }
# 13953 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiNormal3fVertex3fSUN; }
# 13954 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiNormal3fVertex3fvSUN; }
# 13955 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN; }
# 13956 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN; }
# 13957 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN; }
# 13958 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN; }
# 13959 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fSUN; }
# 13960 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fvSUN; }
# 13961 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC __glewReplacementCodeuiVertex3fSUN; }
# 13962 "./sdk/GL/glew.h"
extern "C" { extern PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC __glewReplacementCodeuiVertex3fvSUN; }
# 13963 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC __glewTexCoord2fColor3fVertex3fSUN; }
# 13964 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC __glewTexCoord2fColor3fVertex3fvSUN; }
# 13965 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fSUN; }
# 13966 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fvSUN; }
# 13967 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC __glewTexCoord2fColor4ubVertex3fSUN; }
# 13968 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC __glewTexCoord2fColor4ubVertex3fvSUN; }
# 13969 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fNormal3fVertex3fSUN; }
# 13970 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fNormal3fVertex3fvSUN; }
# 13971 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FVERTEX3FSUNPROC __glewTexCoord2fVertex3fSUN; }
# 13972 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD2FVERTEX3FVSUNPROC __glewTexCoord2fVertex3fvSUN; }
# 13973 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fSUN; }
# 13974 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fvSUN; }
# 13975 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4FVERTEX4FSUNPROC __glewTexCoord4fVertex4fSUN; }
# 13976 "./sdk/GL/glew.h"
extern "C" { extern PFNGLTEXCOORD4FVERTEX4FVSUNPROC __glewTexCoord4fVertex4fvSUN; }
# 13978 "./sdk/GL/glew.h"
extern "C" { extern PFNGLADDSWAPHINTRECTWINPROC __glewAddSwapHintRectWIN; }
# 13985 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_1_1; }
# 13986 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_1_2; }
# 13987 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_1_3; }
# 13988 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_1_4; }
# 13989 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_1_5; }
# 13990 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_2_0; }
# 13991 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_2_1; }
# 13992 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_3_0; }
# 13993 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_3_1; }
# 13994 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_3_2; }
# 13995 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_3_3; }
# 13996 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_VERSION_4_0; }
# 13997 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_3DFX_multisample; }
# 13998 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_3DFX_tbuffer; }
# 13999 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_3DFX_texture_compression_FXT1; }
# 14000 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_draw_buffers_blend; }
# 14001 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_performance_monitor; }
# 14002 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_seamless_cubemap_per_texture; }
# 14003 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_shader_stencil_export; }
# 14004 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_texture_texture4; }
# 14005 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_AMD_vertex_shader_tessellator; }
# 14006 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_aux_depth_stencil; }
# 14007 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_client_storage; }
# 14008 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_element_array; }
# 14009 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_fence; }
# 14010 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_float_pixels; }
# 14011 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_flush_buffer_range; }
# 14012 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_object_purgeable; }
# 14013 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_pixel_buffer; }
# 14014 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_rgb_422; }
# 14015 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_row_bytes; }
# 14016 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_specular_vector; }
# 14017 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_texture_range; }
# 14018 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_transform_hint; }
# 14019 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_vertex_array_object; }
# 14020 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_vertex_array_range; }
# 14021 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_vertex_program_evaluators; }
# 14022 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_APPLE_ycbcr_422; }
# 14023 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_blend_func_extended; }
# 14024 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_color_buffer_float; }
# 14025 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_compatibility; }
# 14026 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_copy_buffer; }
# 14027 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_depth_buffer_float; }
# 14028 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_depth_clamp; }
# 14029 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_depth_texture; }
# 14030 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_draw_buffers; }
# 14031 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_draw_buffers_blend; }
# 14032 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_draw_elements_base_vertex; }
# 14033 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_draw_indirect; }
# 14034 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_draw_instanced; }
# 14035 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_explicit_attrib_location; }
# 14036 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_fragment_coord_conventions; }
# 14037 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_fragment_program; }
# 14038 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_fragment_program_shadow; }
# 14039 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_fragment_shader; }
# 14040 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_framebuffer_object; }
# 14041 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_framebuffer_sRGB; }
# 14042 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_geometry_shader4; }
# 14043 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_gpu_shader5; }
# 14044 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_gpu_shader_fp64; }
# 14045 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_half_float_pixel; }
# 14046 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_half_float_vertex; }
# 14047 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_imaging; }
# 14048 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_instanced_arrays; }
# 14049 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_map_buffer_range; }
# 14050 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_matrix_palette; }
# 14051 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_multisample; }
# 14052 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_multitexture; }
# 14053 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_occlusion_query; }
# 14054 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_occlusion_query2; }
# 14055 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_pixel_buffer_object; }
# 14056 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_point_parameters; }
# 14057 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_point_sprite; }
# 14058 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_provoking_vertex; }
# 14059 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_sample_shading; }
# 14060 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_sampler_objects; }
# 14061 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_seamless_cube_map; }
# 14062 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shader_bit_encoding; }
# 14063 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shader_objects; }
# 14064 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shader_subroutine; }
# 14065 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shader_texture_lod; }
# 14066 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shading_language_100; }
# 14067 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shading_language_include; }
# 14068 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shadow; }
# 14069 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_shadow_ambient; }
# 14070 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_sync; }
# 14071 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_tessellation_shader; }
# 14072 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_border_clamp; }
# 14073 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_buffer_object; }
# 14074 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_buffer_object_rgb32; }
# 14075 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_compression; }
# 14076 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_compression_bptc; }
# 14077 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_compression_rgtc; }
# 14078 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_cube_map; }
# 14079 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_cube_map_array; }
# 14080 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_env_add; }
# 14081 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_env_combine; }
# 14082 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_env_crossbar; }
# 14083 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_env_dot3; }
# 14084 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_float; }
# 14085 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_gather; }
# 14086 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_mirrored_repeat; }
# 14087 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_multisample; }
# 14088 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_non_power_of_two; }
# 14089 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_query_lod; }
# 14090 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_rectangle; }
# 14091 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_rg; }
# 14092 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_rgb10_a2ui; }
# 14093 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_texture_swizzle; }
# 14094 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_timer_query; }
# 14095 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_transform_feedback2; }
# 14096 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_transform_feedback3; }
# 14097 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_transpose_matrix; }
# 14098 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_uniform_buffer_object; }
# 14099 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_array_bgra; }
# 14100 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_array_object; }
# 14101 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_blend; }
# 14102 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_buffer_object; }
# 14103 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_program; }
# 14104 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_shader; }
# 14105 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_vertex_type_2_10_10_10_rev; }
# 14106 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ARB_window_pos; }
# 14107 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATIX_point_sprites; }
# 14108 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATIX_texture_env_combine3; }
# 14109 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATIX_texture_env_route; }
# 14110 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATIX_vertex_shader_output_point_size; }
# 14111 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_draw_buffers; }
# 14112 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_element_array; }
# 14113 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_envmap_bumpmap; }
# 14114 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_fragment_shader; }
# 14115 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_map_object_buffer; }
# 14116 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_meminfo; }
# 14117 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_pn_triangles; }
# 14118 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_separate_stencil; }
# 14119 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_shader_texture_lod; }
# 14120 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_text_fragment_shader; }
# 14121 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_texture_compression_3dc; }
# 14122 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_texture_env_combine3; }
# 14123 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_texture_float; }
# 14124 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_texture_mirror_once; }
# 14125 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_vertex_array_object; }
# 14126 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_vertex_attrib_array_object; }
# 14127 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_ATI_vertex_streams; }
# 14128 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_422_pixels; }
# 14129 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_Cg_shader; }
# 14130 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_abgr; }
# 14131 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_bgra; }
# 14132 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_bindable_uniform; }
# 14133 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_color; }
# 14134 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_equation_separate; }
# 14135 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_func_separate; }
# 14136 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_logic_op; }
# 14137 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_minmax; }
# 14138 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_blend_subtract; }
# 14139 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_clip_volume_hint; }
# 14140 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_cmyka; }
# 14141 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_color_subtable; }
# 14142 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_compiled_vertex_array; }
# 14143 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_convolution; }
# 14144 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_coordinate_frame; }
# 14145 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_copy_texture; }
# 14146 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_cull_vertex; }
# 14147 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_depth_bounds_test; }
# 14148 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_direct_state_access; }
# 14149 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_draw_buffers2; }
# 14150 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_draw_instanced; }
# 14151 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_draw_range_elements; }
# 14152 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_fog_coord; }
# 14153 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_fragment_lighting; }
# 14154 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_framebuffer_blit; }
# 14155 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_framebuffer_multisample; }
# 14156 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_framebuffer_object; }
# 14157 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_framebuffer_sRGB; }
# 14158 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_geometry_shader4; }
# 14159 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_gpu_program_parameters; }
# 14160 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_gpu_shader4; }
# 14161 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_histogram; }
# 14162 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_index_array_formats; }
# 14163 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_index_func; }
# 14164 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_index_material; }
# 14165 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_index_texture; }
# 14166 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_light_texture; }
# 14167 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_misc_attribute; }
# 14168 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_multi_draw_arrays; }
# 14169 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_multisample; }
# 14170 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_packed_depth_stencil; }
# 14171 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_packed_float; }
# 14172 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_packed_pixels; }
# 14173 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_paletted_texture; }
# 14174 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_pixel_buffer_object; }
# 14175 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_pixel_transform; }
# 14176 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_pixel_transform_color_table; }
# 14177 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_point_parameters; }
# 14178 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_polygon_offset; }
# 14179 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_provoking_vertex; }
# 14180 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_rescale_normal; }
# 14181 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_scene_marker; }
# 14182 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_secondary_color; }
# 14183 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_separate_shader_objects; }
# 14184 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_separate_specular_color; }
# 14185 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_shader_image_load_store; }
# 14186 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_shadow_funcs; }
# 14187 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_shared_texture_palette; }
# 14188 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_stencil_clear_tag; }
# 14189 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_stencil_two_side; }
# 14190 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_stencil_wrap; }
# 14191 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_subtexture; }
# 14192 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture; }
# 14193 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture3D; }
# 14194 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_array; }
# 14195 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_buffer_object; }
# 14196 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_compression_dxt1; }
# 14197 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_compression_latc; }
# 14198 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_compression_rgtc; }
# 14199 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_compression_s3tc; }
# 14200 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_cube_map; }
# 14201 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_edge_clamp; }
# 14202 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_env; }
# 14203 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_env_add; }
# 14204 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_env_combine; }
# 14205 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_env_dot3; }
# 14206 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_filter_anisotropic; }
# 14207 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_integer; }
# 14208 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_lod_bias; }
# 14209 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_mirror_clamp; }
# 14210 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_object; }
# 14211 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_perturb_normal; }
# 14212 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_rectangle; }
# 14213 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_sRGB; }
# 14214 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_shared_exponent; }
# 14215 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_snorm; }
# 14216 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_texture_swizzle; }
# 14217 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_timer_query; }
# 14218 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_transform_feedback; }
# 14219 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_vertex_array; }
# 14220 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_vertex_array_bgra; }
# 14221 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_vertex_attrib_64bit; }
# 14222 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_vertex_shader; }
# 14223 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_EXT_vertex_weighting; }
# 14224 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_GREMEDY_frame_terminator; }
# 14225 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_GREMEDY_string_marker; }
# 14226 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_HP_convolution_border_modes; }
# 14227 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_HP_image_transform; }
# 14228 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_HP_occlusion_test; }
# 14229 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_HP_texture_lighting; }
# 14230 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_cull_vertex; }
# 14231 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_multimode_draw_arrays; }
# 14232 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_rasterpos_clip; }
# 14233 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_static_data; }
# 14234 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_texture_mirrored_repeat; }
# 14235 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_IBM_vertex_array_lists; }
# 14236 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_INGR_color_clamp; }
# 14237 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_INGR_interlace_read; }
# 14238 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_INTEL_parallel_arrays; }
# 14239 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_INTEL_texture_scissor; }
# 14240 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_KTX_buffer_region; }
# 14241 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_MESAX_texture_stack; }
# 14242 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_MESA_pack_invert; }
# 14243 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_MESA_resize_buffers; }
# 14244 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_MESA_window_pos; }
# 14245 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_MESA_ycbcr_texture; }
# 14246 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_blend_square; }
# 14247 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_conditional_render; }
# 14248 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_copy_depth_to_color; }
# 14249 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_copy_image; }
# 14250 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_depth_buffer_float; }
# 14251 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_depth_clamp; }
# 14252 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_depth_range_unclamped; }
# 14253 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_evaluators; }
# 14254 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_explicit_multisample; }
# 14255 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fence; }
# 14256 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_float_buffer; }
# 14257 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fog_distance; }
# 14258 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fragment_program; }
# 14259 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fragment_program2; }
# 14260 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fragment_program4; }
# 14261 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_fragment_program_option; }
# 14262 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_framebuffer_multisample_coverage; }
# 14263 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_geometry_program4; }
# 14264 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_geometry_shader4; }
# 14265 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_gpu_program4; }
# 14266 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_gpu_program4_1; }
# 14267 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_gpu_program5; }
# 14268 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_gpu_program_fp64; }
# 14269 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_gpu_shader5; }
# 14270 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_half_float; }
# 14271 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_light_max_exponent; }
# 14272 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_multisample_filter_hint; }
# 14273 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_occlusion_query; }
# 14274 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_packed_depth_stencil; }
# 14275 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_parameter_buffer_object; }
# 14276 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_parameter_buffer_object2; }
# 14277 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_pixel_data_range; }
# 14278 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_point_sprite; }
# 14279 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_present_video; }
# 14280 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_primitive_restart; }
# 14281 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_register_combiners; }
# 14282 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_register_combiners2; }
# 14283 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_shader_buffer_load; }
# 14284 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_tessellation_program5; }
# 14285 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texgen_emboss; }
# 14286 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texgen_reflection; }
# 14287 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_barrier; }
# 14288 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_compression_vtc; }
# 14289 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_env_combine4; }
# 14290 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_expand_normal; }
# 14291 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_multisample; }
# 14292 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_rectangle; }
# 14293 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_shader; }
# 14294 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_shader2; }
# 14295 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_texture_shader3; }
# 14296 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_transform_feedback; }
# 14297 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_transform_feedback2; }
# 14298 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_array_range; }
# 14299 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_array_range2; }
# 14300 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_attrib_integer_64bit; }
# 14301 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_buffer_unified_memory; }
# 14302 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program; }
# 14303 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program1_1; }
# 14304 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program2; }
# 14305 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program2_option; }
# 14306 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program3; }
# 14307 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_NV_vertex_program4; }
# 14308 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OES_byte_coordinates; }
# 14309 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OES_compressed_paletted_texture; }
# 14310 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OES_read_format; }
# 14311 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OES_single_precision; }
# 14312 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OML_interlace; }
# 14313 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OML_resample; }
# 14314 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_OML_subsample; }
# 14315 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_PGI_misc_hints; }
# 14316 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_PGI_vertex_hints; }
# 14317 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_REND_screen_coordinates; }
# 14318 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_S3_s3tc; }
# 14319 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_color_range; }
# 14320 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_detail_texture; }
# 14321 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_fog_function; }
# 14322 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_generate_mipmap; }
# 14323 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_multisample; }
# 14324 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_pixel_texture; }
# 14325 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_point_line_texgen; }
# 14326 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_sharpen_texture; }
# 14327 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture4D; }
# 14328 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture_border_clamp; }
# 14329 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture_edge_clamp; }
# 14330 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture_filter4; }
# 14331 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture_lod; }
# 14332 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIS_texture_select; }
# 14333 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_async; }
# 14334 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_async_histogram; }
# 14335 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_async_pixel; }
# 14336 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_blend_alpha_minmax; }
# 14337 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_clipmap; }
# 14338 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_convolution_accuracy; }
# 14339 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_depth_texture; }
# 14340 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_flush_raster; }
# 14341 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_fog_offset; }
# 14342 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_fog_texture; }
# 14343 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_fragment_specular_lighting; }
# 14344 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_framezoom; }
# 14345 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_interlace; }
# 14346 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_ir_instrument1; }
# 14347 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_list_priority; }
# 14348 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_pixel_texture; }
# 14349 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_pixel_texture_bits; }
# 14350 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_reference_plane; }
# 14351 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_resample; }
# 14352 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_shadow; }
# 14353 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_shadow_ambient; }
# 14354 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_sprite; }
# 14355 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_tag_sample_buffer; }
# 14356 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_add_env; }
# 14357 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_coordinate_clamp; }
# 14358 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_lod_bias; }
# 14359 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_multi_buffer; }
# 14360 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_range; }
# 14361 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_texture_scale_bias; }
# 14362 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_vertex_preclip; }
# 14363 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_vertex_preclip_hint; }
# 14364 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGIX_ycrcb; }
# 14365 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGI_color_matrix; }
# 14366 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGI_color_table; }
# 14367 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SGI_texture_color_table; }
# 14368 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUNX_constant_data; }
# 14369 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_convolution_border_modes; }
# 14370 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_global_alpha; }
# 14371 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_mesh_array; }
# 14372 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_read_video_pixels; }
# 14373 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_slice_accum; }
# 14374 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_triangle_list; }
# 14375 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_SUN_vertex; }
# 14376 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_WIN_phong_shading; }
# 14377 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_WIN_specular_fog; }
# 14378 "./sdk/GL/glew.h"
extern "C" { extern GLboolean __GLEW_WIN_swap_hint; }
# 14419 "./sdk/GL/glew.h"
extern "C" GLenum glewInit();
# 14420 "./sdk/GL/glew.h"
extern "C" GLboolean glewIsSupported(const char * );
# 14428 "./sdk/GL/glew.h"
extern "C" { extern GLboolean glewExperimental; }
# 14429 "./sdk/GL/glew.h"
extern "C" GLboolean glewGetExtension(const char * );
# 14430 "./sdk/GL/glew.h"
extern "C" const GLubyte *glewGetErrorString(GLenum );
# 14431 "./sdk/GL/glew.h"
extern "C" const GLubyte *glewGetString(GLenum );
# 232 "./sdk/GL/glut.h"
extern "C" { extern void *glutStrokeRoman; }
# 233 "./sdk/GL/glut.h"
extern "C" { extern void *glutStrokeMonoRoman; }
# 240 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmap9By15; }
# 241 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmap8By13; }
# 242 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmapTimesRoman10; }
# 243 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmapTimesRoman24; }
# 244 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmapHelvetica10; }
# 245 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmapHelvetica12; }
# 246 "./sdk/GL/glut.h"
extern "C" { extern void *glutBitmapHelvetica18; }
# 395 "./sdk/GL/glut.h"
extern "C" void glutInit(int * , char ** );
# 396 "./sdk/GL/glut.h"
extern "C" void glutInitDisplayMode(unsigned );
# 398 "./sdk/GL/glut.h"
extern "C" void glutInitDisplayString(const char * );
# 400 "./sdk/GL/glut.h"
extern "C" void glutInitWindowPosition(int , int );
# 401 "./sdk/GL/glut.h"
extern "C" void glutInitWindowSize(int , int );
# 402 "./sdk/GL/glut.h"
extern "C" void glutMainLoop();
# 405 "./sdk/GL/glut.h"
extern "C" int glutCreateWindow(const char * );
# 406 "./sdk/GL/glut.h"
extern "C" int glutCreateSubWindow(int , int , int , int , int );
# 407 "./sdk/GL/glut.h"
extern "C" void glutDestroyWindow(int );
# 408 "./sdk/GL/glut.h"
extern "C" void glutPostRedisplay();
# 410 "./sdk/GL/glut.h"
extern "C" void glutPostWindowRedisplay(int );
# 412 "./sdk/GL/glut.h"
extern "C" void glutSwapBuffers();
# 413 "./sdk/GL/glut.h"
extern "C" int glutGetWindow();
# 414 "./sdk/GL/glut.h"
extern "C" void glutSetWindow(int );
# 415 "./sdk/GL/glut.h"
extern "C" void glutSetWindowTitle(const char * );
# 416 "./sdk/GL/glut.h"
extern "C" void glutSetIconTitle(const char * );
# 417 "./sdk/GL/glut.h"
extern "C" void glutPositionWindow(int , int );
# 418 "./sdk/GL/glut.h"
extern "C" void glutReshapeWindow(int , int );
# 419 "./sdk/GL/glut.h"
extern "C" void glutPopWindow();
# 420 "./sdk/GL/glut.h"
extern "C" void glutPushWindow();
# 421 "./sdk/GL/glut.h"
extern "C" void glutIconifyWindow();
# 422 "./sdk/GL/glut.h"
extern "C" void glutShowWindow();
# 423 "./sdk/GL/glut.h"
extern "C" void glutHideWindow();
# 425 "./sdk/GL/glut.h"
extern "C" void glutFullScreen();
# 426 "./sdk/GL/glut.h"
extern "C" void glutSetCursor(int );
# 428 "./sdk/GL/glut.h"
extern "C" void glutWarpPointer(int , int );
# 432 "./sdk/GL/glut.h"
extern "C" void glutEstablishOverlay();
# 433 "./sdk/GL/glut.h"
extern "C" void glutRemoveOverlay();
# 434 "./sdk/GL/glut.h"
extern "C" void glutUseLayer(GLenum );
# 435 "./sdk/GL/glut.h"
extern "C" void glutPostOverlayRedisplay();
# 437 "./sdk/GL/glut.h"
extern "C" void glutPostWindowOverlayRedisplay(int );
# 439 "./sdk/GL/glut.h"
extern "C" void glutShowOverlay();
# 440 "./sdk/GL/glut.h"
extern "C" void glutHideOverlay();
# 444 "./sdk/GL/glut.h"
extern "C" int glutCreateMenu(void (*)(int));
# 445 "./sdk/GL/glut.h"
extern "C" void glutDestroyMenu(int );
# 446 "./sdk/GL/glut.h"
extern "C" int glutGetMenu();
# 447 "./sdk/GL/glut.h"
extern "C" void glutSetMenu(int );
# 448 "./sdk/GL/glut.h"
extern "C" void glutAddMenuEntry(const char * , int );
# 449 "./sdk/GL/glut.h"
extern "C" void glutAddSubMenu(const char * , int );
# 450 "./sdk/GL/glut.h"
extern "C" void glutChangeToMenuEntry(int , const char * , int );
# 451 "./sdk/GL/glut.h"
extern "C" void glutChangeToSubMenu(int , const char * , int );
# 452 "./sdk/GL/glut.h"
extern "C" void glutRemoveMenuItem(int );
# 453 "./sdk/GL/glut.h"
extern "C" void glutAttachMenu(int );
# 454 "./sdk/GL/glut.h"
extern "C" void glutDetachMenu(int );
# 457 "./sdk/GL/glut.h"
extern "C" void glutDisplayFunc(void (* )(void));
# 458 "./sdk/GL/glut.h"
extern "C" void glutReshapeFunc(void (* )(int , int ));
# 459 "./sdk/GL/glut.h"
extern "C" void glutKeyboardFunc(void (* )(unsigned char , int , int ));
# 460 "./sdk/GL/glut.h"
extern "C" void glutMouseFunc(void (* )(int , int , int , int ));
# 461 "./sdk/GL/glut.h"
extern "C" void glutMotionFunc(void (* )(int , int ));
# 462 "./sdk/GL/glut.h"
extern "C" void glutPassiveMotionFunc(void (* )(int , int ));
# 463 "./sdk/GL/glut.h"
extern "C" void glutEntryFunc(void (* )(int ));
# 464 "./sdk/GL/glut.h"
extern "C" void glutVisibilityFunc(void (* )(int ));
# 465 "./sdk/GL/glut.h"
extern "C" void glutIdleFunc(void (* )(void));
# 466 "./sdk/GL/glut.h"
extern "C" void glutTimerFunc(unsigned , void (* )(int ), int );
# 467 "./sdk/GL/glut.h"
extern "C" void glutMenuStateFunc(void (* )(int ));
# 469 "./sdk/GL/glut.h"
extern "C" void glutSpecialFunc(void (* )(int , int , int ));
# 470 "./sdk/GL/glut.h"
extern "C" void glutSpaceballMotionFunc(void (* )(int , int , int ));
# 471 "./sdk/GL/glut.h"
extern "C" void glutSpaceballRotateFunc(void (* )(int , int , int ));
# 472 "./sdk/GL/glut.h"
extern "C" void glutSpaceballButtonFunc(void (* )(int , int ));
# 473 "./sdk/GL/glut.h"
extern "C" void glutButtonBoxFunc(void (* )(int , int ));
# 474 "./sdk/GL/glut.h"
extern "C" void glutDialsFunc(void (* )(int , int ));
# 475 "./sdk/GL/glut.h"
extern "C" void glutTabletMotionFunc(void (* )(int , int ));
# 476 "./sdk/GL/glut.h"
extern "C" void glutTabletButtonFunc(void (* )(int , int , int , int ));
# 478 "./sdk/GL/glut.h"
extern "C" void glutMenuStatusFunc(void (* )(int , int , int ));
# 479 "./sdk/GL/glut.h"
extern "C" void glutOverlayDisplayFunc(void (* )(void));
# 481 "./sdk/GL/glut.h"
extern "C" void glutWindowStatusFunc(void (* )(int ));
# 484 "./sdk/GL/glut.h"
extern "C" void glutKeyboardUpFunc(void (* )(unsigned char , int , int ));
# 485 "./sdk/GL/glut.h"
extern "C" void glutSpecialUpFunc(void (* )(int , int , int ));
# 486 "./sdk/GL/glut.h"
extern "C" void glutJoystickFunc(void (* )(unsigned , int , int , int ), int );
# 492 "./sdk/GL/glut.h"
extern "C" void glutSetColor(int, GLfloat , GLfloat , GLfloat );
# 493 "./sdk/GL/glut.h"
extern "C" GLfloat glutGetColor(int , int );
# 494 "./sdk/GL/glut.h"
extern "C" void glutCopyColormap(int );
# 497 "./sdk/GL/glut.h"
extern "C" int glutGet(GLenum );
# 498 "./sdk/GL/glut.h"
extern "C" int glutDeviceGet(GLenum );
# 501 "./sdk/GL/glut.h"
extern "C" int glutExtensionSupported(const char * );
# 504 "./sdk/GL/glut.h"
extern "C" int glutGetModifiers();
# 505 "./sdk/GL/glut.h"
extern "C" int glutLayerGet(GLenum );
# 509 "./sdk/GL/glut.h"
extern "C" void glutBitmapCharacter(void * , int );
# 510 "./sdk/GL/glut.h"
extern "C" int glutBitmapWidth(void * , int );
# 511 "./sdk/GL/glut.h"
extern "C" void glutStrokeCharacter(void * , int );
# 512 "./sdk/GL/glut.h"
extern "C" int glutStrokeWidth(void * , int );
# 514 "./sdk/GL/glut.h"
extern "C" int glutBitmapLength(void * , const unsigned char * );
# 515 "./sdk/GL/glut.h"
extern "C" int glutStrokeLength(void * , const unsigned char * );
# 519 "./sdk/GL/glut.h"
extern "C" void glutWireSphere(GLdouble , GLint , GLint );
# 520 "./sdk/GL/glut.h"
extern "C" void glutSolidSphere(GLdouble , GLint , GLint );
# 521 "./sdk/GL/glut.h"
extern "C" void glutWireCone(GLdouble , GLdouble , GLint , GLint );
# 522 "./sdk/GL/glut.h"
extern "C" void glutSolidCone(GLdouble , GLdouble , GLint , GLint );
# 523 "./sdk/GL/glut.h"
extern "C" void glutWireCube(GLdouble );
# 524 "./sdk/GL/glut.h"
extern "C" void glutSolidCube(GLdouble );
# 525 "./sdk/GL/glut.h"
extern "C" void glutWireTorus(GLdouble , GLdouble , GLint , GLint );
# 526 "./sdk/GL/glut.h"
extern "C" void glutSolidTorus(GLdouble , GLdouble , GLint , GLint );
# 527 "./sdk/GL/glut.h"
extern "C" void glutWireDodecahedron();
# 528 "./sdk/GL/glut.h"
extern "C" void glutSolidDodecahedron();
# 529 "./sdk/GL/glut.h"
extern "C" void glutWireTeapot(GLdouble );
# 530 "./sdk/GL/glut.h"
extern "C" void glutSolidTeapot(GLdouble );
# 531 "./sdk/GL/glut.h"
extern "C" void glutWireOctahedron();
# 532 "./sdk/GL/glut.h"
extern "C" void glutSolidOctahedron();
# 533 "./sdk/GL/glut.h"
extern "C" void glutWireTetrahedron();
# 534 "./sdk/GL/glut.h"
extern "C" void glutSolidTetrahedron();
# 535 "./sdk/GL/glut.h"
extern "C" void glutWireIcosahedron();
# 536 "./sdk/GL/glut.h"
extern "C" void glutSolidIcosahedron();
# 540 "./sdk/GL/glut.h"
extern "C" int glutVideoResizeGet(GLenum );
# 541 "./sdk/GL/glut.h"
extern "C" void glutSetupVideoResizing();
# 542 "./sdk/GL/glut.h"
extern "C" void glutStopVideoResizing();
# 543 "./sdk/GL/glut.h"
extern "C" void glutVideoResize(int , int , int , int );
# 544 "./sdk/GL/glut.h"
extern "C" void glutVideoPan(int , int , int , int );
# 547 "./sdk/GL/glut.h"
extern "C" void glutReportErrors();
# 563 "./sdk/GL/glut.h"
extern "C" void glutIgnoreKeyRepeat(int );
# 564 "./sdk/GL/glut.h"
extern "C" void glutSetKeyRepeat(int );
# 565 "./sdk/GL/glut.h"
extern "C" void glutForceJoystickFunc();
# 577 "./sdk/GL/glut.h"
extern "C" void glutGameModeString(const char * );
# 578 "./sdk/GL/glut.h"
extern "C" int glutEnterGameMode();
# 579 "./sdk/GL/glut.h"
extern "C" void glutLeaveGameMode();
# 580 "./sdk/GL/glut.h"
extern "C" int glutGameModeGet(GLenum );
# 35 "./shared/rendercheckGL.h"
using std::vector;
# 36 "./shared/rendercheckGL.h"
using std::map;
# 37 "./shared/rendercheckGL.h"
using std::string;
# 47 "./shared/rendercheckGL.h"
class CheckRender {
# 50 "./shared/rendercheckGL.h"
public: CheckRender(unsigned , unsigned , unsigned , bool , bool , bool );
# 53 "./shared/rendercheckGL.h"
virtual ~CheckRender();
# 55 "./shared/rendercheckGL.h"
virtual void allocateMemory(unsigned , unsigned , unsigned , bool , bool , bool );
# 58 "./shared/rendercheckGL.h"
virtual void setExecPath(char *path) {
# 62 "./shared/rendercheckGL.h"
strcpy(m_ExecPath, path);
# 64 "./shared/rendercheckGL.h"
}
# 65 "./shared/rendercheckGL.h"
virtual void EnableQAReadback(bool bStatus) { (m_bQAReadback) = bStatus; }
# 66 "./shared/rendercheckGL.h"
virtual bool IsQAReadback() { return m_bQAReadback; }
# 67 "./shared/rendercheckGL.h"
virtual bool IsFBO() { return m_bUseFBO; }
# 68 "./shared/rendercheckGL.h"
virtual bool IsPBO() { return m_bUsePBO; }
# 69 "./shared/rendercheckGL.h"
virtual void *imageData() { return m_pImageData; }
# 72 "./shared/rendercheckGL.h"
virtual void setPixelFormat(GLenum format) { (m_PixelFormat) = format; }
# 73 "./shared/rendercheckGL.h"
virtual int getPixelFormat() { return m_PixelFormat; }
# 74 "./shared/rendercheckGL.h"
virtual bool checkStatus(const char * , int , bool ) = 0;
# 75 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint ) = 0;
# 76 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , GLuint ) = 0;
# 77 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , unsigned char * ) = 0;
# 79 "./shared/rendercheckGL.h"
virtual void bindReadback();
# 80 "./shared/rendercheckGL.h"
virtual void unbindReadback();
# 82 "./shared/rendercheckGL.h"
virtual void savePGM(const char * , bool , void ** );
# 83 "./shared/rendercheckGL.h"
virtual void savePPM(const char * , bool , void ** );
# 85 "./shared/rendercheckGL.h"
virtual bool PGMvsPGM(const char * , const char * , const float , const float = (0.0F));
# 86 "./shared/rendercheckGL.h"
virtual bool PPMvsPPM(const char * , const char * , const float , const float = (0.0F));
# 89 "./shared/rendercheckGL.h"
void setThresholdCompare(float value) { (m_fThresholdCompare) = value; }
# 91 "./shared/rendercheckGL.h"
virtual void dumpBin(void * , unsigned , const char * );
# 92 "./shared/rendercheckGL.h"
virtual bool compareBin2BinUint(const char * , const char * , unsigned , const float , const float );
# 93 "./shared/rendercheckGL.h"
virtual bool compareBin2BinFloat(const char * , const char * , unsigned , const float , const float );
# 96 "./shared/rendercheckGL.h"
protected: unsigned m_Width, m_Height, m_Bpp;
# 97 "./shared/rendercheckGL.h"
unsigned char *m_pImageData;
# 98 "./shared/rendercheckGL.h"
bool m_bQAReadback, m_bUseFBO, m_bUsePBO;
# 99 "./shared/rendercheckGL.h"
GLuint m_pboReadback;
# 100 "./shared/rendercheckGL.h"
GLenum m_PixelFormat;
# 101 "./shared/rendercheckGL.h"
float m_fThresholdCompare;
# 102 "./shared/rendercheckGL.h"
char m_ExecPath[256];
# 103 "./shared/rendercheckGL.h"
};
# 106 "./shared/rendercheckGL.h"
class CheckBackBuffer : public CheckRender {
# 109 "./shared/rendercheckGL.h"
public: CheckBackBuffer(unsigned , unsigned , unsigned , bool = true);
# 110 "./shared/rendercheckGL.h"
virtual ~CheckBackBuffer();
# 112 "./shared/rendercheckGL.h"
virtual bool checkStatus(const char * , int , bool );
# 113 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint );
# 114 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , GLuint );
# 115 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , unsigned char * );
# 118 "./shared/rendercheckGL.h"
private: virtual void bindFragmentProgram() { }
# 119 "./shared/rendercheckGL.h"
virtual void bindRenderPath() { }
# 120 "./shared/rendercheckGL.h"
virtual void unbindRenderPath() { }
# 123 "./shared/rendercheckGL.h"
virtual void bindTexture() { }
# 126 "./shared/rendercheckGL.h"
virtual void unbindTexture() { }
# 127 "./shared/rendercheckGL.h"
};
# 131 "./shared/rendercheckGL.h"
struct bufferConfig {
# 132 "./shared/rendercheckGL.h"
std::string name;
# 133 "./shared/rendercheckGL.h"
GLenum format;
# 134 "./shared/rendercheckGL.h"
int bits;
# 135 "./shared/rendercheckGL.h"
};
# 138 "./shared/rendercheckGL.h"
struct fboConfig {
# 139 "./shared/rendercheckGL.h"
std::string name;
# 140 "./shared/rendercheckGL.h"
GLenum colorFormat;
# 141 "./shared/rendercheckGL.h"
GLenum depthFormat;
# 142 "./shared/rendercheckGL.h"
int redbits;
# 143 "./shared/rendercheckGL.h"
int depthBits;
# 144 "./shared/rendercheckGL.h"
int depthSamples;
# 145 "./shared/rendercheckGL.h"
int coverageSamples;
# 146 "./shared/rendercheckGL.h"
};
# 148 "./shared/rendercheckGL.h"
struct fboData {
# 149 "./shared/rendercheckGL.h"
GLuint colorTex;
# 150 "./shared/rendercheckGL.h"
GLuint depthTex;
# 151 "./shared/rendercheckGL.h"
GLuint fb;
# 152 "./shared/rendercheckGL.h"
GLuint resolveFB;
# 153 "./shared/rendercheckGL.h"
GLuint colorRB;
# 154 "./shared/rendercheckGL.h"
GLuint depthRB;
# 155 "./shared/rendercheckGL.h"
};
# 158 "./shared/rendercheckGL.h"
class CFrameBufferObject {
# 161 "./shared/rendercheckGL.h"
public: CFrameBufferObject(unsigned , unsigned , unsigned , bool , GLenum );
# 162 "./shared/rendercheckGL.h"
CFrameBufferObject(unsigned , unsigned , unsigned , fboData & , fboConfig & , bool = false);
# 163 "./shared/rendercheckGL.h"
CFrameBufferObject(unsigned , unsigned , unsigned , fboData & , fboConfig & , bool , GLenum );
# 165 "./shared/rendercheckGL.h"
virtual ~CFrameBufferObject();
# 167 "./shared/rendercheckGL.h"
GLuint createTexture(GLenum , int , int , GLint , GLenum );
# 168 "./shared/rendercheckGL.h"
void attachTexture(GLenum , GLuint , GLenum = (36064), int = 0, int = 0);
# 174 "./shared/rendercheckGL.h"
bool initialize(unsigned , unsigned , fboConfig & , fboData & );
# 175 "./shared/rendercheckGL.h"
bool create(GLuint , GLuint , fboConfig & , fboData & );
# 176 "./shared/rendercheckGL.h"
bool createMSAA(GLuint , GLuint , fboConfig * , fboData * );
# 177 "./shared/rendercheckGL.h"
bool createCSAA(GLuint , GLuint , fboConfig * , fboData * );
# 179 "./shared/rendercheckGL.h"
virtual void freeResources();
# 180 "./shared/rendercheckGL.h"
virtual bool checkStatus(const char * , int , bool );
# 182 "./shared/rendercheckGL.h"
virtual void renderQuad(int , int , GLenum );
# 185 "./shared/rendercheckGL.h"
void bindFragmentProgram() {
# 186 "./shared/rendercheckGL.h"
__glewBindProgramARB(34820, m_textureProgram);
# 187 "./shared/rendercheckGL.h"
glEnable(34820);
# 188 "./shared/rendercheckGL.h"
}
# 191 "./shared/rendercheckGL.h"
void bindRenderPath() {
# 192 "./shared/rendercheckGL.h"
__glewBindFramebufferEXT(36160, (m_fboData).fb);
# 193 "./shared/rendercheckGL.h"
}
# 196 "./shared/rendercheckGL.h"
void unbindRenderPath() {
# 197 "./shared/rendercheckGL.h"
__glewBindFramebufferEXT(36160, 0);
# 198 "./shared/rendercheckGL.h"
}
# 201 "./shared/rendercheckGL.h"
void bindTexture() {
# 202 "./shared/rendercheckGL.h"
glBindTexture(m_eGLTarget, (m_fboData).colorTex);
# 203 "./shared/rendercheckGL.h"
}
# 206 "./shared/rendercheckGL.h"
void unbindTexture() {
# 207 "./shared/rendercheckGL.h"
glBindTexture(m_eGLTarget, 0);
# 208 "./shared/rendercheckGL.h"
}
# 210 "./shared/rendercheckGL.h"
GLuint getFbo() { return (m_fboData).fb; }
# 211 "./shared/rendercheckGL.h"
GLuint getTex() { return (m_fboData).colorTex; }
# 212 "./shared/rendercheckGL.h"
GLuint getDepthTex() { return (m_fboData).depthTex; }
# 215 "./shared/rendercheckGL.h"
private: fboData m_fboData;
# 216 "./shared/rendercheckGL.h"
fboConfig m_fboConfig;
# 218 "./shared/rendercheckGL.h"
GLuint m_textureProgram;
# 219 "./shared/rendercheckGL.h"
GLuint m_overlayProgram;
# 221 "./shared/rendercheckGL.h"
bool m_bUseFloat;
# 222 "./shared/rendercheckGL.h"
GLenum m_eGLTarget;
# 223 "./shared/rendercheckGL.h"
};
# 227 "./shared/rendercheckGL.h"
class CheckFBO : public CheckRender {
# 230 "./shared/rendercheckGL.h"
public: CheckFBO(unsigned , unsigned , unsigned );
# 231 "./shared/rendercheckGL.h"
CheckFBO(unsigned , unsigned , unsigned , CFrameBufferObject * );
# 233 "./shared/rendercheckGL.h"
virtual ~CheckFBO();
# 235 "./shared/rendercheckGL.h"
virtual bool checkStatus(const char * , int , bool );
# 236 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint );
# 237 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , GLuint );
# 238 "./shared/rendercheckGL.h"
virtual bool readback(GLuint , GLuint , unsigned char * );
# 241 "./shared/rendercheckGL.h"
private: CFrameBufferObject *m_pFrameBufferObject;
# 242 "./shared/rendercheckGL.h"
};
# 51 "./shared/shrUtils.h"
inline int ConvertSMVer2Cores(int major, int minor)
# 52 "./shared/shrUtils.h"
{
# 57 "./shared/shrUtils.h"
typedef
# 54 "./shared/shrUtils.h"
struct {
# 55 "./shared/shrUtils.h"
int SM;
# 56 "./shared/shrUtils.h"
int Cores;
# 57 "./shared/shrUtils.h"
} sSMtoCores;
# 59 "./shared/shrUtils.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {(-1), (-1)}};
# 69 "./shared/shrUtils.h"
int index = 0;
# 70 "./shared/shrUtils.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1)) {
# 71 "./shared/shrUtils.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor)) {
# 72 "./shared/shrUtils.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 73 "./shared/shrUtils.h"
}
# 74 "./shared/shrUtils.h"
index++;
# 75 "./shared/shrUtils.h"
}
# 76 "./shared/shrUtils.h"
printf("MapSMtoCores undefined SMversion %d.%d!\n", major, minor);
# 77 "./shared/shrUtils.h"
return -1;
# 78 "./shared/shrUtils.h"
}
# 86 "./shared/shrUtils.h"
enum LOGMODES {
# 88 "./shared/shrUtils.h"
LOGCONSOLE = 1,
# 89 "./shared/shrUtils.h"
LOGFILE,
# 90 "./shared/shrUtils.h"
LOGBOTH,
# 91 "./shared/shrUtils.h"
APPENDMODE,
# 92 "./shared/shrUtils.h"
MASTER = 8,
# 93 "./shared/shrUtils.h"
ERRORMSG = 16,
# 94 "./shared/shrUtils.h"
CLOSELOG = 32
# 95 "./shared/shrUtils.h"
};
# 99 "./shared/shrUtils.h"
enum shrBOOL {
# 101 "./shared/shrUtils.h"
shrFALSE,
# 102 "./shared/shrUtils.h"
shrTRUE
# 103 "./shared/shrUtils.h"
};
# 137 "./shared/shrUtils.h"
extern "C" void shrFree(void * );
# 162 "./shared/shrUtils.h"
extern "C" int shrLogEx(int , int , const char * , ...);
# 166 "./shared/shrUtils.h"
extern "C" int shrLog(const char * , ...);
# 176 "./shared/shrUtils.h"
extern "C" double shrDeltaT(int );
# 180 "./shared/shrUtils.h"
extern "C" void shrSetLogFileName(const char * );
# 184 "./shared/shrUtils.h"
extern "C" void shrFillArray(float * , int );
# 188 "./shared/shrUtils.h"
extern "C" void shrPrintArray(float * , int );
# 196 "./shared/shrUtils.h"
extern "C" char *shrFindFilePath(const char * , const char * );
# 208 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFilef(const char * , float ** , unsigned * , bool = false);
# 222 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFiled(const char * , double ** , unsigned * , bool = false);
# 236 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFilei(const char * , int ** , unsigned * , bool = false);
# 249 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFileui(const char * , unsigned ** , unsigned * , bool = false);
# 263 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFileb(const char * , char ** , unsigned * , bool = false);
# 277 "./shared/shrUtils.h"
extern "C" shrBOOL shrReadFileub(const char * , unsigned char ** , unsigned * , bool = false);
# 289 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFilef(const char * , const float * , unsigned , const float , bool = false);
# 301 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFiled(const char * , const float * , unsigned , const double , bool = false);
# 311 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFilei(const char * , const int * , unsigned , bool = false);
# 321 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFileui(const char * , const unsigned * , unsigned , bool = false);
# 331 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFileb(const char * , const char * , unsigned , bool = false);
# 341 "./shared/shrUtils.h"
extern "C" shrBOOL shrWriteFileub(const char * , const unsigned char * , unsigned , bool = false);
# 355 "./shared/shrUtils.h"
extern "C" shrBOOL shrLoadPPM4ub(const char * , unsigned char ** , unsigned * , unsigned * );
# 367 "./shared/shrUtils.h"
extern "C" shrBOOL shrSavePPM4ub(const char * , unsigned char * , unsigned , unsigned );
# 378 "./shared/shrUtils.h"
extern "C" shrBOOL shrSavePGMub(const char * , unsigned char * , unsigned , unsigned );
# 391 "./shared/shrUtils.h"
extern "C" shrBOOL shrLoadPGMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 410 "./shared/shrUtils.h"
extern "C" shrBOOL shrCheckCmdLineFlag(const int , const char ** , const char * );
# 422 "./shared/shrUtils.h"
extern "C" shrBOOL shrGetCmdLineArgumenti(const int , const char ** , const char * , int * );
# 434 "./shared/shrUtils.h"
extern "C" shrBOOL shrGetCmdLineArgumentu(const int , const char ** , const char * , unsigned * );
# 446 "./shared/shrUtils.h"
extern "C" shrBOOL shrGetCmdLineArgumentf(const int , const char ** , const char * , float * );
# 458 "./shared/shrUtils.h"
extern "C" shrBOOL shrGetCmdLineArgumentstr(const int , const char ** , const char * , char ** );
# 471 "./shared/shrUtils.h"
extern "C" shrBOOL shrGetCmdLineArgumentListstr(const int , const char ** , const char * , char ** , unsigned * );
# 482 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparef(const float * , const float * , const unsigned );
# 492 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparei(const int * , const int * , const unsigned );
# 503 "./shared/shrUtils.h"
extern "C" shrBOOL shrCompareuit(const unsigned * , const unsigned * , const unsigned , const float , const float );
# 513 "./shared/shrUtils.h"
extern "C" shrBOOL shrCompareub(const unsigned char * , const unsigned char * , const unsigned );
# 525 "./shared/shrUtils.h"
extern "C" shrBOOL shrCompareubt(const unsigned char * , const unsigned char * , const unsigned , const float , const float );
# 536 "./shared/shrUtils.h"
extern "C" shrBOOL shrCompareube(const unsigned char * , const unsigned char * , const unsigned , const float );
# 547 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparefe(const float * , const float * , const unsigned , const float );
# 559 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparefet(const float * , const float * , const unsigned , const float , const float );
# 571 "./shared/shrUtils.h"
extern "C" shrBOOL shrCompareL2fe(const float * , const float * , const unsigned , const float );
# 583 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparePPM(const char * , const char * , const float , const float );
# 594 "./shared/shrUtils.h"
extern "C" shrBOOL shrComparePGM(const char * , const char * , const float , const float );
# 596 "./shared/shrUtils.h"
extern "C" unsigned char *shrLoadRawFile(const char * , size_t );
# 598 "./shared/shrUtils.h"
extern "C" size_t shrRoundUp(int , int );
# 602 "./shared/shrUtils.h"
inline void __shrCheckErrorEX(int iSample, int iReference, void (*pCleanup)(int), const char *cFile, const int iLine)
# 603 "./shared/shrUtils.h"
{
# 604 "./shared/shrUtils.h"
if (iReference != iSample)
# 605 "./shared/shrUtils.h"
{
# 606 "./shared/shrUtils.h"
shrLogEx((LOGBOTH) | (ERRORMSG), iSample, "line %i , in file %s !!!\n\n", iLine, cFile);
# 607 "./shared/shrUtils.h"
if (pCleanup != (__null))
# 608 "./shared/shrUtils.h"
{
# 609 "./shared/shrUtils.h"
pCleanup(1);
# 610 "./shared/shrUtils.h"
} else
# 612 "./shared/shrUtils.h"
{
# 613 "./shared/shrUtils.h"
shrLogEx((LOGBOTH) | (CLOSELOG), 0, "Exiting...\n");
# 614 "./shared/shrUtils.h"
exit(1);
# 615 "./shared/shrUtils.h"
}
# 616 "./shared/shrUtils.h"
}
# 617 "./shared/shrUtils.h"
}
# 621 "./shared/shrUtils.h"
inline void __shrExitEX(int argc, const char **argv, int iExitCode)
# 622 "./shared/shrUtils.h"
{
# 623 "./shared/shrUtils.h"
if ((!(shrCheckCmdLineFlag(argc, argv, "noprompt"))) && (!(shrCheckCmdLineFlag(argc, argv, "qatest"))))
# 624 "./shared/shrUtils.h"
{
# 625 "./shared/shrUtils.h"
shrLogEx((LOGBOTH) | (CLOSELOG), 0, "\nPress <Enter> to Quit...\n");
# 626 "./shared/shrUtils.h"
getchar();
# 627 "./shared/shrUtils.h"
} else
# 629 "./shared/shrUtils.h"
{
# 630 "./shared/shrUtils.h"
shrLogEx((LOGBOTH) | (CLOSELOG), 0, "%s Exiting...\n", argv[0]);
# 631 "./shared/shrUtils.h"
}
# 632 "./shared/shrUtils.h"
fflush(stderr);
# 633 "./shared/shrUtils.h"
exit(iExitCode);
# 634 "./shared/shrUtils.h"
}
# 157 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef unsigned long long CUdeviceptr; }
# 164 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef int CUdevice; }
# 165 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 166 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 167 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 168 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 169 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 170 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 171 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 172 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 173 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 177 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 175 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUuuid_st {
# 176 "/usr/local/cuda4.1/cuda/include/cuda.h"
char bytes[16];
# 177 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUuuid; }
# 189 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 187 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUipcEventHandle_st {
# 188 "/usr/local/cuda4.1/cuda/include/cuda.h"
char reserved[64];
# 189 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUipcEventHandle; }
# 193 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 191 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUipcMemHandle_st {
# 192 "/usr/local/cuda4.1/cuda/include/cuda.h"
char reserved[64];
# 193 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUipcMemHandle; }
# 212 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 200 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUctx_flags_enum {
# 201 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_AUTO,
# 202 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_SPIN,
# 203 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_YIELD,
# 204 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 205 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 208 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 209 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_MAP_HOST,
# 210 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 211 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 212 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUctx_flags; }
# 222 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 217 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUevent_flags_enum {
# 218 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_DEFAULT,
# 219 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 220 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 221 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 222 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUevent_flags; }
# 236 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 227 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUarray_format_enum {
# 228 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 229 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 230 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 231 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 232 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 233 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 234 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 235 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 236 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUarray_format; }
# 246 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 241 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUaddress_mode_enum {
# 242 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 243 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 244 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 245 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 246 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUaddress_mode; }
# 254 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 251 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfilter_mode_enum {
# 252 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 253 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 254 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfilter_mode; }
# 337 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 259 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUdevice_attribute_enum {
# 260 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 261 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 262 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 263 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 264 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 265 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 266 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 267 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 268 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 269 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 270 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 271 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 272 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 273 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 274 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 275 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 276 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 277 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 278 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 279 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 280 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 281 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 282 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 283 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 284 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 285 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 286 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 287 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 288 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 289 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 290 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 291 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 292 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 293 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 294 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 295 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 296 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 297 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 298 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 299 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 300 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 301 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 302 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 303 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 304 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 305 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 306 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 307 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 308 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 309 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 310 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 311 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 312 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 313 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 314 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 315 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 316 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 317 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 318 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 319 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 320 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 321 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 322 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 323 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 324 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 325 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 326 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 327 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 328 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 329 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 330 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 331 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 332 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 333 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 334 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 335 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 336 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH
# 337 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUdevice_attribute; }
# 353 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 342 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUdevprop_st {
# 343 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxThreadsPerBlock;
# 344 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxThreadsDim[3];
# 345 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxGridSize[3];
# 346 "/usr/local/cuda4.1/cuda/include/cuda.h"
int sharedMemPerBlock;
# 347 "/usr/local/cuda4.1/cuda/include/cuda.h"
int totalConstantMemory;
# 348 "/usr/local/cuda4.1/cuda/include/cuda.h"
int SIMDWidth;
# 349 "/usr/local/cuda4.1/cuda/include/cuda.h"
int memPitch;
# 350 "/usr/local/cuda4.1/cuda/include/cuda.h"
int regsPerBlock;
# 351 "/usr/local/cuda4.1/cuda/include/cuda.h"
int clockRate;
# 352 "/usr/local/cuda4.1/cuda/include/cuda.h"
int textureAlign;
# 353 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUdevprop; }
# 363 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 358 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUpointer_attribute_enum {
# 359 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 360 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 361 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 362 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER
# 363 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUpointer_attribute; }
# 418 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 368 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfunction_attribute_enum {
# 374 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 381 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 387 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 392 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 397 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 406 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 415 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 417 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 418 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfunction_attribute; }
# 428 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 423 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfunc_cache_enum {
# 424 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 425 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 426 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 427 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 428 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfunc_cache; }
# 438 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 433 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUmemorytype_enum {
# 434 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 435 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 436 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 437 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 438 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUmemorytype; }
# 448 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 443 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUcomputemode_enum {
# 444 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 445 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 446 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_PROHIBITED,
# 447 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 448 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUcomputemode; }
# 540 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 453 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_option_enum {
# 459 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 472 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 479 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_WALL_TIME,
# 487 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 495 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 503 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 511 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 518 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 525 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 531 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_TARGET,
# 538 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 540 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_option; }
# 553 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 545 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_target_enum {
# 547 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_10,
# 548 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_11,
# 549 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_12,
# 550 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_13,
# 551 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_20,
# 552 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_21
# 553 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_target; }
# 564 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 558 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_fallback_enum {
# 560 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_PREFER_PTX,
# 562 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_PREFER_BINARY
# 564 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_fallback; }
# 575 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 569 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 570 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 571 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 572 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 573 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 574 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 575 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUgraphicsRegisterFlags; }
# 584 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 580 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 581 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 582 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 583 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 584 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 596 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 589 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUarray_cubemap_face_enum {
# 590 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 591 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 592 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 593 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 594 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 595 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 596 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUarray_cubemap_face; }
# 605 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 601 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUlimit_enum {
# 602 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 603 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 604 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
# 605 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUlimit; }
# 914 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 610 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum cudaError_enum {
# 616 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_SUCCESS,
# 622 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 628 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 634 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 639 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 645 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 650 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 655 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 660 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 665 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 671 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 678 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 688 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 697 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 702 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 707 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 713 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 718 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 726 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 731 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 736 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 742 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 748 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 754 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 760 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 767 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 772 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 777 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 782 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 787 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 792 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 799 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 806 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 815 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 826 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 837 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 848 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 854 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 861 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 868 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 874 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 881 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 889 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ASSERT,
# 896 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 902 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 908 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 913 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 914 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUresult; }
# 976 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 955 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 956 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 957 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 959 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 960 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 961 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 962 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 963 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 965 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 966 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 968 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 969 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 970 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 971 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 972 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 974 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 975 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 976 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY2D; }
# 1009 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 981 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 982 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 983 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 984 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcZ;
# 985 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcLOD;
# 986 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 987 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 988 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 989 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 990 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *reserved0;
# 991 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 992 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcHeight;
# 994 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 995 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 996 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstZ;
# 997 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstLOD;
# 998 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 999 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 1000 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1001 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 1002 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *reserved1;
# 1003 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 1004 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstHeight;
# 1006 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 1007 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1008 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1009 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY3D; }
# 1042 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1014 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1015 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 1016 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 1017 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcZ;
# 1018 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcLOD;
# 1019 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 1020 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 1021 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 1022 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 1023 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUcontext srcContext;
# 1024 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 1025 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcHeight;
# 1027 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 1028 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 1029 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstZ;
# 1030 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstLOD;
# 1031 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 1032 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 1033 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1034 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 1035 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUcontext dstContext;
# 1036 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 1037 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstHeight;
# 1039 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 1040 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1041 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1042 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY3D_PEER; }
# 1054 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1047 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1049 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Width;
# 1050 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1052 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray_format Format;
# 1053 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned NumChannels;
# 1054 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 1068 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1059 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1061 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Width;
# 1062 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1063 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1065 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray_format Format;
# 1066 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned NumChannels;
# 1067 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned Flags;
# 1068 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 1195 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuInit(unsigned );
# 1222 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int * );
# 1260 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice * , int );
# 1286 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int * );
# 1315 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetName(char * , int , CUdevice );
# 1344 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int * , int * , CUdevice );
# 1372 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t * , CUdevice );
# 1432 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop * , CUdevice );
# 1597 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice );
# 1697 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext * , unsigned , CUdevice );
# 1736 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDestroy_v2(CUcontext );
# 1786 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext * , unsigned );
# 1821 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext );
# 1857 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxPushCurrent_v2(CUcontext );
# 1890 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxPopCurrent_v2(CUcontext * );
# 1916 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetCurrent(CUcontext );
# 1935 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetCurrent(CUcontext * );
# 1964 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice * );
# 1992 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 2053 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit , size_t );
# 2086 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t * , CUlimit );
# 2128 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache * );
# 2177 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache );
# 2212 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext , unsigned * );
# 2261 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule * , const char * );
# 2295 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule * , const void * );
# 2374 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** );
# 2414 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule * , const void * );
# 2439 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule );
# 2469 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction * , CUmodule , const char * );
# 2503 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * );
# 2537 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref * , CUmodule , const char * );
# 2568 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * );
# 2611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t * , size_t * );
# 2644 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr * , size_t );
# 2705 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned );
# 2734 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr );
# 2767 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr );
# 2813 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void ** , size_t );
# 2843 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemFreeHost(void * );
# 2925 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void ** , size_t , unsigned );
# 2963 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned );
# 2988 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned * , void * );
# 3015 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetByPCIBusId(CUdevice * , char * );
# 3043 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetPCIBusId(char * , int , CUdevice );
# 3082 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcGetEventHandle(CUipcEventHandle * , CUevent );
# 3115 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcOpenEventHandle(CUevent * , CUipcEventHandle );
# 3149 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr );
# 3188 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle );
# 3216 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcCloseMemHandle(CUdeviceptr );
# 3278 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostRegister(void * , size_t , unsigned );
# 3301 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostUnregister(void * );
# 3337 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy(CUdeviceptr , CUdeviceptr , size_t );
# 3370 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t );
# 3406 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t );
# 3439 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t );
# 3472 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t );
# 3506 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t );
# 3542 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t );
# 3576 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t );
# 3610 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t );
# 3648 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t );
# 3808 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * );
# 3966 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * );
# 4133 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * );
# 4164 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * );
# 4204 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4235 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream );
# 4277 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream );
# 4317 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream );
# 4354 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4396 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream );
# 4438 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream );
# 4609 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream );
# 4784 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream );
# 4809 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream );
# 4844 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t );
# 4877 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t );
# 4910 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr , unsigned , size_t );
# 4948 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t );
# 4987 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t );
# 5026 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t );
# 5063 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream );
# 5100 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream );
# 5136 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream );
# 5178 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream );
# 5221 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream );
# 5264 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream );
# 5367 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * );
# 5400 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray );
# 5431 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray );
# 5611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * );
# 5647 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray );
# 5854 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr );
# 5891 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream * , unsigned );
# 5933 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream , CUevent , unsigned );
# 5957 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream );
# 5982 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream );
# 6010 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamDestroy_v2(CUstream );
# 6059 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent * , unsigned );
# 6097 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent , CUstream );
# 6128 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent );
# 6162 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent );
# 6191 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventDestroy_v2(CUevent );
# 6235 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float * , CUevent , CUevent );
# 6298 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction );
# 6340 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction , CUfunc_cache );
# 6456 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** );
# 6512 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction , int , int , int );
# 6546 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction , unsigned );
# 6578 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction , unsigned );
# 6611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction , int , unsigned );
# 6644 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction , int , float );
# 6679 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction , int , void * , unsigned );
# 6716 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction );
# 6755 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction , int , int );
# 6799 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction , int , int , CUstream );
# 6824 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction , int , CUtexref );
# 6865 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref , CUarray , unsigned );
# 6909 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t );
# 6961 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t );
# 6990 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref , CUarray_format , int );
# 7030 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode );
# 7063 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref , CUfilter_mode );
# 7098 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref , unsigned );
# 7124 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref );
# 7150 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray * , CUtexref );
# 7176 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int );
# 7200 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode * , CUtexref );
# 7226 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format * , int * , CUtexref );
# 7249 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned * , CUtexref );
# 7283 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref * );
# 7303 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref );
# 7341 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref , CUarray , unsigned );
# 7362 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray * , CUsurfref );
# 7400 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceCanAccessPeer(int * , CUdevice , CUdevice );
# 7447 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxEnablePeerAccess(CUcontext , unsigned );
# 7472 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDisablePeerAccess(CUcontext );
# 7513 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource );
# 7551 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned );
# 7585 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource );
# 7626 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned );
# 7664 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream );
# 7699 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream );
# 7703 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGetExportTable(const void ** , const CUuuid * );
# 60 "./sdk/cutil.h"
enum CUTBoolean {
# 62 "./sdk/cutil.h"
CUTFalse,
# 63 "./sdk/cutil.h"
CUTTrue
# 64 "./sdk/cutil.h"
};
# 72 "./sdk/cutil.h"
extern "C" void cutFree(void * );
# 90 "./sdk/cutil.h"
extern "C" void cutCheckBankAccess(unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , const char * , const int , const char * , const int );
# 103 "./sdk/cutil.h"
extern "C" char *cutFindFilePath(const char * , const char * );
# 118 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFilef(const char * , float ** , unsigned * , bool = false);
# 134 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFiled(const char * , double ** , unsigned * , bool = false);
# 150 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFilei(const char * , int ** , unsigned * , bool = false);
# 165 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileui(const char * , unsigned ** , unsigned * , bool = false);
# 181 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileb(const char * , char ** , unsigned * , bool = false);
# 197 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileub(const char * , unsigned char ** , unsigned * , bool = false);
# 211 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilef(const char * , const float * , unsigned , const float , bool = false);
# 225 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFiled(const char * , const float * , unsigned , const double , bool = false);
# 237 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilei(const char * , const int * , unsigned , bool = false);
# 249 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileui(const char * , const unsigned * , unsigned , bool = false);
# 261 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileb(const char * , const char * , unsigned , bool = false);
# 273 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileub(const char * , const unsigned char * , unsigned , bool = false);
# 289 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 302 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 316 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPM4ub(const char * , unsigned char ** , unsigned * , unsigned * );
# 332 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMi(const char * , unsigned ** , unsigned * , unsigned * );
# 348 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMs(const char * , unsigned short ** , unsigned * , unsigned * );
# 363 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMf(const char * , float ** , unsigned * , unsigned * );
# 375 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMub(const char * , unsigned char * , unsigned , unsigned );
# 387 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePPMub(const char * , unsigned char * , unsigned , unsigned );
# 400 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePPM4ub(const char * , unsigned char * , unsigned , unsigned );
# 412 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMi(const char * , unsigned * , unsigned , unsigned );
# 424 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMs(const char * , unsigned short * , unsigned , unsigned );
# 436 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMf(const char * , float * , unsigned , unsigned );
# 457 "./sdk/cutil.h"
extern "C" CUTBoolean cutCheckCmdLineFlag(const int , const char ** , const char * );
# 471 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumenti(const int , const char ** , const char * , int * );
# 485 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentf(const int , const char ** , const char * , float * );
# 499 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentstr(const int , const char ** , const char * , char ** );
# 514 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentListstr(const int , const char ** , const char * , char ** , unsigned * );
# 528 "./sdk/cutil.h"
extern "C" CUTBoolean cutCheckCondition(int , const char * , const int );
# 540 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparef(const float * , const float * , const unsigned );
# 553 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparei(const int * , const int * , const unsigned );
# 567 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareuit(const unsigned * , const unsigned * , const unsigned , const float , const float );
# 580 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareub(const unsigned char * , const unsigned char * , const unsigned );
# 595 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareubt(const unsigned char * , const unsigned char * , const unsigned , const float , const float );
# 609 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareube(const unsigned char * , const unsigned char * , const unsigned , const float );
# 623 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparefe(const float * , const float * , const unsigned , const float );
# 638 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparefet(const float * , const float * , const unsigned , const float , const float );
# 653 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareL2fe(const float * , const float * , const unsigned , const float );
# 668 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparePPM(const char * , const char * , const float , const float , bool = false);
# 681 "./sdk/cutil.h"
extern "C" CUTBoolean cutCreateTimer(unsigned * );
# 690 "./sdk/cutil.h"
extern "C" CUTBoolean cutDeleteTimer(unsigned );
# 698 "./sdk/cutil.h"
extern "C" CUTBoolean cutStartTimer(const unsigned );
# 706 "./sdk/cutil.h"
extern "C" CUTBoolean cutStopTimer(const unsigned );
# 714 "./sdk/cutil.h"
extern "C" CUTBoolean cutResetTimer(const unsigned );
# 723 "./sdk/cutil.h"
extern "C" float cutGetTimerValue(const unsigned );
# 734 "./sdk/cutil.h"
extern "C" float cutGetAverageTimerValue(const unsigned );
# 30 "./sdk/cutil_inline_bankchecker.h"
inline void __cutilBankChecker(unsigned tidx, unsigned tidy, unsigned tidz, unsigned
# 31 "./sdk/cutil_inline_bankchecker.h"
bdimx, unsigned bdimy, unsigned bdimz, char *
# 32 "./sdk/cutil_inline_bankchecker.h"
aname, int index, char *file, int line)
# 33 "./sdk/cutil_inline_bankchecker.h"
{
# 34 "./sdk/cutil_inline_bankchecker.h"
cutCheckBankAccess(tidx, tidy, tidz, bdimx, bdimy, bdimz, file, line, aname, index);
# 35 "./sdk/cutil_inline_bankchecker.h"
}
# 60 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { typedef float2 cuFloatComplex; }
# 62 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCrealf(cuFloatComplex x)
# 63 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 64 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.x;
# 65 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 67 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCimagf(cuFloatComplex x)
# 68 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 69 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.y;
# 70 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 72 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex make_cuFloatComplex(float
# 73 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
r, float i)
# 74 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 75 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex res;
# 76 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.x) = r;
# 77 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.y) = i;
# 78 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return res;
# 79 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 81 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuConjf(cuFloatComplex x)
# 82 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 83 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x), -cuCimagf(x));
# 84 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 85 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCaddf(cuFloatComplex x, cuFloatComplex
# 86 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 87 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 88 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) + cuCrealf(y), cuCimagf(x) + cuCimagf(y));
# 90 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 92 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCsubf(cuFloatComplex x, cuFloatComplex
# 93 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 94 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 95 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) - cuCrealf(y), cuCimagf(x) - cuCimagf(y));
# 97 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 104 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCmulf(cuFloatComplex x, cuFloatComplex
# 105 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 106 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 107 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex prod;
# 108 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
prod = make_cuFloatComplex((cuCrealf(x) * cuCrealf(y)) - (cuCimagf(x) * cuCimagf(y)), (cuCrealf(x) * cuCimagf(y)) + (cuCimagf(x) * cuCrealf(y)));
# 112 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return prod;
# 113 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 120 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCdivf(cuFloatComplex x, cuFloatComplex
# 121 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 122 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 123 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex quot;
# 124 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float s = (fabsf(cuCrealf(y)) + fabsf(cuCimagf(y)));
# 125 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float oos = ((1.0F) / s);
# 126 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float ars = (cuCrealf(x) * oos);
# 127 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float ais = (cuCimagf(x) * oos);
# 128 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float brs = (cuCrealf(y) * oos);
# 129 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float bis = (cuCimagf(y) * oos);
# 130 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 131 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
oos = ((1.0F) / s);
# 132 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
quot = make_cuFloatComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 134 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return quot;
# 135 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 145 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCabsf(cuFloatComplex x)
# 146 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 147 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float a = cuCrealf(x);
# 148 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float b = cuCimagf(x);
# 149 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float v, w, t;
# 150 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
a = fabsf(a);
# 151 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
b = fabsf(b);
# 152 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (a > b) {
# 153 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = a;
# 154 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = b;
# 155 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} else {
# 156 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = b;
# 157 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = a;
# 158 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (w / v);
# 160 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = ((1.0F) + (t * t));
# 161 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v * sqrtf(t));
# 162 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (((v == (0.0F)) || (v > (3.402823466e+38F))) || (w > (3.402823466e+38F))) {
# 163 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v + w);
# 164 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 165 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return t;
# 166 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 169 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { typedef double2 cuDoubleComplex; }
# 171 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCreal(cuDoubleComplex x)
# 172 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 173 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.x;
# 174 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 176 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCimag(cuDoubleComplex x)
# 177 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 178 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.y;
# 179 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 181 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex make_cuDoubleComplex(double
# 182 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
r, double i)
# 183 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 184 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex res;
# 185 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.x) = r;
# 186 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.y) = i;
# 187 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return res;
# 188 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 190 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuConj(cuDoubleComplex x)
# 191 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 192 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x), -cuCimag(x));
# 193 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 195 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCadd(cuDoubleComplex x, cuDoubleComplex
# 196 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 197 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 198 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) + cuCreal(y), cuCimag(x) + cuCimag(y));
# 200 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 202 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCsub(cuDoubleComplex x, cuDoubleComplex
# 203 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 204 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 205 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) - cuCreal(y), cuCimag(x) - cuCimag(y));
# 207 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 214 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCmul(cuDoubleComplex x, cuDoubleComplex
# 215 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 216 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 217 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex prod;
# 218 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
prod = make_cuDoubleComplex((cuCreal(x) * cuCreal(y)) - (cuCimag(x) * cuCimag(y)), (cuCreal(x) * cuCimag(y)) + (cuCimag(x) * cuCreal(y)));
# 222 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return prod;
# 223 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 230 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCdiv(cuDoubleComplex x, cuDoubleComplex
# 231 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 232 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 233 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex quot;
# 234 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double s = (fabs(cuCreal(y)) + fabs(cuCimag(y)));
# 235 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double oos = ((1.0) / s);
# 236 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double ars = (cuCreal(x) * oos);
# 237 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double ais = (cuCimag(x) * oos);
# 238 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double brs = (cuCreal(y) * oos);
# 239 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double bis = (cuCimag(y) * oos);
# 240 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 241 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
oos = ((1.0) / s);
# 242 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
quot = make_cuDoubleComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 244 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return quot;
# 245 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 253 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCabs(cuDoubleComplex x)
# 254 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 255 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double a = cuCreal(x);
# 256 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double b = cuCimag(x);
# 257 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double v, w, t;
# 258 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
a = fabs(a);
# 259 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
b = fabs(b);
# 260 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (a > b) {
# 261 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = a;
# 262 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = b;
# 263 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} else {
# 264 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = b;
# 265 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = a;
# 266 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 267 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (w / v);
# 268 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = ((1.0) + (t * t));
# 269 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v * sqrt(t));
# 270 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (((v == (0.0)) || (v > (1.797693134862315708e+308))) || (w > (1.797693134862315708e+308)))
# 271 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 272 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v + w);
# 273 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 274 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return t;
# 275 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 282 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
typedef cuFloatComplex cuComplex;
# 283 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuComplex make_cuComplex(float x, float
# 284 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 285 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(x, y);
# 287 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 290 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuComplexFloatToDouble(cuFloatComplex
# 291 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
c)
# 292 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 293 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex((double)cuCrealf(c), (double)cuCimagf(c));
# 294 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 296 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuFloatComplex cuComplexDoubleToFloat(cuDoubleComplex
# 297 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
c)
# 298 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 299 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex((float)cuCreal(c), (float)cuCimag(c));
# 300 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 303 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuComplex cuCfmaf(cuComplex x, cuComplex y, cuComplex d)
# 304 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 305 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float real_res;
# 306 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float imag_res;
# 308 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((cuCrealf(x) * cuCrealf(y)) + cuCrealf(d));
# 309 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCrealf(x) * cuCimagf(y)) + cuCimagf(d));
# 311 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((-(cuCimagf(x) * cuCimagf(y))) + real_res);
# 312 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCimagf(x) * cuCrealf(y)) + imag_res);
# 314 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuComplex(real_res, imag_res);
# 315 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 317 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCfma(cuDoubleComplex x, cuDoubleComplex y, cuDoubleComplex d)
# 318 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 319 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double real_res;
# 320 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double imag_res;
# 322 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((cuCreal(x) * cuCreal(y)) + cuCreal(d));
# 323 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCreal(x) * cuCimag(y)) + cuCimag(d));
# 325 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((-(cuCimag(x) * cuCimag(y))) + real_res);
# 326 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCimag(x) * cuCreal(y)) + imag_res);
# 328 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(real_res, imag_res);
# 329 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 86 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 75 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftResult_t {
# 76 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_SUCCESS,
# 77 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_PLAN,
# 78 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_ALLOC_FAILED,
# 79 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_TYPE,
# 80 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_VALUE,
# 81 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INTERNAL_ERROR,
# 82 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_EXEC_FAILED,
# 83 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_SETUP_FAILED,
# 84 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_SIZE,
# 85 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_UNALIGNED_DATA
# 86 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftResult; }
# 91 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef unsigned cufftHandle; }
# 95 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef float cufftReal; }
# 96 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef double cufftDoubleReal; }
# 101 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef cuComplex cufftComplex; }
# 102 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef cuDoubleComplex cufftDoubleComplex; }
# 116 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 109 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftType_t {
# 110 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_R2C = 42,
# 111 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_C2R = 44,
# 112 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_C2C = 41,
# 113 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_D2Z = 106,
# 114 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_Z2D = 108,
# 115 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_Z2Z = 105
# 116 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftType; }
# 145 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 140 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftCompatibility_t {
# 141 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_NATIVE,
# 142 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_PADDING,
# 143 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ASYMMETRIC,
# 144 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ALL
# 145 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftCompatibility; }
# 149 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan1d(cufftHandle * , int , cufftType , int );
# 154 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan2d(cufftHandle * , int , int , cufftType );
# 158 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan3d(cufftHandle * , int , int , int , cufftType );
# 162 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlanMany(cufftHandle * , int , int * , int * , int , int , int * , int , int , cufftType , int );
# 170 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftDestroy(cufftHandle );
# 172 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecC2C(cufftHandle , cufftComplex * , cufftComplex * , int );
# 177 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecR2C(cufftHandle , cufftReal * , cufftComplex * );
# 181 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecC2R(cufftHandle , cufftComplex * , cufftReal * );
# 185 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecZ2Z(cufftHandle , cufftDoubleComplex * , cufftDoubleComplex * , int );
# 190 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecD2Z(cufftHandle , cufftDoubleReal * , cufftDoubleComplex * );
# 194 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecZ2D(cufftHandle , cufftDoubleComplex * , cufftDoubleReal * );
# 198 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftSetStream(cufftHandle , cudaStream_t );
# 201 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftSetCompatibilityMode(cufftHandle , cufftCompatibility );
# 204 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftGetVersion(int * );
# 43 "./sdk/cutil_inline_runtime.h"
inline void __cutilCondition(int val, char *file, int line)
# 44 "./sdk/cutil_inline_runtime.h"
{
# 45 "./sdk/cutil_inline_runtime.h"
if ((CUTFalse) == (cutCheckCondition(val, file, line))) {
# 46 "./sdk/cutil_inline_runtime.h"
exit(1);
# 47 "./sdk/cutil_inline_runtime.h"
}
# 48 "./sdk/cutil_inline_runtime.h"
}
# 50 "./sdk/cutil_inline_runtime.h"
inline void __cutilExit(int argc, char **argv)
# 51 "./sdk/cutil_inline_runtime.h"
{
# 52 "./sdk/cutil_inline_runtime.h"
if (!(cutCheckCmdLineFlag(argc, (const char **)argv, "noprompt"))) {
# 53 "./sdk/cutil_inline_runtime.h"
printf("\nPress ENTER to exit...\n");
# 54 "./sdk/cutil_inline_runtime.h"
fflush(stdout);
# 55 "./sdk/cutil_inline_runtime.h"
fflush(stderr);
# 56 "./sdk/cutil_inline_runtime.h"
getchar();
# 57 "./sdk/cutil_inline_runtime.h"
}
# 58 "./sdk/cutil_inline_runtime.h"
exit(0);
# 59 "./sdk/cutil_inline_runtime.h"
}
# 65 "./sdk/cutil_inline_runtime.h"
inline int _ConvertSMVer2Cores(int major, int minor)
# 66 "./sdk/cutil_inline_runtime.h"
{
# 71 "./sdk/cutil_inline_runtime.h"
typedef
# 68 "./sdk/cutil_inline_runtime.h"
struct {
# 69 "./sdk/cutil_inline_runtime.h"
int SM;
# 70 "./sdk/cutil_inline_runtime.h"
int Cores;
# 71 "./sdk/cutil_inline_runtime.h"
} sSMtoCores;
# 73 "./sdk/cutil_inline_runtime.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {(-1), (-1)}};
# 83 "./sdk/cutil_inline_runtime.h"
int index = 0;
# 84 "./sdk/cutil_inline_runtime.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1)) {
# 85 "./sdk/cutil_inline_runtime.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor)) {
# 86 "./sdk/cutil_inline_runtime.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 87 "./sdk/cutil_inline_runtime.h"
}
# 88 "./sdk/cutil_inline_runtime.h"
index++;
# 89 "./sdk/cutil_inline_runtime.h"
}
# 90 "./sdk/cutil_inline_runtime.h"
printf("MapSMtoCores undefined SMversion %d.%d!\n", major, minor);
# 91 "./sdk/cutil_inline_runtime.h"
return -1;
# 92 "./sdk/cutil_inline_runtime.h"
}
# 96 "./sdk/cutil_inline_runtime.h"
inline int cutGetMaxGflopsDeviceId()
# 97 "./sdk/cutil_inline_runtime.h"
{
# 98 "./sdk/cutil_inline_runtime.h"
int current_device = 0, sm_per_multiproc = 0;
# 99 "./sdk/cutil_inline_runtime.h"
int max_compute_perf = 0, max_perf_device = 0;
# 100 "./sdk/cutil_inline_runtime.h"
int device_count = 0, best_SM_arch = 0;
# 101 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 103 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceCount(&device_count);
# 105 "./sdk/cutil_inline_runtime.h"
while (current_device < device_count) {
# 106 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 107 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) > 0) && ((deviceProp.major) < 9999)) {
# 108 "./sdk/cutil_inline_runtime.h"
best_SM_arch = ((best_SM_arch > (deviceProp.major)) ? best_SM_arch : (deviceProp.major));
# 109 "./sdk/cutil_inline_runtime.h"
}
# 110 "./sdk/cutil_inline_runtime.h"
current_device++;
# 111 "./sdk/cutil_inline_runtime.h"
}
# 114 "./sdk/cutil_inline_runtime.h"
current_device = 0;
# 115 "./sdk/cutil_inline_runtime.h"
while (current_device < device_count) {
# 116 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 117 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) == 9999) && ((deviceProp.minor) == 9999)) {
# 118 "./sdk/cutil_inline_runtime.h"
sm_per_multiproc = 1;
# 119 "./sdk/cutil_inline_runtime.h"
} else {
# 120 "./sdk/cutil_inline_runtime.h"
sm_per_multiproc = _ConvertSMVer2Cores(deviceProp.major, deviceProp.minor);
# 121 "./sdk/cutil_inline_runtime.h"
}
# 123 "./sdk/cutil_inline_runtime.h"
int compute_perf = (((deviceProp.multiProcessorCount) * sm_per_multiproc) * (deviceProp.clockRate));
# 124 "./sdk/cutil_inline_runtime.h"
if (compute_perf > max_compute_perf) {
# 126 "./sdk/cutil_inline_runtime.h"
if (best_SM_arch > 2) {
# 128 "./sdk/cutil_inline_runtime.h"
if ((deviceProp.major) == best_SM_arch) {
# 129 "./sdk/cutil_inline_runtime.h"
max_compute_perf = compute_perf;
# 130 "./sdk/cutil_inline_runtime.h"
max_perf_device = current_device;
# 131 "./sdk/cutil_inline_runtime.h"
}
# 132 "./sdk/cutil_inline_runtime.h"
} else {
# 133 "./sdk/cutil_inline_runtime.h"
max_compute_perf = compute_perf;
# 134 "./sdk/cutil_inline_runtime.h"
max_perf_device = current_device;
# 135 "./sdk/cutil_inline_runtime.h"
}
# 136 "./sdk/cutil_inline_runtime.h"
}
# 137 "./sdk/cutil_inline_runtime.h"
++current_device;
# 138 "./sdk/cutil_inline_runtime.h"
}
# 139 "./sdk/cutil_inline_runtime.h"
return max_perf_device;
# 140 "./sdk/cutil_inline_runtime.h"
}
# 178 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeCallNoSync(cudaError err, const char *file, const int line)
# 179 "./sdk/cutil_inline_runtime.h"
{
# 180 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 181 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaSafeCallNoSync() Runtime API error : %s.\n", file, line, cudaGetErrorString(err));
# 183 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 184 "./sdk/cutil_inline_runtime.h"
}
# 185 "./sdk/cutil_inline_runtime.h"
}
# 187 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeCall(cudaError err, const char *file, const int line)
# 188 "./sdk/cutil_inline_runtime.h"
{
# 189 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 190 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaSafeCall() Runtime API error : %s.\n", file, line, cudaGetErrorString(err));
# 192 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 193 "./sdk/cutil_inline_runtime.h"
}
# 194 "./sdk/cutil_inline_runtime.h"
}
# 196 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeThreadSync(const char *file, const int line)
# 197 "./sdk/cutil_inline_runtime.h"
{
# 198 "./sdk/cutil_inline_runtime.h"
cudaError err = cudaThreadSynchronize();
# 199 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 200 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaThreadSynchronize() Driver API error : %s.\n", file, line, cudaGetErrorString(err));
# 202 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 203 "./sdk/cutil_inline_runtime.h"
}
# 204 "./sdk/cutil_inline_runtime.h"
}
# 206 "./sdk/cutil_inline_runtime.h"
inline void __cufftSafeCall(cufftResult err, const char *file, const int line)
# 207 "./sdk/cutil_inline_runtime.h"
{
# 208 "./sdk/cutil_inline_runtime.h"
if ((CUFFT_SUCCESS) != err) {
# 209 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cufftSafeCall() CUFFT error.\n", file, line);
# 211 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 212 "./sdk/cutil_inline_runtime.h"
}
# 213 "./sdk/cutil_inline_runtime.h"
}
# 215 "./sdk/cutil_inline_runtime.h"
inline void __cutilCheckError(CUTBoolean err, const char *file, const int line)
# 216 "./sdk/cutil_inline_runtime.h"
{
# 217 "./sdk/cutil_inline_runtime.h"
if ((CUTTrue) != err) {
# 218 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CUTIL CUDA error.\n", file, line);
# 220 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 221 "./sdk/cutil_inline_runtime.h"
}
# 222 "./sdk/cutil_inline_runtime.h"
}
# 224 "./sdk/cutil_inline_runtime.h"
inline void __cutilCheckMsg(const char *errorMessage, const char *file, const int line)
# 225 "./sdk/cutil_inline_runtime.h"
{
# 226 "./sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 227 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 228 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cutilCheckMsg() CUTIL CUDA error : %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 230 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 231 "./sdk/cutil_inline_runtime.h"
}
# 240 "./sdk/cutil_inline_runtime.h"
}
# 241 "./sdk/cutil_inline_runtime.h"
inline void __cutilSafeMalloc(void *pointer, const char *file, const int line)
# 242 "./sdk/cutil_inline_runtime.h"
{
# 243 "./sdk/cutil_inline_runtime.h"
if (!(pointer)) {
# 244 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cutilSafeMalloc host malloc failure\n", file, line);
# 246 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 247 "./sdk/cutil_inline_runtime.h"
}
# 248 "./sdk/cutil_inline_runtime.h"
}
# 254 "./sdk/cutil_inline_runtime.h"
inline int cutilDeviceInit(int ARGC, char **ARGV)
# 255 "./sdk/cutil_inline_runtime.h"
{
# 256 "./sdk/cutil_inline_runtime.h"
int deviceCount;
# 257 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceCount(&deviceCount), "./sdk/cutil_inline_runtime.h", 257);
# 258 "./sdk/cutil_inline_runtime.h"
if (deviceCount == 0) {
# 259 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error: no devices supporting CUDA.\n");
# 260 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 261 "./sdk/cutil_inline_runtime.h"
}
# 262 "./sdk/cutil_inline_runtime.h"
int dev = 0;
# 263 "./sdk/cutil_inline_runtime.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 264 "./sdk/cutil_inline_runtime.h"
if (dev < 0) {
# 265 "./sdk/cutil_inline_runtime.h"
dev = 0; }
# 266 "./sdk/cutil_inline_runtime.h"
if (dev > (deviceCount - 1)) {
# 267 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilDeviceInit (Device=%d) invalid GPU device.  %d GPU device(s) detected.\n\n", dev, deviceCount);
# 268 "./sdk/cutil_inline_runtime.h"
return -dev;
# 269 "./sdk/cutil_inline_runtime.h"
}
# 270 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 271 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, dev), "./sdk/cutil_inline_runtime.h", 271);
# 272 "./sdk/cutil_inline_runtime.h"
if ((deviceProp.major) < 1) {
# 273 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutil error: GPU device does not support CUDA.\n");
# 274 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 275 "./sdk/cutil_inline_runtime.h"
}
# 276 "./sdk/cutil_inline_runtime.h"
printf("> Using CUDA device [%d]: %s\n", dev, deviceProp.name);
# 277 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaSetDevice(dev), "./sdk/cutil_inline_runtime.h", 277);
# 279 "./sdk/cutil_inline_runtime.h"
return dev;
# 280 "./sdk/cutil_inline_runtime.h"
}
# 283 "./sdk/cutil_inline_runtime.h"
inline int cutilChooseCudaDevice(int argc, char **argv)
# 284 "./sdk/cutil_inline_runtime.h"
{
# 285 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 286 "./sdk/cutil_inline_runtime.h"
int devID = 0;
# 288 "./sdk/cutil_inline_runtime.h"
if (cutCheckCmdLineFlag(argc, (const char **)argv, "device")) {
# 289 "./sdk/cutil_inline_runtime.h"
devID = cutilDeviceInit(argc, argv);
# 290 "./sdk/cutil_inline_runtime.h"
if (devID < 0) {
# 291 "./sdk/cutil_inline_runtime.h"
printf("exiting...\n");
# 292 "./sdk/cutil_inline_runtime.h"
__cutilExit(argc, argv);
# 293 "./sdk/cutil_inline_runtime.h"
exit(0);
# 294 "./sdk/cutil_inline_runtime.h"
}
# 295 "./sdk/cutil_inline_runtime.h"
} else {
# 297 "./sdk/cutil_inline_runtime.h"
devID = cutGetMaxGflopsDeviceId();
# 298 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaSetDevice(devID), "./sdk/cutil_inline_runtime.h", 298);
# 299 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, devID), "./sdk/cutil_inline_runtime.h", 299);
# 300 "./sdk/cutil_inline_runtime.h"
printf("> Using CUDA device [%d]: %s\n", devID, deviceProp.name);
# 301 "./sdk/cutil_inline_runtime.h"
}
# 302 "./sdk/cutil_inline_runtime.h"
return devID;
# 303 "./sdk/cutil_inline_runtime.h"
}
# 308 "./sdk/cutil_inline_runtime.h"
inline void cutilCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 309 "./sdk/cutil_inline_runtime.h"
{
# 310 "./sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 311 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 312 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CUDA error: %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 314 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 315 "./sdk/cutil_inline_runtime.h"
}
# 316 "./sdk/cutil_inline_runtime.h"
err = cudaThreadSynchronize();
# 317 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 318 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CCUDA error: %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 320 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 321 "./sdk/cutil_inline_runtime.h"
}
# 322 "./sdk/cutil_inline_runtime.h"
}
# 325 "./sdk/cutil_inline_runtime.h"
inline bool cutilCudaCapabilities(int major_version, int minor_version)
# 326 "./sdk/cutil_inline_runtime.h"
{
# 327 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 328 "./sdk/cutil_inline_runtime.h"
(deviceProp.major) = 0;
# 329 "./sdk/cutil_inline_runtime.h"
(deviceProp.minor) = 0;
# 330 "./sdk/cutil_inline_runtime.h"
int dev;
# 336 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaGetDevice(&dev), "./sdk/cutil_inline_runtime.h", 336);
# 337 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaGetDeviceProperties(&deviceProp, dev), "./sdk/cutil_inline_runtime.h", 337);
# 339 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) > major_version) || (((deviceProp.major) == major_version) && ((deviceProp.minor) >= minor_version)))
# 341 "./sdk/cutil_inline_runtime.h"
{
# 342 "./sdk/cutil_inline_runtime.h"
printf("> Device %d: <%16s >, Compute SM %d.%d detected\n", dev, deviceProp.name, deviceProp.major, deviceProp.minor);
# 343 "./sdk/cutil_inline_runtime.h"
return true;
# 344 "./sdk/cutil_inline_runtime.h"
} else
# 346 "./sdk/cutil_inline_runtime.h"
{
# 347 "./sdk/cutil_inline_runtime.h"
printf("There is no device supporting CUDA compute capability %d.%d.\n", major_version, minor_version);
# 348 "./sdk/cutil_inline_runtime.h"
printf("PASSED\n");
# 349 "./sdk/cutil_inline_runtime.h"
return false;
# 350 "./sdk/cutil_inline_runtime.h"
}
# 351 "./sdk/cutil_inline_runtime.h"
}
# 32 "./sdk/cutil_inline_drvapi.h"
inline int _ConvertSMVer2CoresDrvApi(int major, int minor)
# 33 "./sdk/cutil_inline_drvapi.h"
{
# 38 "./sdk/cutil_inline_drvapi.h"
typedef
# 35 "./sdk/cutil_inline_drvapi.h"
struct {
# 36 "./sdk/cutil_inline_drvapi.h"
int SM;
# 37 "./sdk/cutil_inline_drvapi.h"
int Cores;
# 38 "./sdk/cutil_inline_drvapi.h"
} sSMtoCores;
# 40 "./sdk/cutil_inline_drvapi.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {(-1), (-1)}};
# 50 "./sdk/cutil_inline_drvapi.h"
int index = 0;
# 51 "./sdk/cutil_inline_drvapi.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1)) {
# 52 "./sdk/cutil_inline_drvapi.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor)) {
# 53 "./sdk/cutil_inline_drvapi.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 54 "./sdk/cutil_inline_drvapi.h"
}
# 55 "./sdk/cutil_inline_drvapi.h"
index++;
# 56 "./sdk/cutil_inline_drvapi.h"
}
# 57 "./sdk/cutil_inline_drvapi.h"
printf("MapSMtoCores undefined SMversion %d.%d!\n", major, minor);
# 58 "./sdk/cutil_inline_drvapi.h"
return -1;
# 59 "./sdk/cutil_inline_drvapi.h"
}
# 63 "./sdk/cutil_inline_drvapi.h"
inline int cutilDrvGetMaxGflopsDeviceId()
# 64 "./sdk/cutil_inline_drvapi.h"
{
# 65 "./sdk/cutil_inline_drvapi.h"
CUdevice current_device = 0, max_perf_device = 0;
# 66 "./sdk/cutil_inline_drvapi.h"
int device_count = 0, sm_per_multiproc = 0;
# 67 "./sdk/cutil_inline_drvapi.h"
int max_compute_perf = 0, best_SM_arch = 0;
# 68 "./sdk/cutil_inline_drvapi.h"
int major = 0, minor = 0, multiProcessorCount, clockRate;
# 70 "./sdk/cutil_inline_drvapi.h"
cuInit(0);
# 71 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetCount(&device_count); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 71); exit(1); } } ;
# 74 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 75 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 75); exit(1); } } ;
# 76 "./sdk/cutil_inline_drvapi.h"
if ((major > 0) && (major < 9999)) {
# 77 "./sdk/cutil_inline_drvapi.h"
best_SM_arch = ((best_SM_arch > major) ? best_SM_arch : major);
# 78 "./sdk/cutil_inline_drvapi.h"
}
# 79 "./sdk/cutil_inline_drvapi.h"
current_device++;
# 80 "./sdk/cutil_inline_drvapi.h"
}
# 83 "./sdk/cutil_inline_drvapi.h"
current_device = 0;
# 84 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 85 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&multiProcessorCount, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 87);
# 85 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 87 "./sdk/cutil_inline_drvapi.h"
;
# 88 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&clockRate, CU_DEVICE_ATTRIBUTE_CLOCK_RATE, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 90);
# 88 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 90 "./sdk/cutil_inline_drvapi.h"
;
# 91 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 91); exit(1); } } ;
# 93 "./sdk/cutil_inline_drvapi.h"
if ((major == 9999) && (minor == 9999)) {
# 94 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = 1;
# 95 "./sdk/cutil_inline_drvapi.h"
} else {
# 96 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = _ConvertSMVer2CoresDrvApi(major, minor);
# 97 "./sdk/cutil_inline_drvapi.h"
}
# 99 "./sdk/cutil_inline_drvapi.h"
int compute_perf = ((multiProcessorCount * sm_per_multiproc) * clockRate);
# 100 "./sdk/cutil_inline_drvapi.h"
if (compute_perf > max_compute_perf) {
# 102 "./sdk/cutil_inline_drvapi.h"
if (best_SM_arch > 2) {
# 104 "./sdk/cutil_inline_drvapi.h"
if (major == best_SM_arch) {
# 105 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 106 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 107 "./sdk/cutil_inline_drvapi.h"
}
# 108 "./sdk/cutil_inline_drvapi.h"
} else {
# 109 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 110 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 111 "./sdk/cutil_inline_drvapi.h"
}
# 112 "./sdk/cutil_inline_drvapi.h"
}
# 113 "./sdk/cutil_inline_drvapi.h"
++current_device;
# 114 "./sdk/cutil_inline_drvapi.h"
}
# 115 "./sdk/cutil_inline_drvapi.h"
return max_perf_device;
# 116 "./sdk/cutil_inline_drvapi.h"
}
# 119 "./sdk/cutil_inline_drvapi.h"
inline int cutilDrvGetMaxGflopsGraphicsDeviceId()
# 120 "./sdk/cutil_inline_drvapi.h"
{
# 121 "./sdk/cutil_inline_drvapi.h"
CUdevice current_device = 0, max_perf_device = 0;
# 122 "./sdk/cutil_inline_drvapi.h"
int device_count = 0, sm_per_multiproc = 0;
# 123 "./sdk/cutil_inline_drvapi.h"
int max_compute_perf = 0, best_SM_arch = 0;
# 124 "./sdk/cutil_inline_drvapi.h"
int major = 0, minor = 0, multiProcessorCount, clockRate;
# 125 "./sdk/cutil_inline_drvapi.h"
int bTCC = 0;
# 126 "./sdk/cutil_inline_drvapi.h"
char deviceName[256];
# 128 "./sdk/cutil_inline_drvapi.h"
cuInit(0);
# 129 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetCount(&device_count); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 129); exit(1); } } ;
# 132 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 133 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetName(deviceName, 256, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 133); exit(1); } } ;
# 134 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 134); exit(1); } } ;
# 136 "./sdk/cutil_inline_drvapi.h"
if ((major > 0) && (major < 9999)) {
# 137 "./sdk/cutil_inline_drvapi.h"
best_SM_arch = ((best_SM_arch > major) ? best_SM_arch : major);
# 138 "./sdk/cutil_inline_drvapi.h"
}
# 139 "./sdk/cutil_inline_drvapi.h"
current_device++;
# 140 "./sdk/cutil_inline_drvapi.h"
}
# 143 "./sdk/cutil_inline_drvapi.h"
current_device = 0;
# 144 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 145 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&multiProcessorCount, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 147);
# 145 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 147 "./sdk/cutil_inline_drvapi.h"
;
# 148 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&clockRate, CU_DEVICE_ATTRIBUTE_CLOCK_RATE, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 150);
# 148 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 150 "./sdk/cutil_inline_drvapi.h"
;
# 151 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 151); exit(1); } } ;
# 154 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&bTCC, CU_DEVICE_ATTRIBUTE_TCC_DRIVER, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 154); exit(1); } } ;
# 160 "./sdk/cutil_inline_drvapi.h"
if ((major == 9999) && (minor == 9999)) {
# 161 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = 1;
# 162 "./sdk/cutil_inline_drvapi.h"
} else {
# 163 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = _ConvertSMVer2CoresDrvApi(major, minor);
# 164 "./sdk/cutil_inline_drvapi.h"
}
# 167 "./sdk/cutil_inline_drvapi.h"
if ((major >= 2) && (!(bTCC)))
# 168 "./sdk/cutil_inline_drvapi.h"
{
# 169 "./sdk/cutil_inline_drvapi.h"
int compute_perf = ((multiProcessorCount * sm_per_multiproc) * clockRate);
# 170 "./sdk/cutil_inline_drvapi.h"
if (compute_perf > max_compute_perf) {
# 172 "./sdk/cutil_inline_drvapi.h"
if (best_SM_arch > 2) {
# 174 "./sdk/cutil_inline_drvapi.h"
if (major == best_SM_arch) {
# 175 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 176 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 177 "./sdk/cutil_inline_drvapi.h"
}
# 178 "./sdk/cutil_inline_drvapi.h"
} else {
# 179 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 180 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 181 "./sdk/cutil_inline_drvapi.h"
}
# 182 "./sdk/cutil_inline_drvapi.h"
}
# 183 "./sdk/cutil_inline_drvapi.h"
}
# 184 "./sdk/cutil_inline_drvapi.h"
++current_device;
# 185 "./sdk/cutil_inline_drvapi.h"
}
# 186 "./sdk/cutil_inline_drvapi.h"
return max_perf_device;
# 187 "./sdk/cutil_inline_drvapi.h"
}
# 190 "./sdk/cutil_inline_drvapi.h"
inline void __cuSafeCallNoSync(CUresult err, const char *file, const int line)
# 191 "./sdk/cutil_inline_drvapi.h"
{
# 192 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 193 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuSafeCallNoSync() Driver API error = %04d from file <%s>, line %i.\n", err, file, line);
# 195 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 196 "./sdk/cutil_inline_drvapi.h"
}
# 197 "./sdk/cutil_inline_drvapi.h"
}
# 198 "./sdk/cutil_inline_drvapi.h"
inline void __cuSafeCall(CUresult err, const char *file, const int line)
# 199 "./sdk/cutil_inline_drvapi.h"
{
# 200 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(err, file, line);
# 201 "./sdk/cutil_inline_drvapi.h"
}
# 203 "./sdk/cutil_inline_drvapi.h"
inline void __cuCtxSync(const char *file, const int line)
# 204 "./sdk/cutil_inline_drvapi.h"
{
# 205 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 206 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 207 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuCtxSynchronize() API error = %04d in file <%s>, line %i.\n", err, file, line);
# 209 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 210 "./sdk/cutil_inline_drvapi.h"
}
# 211 "./sdk/cutil_inline_drvapi.h"
}
# 213 "./sdk/cutil_inline_drvapi.h"
inline void __cuCheckMsg(const char *msg, const char *file, const int line)
# 214 "./sdk/cutil_inline_drvapi.h"
{
# 215 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 216 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 217 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> %s", msg);
# 218 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> cuCtxSynchronize API error = %04d in file <%s>, line %i.\n", err, file, line);
# 220 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 221 "./sdk/cutil_inline_drvapi.h"
}
# 222 "./sdk/cutil_inline_drvapi.h"
}
# 228 "./sdk/cutil_inline_drvapi.h"
inline int cutilDeviceInitDrv(int ARGC, char **ARGV)
# 229 "./sdk/cutil_inline_drvapi.h"
{
# 230 "./sdk/cutil_inline_drvapi.h"
int cuDevice = 0;
# 231 "./sdk/cutil_inline_drvapi.h"
int deviceCount = 0;
# 232 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuInit(0);
# 233 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) == err) {
# 234 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetCount(&deviceCount), "./sdk/cutil_inline_drvapi.h", 234); }
# 235 "./sdk/cutil_inline_drvapi.h"
if (deviceCount == 0) {
# 236 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "CUTIL DeviceInitDrv error: no devices supporting CUDA\n");
# 237 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 238 "./sdk/cutil_inline_drvapi.h"
}
# 239 "./sdk/cutil_inline_drvapi.h"
int dev = 0;
# 240 "./sdk/cutil_inline_drvapi.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 241 "./sdk/cutil_inline_drvapi.h"
if (dev < 0) { dev = 0; }
# 242 "./sdk/cutil_inline_drvapi.h"
if (dev > (deviceCount - 1)) {
# 243 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDeviceInitDrv (Device=%d) invalid GPU device.  %d GPU device(s) detected.\n\n", dev, deviceCount);
# 244 "./sdk/cutil_inline_drvapi.h"
return -dev;
# 245 "./sdk/cutil_inline_drvapi.h"
}
# 246 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, dev), "./sdk/cutil_inline_drvapi.h", 246);
# 247 "./sdk/cutil_inline_drvapi.h"
char name[100];
# 248 "./sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 249 "./sdk/cutil_inline_drvapi.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 250 "./sdk/cutil_inline_drvapi.h"
printf("> Using CUDA Device [%d]: %s\n", dev, name);
# 251 "./sdk/cutil_inline_drvapi.h"
}
# 252 "./sdk/cutil_inline_drvapi.h"
return dev;
# 253 "./sdk/cutil_inline_drvapi.h"
}
# 260 "./sdk/cutil_inline_drvapi.h"
inline CUdevice cutilChooseCudaDeviceDrv(int argc, char **argv, int *p_devID)
# 261 "./sdk/cutil_inline_drvapi.h"
{
# 262 "./sdk/cutil_inline_drvapi.h"
CUdevice cuDevice;
# 263 "./sdk/cutil_inline_drvapi.h"
int devID = 0;
# 265 "./sdk/cutil_inline_drvapi.h"
if (cutCheckCmdLineFlag(argc, (const char **)argv, "device")) {
# 266 "./sdk/cutil_inline_drvapi.h"
devID = cutilDeviceInitDrv(argc, argv);
# 267 "./sdk/cutil_inline_drvapi.h"
if (devID < 0) {
# 268 "./sdk/cutil_inline_drvapi.h"
printf("exiting...\n");
# 269 "./sdk/cutil_inline_drvapi.h"
exit(0);
# 270 "./sdk/cutil_inline_drvapi.h"
}
# 271 "./sdk/cutil_inline_drvapi.h"
} else {
# 273 "./sdk/cutil_inline_drvapi.h"
char name[100];
# 274 "./sdk/cutil_inline_drvapi.h"
devID = cutilDrvGetMaxGflopsDeviceId();
# 275 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, devID), "./sdk/cutil_inline_drvapi.h", 275);
# 276 "./sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 277 "./sdk/cutil_inline_drvapi.h"
printf("> Using CUDA Device [%d]: %s\n", devID, name);
# 278 "./sdk/cutil_inline_drvapi.h"
}
# 279 "./sdk/cutil_inline_drvapi.h"
cuDeviceGet(&cuDevice, devID);
# 280 "./sdk/cutil_inline_drvapi.h"
if (p_devID) { (*p_devID) = devID; }
# 281 "./sdk/cutil_inline_drvapi.h"
return cuDevice;
# 282 "./sdk/cutil_inline_drvapi.h"
}
# 287 "./sdk/cutil_inline_drvapi.h"
inline void cutilDrvCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 288 "./sdk/cutil_inline_drvapi.h"
{
# 289 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 290 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_ERROR_INVALID_CONTEXT) != err) {
# 291 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 293 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 294 "./sdk/cutil_inline_drvapi.h"
}
# 295 "./sdk/cutil_inline_drvapi.h"
err = cuCtxSynchronize();
# 296 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 297 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 299 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 300 "./sdk/cutil_inline_drvapi.h"
}
# 301 "./sdk/cutil_inline_drvapi.h"
}
# 304 "./sdk/cutil_inline_drvapi.h"
inline bool cutilDrvCudaDevCapabilities(int major_version, int minor_version, int deviceNum)
# 305 "./sdk/cutil_inline_drvapi.h"
{
# 306 "./sdk/cutil_inline_drvapi.h"
int major, minor, dev;
# 307 "./sdk/cutil_inline_drvapi.h"
char device_name[256];
# 313 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&dev, deviceNum), "./sdk/cutil_inline_drvapi.h", 313);
# 314 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceComputeCapability(&major, &minor, dev), "./sdk/cutil_inline_drvapi.h", 314);
# 315 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetName(device_name, 256, dev), "./sdk/cutil_inline_drvapi.h", 315);
# 317 "./sdk/cutil_inline_drvapi.h"
if ((major > major_version) || ((major == major_version) && (minor >= minor_version)))
# 319 "./sdk/cutil_inline_drvapi.h"
{
# 320 "./sdk/cutil_inline_drvapi.h"
printf("> Device %d: < %s >, Compute SM %d.%d detected\n", dev, device_name, major, minor);
# 321 "./sdk/cutil_inline_drvapi.h"
return true;
# 322 "./sdk/cutil_inline_drvapi.h"
} else
# 324 "./sdk/cutil_inline_drvapi.h"
{
# 325 "./sdk/cutil_inline_drvapi.h"
printf("There is no device supporting CUDA compute capability %d.%d.\n", major_version, minor_version);
# 326 "./sdk/cutil_inline_drvapi.h"
printf("PASSED\n");
# 327 "./sdk/cutil_inline_drvapi.h"
return false;
# 328 "./sdk/cutil_inline_drvapi.h"
}
# 329 "./sdk/cutil_inline_drvapi.h"
}
# 332 "./sdk/cutil_inline_drvapi.h"
inline bool cutilDrvCudaCapabilities(int major_version, int minor_version)
# 333 "./sdk/cutil_inline_drvapi.h"
{
# 334 "./sdk/cutil_inline_drvapi.h"
return cutilDrvCudaDevCapabilities(major_version, minor_version, 0);
# 335 "./sdk/cutil_inline_drvapi.h"
}
# 23 "./sdk/cutil_inline.h"
inline void print_NVCC_min_spec(const char *sSDKsample, const char *sNVCCReq, const char *sDriverReq)
# 24 "./sdk/cutil_inline.h"
{
# 25 "./sdk/cutil_inline.h"
printf("CUDA %d.%02d Toolkit built this project.\n", 4010 / 1000, 4010 % 100);
# 26 "./sdk/cutil_inline.h"
printf("  [ %s ] requirements:\n", sSDKsample);
# 27 "./sdk/cutil_inline.h"
printf(" -> CUDA %s Toolkit\n", sNVCCReq);
# 28 "./sdk/cutil_inline.h"
printf(" -> %s NVIDIA Display Driver.\n", sDriverReq);
# 29 "./sdk/cutil_inline.h"
}
# 38 "tests/dct8x8/BmpUtil.h"
#pragma pack ( 1 )
# 40 "tests/dct8x8/BmpUtil.h"
typedef char int8;
# 41 "tests/dct8x8/BmpUtil.h"
typedef short int16;
# 42 "tests/dct8x8/BmpUtil.h"
typedef int int32;
# 43 "tests/dct8x8/BmpUtil.h"
typedef unsigned char uint8;
# 44 "tests/dct8x8/BmpUtil.h"
typedef unsigned short uint16;
# 45 "tests/dct8x8/BmpUtil.h"
typedef unsigned uint32;
# 58 "tests/dct8x8/BmpUtil.h"
typedef
# 53 "tests/dct8x8/BmpUtil.h"
struct {
# 54 "tests/dct8x8/BmpUtil.h"
uint16 _bm_signature;
# 55 "tests/dct8x8/BmpUtil.h"
uint32 _bm_file_size;
# 56 "tests/dct8x8/BmpUtil.h"
uint32 _bm_reserved;
# 57 "tests/dct8x8/BmpUtil.h"
uint32 _bm_bitmap_data;
# 58 "tests/dct8x8/BmpUtil.h"
} BMPFileHeader;
# 79 "tests/dct8x8/BmpUtil.h"
typedef
# 67 "tests/dct8x8/BmpUtil.h"
struct {
# 68 "tests/dct8x8/BmpUtil.h"
uint32 _bm_info_header_size;
# 69 "tests/dct8x8/BmpUtil.h"
uint32 _bm_image_width;
# 70 "tests/dct8x8/BmpUtil.h"
uint32 _bm_image_height;
# 71 "tests/dct8x8/BmpUtil.h"
uint16 _bm_num_of_planes;
# 72 "tests/dct8x8/BmpUtil.h"
uint16 _bm_color_depth;
# 73 "tests/dct8x8/BmpUtil.h"
uint32 _bm_compressed;
# 74 "tests/dct8x8/BmpUtil.h"
uint32 _bm_bitmap_size;
# 75 "tests/dct8x8/BmpUtil.h"
uint32 _bm_hor_resolution;
# 76 "tests/dct8x8/BmpUtil.h"
uint32 _bm_ver_resolution;
# 77 "tests/dct8x8/BmpUtil.h"
uint32 _bm_num_colors_used;
# 78 "tests/dct8x8/BmpUtil.h"
uint32 _bm_num_important_colors;
# 79 "tests/dct8x8/BmpUtil.h"
} BMPInfoHeader;
# 85 "tests/dct8x8/BmpUtil.h"
#pragma pack ( )
# 98 "tests/dct8x8/BmpUtil.h"
typedef
# 95 "tests/dct8x8/BmpUtil.h"
struct {
# 96 "tests/dct8x8/BmpUtil.h"
int width;
# 97 "tests/dct8x8/BmpUtil.h"
int height;
# 98 "tests/dct8x8/BmpUtil.h"
} ROI;
# 104 "tests/dct8x8/BmpUtil.h"
typedef unsigned char byte;
# 109 "tests/dct8x8/BmpUtil.h"
extern "C" int clamp_0_255(int );
# 110 "tests/dct8x8/BmpUtil.h"
extern "C" float round_f(float );
# 111 "tests/dct8x8/BmpUtil.h"
extern "C" byte *MallocPlaneByte(int , int , int * );
# 112 "tests/dct8x8/BmpUtil.h"
extern "C" short *MallocPlaneShort(int , int , int * );
# 113 "tests/dct8x8/BmpUtil.h"
extern "C" float *MallocPlaneFloat(int , int , int * );
# 114 "tests/dct8x8/BmpUtil.h"
extern "C" void CopyByte2Float(byte * , int , float * , int , ROI );
# 115 "tests/dct8x8/BmpUtil.h"
extern "C" void CopyFloat2Byte(float * , int , byte * , int , ROI );
# 116 "tests/dct8x8/BmpUtil.h"
extern "C" void FreePlane(void * );
# 117 "tests/dct8x8/BmpUtil.h"
extern "C" void AddFloatPlane(float , float * , int , ROI );
# 118 "tests/dct8x8/BmpUtil.h"
extern "C" void MulFloatPlane(float , float * , int , ROI );
# 119 "tests/dct8x8/BmpUtil.h"
extern "C" int PreLoadBmp(char * , int * , int * );
# 120 "tests/dct8x8/BmpUtil.h"
extern "C" void LoadBmpAsGray(char * , int , ROI , byte * );
# 121 "tests/dct8x8/BmpUtil.h"
extern "C" void DumpBmpAsGray(char * , byte * , int , ROI );
# 122 "tests/dct8x8/BmpUtil.h"
extern "C" void DumpBlockF(float * , int , char * );
# 123 "tests/dct8x8/BmpUtil.h"
extern "C" void DumpBlock(byte * , int , char * );
# 124 "tests/dct8x8/BmpUtil.h"
extern "C" float CalculateMSE(byte * , byte * , int , ROI );
# 125 "tests/dct8x8/BmpUtil.h"
extern "C" float CalculatePSNR(byte * , byte * , int , ROI );
# 40 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void computeDCT8x8Gold1(const float * , float * , int , ROI );
# 41 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void computeIDCT8x8Gold1(const float * , float * , int , ROI );
# 42 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void quantizeGoldFloat(float * , int , ROI );
# 43 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void quantizeGoldShort(short * , int , ROI );
# 44 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void computeDCT8x8Gold2(const float * , float * , int , ROI );
# 45 "tests/dct8x8/DCT8x8_Gold.h"
extern "C" void computeIDCT8x8Gold2(const float * , float * , int , ROI );
# 49 "tests/dct8x8/dct8x8.cu"
static texture< float, 2, cudaReadModeElementType> TexSrc;
# 32 "tests/dct8x8/dct8x8_kernel1.cu"
static float DCTv8matrix[64];
# 45 "tests/dct8x8/dct8x8_kernel1.cu"
__attribute__((unused)) static float CurBlockLocal1[64];
# 46 "tests/dct8x8/dct8x8_kernel1.cu"
__attribute__((unused)) static float CurBlockLocal2[64];
# 61 "tests/dct8x8/dct8x8_kernel1.cu"
void CUDAkernel1DCT(float *Dst, int ImgWidth, int OffsetXBlocks, int OffsetYBlocks) ;
# 130 "tests/dct8x8/dct8x8_kernel1.cu"
void CUDAkernel1IDCT(float *Dst, int ImgWidth, int OffsetXBlocks, int OffsetYBlocks) ;
# 83 "tests/dct8x8/dct8x8_kernel2.cu"
__attribute__((unused)) void CUDAsubroutineInplaceDCTvector(float *Vect0, int Step)
# 84 "tests/dct8x8/dct8x8_kernel2.cu"
{int volatile ___ = 1;(void)Vect0;(void)Step;
# 117 "tests/dct8x8/dct8x8_kernel2.cu"
exit(___);}
# 129 "tests/dct8x8/dct8x8_kernel2.cu"
__attribute__((unused)) void CUDAsubroutineInplaceIDCTvector(float *Vect0, int Step)
# 130 "tests/dct8x8/dct8x8_kernel2.cu"
{int volatile ___ = 1;(void)Vect0;(void)Step;
# 164 "tests/dct8x8/dct8x8_kernel2.cu"
exit(___);}
# 181 "tests/dct8x8/dct8x8_kernel2.cu"
void CUDAkernel2DCT(float *dst, float *src, int ImgStride) ;
# 225 "tests/dct8x8/dct8x8_kernel2.cu"
void CUDAkernel2IDCT(float *dst, float *src, int ImgStride) ;
# 87 "tests/dct8x8/dct8x8_kernel_short.cu"
union PackedShorts {
# 90 "tests/dct8x8/dct8x8_kernel_short.cu"
struct
# 89 "tests/dct8x8/dct8x8_kernel_short.cu"
 __attribute((aligned(8))) {
# 91 "tests/dct8x8/dct8x8_kernel_short.cu"
short hShort1;
# 92 "tests/dct8x8/dct8x8_kernel_short.cu"
short hShort2;
# 93 "tests/dct8x8/dct8x8_kernel_short.cu"
};
# 94 "tests/dct8x8/dct8x8_kernel_short.cu"
unsigned hInt;
# 95 "tests/dct8x8/dct8x8_kernel_short.cu"
};
# 101 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) inline short unfixh(int x)
# 102 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)x;
# 104 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 110 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) inline int unfixo(int x)
# 111 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)x;
# 113 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 125 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) void CUDAshortInplaceDCT(short *SrcDst, int Stride)
# 126 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)SrcDst;(void)Stride;
# 194 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 205 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) void CUDAshortInplaceDCT(unsigned *V8)
# 206 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)V8;
# 267 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 279 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) void CUDAshortInplaceIDCT(short *SrcDst, int Stride)
# 280 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)SrcDst;(void)Stride;
# 347 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 358 "tests/dct8x8/dct8x8_kernel_short.cu"
__attribute__((unused)) void CUDAshortInplaceIDCT(unsigned *V8)
# 359 "tests/dct8x8/dct8x8_kernel_short.cu"
{int volatile ___ = 1;(void)V8;
# 420 "tests/dct8x8/dct8x8_kernel_short.cu"
exit(___);}
# 441 "tests/dct8x8/dct8x8_kernel_short.cu"
void CUDAkernelShortDCT(short *SrcDst, int ImgStride) ;
# 486 "tests/dct8x8/dct8x8_kernel_short.cu"
void CUDAkernelShortIDCT(short *SrcDst, int ImgStride) ;
# 29 "tests/dct8x8/dct8x8_kernel_quantization.cu"
static short Q[64];
# 51 "tests/dct8x8/dct8x8_kernel_quantization.cu"
void CUDAkernelQuantizationFloat(float *SrcDst, int Stride) ;
# 84 "tests/dct8x8/dct8x8_kernel_quantization.cu"
void CUDAkernelQuantizationShort(short *SrcDst, int Stride) ;
# 70 "tests/dct8x8/dct8x8.cu"
float WrapperGold1(byte *ImgSrc, byte *ImgDst, int Stride, ROI Size)
# 71 "tests/dct8x8/dct8x8.cu"
{
# 73 "tests/dct8x8/dct8x8.cu"
int StrideF;
# 74 "tests/dct8x8/dct8x8.cu"
float *ImgF1 = MallocPlaneFloat(Size.width, Size.height, &StrideF);
# 75 "tests/dct8x8/dct8x8.cu"
float *ImgF2 = MallocPlaneFloat(Size.width, Size.height, &StrideF);
# 78 "tests/dct8x8/dct8x8.cu"
CopyByte2Float(ImgSrc, Stride, ImgF1, StrideF, Size);
# 79 "tests/dct8x8/dct8x8.cu"
AddFloatPlane(-(128.0F), ImgF1, StrideF, Size);
# 82 "tests/dct8x8/dct8x8.cu"
unsigned timerGold = (0);
# 83 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutCreateTimer(&timerGold), "tests/dct8x8/dct8x8.cu", 83);
# 84 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutResetTimer(timerGold), "tests/dct8x8/dct8x8.cu", 84);
# 87 "tests/dct8x8/dct8x8.cu"
for (int i = 0; i < 10; i++)
# 88 "tests/dct8x8/dct8x8.cu"
{
# 89 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStartTimer(timerGold), "tests/dct8x8/dct8x8.cu", 89);
# 90 "tests/dct8x8/dct8x8.cu"
computeDCT8x8Gold1(ImgF1, ImgF2, StrideF, Size);
# 91 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStopTimer(timerGold), "tests/dct8x8/dct8x8.cu", 91);
# 92 "tests/dct8x8/dct8x8.cu"
}
# 95 "tests/dct8x8/dct8x8.cu"
float TimerGoldSpan = cutGetAverageTimerValue(timerGold);
# 96 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutDeleteTimer(timerGold), "tests/dct8x8/dct8x8.cu", 96);
# 99 "tests/dct8x8/dct8x8.cu"
quantizeGoldFloat(ImgF2, StrideF, Size);
# 102 "tests/dct8x8/dct8x8.cu"
computeIDCT8x8Gold1(ImgF2, ImgF1, StrideF, Size);
# 105 "tests/dct8x8/dct8x8.cu"
AddFloatPlane((128.0F), ImgF1, StrideF, Size);
# 106 "tests/dct8x8/dct8x8.cu"
CopyFloat2Byte(ImgF1, StrideF, ImgDst, Stride, Size);
# 109 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgF1);
# 110 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgF2);
# 113 "tests/dct8x8/dct8x8.cu"
return TimerGoldSpan;
# 114 "tests/dct8x8/dct8x8.cu"
}
# 128 "tests/dct8x8/dct8x8.cu"
float WrapperGold2(byte *ImgSrc, byte *ImgDst, int Stride, ROI Size)
# 129 "tests/dct8x8/dct8x8.cu"
{
# 131 "tests/dct8x8/dct8x8.cu"
int StrideF;
# 132 "tests/dct8x8/dct8x8.cu"
float *ImgF1 = MallocPlaneFloat(Size.width, Size.height, &StrideF);
# 133 "tests/dct8x8/dct8x8.cu"
float *ImgF2 = MallocPlaneFloat(Size.width, Size.height, &StrideF);
# 136 "tests/dct8x8/dct8x8.cu"
CopyByte2Float(ImgSrc, Stride, ImgF1, StrideF, Size);
# 137 "tests/dct8x8/dct8x8.cu"
AddFloatPlane(-(128.0F), ImgF1, StrideF, Size);
# 140 "tests/dct8x8/dct8x8.cu"
unsigned timerGold = (0);
# 141 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutCreateTimer(&timerGold), "tests/dct8x8/dct8x8.cu", 141);
# 142 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutResetTimer(timerGold), "tests/dct8x8/dct8x8.cu", 142);
# 145 "tests/dct8x8/dct8x8.cu"
for (int i = 0; i < 10; i++)
# 146 "tests/dct8x8/dct8x8.cu"
{
# 147 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStartTimer(timerGold), "tests/dct8x8/dct8x8.cu", 147);
# 148 "tests/dct8x8/dct8x8.cu"
computeDCT8x8Gold2(ImgF1, ImgF2, StrideF, Size);
# 149 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStopTimer(timerGold), "tests/dct8x8/dct8x8.cu", 149);
# 150 "tests/dct8x8/dct8x8.cu"
}
# 153 "tests/dct8x8/dct8x8.cu"
float TimerGoldSpan = cutGetAverageTimerValue(timerGold);
# 154 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutDeleteTimer(timerGold), "tests/dct8x8/dct8x8.cu", 154);
# 157 "tests/dct8x8/dct8x8.cu"
quantizeGoldFloat(ImgF2, StrideF, Size);
# 160 "tests/dct8x8/dct8x8.cu"
computeIDCT8x8Gold2(ImgF2, ImgF1, StrideF, Size);
# 163 "tests/dct8x8/dct8x8.cu"
AddFloatPlane((128.0F), ImgF1, StrideF, Size);
# 164 "tests/dct8x8/dct8x8.cu"
CopyFloat2Byte(ImgF1, StrideF, ImgDst, Stride, Size);
# 167 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgF1);
# 168 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgF2);
# 171 "tests/dct8x8/dct8x8.cu"
return TimerGoldSpan;
# 172 "tests/dct8x8/dct8x8.cu"
}
# 186 "tests/dct8x8/dct8x8.cu"
float WrapperCUDA1(byte *ImgSrc, byte *ImgDst, int Stride, ROI Size)
# 187 "tests/dct8x8/dct8x8.cu"
{
# 189 "tests/dct8x8/dct8x8.cu"
cudaChannelFormatDesc floattex = cudaCreateChannelDesc< float> ();
# 192 "tests/dct8x8/dct8x8.cu"
cudaArray *Src;
# 193 "tests/dct8x8/dct8x8.cu"
float *Dst;
# 194 "tests/dct8x8/dct8x8.cu"
size_t DstStride;
# 195 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMallocArray(&Src, &floattex, Size.width, Size.height), "tests/dct8x8/dct8x8.cu", 195);
# 196 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMallocPitch((void **)(&Dst), &DstStride, (Size.width) * sizeof(float), Size.height), "tests/dct8x8/dct8x8.cu", 196);
# 197 "tests/dct8x8/dct8x8.cu"
DstStride /= sizeof(float);
# 200 "tests/dct8x8/dct8x8.cu"
int ImgSrcFStride;
# 201 "tests/dct8x8/dct8x8.cu"
float *ImgSrcF = MallocPlaneFloat(Size.width, Size.height, &ImgSrcFStride);
# 202 "tests/dct8x8/dct8x8.cu"
CopyByte2Float(ImgSrc, Stride, ImgSrcF, ImgSrcFStride, Size);
# 203 "tests/dct8x8/dct8x8.cu"
AddFloatPlane(-(128.0F), ImgSrcF, ImgSrcFStride, Size);
# 206 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2DToArray(Src, 0, 0, ImgSrcF, ImgSrcFStride * sizeof(float), (Size.width) * sizeof(float), Size.height, cudaMemcpyHostToDevice), "tests/dct8x8/dct8x8.cu", 209);
# 212 "tests/dct8x8/dct8x8.cu"
dim3 threads(8, 8);
# 213 "tests/dct8x8/dct8x8.cu"
dim3 grid((Size.width) / 8, (Size.height) / 8);
# 216 "tests/dct8x8/dct8x8.cu"
unsigned timerCUDA = (0);
# 217 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutCreateTimer(&timerCUDA), "tests/dct8x8/dct8x8.cu", 217);
# 218 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutResetTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 218);
# 221 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaBindTextureToArray(TexSrc, Src), "tests/dct8x8/dct8x8.cu", 221);
# 222 "tests/dct8x8/dct8x8.cu"
for (int i = 0; i < 10; i++)
# 223 "tests/dct8x8/dct8x8.cu"
{
# 224 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStartTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 224);
# 225 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : CUDAkernel1DCT(Dst, (int)DstStride, 0, 0);
# 226 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 226);
# 227 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStopTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 227);
# 228 "tests/dct8x8/dct8x8.cu"
}
# 229 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaUnbindTexture(TexSrc), "tests/dct8x8/dct8x8.cu", 229);
# 230 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 230);
# 233 "tests/dct8x8/dct8x8.cu"
float TimerCUDASpan = cutGetAverageTimerValue(timerCUDA);
# 234 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutDeleteTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 234);
# 237 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : CUDAkernelQuantizationFloat(Dst, (int)DstStride);
# 238 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 238);
# 241 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2DToArray(Src, 0, 0, Dst, DstStride * sizeof(float), (Size.width) * sizeof(float), Size.height, cudaMemcpyDeviceToDevice), "tests/dct8x8/dct8x8.cu", 244);
# 247 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaBindTextureToArray(TexSrc, Src), "tests/dct8x8/dct8x8.cu", 247);
# 248 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : CUDAkernel1IDCT(Dst, (int)DstStride, 0, 0);
# 249 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaUnbindTexture(TexSrc), "tests/dct8x8/dct8x8.cu", 249);
# 250 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 250);
# 253 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2D(ImgSrcF, ImgSrcFStride * sizeof(float), Dst, DstStride * sizeof(float), (Size.width) * sizeof(float), Size.height, cudaMemcpyDeviceToHost), "tests/dct8x8/dct8x8.cu", 256);
# 259 "tests/dct8x8/dct8x8.cu"
AddFloatPlane((128.0F), ImgSrcF, ImgSrcFStride, Size);
# 260 "tests/dct8x8/dct8x8.cu"
CopyFloat2Byte(ImgSrcF, ImgSrcFStride, ImgDst, Stride, Size);
# 263 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaFreeArray(Src), "tests/dct8x8/dct8x8.cu", 263);
# 264 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaFree(Dst), "tests/dct8x8/dct8x8.cu", 264);
# 265 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgSrcF);
# 268 "tests/dct8x8/dct8x8.cu"
return TimerCUDASpan;
# 269 "tests/dct8x8/dct8x8.cu"
}
# 286 "tests/dct8x8/dct8x8.cu"
float WrapperCUDA2(byte *ImgSrc, byte *ImgDst, int Stride, ROI Size) {
# 288 "tests/dct8x8/dct8x8.cu"
int StrideF;
# 289 "tests/dct8x8/dct8x8.cu"
float *ImgF1 = MallocPlaneFloat(Size.width, Size.height, &StrideF);
# 292 "tests/dct8x8/dct8x8.cu"
CopyByte2Float(ImgSrc, Stride, ImgF1, StrideF, Size);
# 293 "tests/dct8x8/dct8x8.cu"
AddFloatPlane(-(128.0F), ImgF1, StrideF, Size);
# 296 "tests/dct8x8/dct8x8.cu"
float *src, *dst;
# 297 "tests/dct8x8/dct8x8.cu"
size_t DeviceStride;
# 298 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMallocPitch((void **)(&src), &DeviceStride, (Size.width) * sizeof(float), Size.height), "tests/dct8x8/dct8x8.cu", 298);
# 299 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMallocPitch((void **)(&dst), &DeviceStride, (Size.width) * sizeof(float), Size.height), "tests/dct8x8/dct8x8.cu", 299);
# 300 "tests/dct8x8/dct8x8.cu"
DeviceStride /= sizeof(float);
# 303 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2D(src, DeviceStride * sizeof(float), ImgF1, StrideF * sizeof(float), (Size.width) * sizeof(float), Size.height, cudaMemcpyHostToDevice), "tests/dct8x8/dct8x8.cu", 306);
# 309 "tests/dct8x8/dct8x8.cu"
unsigned timerCUDA = (0);
# 310 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutCreateTimer(&timerCUDA), "tests/dct8x8/dct8x8.cu", 310);
# 313 "tests/dct8x8/dct8x8.cu"
dim3 GridFullWarps((Size.width) / 32, (Size.height) / 16, 1);
# 314 "tests/dct8x8/dct8x8.cu"
dim3 ThreadsFullWarps(8, 32 / 8, 16 / 8);
# 317 "tests/dct8x8/dct8x8.cu"
const int numIterations = 100;
# 318 "tests/dct8x8/dct8x8.cu"
for (int i = (-1); i < numIterations; i++) {
# 319 "tests/dct8x8/dct8x8.cu"
if (i == 0) {
# 320 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 320);
# 321 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutResetTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 321);
# 322 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStartTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 322);
# 323 "tests/dct8x8/dct8x8.cu"
}
# 325 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridFullWarps, ThreadsFullWarps) ? ((void)0) : CUDAkernel2DCT(dst, src, (int)DeviceStride);
# 326 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 326);
# 327 "tests/dct8x8/dct8x8.cu"
}
# 328 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 328);
# 329 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStopTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 329);
# 332 "tests/dct8x8/dct8x8.cu"
float avgTime = (((float)cutGetTimerValue(timerCUDA)) / ((float)numIterations));
# 333 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutDeleteTimer(timerCUDA), "tests/dct8x8/dct8x8.cu", 333);
# 334 "tests/dct8x8/dct8x8.cu"
shrLog("%f MPix/s //%f ms\n", (((9.999999999999999547e-07) * ((float)(Size.width))) * ((float)(Size.height))) / ((0.001000000000000000021) * avgTime), avgTime);
# 337 "tests/dct8x8/dct8x8.cu"
dim3 ThreadsSmallBlocks(8, 8);
# 338 "tests/dct8x8/dct8x8.cu"
dim3 GridSmallBlocks((Size.width) / 8, (Size.height) / 8);
# 341 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridSmallBlocks, ThreadsSmallBlocks) ? ((void)0) : CUDAkernelQuantizationFloat(dst, (int)DeviceStride);
# 342 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 342);
# 345 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridFullWarps, ThreadsFullWarps) ? ((void)0) : CUDAkernel2IDCT(src, dst, (int)DeviceStride);
# 346 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 346);
# 347 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 347);
# 350 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2D(ImgF1, StrideF * sizeof(float), src, DeviceStride * sizeof(float), (Size.width) * sizeof(float), Size.height, cudaMemcpyDeviceToHost), "tests/dct8x8/dct8x8.cu", 353);
# 356 "tests/dct8x8/dct8x8.cu"
AddFloatPlane((128.0F), ImgF1, StrideF, Size);
# 357 "tests/dct8x8/dct8x8.cu"
CopyFloat2Byte(ImgF1, StrideF, ImgDst, Stride, Size);
# 360 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaFree(dst), "tests/dct8x8/dct8x8.cu", 360);
# 361 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaFree(src), "tests/dct8x8/dct8x8.cu", 361);
# 362 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgF1);
# 365 "tests/dct8x8/dct8x8.cu"
return avgTime;
# 366 "tests/dct8x8/dct8x8.cu"
}
# 380 "tests/dct8x8/dct8x8.cu"
float WrapperCUDAshort(byte *ImgSrc, byte *ImgDst, int Stride, ROI Size)
# 381 "tests/dct8x8/dct8x8.cu"
{
# 383 "tests/dct8x8/dct8x8.cu"
int StrideS;
# 384 "tests/dct8x8/dct8x8.cu"
short *ImgS1 = MallocPlaneShort(Size.width, Size.height, &StrideS);
# 387 "tests/dct8x8/dct8x8.cu"
for (int i = 0; i < (Size.height); i++)
# 388 "tests/dct8x8/dct8x8.cu"
{
# 389 "tests/dct8x8/dct8x8.cu"
for (int j = 0; j < (Size.width); j++)
# 390 "tests/dct8x8/dct8x8.cu"
{
# 391 "tests/dct8x8/dct8x8.cu"
(ImgS1[(i * StrideS) + j]) = (((short)(ImgSrc[(i * Stride) + j])) - 128);
# 392 "tests/dct8x8/dct8x8.cu"
}
# 393 "tests/dct8x8/dct8x8.cu"
}
# 396 "tests/dct8x8/dct8x8.cu"
short *SrcDst;
# 397 "tests/dct8x8/dct8x8.cu"
size_t DeviceStride;
# 398 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMallocPitch((void **)(&SrcDst), &DeviceStride, (Size.width) * sizeof(short), Size.height), "tests/dct8x8/dct8x8.cu", 398);
# 399 "tests/dct8x8/dct8x8.cu"
DeviceStride /= sizeof(short);
# 402 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2D(SrcDst, DeviceStride * sizeof(short), ImgS1, StrideS * sizeof(short), (Size.width) * sizeof(short), Size.height, cudaMemcpyHostToDevice), "tests/dct8x8/dct8x8.cu", 405);
# 408 "tests/dct8x8/dct8x8.cu"
unsigned timerLibJpeg = (0);
# 409 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutCreateTimer(&timerLibJpeg), "tests/dct8x8/dct8x8.cu", 409);
# 410 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutResetTimer(timerLibJpeg), "tests/dct8x8/dct8x8.cu", 410);
# 413 "tests/dct8x8/dct8x8.cu"
dim3 GridShort((Size.width) / 32, (Size.height) / 32, 1);
# 414 "tests/dct8x8/dct8x8.cu"
dim3 ThreadsShort(8, 32 / 8, 32 / 8);
# 417 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStartTimer(timerLibJpeg), "tests/dct8x8/dct8x8.cu", 417);
# 418 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridShort, ThreadsShort) ? ((void)0) : CUDAkernelShortDCT(SrcDst, (int)DeviceStride);
# 419 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 419);
# 420 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutStopTimer(timerLibJpeg), "tests/dct8x8/dct8x8.cu", 420);
# 421 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 421);
# 424 "tests/dct8x8/dct8x8.cu"
float TimerLibJpegSpan16b = cutGetAverageTimerValue(timerLibJpeg);
# 425 "tests/dct8x8/dct8x8.cu"
__cutilCheckError(cutDeleteTimer(timerLibJpeg), "tests/dct8x8/dct8x8.cu", 425);
# 428 "tests/dct8x8/dct8x8.cu"
dim3 ThreadsSmallBlocks(8, 8);
# 429 "tests/dct8x8/dct8x8.cu"
dim3 GridSmallBlocks((Size.width) / 8, (Size.height) / 8);
# 432 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridSmallBlocks, ThreadsSmallBlocks) ? ((void)0) : CUDAkernelQuantizationShort(SrcDst, (int)DeviceStride);
# 433 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 433);
# 436 "tests/dct8x8/dct8x8.cu"
cudaConfigureCall(GridShort, ThreadsShort) ? ((void)0) : CUDAkernelShortIDCT(SrcDst, (int)DeviceStride);
# 437 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/dct8x8/dct8x8.cu", 437);
# 438 "tests/dct8x8/dct8x8.cu"
__cutilCheckMsg("Kernel execution failed", "tests/dct8x8/dct8x8.cu", 438);
# 441 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaMemcpy2D(ImgS1, StrideS * sizeof(short), SrcDst, DeviceStride * sizeof(short), (Size.width) * sizeof(short), Size.height, cudaMemcpyDeviceToHost), "tests/dct8x8/dct8x8.cu", 444);
# 447 "tests/dct8x8/dct8x8.cu"
for (int i = 0; i < (Size.height); i++)
# 448 "tests/dct8x8/dct8x8.cu"
{
# 449 "tests/dct8x8/dct8x8.cu"
for (int j = 0; j < (Size.width); j++)
# 450 "tests/dct8x8/dct8x8.cu"
{
# 451 "tests/dct8x8/dct8x8.cu"
(ImgDst[(i * Stride) + j]) = (clamp_0_255((ImgS1[(i * StrideS) + j]) + 128));
# 452 "tests/dct8x8/dct8x8.cu"
}
# 453 "tests/dct8x8/dct8x8.cu"
}
# 456 "tests/dct8x8/dct8x8.cu"
__cudaSafeCall(cudaFree(SrcDst), "tests/dct8x8/dct8x8.cu", 456);
# 457 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgS1);
# 460 "tests/dct8x8/dct8x8.cu"
return TimerLibJpegSpan16b;
# 461 "tests/dct8x8/dct8x8.cu"
}
# 475 "tests/dct8x8/dct8x8.cu"
int main(int argc, char **argv)
# 476 "tests/dct8x8/dct8x8.cu"
{
# 482 "tests/dct8x8/dct8x8.cu"
if (cutCheckCmdLineFlag(argc, (const char **)argv, "device")) {
# 483 "tests/dct8x8/dct8x8.cu"
cutilDeviceInit(argc, argv); } else {
# 485 "tests/dct8x8/dct8x8.cu"
cudaSetDevice(cutGetMaxGflopsDeviceId()); }
# 488 "tests/dct8x8/dct8x8.cu"
char SampleImageFname[] = "barbara.bmp";
# 489 "tests/dct8x8/dct8x8.cu"
char SampleImageFnameResGold1[] = "barbara_gold1.bmp";
# 490 "tests/dct8x8/dct8x8.cu"
char SampleImageFnameResGold2[] = "barbara_gold2.bmp";
# 491 "tests/dct8x8/dct8x8.cu"
char SampleImageFnameResCUDA1[] = "barbara_cuda1.bmp";
# 492 "tests/dct8x8/dct8x8.cu"
char SampleImageFnameResCUDA2[] = "barbara_cuda2.bmp";
# 493 "tests/dct8x8/dct8x8.cu"
char SampleImageFnameResCUDAshort[] = "barbara_cuda_short.bmp";
# 495 "tests/dct8x8/dct8x8.cu"
char *pSampleImageFpath = cutFindFilePath(SampleImageFname, argv[0]);
# 498 "tests/dct8x8/dct8x8.cu"
int ImgWidth, ImgHeight;
# 499 "tests/dct8x8/dct8x8.cu"
ROI ImgSize;
# 500 "tests/dct8x8/dct8x8.cu"
int res = PreLoadBmp(pSampleImageFpath, &ImgWidth, &ImgHeight);
# 501 "tests/dct8x8/dct8x8.cu"
(ImgSize.width) = ImgWidth;
# 502 "tests/dct8x8/dct8x8.cu"
(ImgSize.height) = ImgHeight;
# 505 "tests/dct8x8/dct8x8.cu"
shrLog("CUDA sample DCT/IDCT implementation\n");
# 506 "tests/dct8x8/dct8x8.cu"
shrLog("===================================\n");
# 507 "tests/dct8x8/dct8x8.cu"
shrLog("Loading test image: %s... ", SampleImageFname);
# 509 "tests/dct8x8/dct8x8.cu"
if (res)
# 510 "tests/dct8x8/dct8x8.cu"
{
# 511 "tests/dct8x8/dct8x8.cu"
shrLog("\nError: Image file not found or invalid!\n");
# 512 "tests/dct8x8/dct8x8.cu"
shrLog("Press ENTER to exit...\n");
# 513 "tests/dct8x8/dct8x8.cu"
getchar();
# 516 "tests/dct8x8/dct8x8.cu"
__cutilExit(argc, argv);
# 517 "tests/dct8x8/dct8x8.cu"
return 1;
# 518 "tests/dct8x8/dct8x8.cu"
}
# 521 "tests/dct8x8/dct8x8.cu"
if (((ImgWidth % 8) != 0) || ((ImgHeight % 8) != 0))
# 522 "tests/dct8x8/dct8x8.cu"
{
# 523 "tests/dct8x8/dct8x8.cu"
shrLog("\nError: Input image dimensions must be multiples of 8!\n");
# 524 "tests/dct8x8/dct8x8.cu"
shrLog("Press ENTER to exit...\n");
# 525 "tests/dct8x8/dct8x8.cu"
getchar();
# 528 "tests/dct8x8/dct8x8.cu"
__cutilExit(argc, argv);
# 529 "tests/dct8x8/dct8x8.cu"
return 1;
# 530 "tests/dct8x8/dct8x8.cu"
}
# 531 "tests/dct8x8/dct8x8.cu"
shrLog("[%d x %d]... ", ImgWidth, ImgHeight);
# 534 "tests/dct8x8/dct8x8.cu"
int ImgStride;
# 535 "tests/dct8x8/dct8x8.cu"
byte *ImgSrc = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 536 "tests/dct8x8/dct8x8.cu"
byte *ImgDstGold1 = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 537 "tests/dct8x8/dct8x8.cu"
byte *ImgDstGold2 = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 538 "tests/dct8x8/dct8x8.cu"
byte *ImgDstCUDA1 = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 539 "tests/dct8x8/dct8x8.cu"
byte *ImgDstCUDA2 = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 540 "tests/dct8x8/dct8x8.cu"
byte *ImgDstCUDAshort = MallocPlaneByte(ImgWidth, ImgHeight, &ImgStride);
# 543 "tests/dct8x8/dct8x8.cu"
LoadBmpAsGray(pSampleImageFpath, ImgStride, ImgSize, ImgSrc);
# 550 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nRunning Gold 1 (CPU) version... ");
# 551 "tests/dct8x8/dct8x8.cu"
float TimeGold1 = WrapperGold1(ImgSrc, ImgDstGold1, ImgStride, ImgSize);
# 554 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nRunning Gold 2 (CPU) version... ");
# 555 "tests/dct8x8/dct8x8.cu"
float TimeGold2 = WrapperGold2(ImgSrc, ImgDstGold2, ImgStride, ImgSize);
# 558 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nRunning CUDA 1 (GPU) version... ");
# 559 "tests/dct8x8/dct8x8.cu"
float TimeCUDA1 = WrapperCUDA1(ImgSrc, ImgDstCUDA1, ImgStride, ImgSize);
# 562 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nRunning CUDA 2 (GPU) version... ");
# 563 "tests/dct8x8/dct8x8.cu"
float TimeCUDA2 = WrapperCUDA2(ImgSrc, ImgDstCUDA2, ImgStride, ImgSize);
# 566 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nRunning CUDA short (GPU) version... ");
# 567 "tests/dct8x8/dct8x8.cu"
float TimeCUDAshort = WrapperCUDAshort(ImgSrc, ImgDstCUDAshort, ImgStride, ImgSize);
# 573 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nDumping result to %s... ", SampleImageFnameResGold1);
# 574 "tests/dct8x8/dct8x8.cu"
DumpBmpAsGray(SampleImageFnameResGold1, ImgDstGold1, ImgStride, ImgSize);
# 577 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nDumping result to %s... ", SampleImageFnameResGold2);
# 578 "tests/dct8x8/dct8x8.cu"
DumpBmpAsGray(SampleImageFnameResGold2, ImgDstGold2, ImgStride, ImgSize);
# 581 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nDumping result to %s... ", SampleImageFnameResCUDA1);
# 582 "tests/dct8x8/dct8x8.cu"
DumpBmpAsGray(SampleImageFnameResCUDA1, ImgDstCUDA1, ImgStride, ImgSize);
# 585 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nDumping result to %s... ", SampleImageFnameResCUDA2);
# 586 "tests/dct8x8/dct8x8.cu"
DumpBmpAsGray(SampleImageFnameResCUDA2, ImgDstCUDA2, ImgStride, ImgSize);
# 589 "tests/dct8x8/dct8x8.cu"
shrLog("Success\nDumping result to %s... ", SampleImageFnameResCUDAshort);
# 590 "tests/dct8x8/dct8x8.cu"
DumpBmpAsGray(SampleImageFnameResCUDAshort, ImgDstCUDAshort, ImgStride, ImgSize);
# 592 "tests/dct8x8/dct8x8.cu"
shrLog("Success\n");
# 597 "tests/dct8x8/dct8x8.cu"
shrLog("Processing time (CUDA 1)    : %f ms \n", TimeCUDA1);
# 598 "tests/dct8x8/dct8x8.cu"
shrLog("Processing time (CUDA 2)    : %f ms \n", TimeCUDA2);
# 599 "tests/dct8x8/dct8x8.cu"
shrLog("Processing time (CUDA short): %f ms \n", TimeCUDAshort);
# 603 "tests/dct8x8/dct8x8.cu"
float PSNR_Src_DstGold1 = CalculatePSNR(ImgSrc, ImgDstGold1, ImgStride, ImgSize);
# 604 "tests/dct8x8/dct8x8.cu"
float PSNR_Src_DstGold2 = CalculatePSNR(ImgSrc, ImgDstGold2, ImgStride, ImgSize);
# 605 "tests/dct8x8/dct8x8.cu"
float PSNR_Src_DstCUDA1 = CalculatePSNR(ImgSrc, ImgDstCUDA1, ImgStride, ImgSize);
# 606 "tests/dct8x8/dct8x8.cu"
float PSNR_Src_DstCUDA2 = CalculatePSNR(ImgSrc, ImgDstCUDA2, ImgStride, ImgSize);
# 607 "tests/dct8x8/dct8x8.cu"
float PSNR_Src_DstCUDAshort = CalculatePSNR(ImgSrc, ImgDstCUDAshort, ImgStride, ImgSize);
# 608 "tests/dct8x8/dct8x8.cu"
float PSNR_DstGold1_DstCUDA1 = CalculatePSNR(ImgDstGold1, ImgDstCUDA1, ImgStride, ImgSize);
# 609 "tests/dct8x8/dct8x8.cu"
float PSNR_DstGold2_DstCUDA2 = CalculatePSNR(ImgDstGold2, ImgDstCUDA2, ImgStride, ImgSize);
# 610 "tests/dct8x8/dct8x8.cu"
float PSNR_DstGold2_DstCUDA16b = CalculatePSNR(ImgDstGold2, ImgDstCUDAshort, ImgStride, ImgSize);
# 612 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR Original    <---> CPU(Gold 1)    : %f\n", PSNR_Src_DstGold1);
# 613 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR Original    <---> CPU(Gold 2)    : %f\n", PSNR_Src_DstGold2);
# 614 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR Original    <---> GPU(CUDA 1)    : %f\n", PSNR_Src_DstCUDA1);
# 615 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR Original    <---> GPU(CUDA 2)    : %f\n", PSNR_Src_DstCUDA2);
# 616 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR Original    <---> GPU(CUDA short): %f\n", PSNR_Src_DstCUDAshort);
# 617 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR CPU(Gold 1) <---> GPU(CUDA 1)    : %f\n", PSNR_DstGold1_DstCUDA1);
# 618 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR CPU(Gold 2) <---> GPU(CUDA 2)    : %f\n", PSNR_DstGold2_DstCUDA2);
# 619 "tests/dct8x8/dct8x8.cu"
shrLog("PSNR CPU(Gold 2) <---> GPU(CUDA short): %f\n", PSNR_DstGold2_DstCUDA16b);
# 621 "tests/dct8x8/dct8x8.cu"
if (((PSNR_DstGold1_DstCUDA1 > (40)) && (PSNR_DstGold2_DstCUDA2 > (40))) && (PSNR_DstGold2_DstCUDA16b > (40)))
# 622 "tests/dct8x8/dct8x8.cu"
{
# 623 "tests/dct8x8/dct8x8.cu"
shrLog("\nPASSED\n");
# 624 "tests/dct8x8/dct8x8.cu"
} else
# 626 "tests/dct8x8/dct8x8.cu"
{
# 627 "tests/dct8x8/dct8x8.cu"
shrLog("\nFAILED\n");
# 628 "tests/dct8x8/dct8x8.cu"
}
# 635 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgSrc);
# 636 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgDstGold1);
# 637 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgDstGold2);
# 638 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgDstCUDA1);
# 639 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgDstCUDA2);
# 640 "tests/dct8x8/dct8x8.cu"
FreePlane(ImgDstCUDAshort);
# 643 "tests/dct8x8/dct8x8.cu"
cudaThreadExit();
# 645 "tests/dct8x8/dct8x8.cu"
__cutilExit(argc, argv);
# 646 "tests/dct8x8/dct8x8.cu"
return 0;
# 647 "tests/dct8x8/dct8x8.cu"
}
# 1 "tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
# 1 "tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c" 1 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 103 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda4.1/cuda/include/common_functions.h" 1 3
# 159 "/usr/local/cuda4.1/cuda/include/common_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_functions.h" 1 3
# 2935 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_constants.h" 1 3
# 2936 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 5550 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/func_macro.h" 1 3
# 5551 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 7292 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 7577 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 7730 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_functions_dbl_ptx3.h" 1 3
# 7731 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 160 "/usr/local/cuda4.1/cuda/include/common_functions.h" 2 3
# 176 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3







#pragma pack()
# 2 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_00006d56_00000000-3_dct8x8.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000015d3b,0x0000005801000001,0x0000000000011107\n"
".quad 0x0000003800000000,0x0000001400030000,0x0000001600000040,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x63642f7374736574,0x7463642f38783874\n"
".quad 0x000075632e387838,0x762e0a0a0a0a0a0a,0x33206e6f69737265,0x677261742e0a302e\n"
".quad 0x30325f6d73207465,0x7365726464612e0a,0x3620657a69735f73,0x656c69662e0a0a34\n"
".quad 0x706d742f22203109,0x5f746678706d742f,0x3635643630303030,0x303030303030305f\n"
".quad 0x387463645f372d30,0x2e337070632e3878,0x656c69662e0a2269,0x7473657422203209\n"
".quad 0x3878387463642f73,0x5f3878387463642f,0x2e326c656e72656b,0x6c69662e0a227563\n"
".quad 0x7365742220330965,0x78387463642f7374,0x3878387463642f38,0x5f6c656e72656b5f\n"
".quad 0x75632e74726f6873,0x09656c69662e0a22,0x2f7273752f222034,0x75632f6c61636f6c\n"
".quad 0x75632f312e346164,0x2f6d76766e2f6164,0x756c636e695f6963,0x662e0a22682e6564\n"
".quad 0x7422203509656c69,0x7463642f73747365,0x387463642f387838,0x656e72656b5f3878\n"
".quad 0x2e0a2275632e316c,0x22203609656c6966,0x63642f7374736574,0x7463642f38783874\n"
".quad 0x6e72656b5f387838,0x746e6175715f6c65,0x2e6e6f6974617a69,0x6c69662e0a227563\n"
".quad 0x73752f2220370965,0x2f6c61636f6c2f72,0x2f312e3461647563,0x636e692f61647563\n"
".quad 0x7665642f6564756c,0x636e75665f656369,0x22682e736e6f6974,0x3809656c69662e0a\n"
".quad 0x6c2f7273752f2220,0x6475632f6c61636f,0x6475632f312e3461,0x64756c636e692f61\n"
".quad 0x665f6874616d2f65,0x736e6f6974636e75,0x6f6c672e0a22682e,0x7865742e206c6162\n"
".quad 0x5378655420666572,0x6168732e0a3b6372,0x696c612e20646572,0x38622e2034206e67\n"
".quad 0x636f6c4272754320,0x5b316c61636f4c6b,0x732e0a3b5d363532,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x6c42727543203862,0x6c61636f4c6b636f,0x0a3b5d3635325b32\n"
".quad 0x6e6f632e0a0a0a0a,0x67696c612e207473,0x2038622e2034206e,0x74616d3876544344\n"
".quad 0x5d3635325b786972,0x2c3334327b203d20,0x2c313831202c3420,0x303931202c323620\n"
".quad 0x3532202c3032202c,0x39202c3236202c31,0x202c313331202c34,0x2c3236202c363332\n"
".quad 0x393132202c393420,0x36202c323132202c,0x202c333432202c32,0x202c313831202c34\n"
".quad 0x2c383132202c3236,0x323431202c373520,0x3132202c3236202c,0x36202c393332202c\n"
".quad 0x31202c3236202c37,0x2c373931202c3439,0x3136202c39393120,0x34202c333432202c\n"
".quad 0x36202c313831202c,0x32202c3934202c32,0x2c323132202c3931,0x2c3132202c323620\n"
".quad 0x3736202c39333220,0x3931202c3236202c,0x202c373931202c34,0x393831202c393931\n"
".quad 0x34202c333432202c,0x31202c313831202c,0x2c303931202c3039,0x313532202c303220\n"
".quad 0x39202c303931202c,0x202c313331202c34,0x303931202c363332,0x35202c383132202c\n"
".quad 0x202c323431202c37,0x333432202c303931,0x313831202c34202c,0x3132202c3236202c\n"
".quad 0x31202c3735202c38,0x202c3236202c3234,0x2c393332202c3132,0x303931202c373620\n"
".quad 0x32202c303931202c,0x202c313532202c30,0x333432202c303931,0x313831202c34202c\n"
".quad 0x31202c303931202c,0x2c373931202c3439,0x3136202c39393120,0x3331202c3439202c\n"
".quad 0x202c363332202c31,0x202c3934202c3236,0x323132202c393132,0x3432202c3236202c\n"
".quad 0x3831202c34202c33,0x31202c3236202c31,0x2c373931202c3439,0x3136202c39393120\n"
".quad 0x3331202c3439202c,0x202c363332202c31,0x383132202c303931,0x3431202c3735202c\n"
".quad 0x202c303931202c32,0x202c34202c333432,0x2c3236202c313831,0x393132202c393420\n"
".quad 0x36202c323132202c,0x32202c3132202c32,0x202c3736202c3933,0x303931202c303931\n"
".quad 0x3532202c3032202c,0x202c303931202c31,0x202c34202c333432,0x2c3236202c313831\n"
".quad 0x3931202c34393120,0x202c393931202c37,0x2c3439202c393831,0x3332202c31333120\n"
".quad 0x202c303931202c36,0x2c3735202c383132,0x3236202c32343120,0x34202c333432202c\n"
".quad 0x36202c313831202c,0x32202c3934202c32,0x2c323132202c3931,0x3132202c30393120\n"
".quad 0x36202c393332202c,0x202c303931202c37,0x2c3032202c303931,0x3236202c31353220\n"
".quad 0x34202c333432202c,0x36202c313831202c,0x202c383132202c32,0x2c323431202c3735\n"
".quad 0x3132202c30393120,0x36202c393332202c,0x202c303931202c37,0x2c3032202c303931\n"
".quad 0x3236202c31353220,0x34202c333432202c,0x31202c313831202c,0x2c343931202c3039\n"
".quad 0x3931202c37393120,0x202c393831202c39,0x2c313331202c3439,0x3236202c36333220\n"
".quad 0x3132202c3934202c,0x202c323132202c39,0x333432202c303931,0x313831202c34202c\n"
".quad 0x3934202c3236202c,0x32202c393132202c,0x2c303931202c3231,0x393332202c313220\n"
".quad 0x3236202c3736202c,0x31202c343931202c,0x2c393931202c3739,0x333432202c313620\n"
".quad 0x313831202c34202c,0x31202c303931202c,0x202c3032202c3039,0x2c3236202c313532\n"
".quad 0x313331202c343920,0x31202c363332202c,0x2c383132202c3039,0x323431202c373520\n"
".quad 0x3432202c3236202c,0x3831202c34202c33,0x31202c3236202c31,0x202c3032202c3039\n"
".quad 0x303931202c313532,0x3331202c3439202c,0x202c363332202c31,0x202c3934202c3236\n"
".quad 0x323132202c393132,0x32202c303931202c,0x31202c34202c3334,0x202c3236202c3138\n"
".quad 0x2c3735202c383132,0x3931202c32343120,0x32202c3132202c30,0x202c3736202c3933\n"
".quad 0x2c343931202c3236,0x3931202c37393120,0x3b7d393831202c39,0x2074736e6f632e0a\n"
".quad 0x32206e67696c612e,0x315b512038622e20,0x337b203d205d3832,0x3333202c30202c32\n"
".quad 0x2c3135202c30202c,0x202c3138202c3020,0x30202c3636202c30,0x2c30202c3933202c\n"
".quad 0x202c30202c343320,0x33202c30202c3731,0x3633202c30202c33,0x2c3834202c30202c\n"
".quad 0x202c3734202c3020,0x30202c3832202c30,0x2c30202c3332202c,0x202c30202c323120\n"
".quad 0x35202c30202c3231,0x3834202c30202c31,0x2c3734202c30202c,0x202c3832202c3020\n"
".quad 0x30202c3332202c30,0x2c30202c3231202c,0x202c30202c323120,0x38202c30202c3231\n"
".quad 0x3734202c30202c31,0x2c3832202c30202c,0x202c3332202c3020,0x30202c3231202c30\n"
".quad 0x2c30202c3231202c,0x202c30202c323120,0x36202c30202c3231,0x3832202c30202c36\n"
".quad 0x2c3332202c30202c,0x202c3231202c3020,0x30202c3231202c30,0x2c30202c3231202c\n"
".quad 0x202c30202c323120,0x33202c30202c3231,0x3332202c30202c39,0x2c3231202c30202c\n"
".quad 0x202c3231202c3020,0x30202c3231202c30,0x2c30202c3231202c,0x202c30202c323120\n"
".quad 0x33202c30202c3231,0x3231202c30202c34,0x2c3231202c30202c,0x202c3231202c3020\n"
".quad 0x30202c3231202c30,0x2c30202c3231202c,0x202c30202c323120,0x31202c30202c3231\n"
".quad 0x3231202c30202c37,0x2c3231202c30202c,0x202c3231202c3020,0x30202c3231202c30\n"
".quad 0x2c30202c3231202c,0x202c30202c323120,0x0a3b7d30202c3231,0x6c62697369762e0a\n"
".quad 0x20636e75662e2065,0x4144554330335a5f,0x6974756f72627573,0x63616c706e49656e\n"
".quad 0x7463657654434465,0x2e0a28696650726f,0x622e206d61726170,0x4330335a5f203436\n"
".quad 0x6f72627573414455,0x706e49656e697475,0x765443446563616c,0x696650726f746365\n"
".quad 0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203233622e20,0x7573414455433033\n"
".quad 0x656e6974756f7262,0x446563616c706e49,0x726f746365765443,0x617261705f696650\n"
".quad 0x0a7b0a290a315f6d,0x33662e206765722e,0x3e39353c66252032,0x2e206765722e0a3b\n"
".quad 0x313c722520323373,0x6765722e0a3b3e37,0x7225203436732e20,0x0a0a3b3e31323c6c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x335a5f5b202c316c,0x6275734144554330\n"
".quad 0x49656e6974756f72,0x43446563616c706e,0x50726f7463657654,0x6d617261705f6966\n"
".quad 0x6f6c2e0a3b5d305f,0x3120353820322063,0x617261702e646c0a,0x7225203233732e6d\n"
".quad 0x335a5f5b202c326c,0x6275734144554330,0x49656e6974756f72,0x43446563616c706e\n"
".quad 0x50726f7463657654,0x6d617261705f6966,0x6c68730a3b5d315f,0x6c7225203436622e\n"
".quad 0x2c326c7225202c33,0x2e6464610a3b3220,0x346c722520343673,0x202c316c7225202c\n"
".quad 0x6c2e0a3b336c7225,0x203638203220636f,0x36622e6c68730a31,0x202c356c72252034\n"
".quad 0x3b33202c326c7225,0x3436732e6464610a,0x25202c366c722520,0x6c7225202c316c72\n"
".quad 0x6c2e6c756d0a3b35,0x7225203436732e6f,0x326c7225202c376c,0x6f6c2e0a3b33202c\n"
".quad 0x3120373820322063,0x3436622e6c68730a,0x25202c386c722520,0x0a3b32202c376c72\n"
".quad 0x203436732e646461,0x7225202c396c7225,0x386c7225202c316c,0x3220636f6c2e0a3b\n"
".quad 0x68730a3120383820,0x7225203436622e6c,0x6c7225202c30316c,0x64610a3b34202c32\n"
".quad 0x7225203436732e64,0x6c7225202c31316c,0x30316c7225202c31,0x6f6c2e6c756d0a3b\n"
".quad 0x6c7225203436732e,0x326c7225202c3231,0x6f6c2e0a3b35202c,0x3120393820322063\n"
".quad 0x3436622e6c68730a,0x202c33316c722520,0x32202c32316c7225,0x36732e6464610a3b\n"
".quad 0x2c34316c72252034,0x25202c316c722520,0x756d0a3b33316c72,0x3436732e6f6c2e6c\n"
".quad 0x202c35316c722520,0x3b36202c326c7225,0x203220636f6c2e0a,0x6c68730a31203039\n"
".quad 0x6c7225203436622e,0x316c7225202c3631,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x6c7225202c37316c,0x36316c7225202c31,0x6f6c2e6c756d0a3b,0x6c7225203436732e\n"
".quad 0x326c7225202c3831,0x6f6c2e0a3b37202c,0x3120313920322063,0x3436622e6c68730a\n"
".quad 0x202c39316c722520,0x32202c38316c7225,0x36732e6464610a3b,0x2c30326c72252034\n"
".quad 0x25202c316c722520,0x6c2e0a3b39316c72,0x203339203220636f,0x3233662e646c0a31\n"
".quad 0x255b202c31662520,0x6c0a3b5d30326c72,0x6625203233662e64,0x316c72255b202c32\n"
".quad 0x662e6464610a3b5d,0x202c336625203233,0x316625202c326625,0x3220636f6c2e0a3b\n"
".quad 0x646c0a3120343920,0x346625203233662e,0x37316c72255b202c,0x33662e646c0a3b5d\n"
".quad 0x5b202c3566252032,0x610a3b5d346c7225,0x25203233662e6464,0x2c356625202c3666\n"
".quad 0x6c2e0a3b34662520,0x203539203220636f,0x3233662e646c0a31,0x255b202c37662520\n"
".quad 0x6c0a3b5d34316c72,0x6625203233662e64,0x366c72255b202c38,0x662e6464610a3b5d\n"
".quad 0x202c396625203233,0x376625202c386625,0x3220636f6c2e0a3b,0x646c0a3120363920\n"
".quad 0x316625203233662e,0x316c72255b202c30,0x662e646c0a3b5d31,0x2c31316625203233\n"
".quad 0x3b5d396c72255b20,0x3233662e6464610a,0x25202c3231662520,0x316625202c313166\n"
".quad 0x20636f6c2e0a3b30,0x730a312038392032,0x25203233662e6275,0x326625202c333166\n"
".quad 0x2e0a3b316625202c,0x3939203220636f6c,0x662e6275730a3120,0x2c34316625203233\n"
".quad 0x6625202c34662520,0x20636f6c2e0a3b35,0x0a31203030312032,0x203233662e627573\n"
".quad 0x6625202c35316625,0x0a3b376625202c38,0x31203220636f6c2e,0x6275730a31203130\n"
".quad 0x316625203233662e,0x2c30316625202c36,0x2e0a3b3131662520,0x3031203220636f6c\n"
".quad 0x2e6464610a312033,0x3731662520323366,0x25202c336625202c,0x6f6c2e0a3b323166\n"
".quad 0x2034303120322063,0x33662e6275730a31,0x202c383166252032,0x316625202c336625\n"
".quad 0x20636f6c2e0a3b32,0x0a31203530312032,0x203233662e646461,0x6625202c39316625\n"
".quad 0x0a3b396625202c36,0x31203220636f6c2e,0x6275730a31203630,0x326625203233662e\n"
".quad 0x202c366625202c30,0x6f6c2e0a3b396625,0x2038303120322063,0x33662e6464610a31\n"
".quad 0x202c313266252032,0x6625202c37316625,0x2e6c756d0a3b3931,0x3232662520323366\n"
".quad 0x202c31326625202c,0x3430354245336630,0x662e74730a3b3346,0x316c72255b203233\n"
".quad 0x3b32326625202c5d,0x3233662e766f6d0a,0x30202c3332662520,0x3744333741463366\n"
".quad 0x20636f6c2e0a3b35,0x0a31203930312032,0x203233662e6c756d,0x6625202c34326625\n"
".quad 0x46336630202c3032,0x0a3b344442384130,0x662e6e722e616d66,0x2c35326625203233\n"
".quad 0x30202c3831662520,0x3744333741463366,0x3b34326625202c35,0x3233662e6c756d0a\n"
".quad 0x25202c3632662520,0x336630202c353266,0x3b33463430354245,0x203233662e74730a\n"
".quad 0x202c5d366c72255b,0x6c2e0a3b36326625,0x303131203220636f,0x662e6275730a3120\n"
".quad 0x2c37326625203233,0x25202c3731662520,0x6c756d0a3b393166,0x326625203233662e\n"
".quad 0x2c37326625202c38,0x3035424533663020,0x2e74730a3b334634,0x6c72255b20323366\n"
".quad 0x326625202c5d3131,0x20636f6c2e0a3b38,0x0a31203131312032,0x203233662e6c756d\n"
".quad 0x6625202c39326625,0x46336630202c3831,0x0a3b344442384130,0x203233662e67656e\n"
".quad 0x6625202c30336625,0x2e616d660a3b3032,0x25203233662e6e72,0x336625202c313366\n"
".quad 0x2c33326625202c30,0x6d0a3b3932662520,0x25203233662e6c75,0x336625202c323366\n"
".quad 0x4245336630202c31,0x730a3b3346343035,0x255b203233662e74,0x25202c5d37316c72\n"
".quad 0x6f6c2e0a3b323366,0x2033313120322063,0x33662e6c756d0a31,0x202c333366252032\n"
".quad 0x6630202c33316625,0x3638413831424633,0x33662e766f6d0a3b,0x202c343366252032\n"
".quad 0x4138314246336630,0x2e766f6d0a3b3638,0x3533662520323366,0x363946336630202c\n"
".quad 0x6c2e0a3b37313338,0x333131203220636f,0x662e67656e0a3120,0x2c36336625203233\n"
".quad 0x660a3b3431662520,0x33662e6e722e616d,0x202c373366252032,0x6625202c36336625\n"
".quad 0x33336625202c3533,0x6e722e616d660a3b,0x336625203233662e,0x2c35316625202c38\n"
".quad 0x3239344633663020,0x336625202c453433,0x662e766f6d0a3b37,0x2c39336625203233\n"
".quad 0x3444384533663020,0x6f6c2e0a3b464132,0x2033313120322063,0x33662e67656e0a31\n"
".quad 0x202c303466252032,0x6d660a3b36316625,0x3233662e6e722e61,0x25202c3134662520\n"
".quad 0x336625202c303466,0x3b38336625202c39,0x3233662e6c756d0a,0x25202c3234662520\n"
".quad 0x336630202c313466,0x3b33463430354245,0x203233662e74730a,0x202c5d346c72255b\n"
".quad 0x6c2e0a3b32346625,0x343131203220636f,0x662e6c756d0a3120,0x2c33346625203233\n"
".quad 0x30202c3431662520,0x4132344438453366,0x722e616d660a3b46,0x6625203233662e6e\n"
".quad 0x33316625202c3434,0x363946336630202c,0x6625202c37313338,0x2e67656e0a3b3334\n"
".quad 0x3534662520323366,0x0a3b35316625202c,0x662e6e722e616d66,0x2c36346625203233\n"
".quad 0x25202c3534662520,0x346625202c343366,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x36316625202c3734,0x393446336630202c,0x6625202c45343332,0x2e6c756d0a3b3634\n"
".quad 0x3834662520323366,0x202c37346625202c,0x3430354245336630,0x662e74730a3b3346\n"
".quad 0x396c72255b203233,0x3b38346625202c5d,0x203220636f6c2e0a,0x756d0a3120353131\n"
".quad 0x6625203233662e6c,0x34316625202c3934,0x314246336630202c,0x6d660a3b36384138\n"
".quad 0x3233662e6e722e61,0x25202c3035662520,0x336630202c333166,0x2c45343332393446\n"
".quad 0x660a3b3934662520,0x33662e6e722e616d,0x202c313566252032,0x6630202c35316625\n"
".quad 0x4641323444384533,0x0a3b30356625202c,0x662e6e722e616d66,0x2c32356625203233\n"
".quad 0x25202c3034662520,0x356625202c353366,0x662e6c756d0a3b31,0x2c33356625203233\n"
".quad 0x30202c3235662520,0x4634303542453366,0x33662e74730a3b33,0x34316c72255b2032\n"
".quad 0x3b33356625202c5d,0x203220636f6c2e0a,0x756d0a3120363131,0x6625203233662e6c\n"
".quad 0x34316625202c3435,0x393446336630202c,0x6d660a3b45343332,0x3233662e6e722e61\n"
".quad 0x25202c3535662520,0x336630202c333166,0x2c46413234443845,0x660a3b3435662520\n"
".quad 0x33662e6e722e616d,0x202c363566252032,0x6630202c35316625,0x3731333836394633\n"
".quad 0x0a3b35356625202c,0x662e6e722e616d66,0x2c37356625203233,0x30202c3631662520\n"
".quad 0x3841383142463366,0x3b36356625202c36,0x3233662e6c756d0a,0x25202c3835662520\n"
".quad 0x336630202c373566,0x3b33463430354245,0x203233662e74730a,0x2c5d30326c72255b\n"
".quad 0x2e0a3b3835662520,0x3131203220636f6c,0x3b7465720a322037,0x7369762e0a0a7d0a\n"
".quad 0x75662e20656c6269,0x4331335a5f20636e,0x6f72627573414455,0x706e49656e697475\n"
".quad 0x544344496563616c,0x6650726f74636576,0x617261702e0a2869,0x5f203436622e206d\n"
".quad 0x734144554331335a,0x6e6974756f726275,0x6563616c706e4965,0x7463657654434449\n"
".quad 0x61705f696650726f,0x2e0a2c305f6d6172,0x622e206d61726170,0x4331335a5f203233\n"
".quad 0x6f72627573414455,0x706e49656e697475,0x544344496563616c,0x6650726f74636576\n"
".quad 0x5f6d617261705f69,0x722e0a7b0a290a31,0x203233662e206765,0x0a3b3e31363c6625\n"
".quad 0x33732e206765722e,0x3e37313c72252032,0x2e206765722e0a3b,0x3c6c722520343673\n"
".quad 0x6c0a0a0a3b3e3132,0x2e6d617261702e64,0x316c722520343675,0x4331335a5f5b202c\n"
".quad 0x6f72627573414455,0x706e49656e697475,0x544344496563616c,0x6650726f74636576\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d30,0x3120313331203220,0x617261702e646c0a\n"
".quad 0x7225203233732e6d,0x335a5f5b202c326c,0x6275734144554331,0x49656e6974756f72\n"
".quad 0x44496563616c706e,0x726f746365765443,0x617261705f696650,0x68730a3b5d315f6d\n"
".quad 0x7225203436622e6c,0x326c7225202c336c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x2c316c7225202c34,0x2e0a3b336c722520,0x3331203220636f6c,0x2e6c68730a312032\n"
".quad 0x356c722520343662,0x202c326c7225202c,0x732e6464610a3b33,0x2c366c7225203436\n"
".quad 0x25202c316c722520,0x6c756d0a3b356c72,0x203436732e6f6c2e,0x7225202c376c7225\n"
".quad 0x2e0a3b33202c326c,0x3331203220636f6c,0x2e6c68730a312033,0x386c722520343662\n"
".quad 0x202c376c7225202c,0x732e6464610a3b32,0x2c396c7225203436,0x25202c316c722520\n"
".quad 0x6f6c2e0a3b386c72,0x2034333120322063,0x36622e6c68730a31,0x2c30316c72252034\n"
".quad 0x34202c326c722520,0x36732e6464610a3b,0x2c31316c72252034,0x25202c316c722520\n"
".quad 0x756d0a3b30316c72,0x3436732e6f6c2e6c,0x202c32316c722520,0x3b35202c326c7225\n"
".quad 0x203220636f6c2e0a,0x68730a3120353331,0x7225203436622e6c,0x6c7225202c33316c\n"
".quad 0x610a3b32202c3231,0x25203436732e6464,0x7225202c34316c72,0x316c7225202c316c\n"
".quad 0x6c2e6c756d0a3b33,0x7225203436732e6f,0x6c7225202c35316c,0x6c2e0a3b36202c32\n"
".quad 0x363331203220636f,0x622e6c68730a3120,0x36316c7225203436,0x2c35316c7225202c\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x2c316c7225202c37,0x0a3b36316c722520\n"
".quad 0x732e6f6c2e6c756d,0x38316c7225203436,0x202c326c7225202c,0x20636f6c2e0a3b37\n"
".quad 0x0a31203733312032,0x203436622e6c6873,0x25202c39316c7225,0x3b32202c38316c72\n"
".quad 0x3436732e6464610a,0x202c30326c722520,0x7225202c316c7225,0x6f6c2e0a3b39316c\n"
".quad 0x2039333120322063,0x3233662e646c0a31,0x255b202c31662520,0x6c0a3b5d31316c72\n"
".quad 0x6625203233662e64,0x316c72255b202c32,0x662e6464610a3b5d,0x202c336625203233\n"
".quad 0x316625202c326625,0x3220636f6c2e0a3b,0x6c0a312030343120,0x6625203233662e64\n"
".quad 0x366c72255b202c34,0x662e766f6d0a3b5d,0x202c356625203233,0x4433374146336630\n"
".quad 0x636f6c2e0a3b3537,0x3120303431203220,0x203233662e646c0a,0x72255b202c366625\n"
".quad 0x756d0a3b5d37316c,0x6625203233662e6c,0x202c366625202c37,0x4238413046336630\n"
".quad 0x2e616d660a3b3444,0x25203233662e6e72,0x2c346625202c3866,0x3337414633663020\n"
".quad 0x376625202c353744,0x3220636f6c2e0a3b,0x610a312032343120,0x25203233662e6464\n"
".quad 0x2c336625202c3966,0x6c2e0a3b38662520,0x333431203220636f,0x662e6275730a3120\n"
".quad 0x2c30316625203233,0x6625202c33662520,0x20636f6c2e0a3b38,0x0a31203434312032\n"
".quad 0x25203233662e646c,0x72255b202c313166,0x6f6d0a3b5d30326c,0x6625203233662e76\n"
".quad 0x45336630202c3231,0x0a3b464132344438,0x31203220636f6c2e,0x2e646c0a31203434\n"
".quad 0x3331662520323366,0x5d346c72255b202c,0x33662e6c756d0a3b,0x202c343166252032\n"
".quad 0x6630202c33316625,0x3638413831424633,0x33662e766f6d0a3b,0x202c353166252032\n"
".quad 0x4138314246336630,0x636f6c2e0a3b3638,0x3120343431203220,0x2e6e722e616d660a\n"
".quad 0x3631662520323366,0x202c31316625202c,0x3234443845336630,0x34316625202c4641\n"
".quad 0x3233662e646c0a3b,0x5b202c3731662520,0x6d0a3b5d396c7225,0x25203233662e766f\n"
".quad 0x336630202c383166,0x3b37313338363946,0x203220636f6c2e0a,0x6d660a3120343431\n"
".quad 0x3233662e6e722e61,0x25202c3931662520,0x336630202c373166,0x2c37313338363946\n"
".quad 0x6c0a3b3631662520,0x6625203233662e64,0x6c72255b202c3032,0x766f6d0a3b5d3431\n"
".quad 0x326625203233662e,0x3446336630202c31,0x2e0a3b4534333239,0x3431203220636f6c\n"
".quad 0x2e616d660a312034,0x25203233662e6e72,0x326625202c323266,0x3446336630202c30\n"
".quad 0x25202c4534333239,0x6f6c2e0a3b393166,0x2035343120322063,0x33662e6c756d0a31\n"
".quad 0x202c333266252032,0x6630202c31316625,0x3638413831424633,0x33662e67656e0a3b\n"
".quad 0x202c343266252032,0x6d660a3b33316625,0x3233662e6e722e61,0x25202c3532662520\n"
".quad 0x316625202c343266,0x3b33326625202c32,0x2e6e722e616d660a,0x3632662520323366\n"
".quad 0x202c37316625202c,0x3332393446336630,0x35326625202c4534,0x33662e67656e0a3b\n"
".quad 0x202c373266252032,0x6d660a3b30326625,0x3233662e6e722e61,0x25202c3832662520\n"
".quad 0x316625202c373266,0x3b36326625202c38,0x203220636f6c2e0a,0x75730a3120373431\n"
".quad 0x6625203233662e62,0x2c326625202c3932,0x6c2e0a3b31662520,0x383431203220636f\n"
".quad 0x662e6c756d0a3120,0x2c30336625203233,0x6630202c34662520,0x3444423841304633\n"
".quad 0x33662e67656e0a3b,0x202c313366252032,0x616d660a3b366625,0x203233662e6e722e\n"
".quad 0x6625202c32336625,0x2c356625202c3133,0x2e0a3b3033662520,0x3531203220636f6c\n"
".quad 0x2e6464610a312030,0x3333662520323366,0x202c39326625202c,0x6c2e0a3b32336625\n"
".quad 0x313531203220636f,0x662e6275730a3120,0x2c34336625203233,0x25202c3932662520\n"
".quad 0x6f6c2e0a3b323366,0x2032353120322063,0x33662e6c756d0a31,0x202c353366252032\n"
".quad 0x6630202c33316625,0x3731333836394633,0x33662e67656e0a3b,0x202c363366252032\n"
".quad 0x6d660a3b31316625,0x3233662e6e722e61,0x25202c3733662520,0x326625202c363366\n"
".quad 0x3b35336625202c31,0x3233662e67656e0a,0x25202c3833662520,0x616d660a3b373166\n"
".quad 0x203233662e6e722e,0x6625202c39336625,0x32316625202c3833,0x0a3b37336625202c\n"
".quad 0x662e6e722e616d66,0x2c30346625203233,0x25202c3732662520,0x336625202c353166\n"
".quad 0x20636f6c2e0a3b39,0x0a31203335312032,0x203233662e6c756d,0x6625202c31346625\n"
".quad 0x46336630202c3131,0x0a3b373133383639,0x662e6e722e616d66,0x2c32346625203233\n"
".quad 0x30202c3331662520,0x3433323934463366,0x3b31346625202c45,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x202c38336625202c,0x6625202c35316625,0x2e616d660a3b3234\n"
".quad 0x25203233662e6e72,0x326625202c343466,0x3845336630202c30,0x25202c4641323444\n"
".quad 0x6f6c2e0a3b333466,0x2035353120322063,0x33662e6464610a31,0x202c353466252032\n"
".quad 0x326625202c396625,0x662e6c756d0a3b32,0x2c36346625203233,0x30202c3534662520\n"
".quad 0x4634303542453366,0x33662e74730a3b33,0x5d316c72255b2032,0x0a3b36346625202c\n"
".quad 0x31203220636f6c2e,0x6275730a31203635,0x346625203233662e,0x202c396625202c37\n"
".quad 0x756d0a3b32326625,0x6625203233662e6c,0x37346625202c3834,0x354245336630202c\n"
".quad 0x74730a3b33463430,0x72255b203233662e,0x6625202c5d30326c,0x636f6c2e0a3b3834\n"
".quad 0x3120373531203220,0x3233662e6464610a,0x25202c3934662520,0x326625202c303166\n"
".quad 0x662e6c756d0a3b38,0x2c30356625203233,0x30202c3934662520,0x4634303542453366\n"
".quad 0x33662e74730a3b33,0x31316c72255b2032,0x3b30356625202c5d,0x203220636f6c2e0a\n"
".quad 0x75730a3120383531,0x6625203233662e62,0x30316625202c3135,0x0a3b38326625202c\n"
".quad 0x203233662e6c756d,0x6625202c32356625,0x45336630202c3135,0x0a3b334634303542\n"
".quad 0x5b203233662e7473,0x25202c5d396c7225,0x6f6c2e0a3b323566,0x2030363120322063\n"
".quad 0x33662e6464610a31,0x202c333566252032,0x6625202c33336625,0x2e6c756d0a3b3034\n"
".quad 0x3435662520323366,0x202c33356625202c,0x3430354245336630,0x662e74730a3b3346\n"
".quad 0x346c72255b203233,0x3b34356625202c5d,0x203220636f6c2e0a,0x75730a3120313631\n"
".quad 0x6625203233662e62,0x34336625202c3535,0x0a3b34346625202c,0x203233662e6c756d\n"
".quad 0x6625202c36356625,0x45336630202c3535,0x0a3b334634303542,0x5b203233662e7473\n"
".quad 0x202c5d34316c7225,0x6c2e0a3b36356625,0x323631203220636f,0x662e6464610a3120\n"
".quad 0x2c37356625203233,0x25202c3433662520,0x6c756d0a3b343466,0x356625203233662e\n"
".quad 0x2c37356625202c38,0x3035424533663020,0x2e74730a3b334634,0x6c72255b20323366\n"
".quad 0x38356625202c5d36,0x3220636f6c2e0a3b,0x730a312033363120,0x25203233662e6275\n"
".quad 0x336625202c393566,0x3b30346625202c33,0x3233662e6c756d0a,0x25202c3036662520\n"
".quad 0x336630202c393566,0x3b33463430354245,0x203233662e74730a,0x2c5d37316c72255b\n"
".quad 0x2e0a3b3036662520,0x3631203220636f6c,0x3b7465720a322034,0x7369762e0a0a7d0a\n"
".quad 0x75662e20656c6269,0x4339315a5f20636e,0x74726f6873414455,0x446563616c706e49\n"
".quad 0x2e0a286973505443,0x622e206d61726170,0x4339315a5f203436,0x74726f6873414455\n"
".quad 0x446563616c706e49,0x61705f6973505443,0x2e0a2c305f6d6172,0x622e206d61726170\n"
".quad 0x4339315a5f203233,0x74726f6873414455,0x446563616c706e49,0x61705f6973505443\n"
".quad 0x0a290a315f6d6172,0x2e206765722e0a7b,0x393c722520323373,0x6765722e0a3b3e38\n"
".quad 0x7225203436732e20,0x0a0a3b3e32323c6c,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c316c,0x6f68734144554339,0x63616c706e497472,0x5f69735054434465\n"
".quad 0x5d305f6d61726170,0x7261702e646c0a3b,0x25203233752e6d61,0x315a5f5b202c3172\n"
".quad 0x6f68734144554339,0x63616c706e497472,0x5f69735054434465,0x5d315f6d61726170\n"
".quad 0x3320636f6c2e0a3b,0x730a312033333120,0x25203233622e6c68,0x2c317225202c3272\n"
".quad 0x636f6c2e0a3b3120,0x3120373331203320,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x0a3b317225202c32,0x656469772e6c756d,0x6c7225203233732e,0x202c317225202c33\n"
".quad 0x732e6464610a3b32,0x2c346c7225203436,0x25202c316c722520,0x6f6c2e0a3b336c72\n"
".quad 0x2039333120332063,0x69772e6c756d0a31,0x25203233732e6564,0x317225202c356c72\n"
".quad 0x6464610a3b34202c,0x6c7225203436732e,0x2c316c7225202c36,0x610a3b356c722520\n"
".quad 0x25203436732e6464,0x6c7225202c376c72,0x3b336c7225202c36,0x3436732e6464610a\n"
".quad 0x25202c386c722520,0x6c7225202c376c72,0x732e6464610a3b33,0x2c396c7225203436\n"
".quad 0x25202c386c722520,0x6464610a3b336c72,0x6c7225203436732e,0x396c7225202c3031\n"
".quad 0x0a3b336c7225202c,0x203436732e646461,0x25202c31316c7225,0x7225202c30316c72\n"
".quad 0x636f6c2e0a3b336c,0x3120303531203320,0x203631732e646c0a,0x72255b202c337225\n"
".quad 0x6c2e0a3b5d31316c,0x363331203320636f,0x31732e646c0a3120,0x5b202c3572252036\n"
".quad 0x2e0a3b5d316c7225,0x3531203320636f6c,0x2e6464610a312032,0x2c37722520323373\n"
".quad 0x7225202c33722520,0x20636f6c2e0a3b35,0x0a31203833312033,0x25203631732e646c\n"
".quad 0x6c72255b202c3872,0x636f6c2e0a3b5d34,0x3120383431203320,0x203631732e646c0a\n"
".quad 0x255b202c30317225,0x2e0a3b5d30316c72,0x3531203320636f6c,0x2e6464610a312033\n"
".quad 0x3231722520323373,0x202c30317225202c,0x6f6c2e0a3b387225,0x2030343120332063\n"
".quad 0x3631732e646c0a31,0x5b202c3331722520,0x2e0a3b5d366c7225,0x3431203320636f6c\n"
".quad 0x732e646c0a312036,0x2c35317225203631,0x3b5d396c72255b20,0x203320636f6c2e0a\n"
".quad 0x64610a3120343531,0x7225203233732e64,0x35317225202c3731,0x0a3b33317225202c\n"
".quad 0x31203320636f6c2e,0x2e646c0a31203234,0x3831722520363173,0x5d376c72255b202c\n"
".quad 0x3320636f6c2e0a3b,0x6c0a312034343120,0x7225203631732e64,0x6c72255b202c3032\n"
".quad 0x636f6c2e0a3b5d38,0x3120353531203320,0x3233732e6464610a,0x25202c3232722520\n"
".quad 0x317225202c303272,0x20636f6c2e0a3b38,0x0a31203635312033,0x203233732e627573\n"
".quad 0x7225202c33327225,0x30327225202c3831,0x3320636f6c2e0a3b,0x730a312037353120\n"
".quad 0x25203233732e6275,0x317225202c343272,0x3b35317225202c33,0x203320636f6c2e0a\n"
".quad 0x75730a3120383531,0x7225203233732e62,0x2c387225202c3532,0x2e0a3b3031722520\n"
".quad 0x3531203320636f6c,0x2e6275730a312039,0x3632722520323373,0x25202c357225202c\n"
".quad 0x636f6c2e0a3b3372,0x3120313631203320,0x3233732e6464610a,0x25202c3732722520\n"
".quad 0x32327225202c3772,0x3320636f6c2e0a3b,0x610a312032363120,0x25203233732e6464\n"
".quad 0x317225202c383272,0x3b37317225202c32,0x203320636f6c2e0a,0x75730a3120333631\n"
".quad 0x7225203233732e62,0x32317225202c3932,0x0a3b37317225202c,0x31203320636f6c2e\n"
".quad 0x6275730a31203436,0x337225203233732e,0x202c377225202c30,0x6c2e0a3b32327225\n"
".quad 0x363631203320636f,0x732e6464610a3120,0x2c31337225203233,0x25202c3532722520\n"
".quad 0x766f6d0a3b343272,0x337225203233752e,0x3037313332202c32,0x3420636f6c2e0a3b\n"
".quad 0x6d0a352034393220,0x2e6f6c2e34326c75,0x3333722520323373,0x202c31337225202c\n"
".quad 0x6c2e0a3b32337225,0x363631203320636f,0x732e6464610a3120,0x2c34337225203233\n"
".quad 0x34202c3333722520,0x7268730a3b363930,0x337225203233732e,0x2c34337225202c35\n"
".quad 0x6f6c2e0a3b333120,0x2037363120332063,0x33732e6275730a31,0x202c363372252032\n"
".quad 0x7225202c35327225,0x636f6c2e0a3b3432,0x3520343932203420,0x6c2e34326c756d0a\n"
".quad 0x7225203233732e6f,0x36337225202c3733,0x0a3b32337225202c,0x31203320636f6c2e\n"
".quad 0x6464610a31203736,0x337225203233732e,0x2c37337225202c38,0x730a3b3639303420\n"
".quad 0x25203233732e7268,0x337225202c393372,0x2e0a3b3331202c38,0x3631203320636f6c\n"
".quad 0x2e6c68730a312039,0x3034722520323362,0x202c33327225202c,0x20636f6c2e0a3b32\n"
".quad 0x0a31203037312033,0x203233622e6c6873,0x7225202c31347225,0x2e0a3b32202c3632\n"
".quad 0x3731203320636f6c,0x2e6464610a312032,0x3234722520323373,0x202c39337225202c\n"
".quad 0x6c2e0a3b30347225,0x333731203320636f,0x732e6275730a3120,0x2c33347225203233\n"
".quad 0x25202c3034722520,0x6f6c2e0a3b393372,0x2034373120332063,0x33732e6275730a31\n"
".quad 0x202c343472252032,0x7225202c31347225,0x636f6c2e0a3b3533,0x3120353731203320\n"
".quad 0x3233732e6464610a,0x25202c3534722520,0x337225202c313472,0x20636f6c2e0a3b35\n"
".quad 0x0a31203837312033,0x203233732e646461,0x7225202c36347225,0x38327225202c3732\n"
".quad 0x3420636f6c2e0a3b,0x6d0a352034393220,0x2e6f6c2e34326c75,0x3734722520323373\n"
".quad 0x202c36347225202c,0x6c2e0a3b32337225,0x383731203320636f,0x732e6464610a3120\n"
".quad 0x2c38347225203233,0x33202c3734722520,0x68730a3b38363732,0x7225203233752e72\n"
".quad 0x38347225202c3934,0x6c2e0a3b3631202c,0x383731203320636f,0x31752e74730a3120\n"
".quad 0x5d316c72255b2036,0x0a3b39347225202c,0x31203320636f6c2e,0x7476630a31203937\n"
".quad 0x3233732e3436732e,0x202c32316c722520,0x6c756d0a3b327225,0x33732e656469772e\n"
".quad 0x2c33316c72252032,0x3b32202c32722520,0x203320636f6c2e0a,0x64610a3120393731\n"
".quad 0x7225203436732e64,0x6c7225202c34316c,0x33316c7225202c31,0x33752e766f6d0a3b\n"
".quad 0x202c313572252032,0x2e0a3b3437323033,0x3932203420636f6c,0x326c756d0a352034\n"
".quad 0x3233732e6f6c2e34,0x25202c3235722520,0x357225202c303372,0x752e766f6d0a3b31\n"
".quad 0x2c33357225203233,0x0a3b303435323120,0x32203420636f6c2e,0x6c756d0a35203439\n"
".quad 0x33732e6f6c2e3432,0x202c343572252032,0x7225202c39327225,0x636f6c2e0a3b3335\n"
".quad 0x3120303831203320,0x3233732e6464610a,0x25202c3535722520,0x357225202c323572\n"
".quad 0x732e6464610a3b34,0x2c36357225203233,0x33202c3535722520,0x68730a3b38363732\n"
".quad 0x7225203233752e72,0x36357225202c3735,0x6c2e0a3b3631202c,0x303831203320636f\n"
".quad 0x31752e74730a3120,0x34316c72255b2036,0x3b37357225202c5d,0x203320636f6c2e0a\n"
".quad 0x75730a3120323831,0x7225203233732e62,0x37327225202c3935,0x0a3b38327225202c\n"
".quad 0x32203420636f6c2e,0x6c756d0a35203439,0x33732e6f6c2e3432,0x202c303672252032\n"
".quad 0x7225202c39357225,0x636f6c2e0a3b3233,0x3120323831203320,0x3233732e6464610a\n"
".quad 0x25202c3136722520,0x373233202c303672,0x2e7268730a3b3836,0x3236722520323375\n"
".quad 0x202c31367225202c,0x2e6464610a3b3631,0x316c722520343673,0x34316c7225202c35\n"
".quad 0x3b33316c7225202c,0x203320636f6c2e0a,0x74730a3120323831,0x72255b203631752e\n"
".quad 0x7225202c5d35316c,0x636f6c2e0a3b3236,0x3520343932203420,0x6c2e34326c756d0a\n"
".quad 0x7225203233732e6f,0x30337225202c3436,0x0a3b33357225202c,0x6f6c2e34326c756d\n"
".quad 0x367225203233732e,0x2c39327225202c35,0x610a3b3135722520,0x25203233732e6464\n"
".quad 0x367225202c363672,0x3836373233202c34,0x33732e6275730a3b,0x202c373672252032\n"
".quad 0x7225202c36367225,0x2e7268730a3b3536,0x3836722520323375,0x202c37367225202c\n"
".quad 0x2e6464610a3b3631,0x316c722520343673,0x35316c7225202c36,0x3b33316c7225202c\n"
".quad 0x203320636f6c2e0a,0x74730a3120343831,0x72255b203631752e,0x7225202c5d36316c\n"
".quad 0x2e766f6d0a3b3836,0x3037722520323375,0x0a3b35333038202c,0x32203420636f6c2e\n"
".quad 0x6c756d0a35203439,0x33732e6f6c2e3432,0x202c313772252032,0x7225202c35347225\n"
".quad 0x2e766f6d0a3b3037,0x3237722520323375,0x0a3b38393531202c,0x32203420636f6c2e\n"
".quad 0x6c756d0a35203439,0x33732e6f6c2e3432,0x202c333772252032,0x7225202c32347225\n"
".quad 0x636f6c2e0a3b3237,0x3120373831203320,0x3233732e6464610a,0x25202c3437722520\n"
".quad 0x377225202c313772,0x732e6464610a3b33,0x2c35377225203233,0x33202c3437722520\n"
".quad 0x68730a3b38363732,0x7225203233752e72,0x35377225202c3637,0x6c2e0a3b3631202c\n"
".quad 0x373831203320636f,0x31752e74730a3120,0x5d346c72255b2036,0x0a3b36377225202c\n"
".quad 0x203436732e646461,0x25202c37316c7225,0x7225202c32316c72,0x636f6c2e0a3b326c\n"
".quad 0x3120383831203320,0x3436622e6c68730a,0x202c38316c722520,0x31202c37316c7225\n"
".quad 0x36732e6464610a3b,0x2c39316c72252034,0x25202c316c722520,0x6f6d0a3b38316c72\n"
".quad 0x7225203233752e76,0x31313836202c3837,0x3420636f6c2e0a3b,0x6d0a352034393220\n"
".quad 0x2e6f6c2e34326c75,0x3937722520323373,0x202c34347225202c,0x6f6d0a3b38377225\n"
".quad 0x7225203233752e76,0x31353534202c3038,0x3420636f6c2e0a3b,0x6d0a352034393220\n"
".quad 0x2e6f6c2e34326c75,0x3138722520323373,0x202c33347225202c,0x64610a3b30387225\n"
".quad 0x7225203233732e64,0x39377225202c3238,0x3b3836373233202c,0x3233732e6275730a\n"
".quad 0x25202c3338722520,0x387225202c323872,0x752e7268730a3b31,0x2c34387225203233\n"
".quad 0x31202c3338722520,0x20636f6c2e0a3b36,0x0a31203938312033,0x5b203631752e7473\n"
".quad 0x202c5d39316c7225,0x6c2e0a3b34387225,0x343932203420636f,0x34326c756d0a3520\n"
".quad 0x203233732e6f6c2e,0x7225202c36387225,0x30387225202c3434,0x2e34326c756d0a3b\n"
".quad 0x25203233732e6f6c,0x347225202c373872,0x3b38377225202c33,0x203320636f6c2e0a\n"
".quad 0x64610a3120313931,0x7225203233732e64,0x36387225202c3838,0x0a3b37387225202c\n"
".quad 0x203233732e646461,0x7225202c39387225,0x36373233202c3838,0x752e7268730a3b38\n"
".quad 0x2c30397225203233,0x31202c3938722520,0x732e6464610a3b36,0x30326c7225203436\n"
".quad 0x2c39316c7225202c,0x0a3b33316c722520,0x31203320636f6c2e,0x2e74730a31203139\n"
".quad 0x6c72255b20363175,0x397225202c5d3032,0x20636f6c2e0a3b30,0x0a35203439322034\n"
".quad 0x6f6c2e34326c756d,0x397225203233732e,0x2c35347225202c32,0x6d0a3b3237722520\n"
".quad 0x2e6f6c2e34326c75,0x3339722520323373,0x202c32347225202c,0x64610a3b30377225\n"
".quad 0x7225203233732e64,0x32397225202c3439,0x3b3836373233202c,0x3233732e6275730a\n"
".quad 0x25202c3539722520,0x397225202c343972,0x752e7268730a3b33,0x2c36397225203233\n"
".quad 0x31202c3539722520,0x732e6464610a3b36,0x31326c7225203436,0x2c30326c7225202c\n"
".quad 0x0a3b33316c722520,0x31203320636f6c2e,0x2e74730a31203339,0x6c72255b20363175\n"
".quad 0x397225202c5d3132,0x20636f6c2e0a3b36,0x0a32203439312033,0x0a0a7d0a3b746572\n"
".quad 0x656c62697369762e,0x5f20636e75662e20,0x734144554339315a,0x6c706e4974726f68\n"
".quad 0x6a50544344656361,0x6d617261702e0a28,0x5a5f203436622e20,0x6873414455433931\n"
".quad 0x616c706e4974726f,0x5f6a505443446563,0x0a305f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x7225203233732e20,0x2e0a3b3e3030313c,0x3436732e20676572,0x3b3e323c6c722520\n"
".quad 0x61702e646c0a0a0a,0x203436752e6d6172,0x5f5b202c316c7225,0x734144554339315a\n"
".quad 0x6c706e4974726f68,0x6a50544344656361,0x305f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203431322033,0x25203233752e646c,0x6c72255b202c3172,0x2e7268730a3b5d31\n"
".quad 0x2c33722520323373,0x3631202c31722520,0x3320636f6c2e0a3b,0x6c0a312035313220\n"
".quad 0x7225203233752e64,0x316c72255b202c34,0x7268730a3b5d342b,0x367225203233732e\n"
".quad 0x31202c347225202c,0x20636f6c2e0a3b36,0x0a31203631322033,0x25203233752e646c\n"
".quad 0x6c72255b202c3772,0x68730a3b5d382b31,0x7225203233732e72,0x202c377225202c39\n"
".quad 0x636f6c2e0a3b3631,0x3120373132203320,0x203233752e646c0a,0x255b202c30317225\n"
".quad 0x3b5d32312b316c72,0x3233732e7268730a,0x25202c3231722520,0x3b3631202c303172\n"
".quad 0x3233622e6c68730a,0x25202c3331722520,0x0a3b3631202c3172,0x203233732e726873\n"
".quad 0x7225202c34317225,0x0a3b3631202c3331,0x32203320636f6c2e,0x6464610a31203732\n"
".quad 0x317225203233732e,0x2c32317225202c35,0x730a3b3431722520,0x25203233622e6c68\n"
".quad 0x317225202c363172,0x730a3b3631202c30,0x25203233732e7268,0x317225202c373172\n"
".quad 0x2e0a3b3631202c36,0x3232203320636f6c,0x2e6464610a312038,0x3831722520323373\n"
".quad 0x202c37317225202c,0x6c68730a3b337225,0x317225203233622e,0x202c347225202c39\n"
".quad 0x2e7268730a3b3631,0x3032722520323373,0x202c39317225202c,0x636f6c2e0a3b3631\n"
".quad 0x3120393232203320,0x3233732e6464610a,0x25202c3132722520,0x30327225202c3972\n"
".quad 0x33622e6c68730a3b,0x202c323272252032,0x3b3631202c377225,0x3233732e7268730a\n"
".quad 0x25202c3332722520,0x3b3631202c323272,0x203320636f6c2e0a,0x64610a3120303332\n"
".quad 0x7225203233732e64,0x33327225202c3432,0x2e0a3b367225202c,0x3332203320636f6c\n"
".quad 0x2e6275730a312031,0x3532722520323373,0x25202c367225202c,0x6f6c2e0a3b333272\n"
".quad 0x2032333220332063,0x33732e6275730a31,0x202c363272252032,0x7225202c30327225\n"
".quad 0x20636f6c2e0a3b39,0x0a31203333322033,0x203233732e627573,0x7225202c37327225\n"
".quad 0x3b37317225202c33,0x203320636f6c2e0a,0x75730a3120343332,0x7225203233732e62\n"
".quad 0x34317225202c3832,0x0a3b32317225202c,0x32203320636f6c2e,0x6464610a31203633\n"
".quad 0x327225203233732e,0x2c34327225202c39,0x2e0a3b3531722520,0x3332203320636f6c\n"
".quad 0x2e6464610a312037,0x3033722520323373,0x202c38317225202c,0x6c2e0a3b31327225\n"
".quad 0x383332203320636f,0x732e6275730a3120,0x2c31337225203233,0x25202c3831722520\n"
".quad 0x6f6c2e0a3b313272,0x2039333220332063,0x33732e6275730a31,0x202c323372252032\n"
".quad 0x7225202c35317225,0x636f6c2e0a3b3432,0x3120313432203320,0x3233732e6464610a\n"
".quad 0x25202c3333722520,0x327225202c303372,0x752e766f6d0a3b39,0x2c34337225203233\n"
".quad 0x0a3b303731333220,0x32203420636f6c2e,0x6c756d0a35203439,0x33732e6f6c2e3432\n"
".quad 0x202c353372252032,0x7225202c33337225,0x636f6c2e0a3b3433,0x3120313432203320\n"
".quad 0x3233732e6464610a,0x25202c3633722520,0x373233202c353372,0x2e7268730a3b3836\n"
".quad 0x3733722520323375,0x202c36337225202c,0x636f6c2e0a3b3631,0x3120323432203320\n"
".quad 0x3233732e6275730a,0x25202c3833722520,0x337225202c393272,0x20636f6c2e0a3b30\n"
".quad 0x0a35203439322034,0x6f6c2e34326c756d,0x337225203233732e,0x2c38337225202c39\n"
".quad 0x2e0a3b3433722520,0x3432203320636f6c,0x2e6464610a312032,0x3034722520323373\n"
".quad 0x202c39337225202c,0x730a3b3836373233,0x25203233752e7268,0x347225202c313472\n"
".quad 0x6d0a3b3631202c30,0x25203233752e766f,0x323033202c323472,0x636f6c2e0a3b3437\n"
".quad 0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f,0x32337225202c3334\n"
".quad 0x0a3b32347225202c,0x203233752e766f6d,0x3231202c34347225,0x6f6c2e0a3b303435\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x337225202c353472\n"
".quad 0x3b34347225202c31,0x203320636f6c2e0a,0x64610a3120343432,0x7225203233732e64\n"
".quad 0x33347225202c3634,0x0a3b35347225202c,0x203233732e646461,0x7225202c37347225\n"
".quad 0x36373233202c3634,0x752e7268730a3b38,0x2c38347225203233,0x31202c3734722520\n"
".quad 0x20636f6c2e0a3b36,0x0a35203439322034,0x6f6c2e34326c756d,0x347225203233732e\n"
".quad 0x2c32337225202c39,0x6d0a3b3434722520,0x2e6f6c2e34326c75,0x3035722520323373\n"
".quad 0x202c31337225202c,0x64610a3b32347225,0x7225203233732e64,0x39347225202c3135\n"
".quad 0x3b3836373233202c,0x3233732e6275730a,0x25202c3235722520,0x357225202c313572\n"
".quad 0x752e7268730a3b30,0x2c33357225203233,0x31202c3235722520,0x20636f6c2e0a3b36\n"
".quad 0x0a31203734322033,0x203233732e646461,0x7225202c34357225,0x36327225202c3732\n"
".quad 0x3420636f6c2e0a3b,0x6d0a352034393220,0x2e6f6c2e34326c75,0x3535722520323373\n"
".quad 0x202c34357225202c,0x6c2e0a3b34337225,0x373432203320636f,0x732e6464610a3120\n"
".quad 0x2c36357225203233,0x34202c3535722520,0x7268730a3b363930,0x357225203233732e\n"
".quad 0x2c36357225202c37,0x6f6c2e0a3b333120,0x2038343220332063,0x33732e6275730a31\n"
".quad 0x202c383572252032,0x7225202c37327225,0x636f6c2e0a3b3632,0x3520343932203420\n"
".quad 0x6c2e34326c756d0a,0x7225203233732e6f,0x38357225202c3935,0x0a3b34337225202c\n"
".quad 0x32203320636f6c2e,0x6464610a31203834,0x367225203233732e,0x2c39357225202c30\n"
".quad 0x730a3b3639303420,0x25203233732e7268,0x367225202c313672,0x2e0a3b3331202c30\n"
".quad 0x3532203320636f6c,0x2e6c68730a312030,0x3236722520323362,0x202c35327225202c\n"
".quad 0x20636f6c2e0a3b32,0x0a31203135322033,0x203233622e6c6873,0x7225202c33367225\n"
".quad 0x2e0a3b32202c3832,0x3532203320636f6c,0x2e6464610a312033,0x3436722520323373\n"
".quad 0x202c31367225202c,0x6c2e0a3b32367225,0x343532203320636f,0x732e6275730a3120\n"
".quad 0x2c35367225203233,0x25202c3236722520,0x6f6c2e0a3b313672,0x2035353220332063\n"
".quad 0x33732e6275730a31,0x202c363672252032,0x7225202c33367225,0x636f6c2e0a3b3735\n"
".quad 0x3120363532203320,0x3233732e6464610a,0x25202c3736722520,0x367225202c373572\n"
".quad 0x752e766f6d0a3b33,0x2c38367225203233,0x2e0a3b3533303820,0x3932203420636f6c\n"
".quad 0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3936722520,0x367225202c373672\n"
".quad 0x752e766f6d0a3b38,0x2c30377225203233,0x2e0a3b3839353120,0x3932203420636f6c\n"
".quad 0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3137722520,0x377225202c343672\n"
".quad 0x20636f6c2e0a3b30,0x0a31203835322033,0x203233732e646461,0x7225202c32377225\n"
".quad 0x31377225202c3936,0x33732e6464610a3b,0x202c333772252032,0x3233202c32377225\n"
".quad 0x646e610a3b383637,0x377225203233622e,0x2c33377225202c34,0x3b36333535362d20\n"
".quad 0x203233622e726f0a,0x7225202c35377225,0x37337225202c3437,0x3420636f6c2e0a3b\n"
".quad 0x6d0a352034393220,0x2e6f6c2e34326c75,0x3637722520323373,0x202c37367225202c\n"
".quad 0x756d0a3b30377225,0x732e6f6c2e34326c,0x2c37377225203233,0x25202c3436722520\n"
".quad 0x6464610a3b383672,0x377225203233732e,0x2c36377225202c38,0x0a3b383637323320\n"
".quad 0x203233732e627573,0x7225202c39377225,0x37377225202c3837,0x33622e646e610a3b\n"
".quad 0x202c303872252032,0x362d202c39377225,0x726f0a3b36333535,0x387225203233622e\n"
".quad 0x2c30387225202c31,0x6d0a3b3335722520,0x25203233752e766f,0x353534202c323872\n"
".quad 0x20636f6c2e0a3b31,0x0a35203439322034,0x6f6c2e34326c756d,0x387225203233732e\n"
".quad 0x2c36367225202c33,0x6d0a3b3238722520,0x25203233752e766f,0x313836202c343872\n"
".quad 0x20636f6c2e0a3b31,0x0a35203439322034,0x6f6c2e34326c756d,0x387225203233732e\n"
".quad 0x2c35367225202c35,0x2e0a3b3438722520,0x3632203320636f6c,0x2e6464610a312030\n"
".quad 0x3638722520323373,0x202c33387225202c,0x64610a3b35387225,0x7225203233732e64\n"
".quad 0x36387225202c3738,0x3b3836373233202c,0x3233622e646e610a,0x25202c3838722520\n"
".quad 0x35362d202c373872,0x2e726f0a3b363335,0x3938722520323362,0x202c38387225202c\n"
".quad 0x6c2e0a3b31347225,0x343932203420636f,0x34326c756d0a3520,0x203233732e6f6c2e\n"
".quad 0x7225202c30397225,0x34387225202c3636,0x2e34326c756d0a3b,0x25203233732e6f6c\n"
".quad 0x367225202c313972,0x3b32387225202c35,0x3233732e6464610a,0x25202c3239722520\n"
".quad 0x373233202c303972,0x2e6275730a3b3836,0x3339722520323373,0x202c32397225202c\n"
".quad 0x6e610a3b31397225,0x7225203233622e64,0x33397225202c3439,0x36333535362d202c\n"
".quad 0x3233622e726f0a3b,0x25202c3539722520,0x347225202c343972,0x20636f6c2e0a3b38\n"
".quad 0x0a31203336322033,0x5b203233752e7473,0x25202c5d316c7225,0x6f6c2e0a3b353772\n"
".quad 0x2034363220332063,0x3233752e74730a31,0x342b316c72255b20,0x3b35397225202c5d\n"
".quad 0x203320636f6c2e0a,0x74730a3120353632,0x72255b203233752e,0x25202c5d382b316c\n"
".quad 0x6f6c2e0a3b393872,0x2036363220332063,0x3233752e74730a31,0x312b316c72255b20\n"
".quad 0x31387225202c5d32,0x3320636f6c2e0a3b,0x720a322037363220,0x2e0a0a7d0a3b7465\n"
".quad 0x20656c6269736976,0x5a5f20636e75662e,0x6873414455433032,0x616c706e4974726f\n"
".quad 0x7350544344496563,0x617261702e0a2869,0x5f203436622e206d,0x734144554330325a\n"
".quad 0x6c706e4974726f68,0x5054434449656361,0x6d617261705f6973,0x7261702e0a2c305f\n"
".quad 0x203233622e206d61,0x4144554330325a5f,0x706e4974726f6873,0x544344496563616c\n"
".quad 0x617261705f697350,0x0a7b0a290a315f6d,0x33732e206765722e,0x3e32393c72252032\n"
".quad 0x2e206765722e0a3b,0x3c6c722520343673,0x6c0a0a0a3b3e3132,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x4330325a5f5b202c,0x74726f6873414455,0x496563616c706e49\n"
".quad 0x705f697350544344,0x3b5d305f6d617261,0x203320636f6c2e0a,0x646c0a3120303932\n"
".quad 0x732e6d617261702e,0x2c326c7225203233,0x554330325a5f5b20,0x4974726f68734144\n"
".quad 0x44496563616c706e,0x61705f6973505443,0x0a3b5d315f6d6172,0x203436622e6c6873\n"
".quad 0x7225202c336c7225,0x610a3b31202c326c,0x25203436732e6464,0x6c7225202c346c72\n"
".quad 0x3b336c7225202c31,0x203320636f6c2e0a,0x68730a3120323932,0x7225203436622e6c\n"
".quad 0x326c7225202c356c,0x6464610a3b32202c,0x6c7225203436732e,0x2c316c7225202c36\n"
".quad 0x6d0a3b356c722520,0x36732e6f6c2e6c75,0x202c376c72252034,0x3b33202c326c7225\n"
".quad 0x203320636f6c2e0a,0x68730a3120343932,0x7225203436622e6c,0x376c7225202c386c\n"
".quad 0x6464610a3b31202c,0x6c7225203436732e,0x2c316c7225202c39,0x2e0a3b386c722520\n"
".quad 0x3932203320636f6c,0x2e6c68730a312036,0x316c722520343662,0x2c326c7225202c30\n"
".quad 0x2e6464610a3b3320,0x316c722520343673,0x2c316c7225202c31,0x0a3b30316c722520\n"
".quad 0x732e6f6c2e6c756d,0x32316c7225203436,0x202c326c7225202c,0x20636f6c2e0a3b35\n"
".quad 0x0a31203839322033,0x203436622e6c6873,0x25202c33316c7225,0x3b31202c32316c72\n"
".quad 0x3436732e6464610a,0x202c34316c722520,0x7225202c316c7225,0x6c756d0a3b33316c\n"
".quad 0x203436732e6f6c2e,0x25202c35316c7225,0x0a3b36202c326c72,0x33203320636f6c2e\n"
".quad 0x6c68730a31203030,0x6c7225203436622e,0x316c7225202c3631,0x64610a3b31202c35\n"
".quad 0x7225203436732e64,0x6c7225202c37316c,0x36316c7225202c31,0x6f6c2e6c756d0a3b\n"
".quad 0x6c7225203436732e,0x326c7225202c3831,0x6f6c2e0a3b37202c,0x2032303320332063\n"
".quad 0x36622e6c68730a31,0x2c39316c72252034,0x202c38316c722520,0x732e6464610a3b31\n"
".quad 0x30326c7225203436,0x202c316c7225202c,0x2e0a3b39316c7225,0x3932203320636f6c\n"
".quad 0x732e646c0a312037,0x202c317225203631,0x3b5d31316c72255b,0x203320636f6c2e0a\n"
".quad 0x646c0a3120393832,0x337225203631732e,0x5d316c72255b202c,0x3320636f6c2e0a3b\n"
".quad 0x610a312035303320,0x25203233732e6464,0x2c317225202c3572,0x6f6d0a3b33722520\n"
".quad 0x7225203233752e76,0x3037313332202c36,0x3420636f6c2e0a3b,0x6d0a352034393220\n"
".quad 0x2e6f6c2e34326c75,0x2c37722520323373,0x7225202c35722520,0x20636f6c2e0a3b36\n"
".quad 0x0a31203630332033,0x203233732e627573,0x337225202c387225,0x2e0a3b317225202c\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x7225202c39722520\n"
".quad 0x0a3b367225202c38,0x203233752e766f6d,0x3231202c30317225,0x6f6c2e0a3b303435\n"
".quad 0x2033393220332063,0x3631732e646c0a31,0x5b202c3131722520,0x2e0a3b5d366c7225\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3331722520\n"
".quad 0x317225202c313172,0x752e766f6d0a3b30,0x2c34317225203233,0x0a3b343732303320\n"
".quad 0x33203320636f6c2e,0x2e646c0a31203130,0x3531722520363173,0x37316c72255b202c\n"
".quad 0x20636f6c2e0a3b5d,0x0a35203439322034,0x6f6c2e34326c756d,0x317225203233732e\n"
".quad 0x2c35317225202c37,0x2e0a3b3431722520,0x3033203320636f6c,0x2e6275730a312037\n"
".quad 0x3831722520323373,0x202c33317225202c,0x6c2e0a3b37317225,0x343932203420636f\n"
".quad 0x34326c756d0a3520,0x203233732e6f6c2e,0x7225202c39317225,0x30317225202c3531\n"
".quad 0x2e34326c756d0a3b,0x25203233732e6f6c,0x317225202c303272,0x3b34317225202c31\n"
".quad 0x203320636f6c2e0a,0x64610a3120383033,0x7225203233732e64,0x30327225202c3132\n"
".quad 0x0a3b39317225202c,0x33203320636f6c2e,0x6464610a31203031,0x327225203233732e\n"
".quad 0x2c31327225202c32,0x6c2e0a3b37722520,0x313133203320636f,0x732e6464610a3120\n"
".quad 0x2c33327225203233,0x25202c3831722520,0x636f6c2e0a3b3972,0x3120323133203320\n"
".quad 0x3233732e6275730a,0x25202c3432722520,0x38317225202c3972,0x3320636f6c2e0a3b\n"
".quad 0x730a312033313320,0x25203233732e6275,0x377225202c353272,0x0a3b31327225202c\n"
".quad 0x32203320636f6c2e,0x2e646c0a31203539,0x3632722520363173,0x5d396c72255b202c\n"
".quad 0x3320636f6c2e0a3b,0x6c0a312039393220,0x7225203631732e64,0x6c72255b202c3832\n"
".quad 0x6f6c2e0a3b5d3431,0x2035313320332063,0x33732e6464610a31,0x202c303372252032\n"
".quad 0x7225202c38327225,0x636f6c2e0a3b3632,0x3520343932203420,0x6c2e34326c756d0a\n"
".quad 0x7225203233732e6f,0x30337225202c3133,0x2e0a3b367225202c,0x3133203320636f6c\n"
".quad 0x2e6464610a312035,0x3233722520323373,0x202c31337225202c,0x68730a3b36393034\n"
".quad 0x7225203233732e72,0x32337225202c3333,0x6c2e0a3b3331202c,0x363133203320636f\n"
".quad 0x732e6275730a3120,0x2c34337225203233,0x25202c3632722520,0x6f6c2e0a3b383272\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x337225202c353372\n"
".quad 0x0a3b367225202c34,0x33203320636f6c2e,0x6464610a31203631,0x337225203233732e\n"
".quad 0x2c35337225202c36,0x730a3b3639303420,0x25203233732e7268,0x337225202c373372\n"
".quad 0x2e0a3b3331202c36,0x3932203320636f6c,0x732e646c0a312031,0x2c38337225203631\n"
".quad 0x3b5d346c72255b20,0x203320636f6c2e0a,0x68730a3120383133,0x7225203233622e6c\n"
".quad 0x38337225202c3034,0x6f6c2e0a3b32202c,0x2033303320332063,0x3631732e646c0a31\n"
".quad 0x5b202c3134722520,0x0a3b5d30326c7225,0x33203320636f6c2e,0x6c68730a31203931\n"
".quad 0x347225203233622e,0x2c31347225202c33,0x636f6c2e0a3b3220,0x3120313233203320\n"
".quad 0x3233732e6464610a,0x25202c3434722520,0x347225202c333372,0x20636f6c2e0a3b30\n"
".quad 0x0a31203232332033,0x203233732e646461,0x7225202c35347225,0x33347225202c3733\n"
".quad 0x3320636f6c2e0a3b,0x730a312033323320,0x25203233732e6275,0x347225202c363472\n"
".quad 0x3b33337225202c30,0x203320636f6c2e0a,0x75730a3120343233,0x7225203233732e62\n"
".quad 0x33347225202c3734,0x0a3b37337225202c,0x203233752e766f6d,0x3038202c38347225\n"
".quad 0x636f6c2e0a3b3533,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x34347225202c3934,0x0a3b38347225202c,0x203233752e766f6d,0x3531202c30357225\n"
".quad 0x636f6c2e0a3b3839,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x35347225202c3135,0x0a3b30357225202c,0x33203320636f6c2e,0x6464610a31203632\n"
".quad 0x357225203233732e,0x2c31357225202c32,0x2e0a3b3934722520,0x3932203420636f6c\n"
".quad 0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3335722520,0x357225202c343472\n"
".quad 0x34326c756d0a3b30,0x203233732e6f6c2e,0x7225202c34357225,0x38347225202c3534\n"
".quad 0x3320636f6c2e0a3b,0x730a312037323320,0x25203233732e6275,0x357225202c353572\n"
".quad 0x3b34357225202c33,0x3233752e766f6d0a,0x34202c3635722520,0x6f6c2e0a3b313535\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x347225202c373572\n"
".quad 0x3b36357225202c36,0x3233752e766f6d0a,0x36202c3835722520,0x6f6c2e0a3b313138\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x347225202c393572\n"
".quad 0x3b38357225202c37,0x203320636f6c2e0a,0x64610a3120383233,0x7225203233732e64\n"
".quad 0x39357225202c3036,0x0a3b37357225202c,0x32203420636f6c2e,0x6c756d0a35203439\n"
".quad 0x33732e6f6c2e3432,0x202c313672252032,0x7225202c36347225,0x326c756d0a3b3835\n"
".quad 0x3233732e6f6c2e34,0x25202c3236722520,0x357225202c373472,0x20636f6c2e0a3b36\n"
".quad 0x0a31203932332033,0x203233732e627573,0x7225202c33367225,0x32367225202c3136\n"
".quad 0x3320636f6c2e0a3b,0x610a312032333320,0x25203233732e6464,0x327225202c343672\n"
".quad 0x3836373233202c32,0x33732e6464610a3b,0x202c353672252032,0x7225202c34367225\n"
".quad 0x2e7268730a3b3235,0x3636722520323375,0x202c35367225202c,0x636f6c2e0a3b3631\n"
".quad 0x3120323333203320,0x203631752e74730a,0x202c5d316c72255b,0x6c2e0a3b36367225\n"
".quad 0x343333203320636f,0x732e6464610a3120,0x2c38367225203233,0x33202c3332722520\n"
".quad 0x64610a3b38363732,0x7225203233732e64,0x38367225202c3936,0x0a3b33367225202c\n"
".quad 0x203233752e726873,0x7225202c30377225,0x0a3b3631202c3936,0x33203320636f6c2e\n"
".quad 0x2e74730a31203433,0x6c72255b20363175,0x30377225202c5d34,0x3320636f6c2e0a3b\n"
".quad 0x610a312036333320,0x25203233732e6464,0x327225202c323772,0x3836373233202c34\n"
".quad 0x33732e6464610a3b,0x202c333772252032,0x7225202c32377225,0x2e7268730a3b3036\n"
".quad 0x3437722520323375,0x202c33377225202c,0x636f6c2e0a3b3631,0x3120363333203320\n"
".quad 0x203631752e74730a,0x202c5d366c72255b,0x6c2e0a3b34377225,0x383333203320636f\n"
".quad 0x732e6464610a3120,0x2c36377225203233,0x33202c3532722520,0x64610a3b38363732\n"
".quad 0x7225203233732e64,0x36377225202c3737,0x0a3b35357225202c,0x203233752e726873\n"
".quad 0x7225202c38377225,0x0a3b3631202c3737,0x33203320636f6c2e,0x2e74730a31203833\n"
".quad 0x6c72255b20363175,0x38377225202c5d39,0x33732e6275730a3b,0x202c303872252032\n"
".quad 0x7225202c36377225,0x2e7268730a3b3535,0x3138722520323375,0x202c30387225202c\n"
".quad 0x636f6c2e0a3b3631,0x3120303433203320,0x203631752e74730a,0x2c5d31316c72255b\n"
".quad 0x730a3b3138722520,0x25203233732e6275,0x377225202c333872,0x3b30367225202c32\n"
".quad 0x3233752e7268730a,0x25202c3438722520,0x3b3631202c333872,0x203320636f6c2e0a\n"
".quad 0x74730a3120323433,0x72255b203631752e,0x7225202c5d34316c,0x2e6275730a3b3438\n"
".quad 0x3638722520323373,0x202c38367225202c,0x68730a3b33367225,0x7225203233752e72\n"
".quad 0x36387225202c3738,0x6c2e0a3b3631202c,0x343433203320636f,0x31752e74730a3120\n"
".quad 0x37316c72255b2036,0x3b37387225202c5d,0x3233732e6275730a,0x25202c3938722520\n"
".quad 0x357225202c343672,0x752e7268730a3b32,0x2c30397225203233,0x31202c3938722520\n"
".quad 0x20636f6c2e0a3b36,0x0a31203634332033,0x5b203631752e7473,0x202c5d30326c7225\n"
".quad 0x6c2e0a3b30397225,0x373433203320636f,0x0a3b7465720a3220,0x697369762e0a0a7d\n"
".quad 0x6e75662e20656c62,0x554330325a5f2063,0x4974726f68734144,0x44496563616c706e\n"
".quad 0x702e0a286a505443,0x36622e206d617261,0x554330325a5f2034,0x4974726f68734144\n"
".quad 0x44496563616c706e,0x7261705f6a505443,0x7b0a290a305f6d61,0x732e206765722e0a\n"
".quad 0x36393c7225203233,0x206765722e0a3b3e,0x6c7225203436732e,0x6c0a0a0a3b3e323c\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x4330325a5f5b202c,0x74726f6873414455\n"
".quad 0x496563616c706e49,0x61705f6a50544344,0x0a3b5d305f6d6172,0x33203320636f6c2e\n"
".quad 0x2e646c0a31203836,0x2c31722520323375,0x3b5d316c72255b20,0x203320636f6c2e0a\n"
".quad 0x646c0a3120393633,0x337225203233752e,0x2b316c72255b202c,0x2e7268730a3b5d34\n"
".quad 0x2c35722520323373,0x3631202c33722520,0x3320636f6c2e0a3b,0x6c0a312030373320\n"
".quad 0x7225203233752e64,0x316c72255b202c36,0x7268730a3b5d382b,0x387225203233732e\n"
".quad 0x31202c367225202c,0x20636f6c2e0a3b36,0x0a31203137332033,0x25203233752e646c\n"
".quad 0x6c72255b202c3972,0x730a3b5d32312b31,0x25203233622e6c68,0x317225202c313172\n"
".quad 0x68730a3b3631202c,0x7225203233732e72,0x31317225202c3231,0x68730a3b3631202c\n"
".quad 0x7225203233622e6c,0x2c367225202c3331,0x7268730a3b363120,0x317225203233732e\n"
".quad 0x2c33317225202c34,0x6f6c2e0a3b363120,0x2031383320332063,0x33732e6464610a31\n"
".quad 0x202c353172252032,0x7225202c34317225,0x2e766f6d0a3b3231,0x3631722520323375\n"
".quad 0x3b3037313332202c,0x203420636f6c2e0a,0x756d0a3520343932,0x732e6f6c2e34326c\n"
".quad 0x2c37317225203233,0x25202c3531722520,0x6f6c2e0a3b363172,0x2032383320332063\n"
".quad 0x33732e6275730a31,0x202c383172252032,0x7225202c32317225,0x636f6c2e0a3b3431\n"
".quad 0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f,0x38317225202c3931\n"
".quad 0x0a3b36317225202c,0x203233752e766f6d,0x3231202c30327225,0x6c68730a3b303435\n"
".quad 0x327225203233622e,0x202c337225202c31,0x2e7268730a3b3631,0x3232722520323373\n"
".quad 0x202c31327225202c,0x636f6c2e0a3b3631,0x3520343932203420,0x6c2e34326c756d0a\n"
".quad 0x7225203233732e6f,0x32327225202c3332,0x0a3b30327225202c,0x203233752e766f6d\n"
".quad 0x3033202c34327225,0x6c68730a3b343732,0x327225203233622e,0x202c397225202c35\n"
".quad 0x2e7268730a3b3631,0x3632722520323373,0x202c35327225202c,0x636f6c2e0a3b3631\n"
".quad 0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f,0x36327225202c3732\n"
".quad 0x0a3b34327225202c,0x33203320636f6c2e,0x6275730a31203338,0x327225203233732e\n"
".quad 0x2c33327225202c38,0x2e0a3b3732722520,0x3932203420636f6c,0x326c756d0a352034\n"
".quad 0x3233732e6f6c2e34,0x25202c3932722520,0x327225202c363272,0x34326c756d0a3b30\n"
".quad 0x203233732e6f6c2e,0x7225202c30337225,0x34327225202c3232,0x3320636f6c2e0a3b\n"
".quad 0x610a312034383320,0x25203233732e6464,0x337225202c313372,0x3b39327225202c30\n"
".quad 0x203320636f6c2e0a,0x64610a3120363833,0x7225203233732e64,0x31337225202c3233\n"
".quad 0x0a3b37317225202c,0x33203320636f6c2e,0x6464610a31203738,0x337225203233732e\n"
".quad 0x2c38327225202c33,0x2e0a3b3931722520,0x3833203320636f6c,0x2e6275730a312038\n"
".quad 0x3433722520323373,0x202c39317225202c,0x6c2e0a3b38327225,0x393833203320636f\n"
".quad 0x732e6275730a3120,0x2c35337225203233,0x25202c3731722520,0x6f6c2e0a3b313372\n"
".quad 0x2031393320332063,0x33732e6464610a31,0x202c363372252032,0x357225202c387225\n"
".quad 0x3420636f6c2e0a3b,0x6d0a352034393220,0x2e6f6c2e34326c75,0x3733722520323373\n"
".quad 0x202c36337225202c,0x6c2e0a3b36317225,0x313933203320636f,0x732e6464610a3120\n"
".quad 0x2c38337225203233,0x34202c3733722520,0x7268730a3b363930,0x337225203233732e\n"
".quad 0x2c38337225202c39,0x6f6c2e0a3b333120,0x2032393320332063,0x33732e6275730a31\n"
".quad 0x202c303472252032,0x387225202c357225,0x3420636f6c2e0a3b,0x6d0a352034393220\n"
".quad 0x2e6f6c2e34326c75,0x3134722520323373,0x202c30347225202c,0x6c2e0a3b36317225\n"
".quad 0x323933203320636f,0x732e6464610a3120,0x2c32347225203233,0x34202c3134722520\n"
".quad 0x7268730a3b363930,0x347225203233732e,0x2c32347225202c33,0x7268730a3b333120\n"
".quad 0x347225203233732e,0x202c317225202c34,0x2e646e610a3b3431,0x3534722520323362\n"
".quad 0x202c34347225202c,0x2e7268730a3b342d,0x3634722520323373,0x31202c397225202c\n"
".quad 0x622e646e610a3b34,0x2c37347225203233,0x2d202c3634722520,0x20636f6c2e0a3b34\n"
".quad 0x0a31203739332033,0x203233732e646461,0x7225202c38347225,0x35347225202c3933\n"
".quad 0x3320636f6c2e0a3b,0x610a312038393320,0x25203233732e6464,0x347225202c393472\n"
".quad 0x3b37347225202c33,0x203320636f6c2e0a,0x75730a3120393933,0x7225203233732e62\n"
".quad 0x35347225202c3035,0x0a3b39337225202c,0x34203320636f6c2e,0x6275730a31203030\n"
".quad 0x357225203233732e,0x2c37347225202c31,0x6d0a3b3334722520,0x25203233752e766f\n"
".quad 0x333038202c323572,0x20636f6c2e0a3b35,0x0a35203439322034,0x6f6c2e34326c756d\n"
".quad 0x357225203233732e,0x2c38347225202c33,0x6d0a3b3235722520,0x25203233752e766f\n"
".quad 0x393531202c343572,0x20636f6c2e0a3b38,0x0a35203439322034,0x6f6c2e34326c756d\n"
".quad 0x357225203233732e,0x2c39347225202c35,0x2e0a3b3435722520,0x3034203320636f6c\n"
".quad 0x2e6464610a312032,0x3635722520323373,0x202c35357225202c,0x6c2e0a3b33357225\n"
".quad 0x343932203420636f,0x34326c756d0a3520,0x203233732e6f6c2e,0x7225202c37357225\n"
".quad 0x34357225202c3834,0x2e34326c756d0a3b,0x25203233732e6f6c,0x347225202c383572\n"
".quad 0x3b32357225202c39,0x203320636f6c2e0a,0x75730a3120333034,0x7225203233732e62\n"
".quad 0x37357225202c3935,0x0a3b38357225202c,0x203233752e766f6d,0x3534202c30367225\n"
".quad 0x636f6c2e0a3b3135,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x30357225202c3136,0x0a3b30367225202c,0x203233752e766f6d,0x3836202c32367225\n"
".quad 0x636f6c2e0a3b3131,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x31357225202c3336,0x0a3b32367225202c,0x34203320636f6c2e,0x6464610a31203430\n"
".quad 0x367225203233732e,0x2c33367225202c34,0x2e0a3b3136722520,0x3932203420636f6c\n"
".quad 0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3536722520,0x367225202c303572\n"
".quad 0x34326c756d0a3b32,0x203233732e6f6c2e,0x7225202c36367225,0x30367225202c3135\n"
".quad 0x3320636f6c2e0a3b,0x730a312035303420,0x25203233732e6275,0x367225202c373672\n"
".quad 0x3b36367225202c35,0x203320636f6c2e0a,0x64610a3120373034,0x7225203233732e64\n"
".quad 0x32337225202c3836,0x3b3836373233202c,0x3233732e6464610a,0x25202c3936722520\n"
".quad 0x357225202c383672,0x752e7268730a3b36,0x2c30377225203233,0x31202c3936722520\n"
".quad 0x20636f6c2e0a3b36,0x0a31203830342033,0x203233732e646461,0x7225202c31377225\n"
".quad 0x36373233202c3333,0x732e6464610a3b38,0x2c32377225203233,0x25202c3137722520\n"
".quad 0x646e610a3b373672,0x377225203233622e,0x2c32377225202c33,0x3b36333535362d20\n"
".quad 0x203233622e726f0a,0x7225202c34377225,0x30377225202c3337,0x3320636f6c2e0a3b\n"
".quad 0x610a312039303420,0x25203233732e6464,0x337225202c353772,0x3836373233202c34\n"
".quad 0x33732e6464610a3b,0x202c363772252032,0x7225202c35377225,0x2e7268730a3b3436\n"
".quad 0x3737722520323375,0x202c36377225202c,0x636f6c2e0a3b3631,0x3120303134203320\n"
".quad 0x3233732e6464610a,0x25202c3837722520,0x373233202c353372,0x2e6464610a3b3836\n"
".quad 0x3937722520323373,0x202c38377225202c,0x6e610a3b39357225,0x7225203233622e64\n"
".quad 0x39377225202c3038,0x36333535362d202c,0x3233622e726f0a3b,0x25202c3138722520\n"
".quad 0x387225202c373772,0x732e6275730a3b30,0x2c32387225203233,0x25202c3837722520\n"
".quad 0x7268730a3b393572,0x387225203233752e,0x2c32387225202c33,0x6275730a3b363120\n"
".quad 0x387225203233732e,0x2c35377225202c34,0x610a3b3436722520,0x25203233622e646e\n"
".quad 0x387225202c353872,0x333535362d202c34,0x33622e726f0a3b36,0x202c363872252032\n"
".quad 0x7225202c35387225,0x2e6275730a3b3338,0x3738722520323373,0x202c31377225202c\n"
".quad 0x68730a3b37367225,0x7225203233752e72,0x37387225202c3838,0x75730a3b3631202c\n"
".quad 0x7225203233732e62,0x38367225202c3938,0x0a3b36357225202c,0x203233622e646e61\n"
".quad 0x7225202c30397225,0x3535362d202c3938,0x622e726f0a3b3633,0x2c31397225203233\n"
".quad 0x25202c3838722520,0x6f6c2e0a3b303972,0x2036313420332063,0x3233752e74730a31\n"
".quad 0x2c5d316c72255b20,0x2e0a3b3437722520,0x3134203320636f6c,0x752e74730a312037\n"
".quad 0x316c72255b203233,0x387225202c5d342b,0x20636f6c2e0a3b31,0x0a31203831342033\n"
".quad 0x5b203233752e7473,0x2c5d382b316c7225,0x2e0a3b3638722520,0x3134203320636f6c\n"
".quad 0x752e74730a312039,0x316c72255b203233,0x7225202c5d32312b,0x636f6c2e0a3b3139\n"
".quad 0x3220303234203320,0x0a7d0a3b7465720a,0x207972746e652e0a,0x4144554334315a5f\n"
".quad 0x44316c656e72656b,0x2869696966505443,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x72656b4144554334,0x50544344316c656e,0x7261705f69696966,0x702e0a2c305f6d61\n"
".quad 0x33752e206d617261,0x554334315a5f2032,0x6c656e72656b4144,0x6969665054434431\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c31,0x5f203233752e206d,0x6b4144554334315a\n"
".quad 0x4344316c656e7265,0x705f696969665054,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x34315a5f20323375,0x6e72656b41445543,0x6650544344316c65,0x617261705f696969\n"
".quad 0x0a7b0a290a335f6d,0x33662e206765722e,0x3e38353c66252032,0x2e206765722e0a3b\n"
".quad 0x363c722520323373,0x6765722e0a3b3e33,0x7225203436732e20,0x0a0a3b3e34323c6c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c346c,0x72656b4144554334\n"
".quad 0x50544344316c656e,0x7261705f69696966,0x6c0a3b5d305f6d61,0x2e6d617261702e64\n"
".quad 0x2c37722520323375,0x554334315a5f5b20,0x6c656e72656b4144,0x6969665054434431\n"
".quad 0x5f6d617261705f69,0x702e646c0a3b5d32,0x3233752e6d617261,0x5f5b202c38722520\n"
".quad 0x6b4144554334315a,0x4344316c656e7265,0x705f696969665054,0x3b5d335f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x316c722520343675,0x0a3b346c7225202c\n"
".quad 0x36203520636f6c2e,0x2e766f6d0a312034,0x2c39722520323375,0x2e64696174632520\n"
".quad 0x732e6464610a3b78,0x2c30317225203233,0x7225202c39722520,0x20636f6c2e0a3b37\n"
".quad 0x6d0a312035362035,0x25203233752e766f,0x746325202c313172,0x610a3b792e646961\n"
".quad 0x25203233732e6464,0x317225202c323172,0x0a3b387225202c31,0x203233622e6c6873\n"
".quad 0x7225202c33317225,0x2e0a3b33202c3031,0x3836203520636f6c,0x752e766f6d0a3120\n"
".quad 0x202c327225203233,0x0a3b782e64697425,0x37203520636f6c2e,0x2e6464610a312032\n"
".quad 0x2c33722520323373,0x25202c3331722520,0x2e7476630a3b3272,0x732e3233662e6e72\n"
".quad 0x202c376625203233,0x6464610a3b337225,0x356625203233662e,0x30202c376625202c\n"
".quad 0x3030303030463366,0x622e6c68730a3b30,0x2c34317225203233,0x33202c3231722520\n"
".quad 0x3520636f6c2e0a3b,0x6f6d0a3120393620,0x7225203233752e76,0x2e64697425202c34\n"
".quad 0x20636f6c2e0a3b79,0x610a312033372035,0x25203233732e6464,0x34317225202c3572\n"
".quad 0x630a3b347225202c,0x33662e6e722e7476,0x6625203233732e32,0x0a3b357225202c38\n"
".quad 0x203233662e646461,0x386625202c366625,0x303046336630202c,0x6f6d0a3b30303030\n"
".quad 0x7225203233752e76,0x0a0a3b30202c3531,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x2c3166257b203233,0x6625202c32662520,0x2c7d346625202c33,0x6372537865545b20\n"
".quad 0x202c3566257b202c,0x0a0a3b5d7d366625,0x3233622e6c687309,0x7225202c36722520\n"
".quad 0x6c2e0a3b33202c34,0x203637203520636f,0x33732e6464610a31,0x202c363172252032\n"
".quad 0x327225202c367225,0x36732e7476630a3b,0x7225203233732e34,0x36317225202c326c\n"
".quad 0x69772e6c756d0a3b,0x25203233732e6564,0x317225202c356c72,0x6f6d0a3b34202c36\n"
".quad 0x7225203436752e76,0x42727543202c366c,0x61636f4c6b636f6c,0x2e6464610a3b316c\n"
".quad 0x336c722520343673,0x202c366c7225202c,0x6c2e0a3b356c7225,0x203637203520636f\n"
".quad 0x6168732e74730a31,0x203233662e646572,0x202c5d336c72255b,0x6f6c2e0a3b316625\n"
".quad 0x3120393720352063,0x6e79732e7261620a,0x6f6c2e0a3b302063,0x3120393620352063\n"
".quad 0x3233752e766f6d0a,0x25202c3236722520,0x6d0a3b792e646974,0x2e656469772e6c75\n"
".quad 0x376c722520323373,0x202c32367225202c,0x752e766f6d0a3b34,0x2c386c7225203436\n"
".quad 0x616d387654434420,0x64610a3b78697274,0x7225203436732e64,0x386c7225202c396c\n"
".quad 0x0a3b376c7225202c,0x36203520636f6c2e,0x2e766f6d0a312038,0x3136722520323375\n"
".quad 0x782e64697425202c,0x69772e6c756d0a3b,0x25203233732e6564,0x7225202c30316c72\n"
".quad 0x610a3b34202c3136,0x25203436732e6464,0x7225202c32316c72,0x316c7225202c366c\n"
".quad 0x20636f6c2e0a3b30,0x6c0a312038382035,0x6465726168732e64,0x396625203233662e\n"
".quad 0x32316c72255b202c,0x6f632e646c0a3b5d,0x203233662e74736e,0x255b202c30316625\n"
".quad 0x6d660a3b5d396c72,0x3233662e6e722e61,0x25202c3131662520,0x396625202c303166\n"
".quad 0x303030306630202c,0x646c0a3b30303030,0x2e6465726168732e,0x3231662520323366\n"
".quad 0x32316c72255b202c,0x646c0a3b5d32332b,0x662e74736e6f632e,0x2c33316625203233\n"
".quad 0x332b396c72255b20,0x2e616d660a3b5d32,0x25203233662e6e72,0x316625202c343166\n"
".quad 0x2c32316625202c33,0x6c0a3b3131662520,0x6465726168732e64,0x316625203233662e\n"
".quad 0x316c72255b202c35,0x6c0a3b5d34362b32,0x2e74736e6f632e64,0x3631662520323366\n"
".quad 0x2b396c72255b202c,0x616d660a3b5d3436,0x203233662e6e722e,0x6625202c37316625\n"
".quad 0x35316625202c3631,0x0a3b34316625202c,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x6c72255b202c3831,0x0a3b5d36392b3231,0x74736e6f632e646c,0x316625203233662e\n"
".quad 0x396c72255b202c39,0x6d660a3b5d36392b,0x3233662e6e722e61,0x25202c3032662520\n"
".quad 0x316625202c393166,0x3b37316625202c38,0x726168732e646c0a,0x25203233662e6465\n"
".quad 0x72255b202c313266,0x5d3832312b32316c,0x6e6f632e646c0a3b,0x25203233662e7473\n"
".quad 0x72255b202c323266,0x3b5d3832312b396c,0x2e6e722e616d660a,0x3332662520323366\n"
".quad 0x202c32326625202c,0x6625202c31326625,0x732e646c0a3b3032,0x33662e6465726168\n"
".quad 0x202c343266252032,0x312b32316c72255b,0x2e646c0a3b5d3036,0x33662e74736e6f63\n"
".quad 0x202c353266252032,0x36312b396c72255b,0x2e616d660a3b5d30,0x25203233662e6e72\n"
".quad 0x326625202c363266,0x2c34326625202c35,0x6c0a3b3332662520,0x6465726168732e64\n"
".quad 0x326625203233662e,0x316c72255b202c37,0x0a3b5d3239312b32,0x74736e6f632e646c\n"
".quad 0x326625203233662e,0x396c72255b202c38,0x660a3b5d3239312b,0x33662e6e722e616d\n"
".quad 0x202c393266252032,0x6625202c38326625,0x36326625202c3732,0x6168732e646c0a3b\n"
".quad 0x203233662e646572,0x255b202c30336625,0x3432322b32316c72,0x6f632e646c0a3b5d\n"
".quad 0x203233662e74736e,0x255b202c31336625,0x5d3432322b396c72,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x2c31336625202c32,0x25202c3033662520,0x6c68730a3b393266\n"
".quad 0x6c7225203436622e,0x326c7225202c3331,0x766f6d0a3b32202c,0x6c7225203436752e\n"
".quad 0x42727543202c3431,0x61636f4c6b636f6c,0x2e6464610a3b326c,0x316c722520343673\n"
".quad 0x34316c7225202c35,0x3b33316c7225202c,0x203520636f6c2e0a,0x2e74730a31203239\n"
".quad 0x662e646572616873,0x316c72255b203233,0x32336625202c5d35,0x3520636f6c2e0a3b\n"
".quad 0x61620a3120353920,0x3020636e79732e72,0x69772e6c756d0a3b,0x25203233732e6564\n"
".quad 0x7225202c36316c72,0x64610a3b34202c36,0x7225203436732e64,0x6c7225202c38316c\n"
".quad 0x316c7225202c3431,0x20636f6c2e0a3b36,0x6d0a312038362035,0x25203233752e766f\n"
".quad 0x697425202c303672,0x6c756d0a3b782e64,0x33732e656469772e,0x2c39316c72252032\n"
".quad 0x34202c3036722520,0x36732e6464610a3b,0x2c31326c72252034,0x25202c386c722520\n"
".quad 0x6c2e0a3b39316c72,0x343031203520636f,0x6f632e646c0a3120,0x203233662e74736e\n"
".quad 0x255b202c33336625,0x6c0a3b5d31326c72,0x6465726168732e64,0x336625203233662e\n"
".quad 0x316c72255b202c34,0x2e616d660a3b5d38,0x25203233662e6e72,0x336625202c353366\n"
".quad 0x2c33336625202c34,0x3030303030663020,0x2e646c0a3b303030,0x33662e74736e6f63\n"
".quad 0x202c363366252032,0x332b31326c72255b,0x732e646c0a3b5d32,0x33662e6465726168\n"
".quad 0x202c373366252032,0x342b38316c72255b,0x722e616d660a3b5d,0x6625203233662e6e\n"
".quad 0x37336625202c3833,0x202c36336625202c,0x646c0a3b35336625,0x662e74736e6f632e\n"
".quad 0x2c39336625203233,0x2b31326c72255b20,0x2e646c0a3b5d3436,0x662e646572616873\n"
".quad 0x2c30346625203233,0x2b38316c72255b20,0x2e616d660a3b5d38,0x25203233662e6e72\n"
".quad 0x346625202c313466,0x2c39336625202c30,0x6c0a3b3833662520,0x2e74736e6f632e64\n"
".quad 0x3234662520323366,0x31326c72255b202c,0x646c0a3b5d36392b,0x2e6465726168732e\n"
".quad 0x3334662520323366,0x38316c72255b202c,0x6d660a3b5d32312b,0x3233662e6e722e61\n"
".quad 0x25202c3434662520,0x346625202c333466,0x3b31346625202c32,0x736e6f632e646c0a\n"
".quad 0x6625203233662e74,0x6c72255b202c3534,0x3b5d3832312b3132,0x726168732e646c0a\n"
".quad 0x25203233662e6465,0x72255b202c363466,0x3b5d36312b38316c,0x2e6e722e616d660a\n"
".quad 0x3734662520323366,0x202c36346625202c,0x6625202c35346625,0x632e646c0a3b3434\n"
".quad 0x3233662e74736e6f,0x5b202c3834662520,0x36312b31326c7225,0x732e646c0a3b5d30\n"
".quad 0x33662e6465726168,0x202c393466252032,0x322b38316c72255b,0x2e616d660a3b5d30\n"
".quad 0x25203233662e6e72,0x346625202c303566,0x2c38346625202c39,0x6c0a3b3734662520\n"
".quad 0x2e74736e6f632e64,0x3135662520323366,0x31326c72255b202c,0x6c0a3b5d3239312b\n"
".quad 0x6465726168732e64,0x356625203233662e,0x316c72255b202c32,0x660a3b5d34322b38\n"
".quad 0x33662e6e722e616d,0x202c333566252032,0x6625202c32356625,0x30356625202c3135\n"
".quad 0x6e6f632e646c0a3b,0x25203233662e7473,0x72255b202c343566,0x5d3432322b31326c\n"
".quad 0x6168732e646c0a3b,0x203233662e646572,0x255b202c35356625,0x5d38322b38316c72\n"
".quad 0x6e722e616d660a3b,0x356625203233662e,0x2c35356625202c36,0x25202c3435662520\n"
".quad 0x6f6c2e0a3b333566,0x2038303120352063,0x6168732e74730a31,0x203233662e646572\n"
".quad 0x202c5d336c72255b,0x6c2e0a3b36356625,0x313131203520636f,0x732e7261620a3120\n"
".quad 0x6c0a3b3020636e79,0x2e6d617261702e64,0x3635722520323375,0x4334315a5f5b202c\n"
".quad 0x656e72656b414455,0x696650544344316c,0x6d617261705f6969,0x6f6c2e0a3b5d315f\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x357225202c323572\n"
".quad 0x0a3b36357225202c,0x31203520636f6c2e,0x6464610a31203431,0x357225203233732e\n"
".quad 0x202c337225202c33,0x756d0a3b32357225,0x732e656469772e6c,0x32326c7225203233\n"
".quad 0x202c33357225202c,0x732e6464610a3b34,0x33326c7225203436,0x202c316c7225202c\n"
".quad 0x6c0a3b32326c7225,0x6465726168732e64,0x356625203233662e,0x336c72255b202c37\n"
".quad 0x6c672e74730a3b5d,0x3233662e6c61626f,0x5d33326c72255b20,0x0a3b37356625202c\n"
".quad 0x31203520636f6c2e,0x7465720a32203531,0x6e652e0a0a7d0a3b,0x35315a5f20797274\n"
".quad 0x6e72656b41445543,0x5054434449316c65,0x702e0a2869696966,0x36752e206d617261\n"
".quad 0x554335315a5f2034,0x6c656e72656b4144,0x6966505443444931,0x6d617261705f6969\n"
".quad 0x7261702e0a2c305f,0x203233752e206d61,0x4144554335315a5f,0x49316c656e72656b\n"
".quad 0x6969696650544344,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203233752e20\n"
".quad 0x656b414455433531,0x434449316c656e72,0x705f696969665054,0x0a2c325f6d617261\n"
".quad 0x2e206d617261702e,0x35315a5f20323375,0x6e72656b41445543,0x5054434449316c65\n"
".quad 0x7261705f69696966,0x7b0a290a335f6d61,0x662e206765722e0a,0x38353c6625203233\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x65722e0a3b3e3236,0x25203436732e2067\n"
".quad 0x0a3b3e34323c6c72,0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c346c72\n"
".quad 0x656b414455433531,0x434449316c656e72,0x705f696969665054,0x3b5d305f6d617261\n"
".quad 0x617261702e646c0a,0x7225203233752e6d,0x35315a5f5b202c36,0x6e72656b41445543\n"
".quad 0x5054434449316c65,0x7261705f69696966,0x6c0a3b5d325f6d61,0x2e6d617261702e64\n"
".quad 0x2c37722520323375,0x554335315a5f5b20,0x6c656e72656b4144,0x6966505443444931\n"
".quad 0x6d617261705f6969,0x7476630a3b5d335f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x7225202c316c7225,0x636f6c2e0a3b346c,0x3120333331203520,0x3233752e766f6d0a\n"
".quad 0x6325202c38722520,0x0a3b782e64696174,0x203233732e646461,0x387225202c397225\n"
".quad 0x2e0a3b367225202c,0x3331203520636f6c,0x2e766f6d0a312034,0x3031722520323375\n"
".quad 0x646961746325202c,0x2e6464610a3b792e,0x3131722520323373,0x202c30317225202c\n"
".quad 0x6c68730a3b377225,0x317225203233622e,0x202c397225202c32,0x20636f6c2e0a3b33\n"
".quad 0x0a31203733312035,0x203233752e766f6d,0x697425202c327225,0x6f6c2e0a3b782e64\n"
".quad 0x2031343120352063,0x33732e6464610a31,0x25202c3372252032,0x327225202c323172\n"
".quad 0x6e722e7476630a3b,0x3233732e3233662e,0x7225202c37662520,0x662e6464610a3b33\n"
".quad 0x202c356625203233,0x336630202c376625,0x3b30303030303046,0x3233622e6c68730a\n"
".quad 0x25202c3331722520,0x0a3b33202c313172,0x31203520636f6c2e,0x766f6d0a31203833\n"
".quad 0x317225203233752e,0x2e64697425202c34,0x20636f6c2e0a3b79,0x0a31203234312035\n"
".quad 0x203233732e646461,0x317225202c347225,0x3b34317225202c33,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x347225202c386625,0x33662e6464610a3b,0x25202c3666252032\n"
".quad 0x46336630202c3866,0x0a3b303030303030,0x203233752e766f6d,0x3b30202c35317225\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x202c326625202c31\n"
".quad 0x346625202c336625,0x537865545b202c7d,0x3566257b202c6372,0x3b5d7d366625202c\n"
".quad 0x622e6c6873090a0a,0x202c357225203233,0x3b33202c34317225,0x203520636f6c2e0a\n"
".quad 0x64610a3120353431,0x7225203233732e64,0x2c357225202c3631,0x76630a3b32722520\n"
".quad 0x33732e3436732e74,0x202c326c72252032,0x756d0a3b36317225,0x732e656469772e6c\n"
".quad 0x2c356c7225203233,0x34202c3631722520,0x36752e766f6d0a3b,0x202c366c72252034\n"
".quad 0x6b636f6c42727543,0x0a3b316c61636f4c,0x203436732e646461,0x7225202c336c7225\n"
".quad 0x356c7225202c366c,0x3520636f6c2e0a3b,0x730a312035343120,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x316625202c5d336c,0x3520636f6c2e0a3b,0x620a312038343120\n"
".quad 0x20636e79732e7261,0x772e6c756d0a3b30,0x203233732e656469,0x7225202c376c7225\n"
".quad 0x6f6d0a3b34202c35,0x7225203436752e76,0x76544344202c386c,0x3b78697274616d38\n"
".quad 0x3436732e6464610a,0x25202c396c722520,0x6c7225202c386c72,0x20636f6c2e0a3b37\n"
".quad 0x0a31203733312035,0x203233752e766f6d,0x7425202c31367225,0x756d0a3b782e6469\n"
".quad 0x732e656469772e6c,0x30316c7225203233,0x202c31367225202c,0x732e6464610a3b34\n"
".quad 0x32316c7225203436,0x202c366c7225202c,0x2e0a3b30316c7225,0x3531203520636f6c\n"
".quad 0x732e646c0a312037,0x33662e6465726168,0x5b202c3966252032,0x0a3b5d32316c7225\n"
".quad 0x74736e6f632e646c,0x316625203233662e,0x396c72255b202c30,0x722e616d660a3b5d\n"
".quad 0x6625203233662e6e,0x30316625202c3131,0x30202c396625202c,0x3030303030303066\n"
".quad 0x68732e646c0a3b30,0x3233662e64657261,0x5b202c3231662520,0x32332b32316c7225\n"
".quad 0x6f632e646c0a3b5d,0x203233662e74736e,0x255b202c33316625,0x0a3b5d342b396c72\n"
".quad 0x662e6e722e616d66,0x2c34316625203233,0x25202c3331662520,0x316625202c323166\n"
".quad 0x68732e646c0a3b31,0x3233662e64657261,0x5b202c3531662520,0x34362b32316c7225\n"
".quad 0x6f632e646c0a3b5d,0x203233662e74736e,0x255b202c36316625,0x0a3b5d382b396c72\n"
".quad 0x662e6e722e616d66,0x2c37316625203233,0x25202c3631662520,0x316625202c353166\n"
".quad 0x68732e646c0a3b34,0x3233662e64657261,0x5b202c3831662520,0x36392b32316c7225\n"
".quad 0x6f632e646c0a3b5d,0x203233662e74736e,0x255b202c39316625,0x3b5d32312b396c72\n"
".quad 0x2e6e722e616d660a,0x3032662520323366,0x202c39316625202c,0x6625202c38316625\n"
".quad 0x732e646c0a3b3731,0x33662e6465726168,0x202c313266252032,0x312b32316c72255b\n"
".quad 0x2e646c0a3b5d3832,0x33662e74736e6f63,0x202c323266252032,0x36312b396c72255b\n"
".quad 0x722e616d660a3b5d,0x6625203233662e6e,0x32326625202c3332,0x202c31326625202c\n"
".quad 0x646c0a3b30326625,0x2e6465726168732e,0x3432662520323366,0x32316c72255b202c\n"
".quad 0x6c0a3b5d3036312b,0x2e74736e6f632e64,0x3532662520323366,0x2b396c72255b202c\n"
".quad 0x616d660a3b5d3032,0x203233662e6e722e,0x6625202c36326625,0x34326625202c3532\n"
".quad 0x0a3b33326625202c,0x65726168732e646c,0x6625203233662e64,0x6c72255b202c3732\n"
".quad 0x3b5d3239312b3231,0x736e6f632e646c0a,0x6625203233662e74,0x6c72255b202c3832\n"
".quad 0x660a3b5d34322b39,0x33662e6e722e616d,0x202c393266252032,0x6625202c38326625\n"
".quad 0x36326625202c3732,0x6168732e646c0a3b,0x203233662e646572,0x255b202c30336625\n"
".quad 0x3432322b32316c72,0x6f632e646c0a3b5d,0x203233662e74736e,0x255b202c31336625\n"
".quad 0x3b5d38322b396c72,0x2e6e722e616d660a,0x3233662520323366,0x202c31336625202c\n"
".quad 0x6625202c30336625,0x2e6c68730a3b3932,0x316c722520343662,0x2c326c7225202c33\n"
".quad 0x2e766f6d0a3b3220,0x316c722520343675,0x6c42727543202c34,0x6c61636f4c6b636f\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x2c34316c7225202c,0x0a3b33316c722520\n"
".quad 0x31203520636f6c2e,0x2e74730a31203136,0x662e646572616873,0x316c72255b203233\n"
".quad 0x32336625202c5d35,0x3520636f6c2e0a3b,0x620a312034363120,0x20636e79732e7261\n"
".quad 0x20636f6c2e0a3b30,0x0a31203733312035,0x203233752e766f6d,0x7425202c30367225\n"
".quad 0x68730a3b782e6469,0x7225203233622e6c,0x30367225202c3533,0x6c756d0a3b33202c\n"
".quad 0x33732e656469772e,0x2c36316c72252032,0x3b34202c35722520,0x3436732e6464610a\n"
".quad 0x202c38316c722520,0x25202c34316c7225,0x756d0a3b36316c72,0x732e656469772e6c\n"
".quad 0x39316c7225203233,0x202c35337225202c,0x732e6464610a3b34,0x31326c7225203436\n"
".quad 0x202c386c7225202c,0x2e0a3b39316c7225,0x3731203520636f6c,0x632e646c0a312033\n"
".quad 0x3233662e74736e6f,0x5b202c3333662520,0x0a3b5d31326c7225,0x65726168732e646c\n"
".quad 0x6625203233662e64,0x6c72255b202c3433,0x616d660a3b5d3831,0x203233662e6e722e\n"
".quad 0x6625202c35336625,0x33336625202c3433,0x303030306630202c,0x646c0a3b30303030\n"
".quad 0x662e74736e6f632e,0x2c36336625203233,0x2b31326c72255b20,0x732e646c0a3b5d34\n"
".quad 0x33662e6465726168,0x202c373366252032,0x342b38316c72255b,0x722e616d660a3b5d\n"
".quad 0x6625203233662e6e,0x37336625202c3833,0x202c36336625202c,0x646c0a3b35336625\n"
".quad 0x662e74736e6f632e,0x2c39336625203233,0x2b31326c72255b20,0x732e646c0a3b5d38\n"
".quad 0x33662e6465726168,0x202c303466252032,0x382b38316c72255b,0x722e616d660a3b5d\n"
".quad 0x6625203233662e6e,0x30346625202c3134,0x202c39336625202c,0x646c0a3b38336625\n"
".quad 0x662e74736e6f632e,0x2c32346625203233,0x2b31326c72255b20,0x2e646c0a3b5d3231\n"
".quad 0x662e646572616873,0x2c33346625203233,0x2b38316c72255b20,0x616d660a3b5d3231\n"
".quad 0x203233662e6e722e,0x6625202c34346625,0x32346625202c3334,0x0a3b31346625202c\n"
".quad 0x74736e6f632e646c,0x346625203233662e,0x326c72255b202c35,0x6c0a3b5d36312b31\n"
".quad 0x6465726168732e64,0x346625203233662e,0x316c72255b202c36,0x660a3b5d36312b38\n"
".quad 0x33662e6e722e616d,0x202c373466252032,0x6625202c36346625,0x34346625202c3534\n"
".quad 0x6e6f632e646c0a3b,0x25203233662e7473,0x72255b202c383466,0x3b5d30322b31326c\n"
".quad 0x726168732e646c0a,0x25203233662e6465,0x72255b202c393466,0x3b5d30322b38316c\n"
".quad 0x2e6e722e616d660a,0x3035662520323366,0x202c39346625202c,0x6625202c38346625\n"
".quad 0x632e646c0a3b3734,0x3233662e74736e6f,0x5b202c3135662520,0x34322b31326c7225\n"
".quad 0x68732e646c0a3b5d,0x3233662e64657261,0x5b202c3235662520,0x34322b38316c7225\n"
".quad 0x722e616d660a3b5d,0x6625203233662e6e,0x32356625202c3335,0x202c31356625202c\n"
".quad 0x646c0a3b30356625,0x662e74736e6f632e,0x2c34356625203233,0x2b31326c72255b20\n"
".quad 0x2e646c0a3b5d3832,0x662e646572616873,0x2c35356625203233,0x2b38316c72255b20\n"
".quad 0x616d660a3b5d3832,0x203233662e6e722e,0x6625202c36356625,0x34356625202c3535\n"
".quad 0x0a3b33356625202c,0x31203520636f6c2e,0x2e74730a31203737,0x662e646572616873\n"
".quad 0x336c72255b203233,0x3b36356625202c5d,0x203520636f6c2e0a,0x61620a3120303831\n"
".quad 0x3020636e79732e72,0x7261702e646c0a3b,0x25203233752e6d61,0x5a5f5b202c373572\n"
".quad 0x656b414455433531,0x434449316c656e72,0x705f696969665054,0x3b5d315f6d617261\n"
".quad 0x203420636f6c2e0a,0x756d0a3520343932,0x732e6f6c2e34326c,0x2c33357225203233\n"
".quad 0x7225202c34722520,0x636f6c2e0a3b3735,0x3120333831203520,0x3233732e6464610a\n"
".quad 0x25202c3435722520,0x33357225202c3372,0x69772e6c756d0a3b,0x25203233732e6564\n"
".quad 0x7225202c32326c72,0x610a3b34202c3435,0x25203436732e6464,0x7225202c33326c72\n"
".quad 0x326c7225202c316c,0x68732e646c0a3b32,0x3233662e64657261,0x5b202c3735662520\n"
".quad 0x730a3b5d336c7225,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d33326c\n"
".quad 0x636f6c2e0a3b3735,0x3220343831203520,0x0a7d0a3b7465720a,0x207972746e652e0a\n"
".quad 0x4144554334315a5f,0x44326c656e72656b,0x28695f5366505443,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x72656b4144554334,0x50544344326c656e,0x7261705f695f5366\n"
".quad 0x702e0a2c305f6d61,0x36752e206d617261,0x554334315a5f2034,0x6c656e72656b4144\n"
".quad 0x5f53665054434432,0x5f6d617261705f69,0x617261702e0a2c31,0x5f203233752e206d\n"
".quad 0x6b4144554334315a,0x4344326c656e7265,0x705f695f53665054,0x290a325f6d617261\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x722e0a3b3e393231,0x203233732e206765\n"
".quad 0x0a3b3e39383c7225,0x36732e206765722e,0x36353c6c72252034,0x68732e090a0a3b3e\n"
".quad 0x6c612e2064657261,0x622e2034206e6769,0x616475635f5f2038,0x765f6c61636f6c5f\n"
".quad 0x38333938335f7261,0x5f6e6f6e5f35335f,0x6c625f74736e6f63,0x323131325b6b636f\n"
".quad 0x702e646c0a0a3b5d,0x3436752e6d617261,0x5b202c316c722520,0x4144554334315a5f\n"
".quad 0x44326c656e72656b,0x5f695f5366505443,0x5d305f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5a5f5b202c326c72,0x656b414455433431,0x544344326c656e72\n"
".quad 0x61705f695f536650,0x0a3b5d315f6d6172,0x6d617261702e646c,0x317225203233752e\n"
".quad 0x4334315a5f5b202c,0x656e72656b414455,0x536650544344326c,0x6d617261705f695f\n"
".quad 0x7476630a3b5d325f,0x6f6c672e6f742e61,0x203436752e6c6162,0x7225202c336c7225\n"
".quad 0x636f6c2e0a3b316c,0x3120343831203220,0x3233752e766f6d0a,0x7425202c32722520\n"
".quad 0x68730a3b792e6469,0x7225203233622e6c,0x202c327225202c33,0x20636f6c2e0a3b33\n"
".quad 0x0a31203438312032,0x203233752e766f6d,0x697425202c347225,0x6f6c2e0a3b782e64\n"
".quad 0x2035383120322063,0x33752e766f6d0a31,0x25202c3572252032,0x730a3b7a2e646974\n"
".quad 0x25203233622e6c68,0x2c357225202c3672,0x636f6c2e0a3b3320,0x3120363831203220\n"
".quad 0x3233752e766f6d0a,0x6325202c37722520,0x0a3b792e64696174,0x203233622e6c6873\n"
".quad 0x377225202c387225,0x6f6c2e0a3b34202c,0x2036383120322063,0x33732e6464610a31\n"
".quad 0x25202c3972252032,0x3b367225202c3872,0x203420636f6c2e0a,0x756d0a3520343932\n"
".quad 0x732e6f6c2e34326c,0x2c30317225203233,0x7225202c39722520,0x20636f6c2e0a3b31\n"
".quad 0x0a31203638312032,0x203233752e766f6d,0x6325202c31317225,0x0a3b782e64696174\n"
".quad 0x203233622e6c6873,0x7225202c32317225,0x2e0a3b35202c3131,0x3831203220636f6c\n"
".quad 0x2e6464610a312034,0x3331722520323373,0x25202c337225202c,0x636f6c2e0a3b3472\n"
".quad 0x3120363831203220,0x3233732e6464610a,0x25202c3431722520,0x317225202c303172\n"
".quad 0x732e6464610a3b33,0x2c35317225203233,0x25202c3431722520,0x7476630a3b323172\n"
".quad 0x3233752e3436752e,0x25202c346c722520,0x6c756d0a3b353172,0x203233732e6f6c2e\n"
".quad 0x7225202c36317225,0x0a3b343632202c35,0x31203220636f6c2e,0x7476630a31203838\n"
".quad 0x3233732e3436732e,0x25202c356c722520,0x7476630a3b363172,0x3233732e3436732e\n"
".quad 0x25202c366c722520,0x6464610a3b333172,0x6c7225203436732e,0x2c356c7225202c37\n"
".quad 0x730a3b366c722520,0x25203436622e6c68,0x6c7225202c386c72,0x6f6d0a3b32202c37\n"
".quad 0x7225203436752e76,0x75635f5f202c396c,0x6c61636f6c5f6164,0x3938335f7261765f\n"
".quad 0x6f6e5f35335f3833,0x5f74736e6f635f6e,0x610a3b6b636f6c62,0x25203436732e6464\n"
".quad 0x7225202c30316c72,0x386c7225202c396c,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x326c7225202c3131,0x3220636f6c2e0a3b,0x6d0a312032393120\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x2c35317225202c32,0x2e6464610a3b3420\n"
".quad 0x316c722520343673,0x31316c7225202c33,0x3b32316c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3166,0x2e74730a3b5d3331,0x662e646572616873\n"
".quad 0x316c72255b203233,0x3b316625202c5d30,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x3b317225202c3431,0x3436732e6464610a,0x202c35316c722520,0x25202c34316c7225\n"
".quad 0x6f6c2e0a3b346c72,0x2032393120322063,0x36622e6c68730a31,0x2c36316c72252034\n"
".quad 0x202c35316c722520,0x732e6464610a3b32,0x37316c7225203436,0x2c31316c7225202c\n"
".quad 0x0a3b36316c722520,0x61626f6c672e646c,0x6625203233662e6c,0x316c72255b202c32\n"
".quad 0x732e74730a3b5d37,0x33662e6465726168,0x30316c72255b2032,0x25202c5d3233312b\n"
".quad 0x2e6c68730a3b3266,0x3132722520323362,0x31202c317225202c,0x3220636f6c2e0a3b\n"
".quad 0x630a312032393120,0x752e3436752e7476,0x38316c7225203233,0x0a3b31327225202c\n"
".quad 0x203436732e646461,0x25202c39316c7225,0x7225202c38316c72,0x636f6c2e0a3b346c\n"
".quad 0x3120323931203220,0x3436622e6c68730a,0x202c30326c722520,0x32202c39316c7225\n"
".quad 0x36732e6464610a3b,0x2c31326c72252034,0x202c31316c722520,0x6c0a3b30326c7225\n"
".quad 0x6c61626f6c672e64,0x336625203233662e,0x31326c72255b202c,0x68732e74730a3b5d\n"
".quad 0x3233662e64657261,0x2b30316c72255b20,0x6625202c5d343632,0x6c2e6c756d0a3b33\n"
".quad 0x7225203233732e6f,0x2c317225202c3432,0x636f6c2e0a3b3320,0x3120323931203220\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x34327225202c3232,0x36732e6464610a3b\n"
".quad 0x2c33326c72252034,0x202c32326c722520,0x6c2e0a3b346c7225,0x323931203220636f\n"
".quad 0x622e6c68730a3120,0x34326c7225203436,0x2c33326c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x31316c7225202c35,0x3b34326c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3466,0x2e74730a3b5d3532,0x662e646572616873\n"
".quad 0x316c72255b203233,0x202c5d3639332b30,0x6c68730a3b346625,0x327225203233622e\n"
".quad 0x202c317225202c37,0x20636f6c2e0a3b32,0x0a31203239312032,0x2e3436752e747663\n"
".quad 0x326c722520323375,0x3b37327225202c36,0x3436732e6464610a,0x202c37326c722520\n"
".quad 0x25202c36326c7225,0x6f6c2e0a3b346c72,0x2032393120322063,0x36622e6c68730a31\n"
".quad 0x2c38326c72252034,0x202c37326c722520,0x732e6464610a3b32,0x39326c7225203436\n"
".quad 0x2c31316c7225202c,0x0a3b38326c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x326c72255b202c35,0x732e74730a3b5d39,0x33662e6465726168,0x30316c72255b2032\n"
".quad 0x25202c5d3832352b,0x2e6c756d0a3b3566,0x25203233732e6f6c,0x317225202c303372\n"
".quad 0x6f6c2e0a3b35202c,0x2032393120322063,0x36752e7476630a31,0x7225203233752e34\n"
".quad 0x337225202c30336c,0x732e6464610a3b30,0x31336c7225203436,0x2c30336c7225202c\n"
".quad 0x2e0a3b346c722520,0x3931203220636f6c,0x2e6c68730a312032,0x336c722520343662\n"
".quad 0x31336c7225202c32,0x6464610a3b32202c,0x6c7225203436732e,0x316c7225202c3333\n"
".quad 0x32336c7225202c31,0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c366625\n"
".quad 0x74730a3b5d33336c,0x2e6465726168732e,0x6c72255b20323366,0x2c5d3036362b3031\n"
".quad 0x756d0a3b36662520,0x3233732e6f6c2e6c,0x25202c3333722520,0x2e0a3b36202c3172\n"
".quad 0x3931203220636f6c,0x2e7476630a312032,0x203233752e343675,0x25202c34336c7225\n"
".quad 0x6464610a3b333372,0x6c7225203436732e,0x336c7225202c3533,0x3b346c7225202c34\n"
".quad 0x203220636f6c2e0a,0x68730a3120323931,0x7225203436622e6c,0x6c7225202c36336c\n"
".quad 0x610a3b32202c3533,0x25203436732e6464,0x7225202c37336c72,0x6c7225202c31316c\n"
".quad 0x672e646c0a3b3633,0x33662e6c61626f6c,0x5b202c3766252032,0x0a3b5d37336c7225\n"
".quad 0x65726168732e7473,0x255b203233662e64,0x3239372b30316c72,0x0a3b376625202c5d\n"
".quad 0x732e6f6c2e6c756d,0x2c36337225203233,0x3b37202c31722520,0x203220636f6c2e0a\n"
".quad 0x76630a3120323931,0x33752e3436752e74,0x2c38336c72252032,0x610a3b3633722520\n"
".quad 0x25203436732e6464,0x7225202c39336c72,0x6c7225202c38336c,0x20636f6c2e0a3b34\n"
".quad 0x0a31203239312032,0x203436622e6c6873,0x25202c30346c7225,0x3b32202c39336c72\n"
".quad 0x3436732e6464610a,0x202c31346c722520,0x25202c31316c7225,0x646c0a3b30346c72\n"
".quad 0x2e6c61626f6c672e,0x2c38662520323366,0x5d31346c72255b20,0x6168732e74730a3b\n"
".quad 0x203233662e646572,0x392b30316c72255b,0x386625202c5d3432,0x3220636f6c2e0a3b\n"
".quad 0x610a312038393120,0x25203233732e6464,0x347225202c393372,0x6d0a3b367225202c\n"
".quad 0x33732e6f6c2e6c75,0x202c303472252032,0x3333202c39337225,0x36752e7476630a3b\n"
".quad 0x7225203233752e34,0x347225202c32346c,0x752e7476630a3b30,0x25203233752e3436\n"
".quad 0x7225202c33346c72,0x732e6275730a3b34,0x34346c7225203436,0x202c366c7225202c\n"
".quad 0x610a3b33346c7225,0x25203436732e6464,0x7225202c35346c72,0x6c7225202c34346c\n"
".quad 0x2e6c68730a3b3234,0x346c722520343662,0x35346c7225202c36,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x396c7225202c3734,0x3b36346c7225202c,0x203220636f6c2e0a\n"
".quad 0x2e646c0a31203339,0x662e646572616873,0x202c396625203233,0x322b37346c72255b\n"
".quad 0x732e646c0a3b5d38,0x33662e6465726168,0x202c303166252032,0x3b5d37346c72255b\n"
".quad 0x3233662e6464610a,0x25202c3131662520,0x396625202c303166,0x3220636f6c2e0a3b\n"
".quad 0x646c0a3120343920,0x2e6465726168732e,0x3231662520323366,0x37346c72255b202c\n"
".quad 0x646c0a3b5d34322b,0x2e6465726168732e,0x3331662520323366,0x37346c72255b202c\n"
".quad 0x6464610a3b5d342b,0x316625203233662e,0x2c33316625202c34,0x2e0a3b3231662520\n"
".quad 0x3539203220636f6c,0x68732e646c0a3120,0x3233662e64657261,0x5b202c3531662520\n"
".quad 0x30322b37346c7225,0x68732e646c0a3b5d,0x3233662e64657261,0x5b202c3631662520\n"
".quad 0x5d382b37346c7225,0x33662e6464610a3b,0x202c373166252032,0x6625202c36316625\n"
".quad 0x636f6c2e0a3b3531,0x0a31203639203220,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x6c72255b202c3831,0x0a3b5d36312b3734,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x6c72255b202c3931,0x0a3b5d32312b3734,0x203233662e646461,0x6625202c30326625\n"
".quad 0x38316625202c3931,0x3220636f6c2e0a3b,0x75730a3120383920,0x6625203233662e62\n"
".quad 0x30316625202c3132,0x2e0a3b396625202c,0x3939203220636f6c,0x662e6275730a3120\n"
".quad 0x2c32326625203233,0x25202c3231662520,0x6f6c2e0a3b333166,0x2030303120322063\n"
".quad 0x33662e6275730a31,0x202c333266252032,0x6625202c36316625,0x636f6c2e0a3b3531\n"
".quad 0x3120313031203220,0x3233662e6275730a,0x25202c3432662520,0x316625202c383166\n"
".quad 0x20636f6c2e0a3b39,0x0a31203330312032,0x203233662e646461,0x6625202c35326625\n"
".quad 0x30326625202c3131,0x3220636f6c2e0a3b,0x730a312034303120,0x25203233662e6275\n"
".quad 0x316625202c363266,0x3b30326625202c31,0x203220636f6c2e0a,0x64610a3120353031\n"
".quad 0x6625203233662e64,0x34316625202c3732,0x0a3b37316625202c,0x31203220636f6c2e\n"
".quad 0x6275730a31203630,0x326625203233662e,0x2c34316625202c38,0x2e0a3b3731662520\n"
".quad 0x3031203220636f6c,0x2e6464610a312038,0x3932662520323366,0x202c35326625202c\n"
".quad 0x756d0a3b37326625,0x6625203233662e6c,0x39326625202c3033,0x354245336630202c\n"
".quad 0x74730a3b33463430,0x2e6465726168732e,0x6c72255b20323366,0x336625202c5d3734\n"
".quad 0x662e766f6d0a3b30,0x2c31336625203233,0x3337414633663020,0x6f6c2e0a3b353744\n"
".quad 0x2039303120322063,0x33662e6c756d0a31,0x202c323366252032,0x6630202c38326625\n"
".quad 0x3444423841304633,0x6e722e616d660a3b,0x336625203233662e,0x2c36326625202c33\n"
".quad 0x3337414633663020,0x336625202c353744,0x662e6c756d0a3b32,0x2c34336625203233\n"
".quad 0x30202c3333662520,0x4634303542453366,0x68732e74730a3b33,0x3233662e64657261\n"
".quad 0x2b37346c72255b20,0x34336625202c5d38,0x3220636f6c2e0a3b,0x730a312030313120\n"
".quad 0x25203233662e6275,0x326625202c353366,0x3b37326625202c35,0x3233662e6c756d0a\n"
".quad 0x25202c3633662520,0x336630202c353366,0x3b33463430354245,0x726168732e74730a\n"
".quad 0x5b203233662e6465,0x36312b37346c7225,0x3b36336625202c5d,0x203220636f6c2e0a\n"
".quad 0x756d0a3120313131,0x6625203233662e6c,0x36326625202c3733,0x413046336630202c\n"
".quad 0x656e0a3b34444238,0x6625203233662e67,0x38326625202c3833,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x2c38336625202c39,0x25202c3133662520,0x6c756d0a3b373366\n"
".quad 0x346625203233662e,0x2c39336625202c30,0x3035424533663020,0x2e74730a3b334634\n"
".quad 0x662e646572616873,0x346c72255b203233,0x25202c5d34322b37,0x6f6c2e0a3b303466\n"
".quad 0x2033313120322063,0x33662e6c756d0a31,0x202c313466252032,0x6630202c31326625\n"
".quad 0x3638413831424633,0x33662e766f6d0a3b,0x202c323466252032,0x4138314246336630\n"
".quad 0x2e766f6d0a3b3638,0x3334662520323366,0x363946336630202c,0x6c2e0a3b37313338\n"
".quad 0x333131203220636f,0x662e67656e0a3120,0x2c34346625203233,0x660a3b3232662520\n"
".quad 0x33662e6e722e616d,0x202c353466252032,0x6625202c34346625,0x31346625202c3334\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x2c33326625202c36,0x3239344633663020\n"
".quad 0x346625202c453433,0x662e766f6d0a3b35,0x2c37346625203233,0x3444384533663020\n"
".quad 0x6f6c2e0a3b464132,0x2033313120322063,0x33662e67656e0a31,0x202c383466252032\n"
".quad 0x6d660a3b34326625,0x3233662e6e722e61,0x25202c3934662520,0x346625202c383466\n"
".quad 0x3b36346625202c37,0x3233662e6c756d0a,0x25202c3035662520,0x336630202c393466\n"
".quad 0x3b33463430354245,0x726168732e74730a,0x5b203233662e6465,0x5d342b37346c7225\n"
".quad 0x0a3b30356625202c,0x31203220636f6c2e,0x6c756d0a31203431,0x356625203233662e\n"
".quad 0x2c32326625202c31,0x3444384533663020,0x616d660a3b464132,0x203233662e6e722e\n"
".quad 0x6625202c32356625,0x46336630202c3132,0x202c373133383639,0x656e0a3b31356625\n"
".quad 0x6625203233662e67,0x33326625202c3335,0x6e722e616d660a3b,0x356625203233662e\n"
".quad 0x2c33356625202c34,0x25202c3234662520,0x616d660a3b323566,0x203233662e6e722e\n"
".quad 0x6625202c35356625,0x46336630202c3432,0x202c453433323934,0x756d0a3b34356625\n"
".quad 0x6625203233662e6c,0x35356625202c3635,0x354245336630202c,0x74730a3b33463430\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x202c5d32312b3734,0x6c2e0a3b36356625\n"
".quad 0x353131203220636f,0x662e6c756d0a3120,0x2c37356625203233,0x30202c3232662520\n"
".quad 0x3841383142463366,0x722e616d660a3b36,0x6625203233662e6e,0x31326625202c3835\n"
".quad 0x393446336630202c,0x6625202c45343332,0x2e616d660a3b3735,0x25203233662e6e72\n"
".quad 0x326625202c393566,0x3845336630202c33,0x25202c4641323444,0x616d660a3b383566\n"
".quad 0x203233662e6e722e,0x6625202c30366625,0x33346625202c3834,0x0a3b39356625202c\n"
".quad 0x203233662e6c756d,0x6625202c31366625,0x45336630202c3036,0x0a3b334634303542\n"
".quad 0x65726168732e7473,0x255b203233662e64,0x5d30322b37346c72,0x0a3b31366625202c\n"
".quad 0x31203220636f6c2e,0x6c756d0a31203631,0x366625203233662e,0x2c32326625202c32\n"
".quad 0x3239344633663020,0x616d660a3b453433,0x203233662e6e722e,0x6625202c33366625\n"
".quad 0x45336630202c3132,0x202c464132344438,0x6d660a3b32366625,0x3233662e6e722e61\n"
".quad 0x25202c3436662520,0x336630202c333266,0x2c37313338363946,0x660a3b3336662520\n"
".quad 0x33662e6e722e616d,0x202c353666252032,0x6630202c34326625,0x3638413831424633\n"
".quad 0x0a3b34366625202c,0x203233662e6c756d,0x6625202c36366625,0x45336630202c3536\n"
".quad 0x0a3b334634303542,0x65726168732e7473,0x255b203233662e64,0x5d38322b37346c72\n"
".quad 0x0a3b36366625202c,0x39203220636f6c2e,0x732e646c0a312033,0x33662e6465726168\n"
".quad 0x202c373666252032,0x392b30316c72255b,0x2e646c0a3b5d3432,0x662e646572616873\n"
".quad 0x2c38366625203233,0x5d30316c72255b20,0x33662e6464610a3b,0x202c393666252032\n"
".quad 0x6625202c38366625,0x636f6c2e0a3b3736,0x0a31203439203220,0x65726168732e646c\n"
".quad 0x6625203233662e64,0x6c72255b202c3037,0x3b5d3239372b3031,0x726168732e646c0a\n"
".quad 0x25203233662e6465,0x72255b202c313766,0x5d3233312b30316c,0x33662e6464610a3b\n"
".quad 0x202c323766252032,0x6625202c31376625,0x636f6c2e0a3b3037,0x0a31203539203220\n"
".quad 0x65726168732e646c,0x6625203233662e64,0x6c72255b202c3337,0x3b5d3036362b3031\n"
".quad 0x726168732e646c0a,0x25203233662e6465,0x72255b202c343766,0x5d3436322b30316c\n"
".quad 0x33662e6464610a3b,0x202c353766252032,0x6625202c34376625,0x636f6c2e0a3b3337\n"
".quad 0x0a31203639203220,0x65726168732e646c,0x6625203233662e64,0x6c72255b202c3637\n"
".quad 0x3b5d3832352b3031,0x726168732e646c0a,0x25203233662e6465,0x72255b202c373766\n"
".quad 0x5d3639332b30316c,0x33662e6464610a3b,0x202c383766252032,0x6625202c37376625\n"
".quad 0x636f6c2e0a3b3637,0x0a31203839203220,0x203233662e627573,0x6625202c39376625\n"
".quad 0x37366625202c3836,0x3220636f6c2e0a3b,0x75730a3120393920,0x6625203233662e62\n"
".quad 0x30376625202c3038,0x0a3b31376625202c,0x31203220636f6c2e,0x6275730a31203030\n"
".quad 0x386625203233662e,0x2c34376625202c31,0x2e0a3b3337662520,0x3031203220636f6c\n"
".quad 0x2e6275730a312031,0x3238662520323366,0x202c36376625202c,0x6c2e0a3b37376625\n"
".quad 0x333031203220636f,0x662e6464610a3120,0x2c33386625203233,0x25202c3936662520\n"
".quad 0x6f6c2e0a3b383766,0x2034303120322063,0x33662e6275730a31,0x202c343866252032\n"
".quad 0x6625202c39366625,0x636f6c2e0a3b3837,0x3120353031203220,0x3233662e6464610a\n"
".quad 0x25202c3538662520,0x376625202c323766,0x20636f6c2e0a3b35,0x0a31203630312032\n"
".quad 0x203233662e627573,0x6625202c36386625,0x35376625202c3237,0x3220636f6c2e0a3b\n"
".quad 0x610a312038303120,0x25203233662e6464,0x386625202c373866,0x3b35386625202c33\n"
".quad 0x3233662e6c756d0a,0x25202c3838662520,0x336630202c373866,0x3b33463430354245\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x202c5d30316c7225,0x6c2e0a3b38386625\n"
".quad 0x393031203220636f,0x662e6c756d0a3120,0x2c39386625203233,0x30202c3638662520\n"
".quad 0x4442384130463366,0x722e616d660a3b34,0x6625203233662e6e,0x34386625202c3039\n"
".quad 0x374146336630202c,0x6625202c35374433,0x2e6c756d0a3b3938,0x3139662520323366\n"
".quad 0x202c30396625202c,0x3430354245336630,0x732e74730a3b3346,0x33662e6465726168\n"
".quad 0x30316c72255b2032,0x25202c5d3436322b,0x6f6c2e0a3b313966,0x2030313120322063\n"
".quad 0x33662e6275730a31,0x202c323966252032,0x6625202c33386625,0x2e6c756d0a3b3538\n"
".quad 0x3339662520323366,0x202c32396625202c,0x3430354245336630,0x732e74730a3b3346\n"
".quad 0x33662e6465726168,0x30316c72255b2032,0x25202c5d3832352b,0x6f6c2e0a3b333966\n"
".quad 0x2031313120322063,0x33662e6c756d0a31,0x202c343966252032,0x6630202c34386625\n"
".quad 0x3444423841304633,0x33662e67656e0a3b,0x202c353966252032,0x6d660a3b36386625\n"
".quad 0x3233662e6e722e61,0x25202c3639662520,0x336625202c353966,0x3b34396625202c31\n"
".quad 0x3233662e6c756d0a,0x25202c3739662520,0x336630202c363966,0x3b33463430354245\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x39372b30316c7225,0x37396625202c5d32\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312033313120,0x25203233662e6c75,0x376625202c383966\n"
".quad 0x4246336630202c39,0x6e0a3b3638413831,0x25203233662e6765,0x386625202c393966\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x396625202c303031,0x2c33346625202c39\n"
".quad 0x660a3b3839662520,0x33662e6e722e616d,0x2c31303166252032,0x30202c3138662520\n"
".quad 0x3433323934463366,0x3030316625202c45,0x33662e67656e0a3b,0x2c32303166252032\n"
".quad 0x660a3b3238662520,0x33662e6e722e616d,0x2c33303166252032,0x202c323031662520\n"
".quad 0x6625202c37346625,0x6c756d0a3b313031,0x316625203233662e,0x30316625202c3430\n"
".quad 0x4245336630202c33,0x730a3b3346343035,0x6465726168732e74,0x72255b203233662e\n"
".quad 0x5d3233312b30316c,0x3b3430316625202c,0x203220636f6c2e0a,0x756d0a3120343131\n"
".quad 0x6625203233662e6c,0x386625202c353031,0x3845336630202c30,0x660a3b4641323444\n"
".quad 0x33662e6e722e616d,0x2c36303166252032,0x30202c3937662520,0x3133383639463366\n"
".quad 0x3530316625202c37,0x33662e67656e0a3b,0x2c37303166252032,0x660a3b3138662520\n"
".quad 0x33662e6e722e616d,0x2c38303166252032,0x202c373031662520,0x6625202c32346625\n"
".quad 0x616d660a3b363031,0x203233662e6e722e,0x25202c3930316625,0x336630202c323866\n"
".quad 0x2c45343332393446,0x0a3b383031662520,0x203233662e6c756d,0x25202c3031316625\n"
".quad 0x6630202c39303166,0x3346343035424533,0x6168732e74730a3b,0x203233662e646572\n"
".quad 0x332b30316c72255b,0x316625202c5d3639,0x636f6c2e0a3b3031,0x3120353131203220\n"
".quad 0x3233662e6c756d0a,0x202c313131662520,0x6630202c30386625,0x3638413831424633\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x39376625202c3231,0x393446336630202c\n"
".quad 0x6625202c45343332,0x616d660a3b313131,0x203233662e6e722e,0x25202c3331316625\n"
".quad 0x336630202c313866,0x2c46413234443845,0x0a3b323131662520,0x662e6e722e616d66\n"
".quad 0x3431316625203233,0x2c3230316625202c,0x25202c3334662520,0x756d0a3b33313166\n"
".quad 0x6625203233662e6c,0x316625202c353131,0x45336630202c3431,0x0a3b334634303542\n"
".quad 0x65726168732e7473,0x255b203233662e64,0x3036362b30316c72,0x3531316625202c5d\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312036313120,0x25203233662e6c75,0x6625202c36313166\n"
".quad 0x46336630202c3038,0x0a3b453433323934,0x662e6e722e616d66,0x3731316625203233\n"
".quad 0x202c39376625202c,0x3234443845336630,0x31316625202c4641,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x386625202c383131,0x3946336630202c31,0x25202c3731333836\n"
".quad 0x6d660a3b37313166,0x3233662e6e722e61,0x202c393131662520,0x6630202c32386625\n"
".quad 0x3638413831424633,0x3b3831316625202c,0x3233662e6c756d0a,0x202c303231662520\n"
".quad 0x30202c3931316625,0x4634303542453366,0x68732e74730a3b33,0x3233662e64657261\n"
".quad 0x2b30316c72255b20,0x6625202c5d343239,0x6f6c2e0a3b303231,0x2037303220322063\n"
".quad 0x36732e6464610a31,0x2c38346c72252034,0x25202c336c722520,0x646c0a3b32316c72\n"
".quad 0x2e6465726168732e,0x3231662520323366,0x316c72255b202c31,0x672e74730a3b5d30\n"
".quad 0x33662e6c61626f6c,0x38346c72255b2032,0x3132316625202c5d,0x36732e6464610a3b\n"
".quad 0x2c39346c72252034,0x25202c336c722520,0x646c0a3b36316c72,0x2e6465726168732e\n"
".quad 0x3231662520323366,0x316c72255b202c32,0x0a3b5d3233312b30,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d39346c72,0x64610a3b32323166,0x7225203436732e64\n"
".quad 0x6c7225202c30356c,0x30326c7225202c33,0x6168732e646c0a3b,0x203233662e646572\n"
".quad 0x5b202c3332316625,0x36322b30316c7225,0x672e74730a3b5d34,0x33662e6c61626f6c\n"
".quad 0x30356c72255b2032,0x3332316625202c5d,0x36732e6464610a3b,0x2c31356c72252034\n"
".quad 0x25202c336c722520,0x646c0a3b34326c72,0x2e6465726168732e,0x3231662520323366\n"
".quad 0x316c72255b202c34,0x0a3b5d3639332b30,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d31356c72,0x64610a3b34323166,0x7225203436732e64,0x6c7225202c32356c\n"
".quad 0x38326c7225202c33,0x6168732e646c0a3b,0x203233662e646572,0x5b202c3532316625\n"
".quad 0x32352b30316c7225,0x672e74730a3b5d38,0x33662e6c61626f6c,0x32356c72255b2032\n"
".quad 0x3532316625202c5d,0x36732e6464610a3b,0x2c33356c72252034,0x25202c336c722520\n"
".quad 0x646c0a3b32336c72,0x2e6465726168732e,0x3231662520323366,0x316c72255b202c36\n"
".quad 0x0a3b5d3036362b30,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d33356c72\n"
".quad 0x64610a3b36323166,0x7225203436732e64,0x6c7225202c34356c,0x36336c7225202c33\n"
".quad 0x6168732e646c0a3b,0x203233662e646572,0x5b202c3732316625,0x39372b30316c7225\n"
".quad 0x672e74730a3b5d32,0x33662e6c61626f6c,0x34356c72255b2032,0x3732316625202c5d\n"
".quad 0x36732e6464610a3b,0x2c35356c72252034,0x25202c336c722520,0x646c0a3b30346c72\n"
".quad 0x2e6465726168732e,0x3231662520323366,0x316c72255b202c38,0x0a3b5d3432392b30\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d35356c72,0x6c2e0a3b38323166\n"
".quad 0x383032203220636f,0x0a3b7465720a3220,0x72746e652e0a0a7d,0x554335315a5f2079\n"
".quad 0x6c656e72656b4144,0x5366505443444932,0x7261702e0a28695f,0x203436752e206d61\n"
".quad 0x4144554335315a5f,0x49326c656e72656b,0x695f536650544344,0x305f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436752e20,0x656b414455433531,0x434449326c656e72\n"
".quad 0x705f695f53665054,0x0a2c315f6d617261,0x2e206d617261702e,0x35315a5f20323375\n"
".quad 0x6e72656b41445543,0x5054434449326c65,0x7261705f695f5366,0x7b0a290a325f6d61\n"
".quad 0x662e206765722e0a,0x33313c6625203233,0x6765722e0a3b3e32,0x7225203233732e20\n"
".quad 0x722e0a3b3e39383c,0x203436732e206765,0x3b3e36353c6c7225,0x726168732e090a0a\n"
".quad 0x67696c612e206465,0x2038622e2034206e,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f37363938335f,0x6f635f6e6f6e5f35,0x636f6c625f74736e,0x3b5d323131325b6b\n"
".quad 0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c316c72,0x656b414455433531\n"
".quad 0x434449326c656e72,0x705f695f53665054,0x3b5d305f6d617261,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x315a5f5b202c326c,0x72656b4144554335,0x54434449326c656e\n"
".quad 0x61705f695f536650,0x0a3b5d315f6d6172,0x6d617261702e646c,0x317225203233752e\n"
".quad 0x4335315a5f5b202c,0x656e72656b414455,0x665054434449326c,0x617261705f695f53\n"
".quad 0x76630a3b5d325f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c336c722520\n"
".quad 0x6f6c2e0a3b316c72,0x2038323220322063,0x33752e766f6d0a31,0x25202c3272252032\n"
".quad 0x730a3b792e646974,0x25203233622e6c68,0x2c327225202c3372,0x636f6c2e0a3b3320\n"
".quad 0x3120383232203220,0x3233752e766f6d0a,0x7425202c34722520,0x6c2e0a3b782e6469\n"
".quad 0x393232203220636f,0x752e766f6d0a3120,0x202c357225203233,0x0a3b7a2e64697425\n"
".quad 0x203233622e6c6873,0x357225202c367225,0x6f6c2e0a3b33202c,0x2030333220322063\n"
".quad 0x33752e766f6d0a31,0x25202c3772252032,0x3b792e6469617463,0x3233622e6c68730a\n"
".quad 0x7225202c38722520,0x6c2e0a3b34202c37,0x303332203220636f,0x732e6464610a3120\n"
".quad 0x202c397225203233,0x367225202c387225,0x3420636f6c2e0a3b,0x6d0a352034393220\n"
".quad 0x2e6f6c2e34326c75,0x3031722520323373,0x25202c397225202c,0x636f6c2e0a3b3172\n"
".quad 0x3120303332203220,0x3233752e766f6d0a,0x25202c3131722520,0x3b782e6469617463\n"
".quad 0x3233622e6c68730a,0x25202c3231722520,0x0a3b35202c313172,0x32203220636f6c2e\n"
".quad 0x6464610a31203832,0x317225203233732e,0x202c337225202c33,0x6f6c2e0a3b347225\n"
".quad 0x2030333220322063,0x33732e6464610a31,0x202c343172252032,0x7225202c30317225\n"
".quad 0x2e6464610a3b3331,0x3531722520323373,0x202c34317225202c,0x76630a3b32317225\n"
".quad 0x33752e3436752e74,0x202c346c72252032,0x756d0a3b35317225,0x3233732e6f6c2e6c\n"
".quad 0x25202c3631722520,0x3b343632202c3572,0x203220636f6c2e0a,0x76630a3120323332\n"
".quad 0x33732e3436732e74,0x202c356c72252032,0x76630a3b36317225,0x33732e3436732e74\n"
".quad 0x202c366c72252032,0x64610a3b33317225,0x7225203436732e64,0x356c7225202c376c\n"
".quad 0x0a3b366c7225202c,0x203436622e6c6873,0x7225202c386c7225,0x6d0a3b32202c376c\n"
".quad 0x25203436752e766f,0x635f5f202c396c72,0x61636f6c5f616475,0x38335f7261765f6c\n"
".quad 0x6e5f35335f373639,0x74736e6f635f6e6f,0x0a3b6b636f6c625f,0x203436732e646461\n"
".quad 0x25202c30316c7225,0x6c7225202c396c72,0x2e617476630a3b38,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c31316c,0x20636f6c2e0a3b32,0x0a31203633322032\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x35317225202c3231,0x6464610a3b34202c\n"
".quad 0x6c7225203436732e,0x316c7225202c3331,0x32316c7225202c31,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c316625,0x74730a3b5d33316c,0x2e6465726168732e\n"
".quad 0x6c72255b20323366,0x316625202c5d3031,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x317225202c34316c,0x36732e6464610a3b,0x2c35316c72252034,0x202c34316c722520\n"
".quad 0x6c2e0a3b346c7225,0x363332203220636f,0x622e6c68730a3120,0x36316c7225203436\n"
".quad 0x2c35316c7225202c,0x2e6464610a3b3220,0x316c722520343673,0x31316c7225202c37\n"
".quad 0x3b36316c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3266\n"
".quad 0x2e74730a3b5d3731,0x662e646572616873,0x316c72255b203233,0x202c5d3233312b30\n"
".quad 0x6c68730a3b326625,0x327225203233622e,0x202c317225202c31,0x20636f6c2e0a3b31\n"
".quad 0x0a31203633322032,0x2e3436752e747663,0x316c722520323375,0x3b31327225202c38\n"
".quad 0x3436732e6464610a,0x202c39316c722520,0x25202c38316c7225,0x6f6c2e0a3b346c72\n"
".quad 0x2036333220322063,0x36622e6c68730a31,0x2c30326c72252034,0x202c39316c722520\n"
".quad 0x732e6464610a3b32,0x31326c7225203436,0x2c31316c7225202c,0x0a3b30326c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x326c72255b202c33,0x732e74730a3b5d31\n"
".quad 0x33662e6465726168,0x30316c72255b2032,0x25202c5d3436322b,0x2e6c756d0a3b3366\n"
".quad 0x25203233732e6f6c,0x317225202c343272,0x6f6c2e0a3b33202c,0x2036333220322063\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x327225202c32326c,0x732e6464610a3b34\n"
".quad 0x33326c7225203436,0x2c32326c7225202c,0x2e0a3b346c722520,0x3332203220636f6c\n"
".quad 0x2e6c68730a312036,0x326c722520343662,0x33326c7225202c34,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x316c7225202c3532,0x34326c7225202c31,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x74730a3b5d35326c,0x2e6465726168732e\n"
".quad 0x6c72255b20323366,0x2c5d3639332b3031,0x68730a3b34662520,0x7225203233622e6c\n"
".quad 0x2c317225202c3732,0x636f6c2e0a3b3220,0x3120363332203220,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x37327225202c3632,0x36732e6464610a3b,0x2c37326c72252034\n"
".quad 0x202c36326c722520,0x6c2e0a3b346c7225,0x363332203220636f,0x622e6c68730a3120\n"
".quad 0x38326c7225203436,0x2c37326c7225202c,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x31316c7225202c39,0x3b38326c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x6c72255b202c3566,0x2e74730a3b5d3932,0x662e646572616873,0x316c72255b203233\n"
".quad 0x202c5d3832352b30,0x6c756d0a3b356625,0x203233732e6f6c2e,0x7225202c30337225\n"
".quad 0x6c2e0a3b35202c31,0x363332203220636f,0x752e7476630a3120,0x25203233752e3436\n"
".quad 0x7225202c30336c72,0x2e6464610a3b3033,0x336c722520343673,0x30336c7225202c31\n"
".quad 0x0a3b346c7225202c,0x32203220636f6c2e,0x6c68730a31203633,0x6c7225203436622e\n"
".quad 0x336c7225202c3233,0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c33336c\n"
".quad 0x336c7225202c3131,0x6c672e646c0a3b32,0x3233662e6c61626f,0x255b202c36662520\n"
".quad 0x730a3b5d33336c72,0x6465726168732e74,0x72255b203233662e,0x5d3036362b30316c\n"
".quad 0x6d0a3b366625202c,0x33732e6f6c2e6c75,0x202c333372252032,0x0a3b36202c317225\n"
".quad 0x32203220636f6c2e,0x7476630a31203633,0x3233752e3436752e,0x202c34336c722520\n"
".quad 0x64610a3b33337225,0x7225203436732e64,0x6c7225202c35336c,0x346c7225202c3433\n"
".quad 0x3220636f6c2e0a3b,0x730a312036333220,0x25203436622e6c68,0x7225202c36336c72\n"
".quad 0x0a3b32202c35336c,0x203436732e646461,0x25202c37336c7225,0x7225202c31316c72\n"
".quad 0x2e646c0a3b36336c,0x662e6c61626f6c67,0x202c376625203233,0x3b5d37336c72255b\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x39372b30316c7225,0x3b376625202c5d32\n"
".quad 0x2e6f6c2e6c756d0a,0x3633722520323373,0x37202c317225202c,0x3220636f6c2e0a3b\n"
".quad 0x630a312036333220,0x752e3436752e7476,0x38336c7225203233,0x0a3b36337225202c\n"
".quad 0x203436732e646461,0x25202c39336c7225,0x7225202c38336c72,0x636f6c2e0a3b346c\n"
".quad 0x3120363332203220,0x3436622e6c68730a,0x202c30346c722520,0x32202c39336c7225\n"
".quad 0x36732e6464610a3b,0x2c31346c72252034,0x202c31316c722520,0x6c0a3b30346c7225\n"
".quad 0x6c61626f6c672e64,0x386625203233662e,0x31346c72255b202c,0x68732e74730a3b5d\n"
".quad 0x3233662e64657261,0x2b30316c72255b20,0x6625202c5d343239,0x20636f6c2e0a3b38\n"
".quad 0x0a31203234322032,0x203233732e646461,0x7225202c39337225,0x0a3b367225202c34\n"
".quad 0x732e6f6c2e6c756d,0x2c30347225203233,0x33202c3933722520,0x752e7476630a3b33\n"
".quad 0x25203233752e3436,0x7225202c32346c72,0x2e7476630a3b3034,0x203233752e343675\n"
".quad 0x25202c33346c7225,0x2e6275730a3b3472,0x346c722520343673,0x2c366c7225202c34\n"
".quad 0x0a3b33346c722520,0x203436732e646461,0x25202c35346c7225,0x7225202c34346c72\n"
".quad 0x6c68730a3b32346c,0x6c7225203436622e,0x346c7225202c3634,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x6c7225202c37346c,0x36346c7225202c39,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312039333120,0x6465726168732e64,0x396625203233662e,0x37346c72255b202c\n"
".quad 0x646c0a3b5d36312b,0x2e6465726168732e,0x3031662520323366,0x37346c72255b202c\n"
".quad 0x662e6464610a3b5d,0x2c31316625203233,0x25202c3031662520,0x636f6c2e0a3b3966\n"
".quad 0x3120303431203220,0x726168732e646c0a,0x25203233662e6465,0x72255b202c323166\n"
".quad 0x0a3b5d382b37346c,0x203233662e766f6d,0x6630202c33316625,0x3537443337414633\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312030343120,0x6465726168732e64,0x316625203233662e\n"
".quad 0x346c72255b202c34,0x6d0a3b5d34322b37,0x25203233662e6c75,0x316625202c353166\n"
".quad 0x3046336630202c34,0x660a3b3444423841,0x33662e6e722e616d,0x202c363166252032\n"
".quad 0x6630202c32316625,0x3537443337414633,0x0a3b35316625202c,0x31203220636f6c2e\n"
".quad 0x6464610a31203234,0x316625203233662e,0x2c31316625202c37,0x2e0a3b3631662520\n"
".quad 0x3431203220636f6c,0x2e6275730a312033,0x3831662520323366,0x202c31316625202c\n"
".quad 0x6c2e0a3b36316625,0x343431203220636f,0x68732e646c0a3120,0x3233662e64657261\n"
".quad 0x5b202c3931662520,0x38322b37346c7225,0x662e766f6d0a3b5d,0x2c30326625203233\n"
".quad 0x3444384533663020,0x6f6c2e0a3b464132,0x2034343120322063,0x6168732e646c0a31\n"
".quad 0x203233662e646572,0x255b202c31326625,0x3b5d342b37346c72,0x3233662e6c756d0a\n"
".quad 0x25202c3232662520,0x336630202c313266,0x3b36384138314246,0x3233662e766f6d0a\n"
".quad 0x30202c3332662520,0x3841383142463366,0x20636f6c2e0a3b36,0x0a31203434312032\n"
".quad 0x662e6e722e616d66,0x2c34326625203233,0x30202c3931662520,0x4132344438453366\n"
".quad 0x3b32326625202c46,0x726168732e646c0a,0x25203233662e6465,0x72255b202c353266\n"
".quad 0x3b5d32312b37346c,0x3233662e766f6d0a,0x30202c3632662520,0x3133383639463366\n"
".quad 0x20636f6c2e0a3b37,0x0a31203434312032,0x662e6e722e616d66,0x2c37326625203233\n"
".quad 0x30202c3532662520,0x3133383639463366,0x3b34326625202c37,0x726168732e646c0a\n"
".quad 0x25203233662e6465,0x72255b202c383266,0x3b5d30322b37346c,0x3233662e766f6d0a\n"
".quad 0x30202c3932662520,0x3433323934463366,0x20636f6c2e0a3b45,0x0a31203434312032\n"
".quad 0x662e6e722e616d66,0x2c30336625203233,0x30202c3832662520,0x3433323934463366\n"
".quad 0x3b37326625202c45,0x203220636f6c2e0a,0x756d0a3120353431,0x6625203233662e6c\n"
".quad 0x39316625202c3133,0x314246336630202c,0x656e0a3b36384138,0x6625203233662e67\n"
".quad 0x31326625202c3233,0x6e722e616d660a3b,0x336625203233662e,0x2c32336625202c33\n"
".quad 0x25202c3032662520,0x616d660a3b313366,0x203233662e6e722e,0x6625202c34336625\n"
".quad 0x46336630202c3532,0x202c453433323934,0x656e0a3b33336625,0x6625203233662e67\n"
".quad 0x38326625202c3533,0x6e722e616d660a3b,0x336625203233662e,0x2c35336625202c36\n"
".quad 0x25202c3632662520,0x6f6c2e0a3b343366,0x2037343120322063,0x33662e6275730a31\n"
".quad 0x202c373366252032,0x6625202c30316625,0x20636f6c2e0a3b39,0x0a31203834312032\n"
".quad 0x203233662e6c756d,0x6625202c38336625,0x46336630202c3231,0x0a3b344442384130\n"
".quad 0x203233662e67656e,0x6625202c39336625,0x2e616d660a3b3431,0x25203233662e6e72\n"
".quad 0x336625202c303466,0x2c33316625202c39,0x2e0a3b3833662520,0x3531203220636f6c\n"
".quad 0x2e6464610a312030,0x3134662520323366,0x202c37336625202c,0x6c2e0a3b30346625\n"
".quad 0x313531203220636f,0x662e6275730a3120,0x2c32346625203233,0x25202c3733662520\n"
".quad 0x6f6c2e0a3b303466,0x2032353120322063,0x33662e6c756d0a31,0x202c333466252032\n"
".quad 0x6630202c31326625,0x3731333836394633,0x33662e67656e0a3b,0x202c343466252032\n"
".quad 0x6d660a3b39316625,0x3233662e6e722e61,0x25202c3534662520,0x326625202c343466\n"
".quad 0x3b33346625202c39,0x3233662e67656e0a,0x25202c3634662520,0x616d660a3b353266\n"
".quad 0x203233662e6e722e,0x6625202c37346625,0x30326625202c3634,0x0a3b35346625202c\n"
".quad 0x662e6e722e616d66,0x2c38346625203233,0x25202c3533662520,0x346625202c333266\n"
".quad 0x20636f6c2e0a3b37,0x0a31203335312032,0x203233662e6c756d,0x6625202c39346625\n"
".quad 0x46336630202c3931,0x0a3b373133383639,0x662e6e722e616d66,0x2c30356625203233\n"
".quad 0x30202c3132662520,0x3433323934463366,0x3b39346625202c45,0x2e6e722e616d660a\n"
".quad 0x3135662520323366,0x202c36346625202c,0x6625202c33326625,0x2e616d660a3b3035\n"
".quad 0x25203233662e6e72,0x326625202c323566,0x3845336630202c38,0x25202c4641323444\n"
".quad 0x6f6c2e0a3b313566,0x2035353120322063,0x33662e6464610a31,0x202c333566252032\n"
".quad 0x6625202c37316625,0x2e6c756d0a3b3033,0x3435662520323366,0x202c33356625202c\n"
".quad 0x3430354245336630,0x732e74730a3b3346,0x33662e6465726168,0x37346c72255b2032\n"
".quad 0x3b34356625202c5d,0x203220636f6c2e0a,0x75730a3120363531,0x6625203233662e62\n"
".quad 0x37316625202c3535,0x0a3b30336625202c,0x203233662e6c756d,0x6625202c36356625\n"
".quad 0x45336630202c3535,0x0a3b334634303542,0x65726168732e7473,0x255b203233662e64\n"
".quad 0x5d38322b37346c72,0x0a3b36356625202c,0x31203220636f6c2e,0x6464610a31203735\n"
".quad 0x356625203233662e,0x2c38316625202c37,0x6d0a3b3633662520,0x25203233662e6c75\n"
".quad 0x356625202c383566,0x4245336630202c37,0x730a3b3346343035,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x2c5d36312b37346c,0x2e0a3b3835662520,0x3531203220636f6c\n"
".quad 0x2e6275730a312038,0x3935662520323366,0x202c38316625202c,0x756d0a3b36336625\n"
".quad 0x6625203233662e6c,0x39356625202c3036,0x354245336630202c,0x74730a3b33463430\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x202c5d32312b3734,0x6c2e0a3b30366625\n"
".quad 0x303631203220636f,0x662e6464610a3120,0x2c31366625203233,0x25202c3134662520\n"
".quad 0x6c756d0a3b383466,0x366625203233662e,0x2c31366625202c32,0x3035424533663020\n"
".quad 0x2e74730a3b334634,0x662e646572616873,0x346c72255b203233,0x6625202c5d342b37\n"
".quad 0x636f6c2e0a3b3236,0x3120313631203220,0x3233662e6275730a,0x25202c3336662520\n"
".quad 0x356625202c323466,0x662e6c756d0a3b32,0x2c34366625203233,0x30202c3336662520\n"
".quad 0x4634303542453366,0x68732e74730a3b33,0x3233662e64657261,0x2b37346c72255b20\n"
".quad 0x366625202c5d3032,0x20636f6c2e0a3b34,0x0a31203236312032,0x203233662e646461\n"
".quad 0x6625202c35366625,0x32356625202c3234,0x33662e6c756d0a3b,0x202c363666252032\n"
".quad 0x6630202c35366625,0x3346343035424533,0x6168732e74730a3b,0x203233662e646572\n"
".quad 0x382b37346c72255b,0x3b36366625202c5d,0x203220636f6c2e0a,0x75730a3120333631\n"
".quad 0x6625203233662e62,0x31346625202c3736,0x0a3b38346625202c,0x203233662e6c756d\n"
".quad 0x6625202c38366625,0x45336630202c3736,0x0a3b334634303542,0x65726168732e7473\n"
".quad 0x255b203233662e64,0x5d34322b37346c72,0x0a3b38366625202c,0x31203220636f6c2e\n"
".quad 0x2e646c0a31203933,0x662e646572616873,0x2c39366625203233,0x2b30316c72255b20\n"
".quad 0x646c0a3b5d383235,0x2e6465726168732e,0x3037662520323366,0x30316c72255b202c\n"
".quad 0x662e6464610a3b5d,0x2c31376625203233,0x25202c3037662520,0x6f6c2e0a3b393666\n"
".quad 0x2030343120322063,0x6168732e646c0a31,0x203233662e646572,0x255b202c32376625\n"
".quad 0x3436322b30316c72,0x68732e646c0a3b5d,0x3233662e64657261,0x5b202c3337662520\n"
".quad 0x39372b30316c7225,0x2e6c756d0a3b5d32,0x3437662520323366,0x202c33376625202c\n"
".quad 0x4238413046336630,0x2e616d660a3b3444,0x25203233662e6e72,0x376625202c353766\n"
".quad 0x4146336630202c32,0x25202c3537443337,0x6f6c2e0a3b343766,0x2032343120322063\n"
".quad 0x33662e6464610a31,0x202c363766252032,0x6625202c31376625,0x636f6c2e0a3b3537\n"
".quad 0x3120333431203220,0x3233662e6275730a,0x25202c3737662520,0x376625202c313766\n"
".quad 0x20636f6c2e0a3b35,0x0a31203434312032,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x6c72255b202c3837,0x3b5d3432392b3031,0x726168732e646c0a,0x25203233662e6465\n"
".quad 0x72255b202c393766,0x5d3233312b30316c,0x33662e6c756d0a3b,0x202c303866252032\n"
".quad 0x6630202c39376625,0x3638413831424633,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x2c38376625202c31,0x3444384533663020,0x386625202c464132,0x68732e646c0a3b30\n"
".quad 0x3233662e64657261,0x5b202c3238662520,0x39332b30316c7225,0x2e616d660a3b5d36\n"
".quad 0x25203233662e6e72,0x386625202c333866,0x3946336630202c32,0x25202c3731333836\n"
".quad 0x2e646c0a3b313866,0x662e646572616873,0x2c34386625203233,0x2b30316c72255b20\n"
".quad 0x6d660a3b5d303636,0x3233662e6e722e61,0x25202c3538662520,0x336630202c343866\n"
".quad 0x2c45343332393446,0x2e0a3b3338662520,0x3431203220636f6c,0x2e6c756d0a312035\n"
".quad 0x3638662520323366,0x202c38376625202c,0x4138314246336630,0x2e67656e0a3b3638\n"
".quad 0x3738662520323366,0x0a3b39376625202c,0x662e6e722e616d66,0x2c38386625203233\n"
".quad 0x25202c3738662520,0x386625202c303266,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x32386625202c3938,0x393446336630202c,0x6625202c45343332,0x2e67656e0a3b3838\n"
".quad 0x3039662520323366,0x0a3b34386625202c,0x662e6e722e616d66,0x2c31396625203233\n"
".quad 0x25202c3039662520,0x386625202c363266,0x20636f6c2e0a3b39,0x0a31203734312032\n"
".quad 0x203233662e627573,0x6625202c32396625,0x39366625202c3037,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312038343120,0x25203233662e6c75,0x376625202c333966,0x3046336630202c32\n"
".quad 0x6e0a3b3444423841,0x25203233662e6765,0x376625202c343966,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x34396625202c3539,0x202c33316625202c,0x6c2e0a3b33396625\n"
".quad 0x303531203220636f,0x662e6464610a3120,0x2c36396625203233,0x25202c3239662520\n"
".quad 0x6f6c2e0a3b353966,0x2031353120322063,0x33662e6275730a31,0x202c373966252032\n"
".quad 0x6625202c32396625,0x636f6c2e0a3b3539,0x3120323531203220,0x3233662e6c756d0a\n"
".quad 0x25202c3839662520,0x336630202c393766,0x3b37313338363946,0x3233662e67656e0a\n"
".quad 0x25202c3939662520,0x616d660a3b383766,0x203233662e6e722e,0x25202c3030316625\n"
".quad 0x326625202c393966,0x3b38396625202c39,0x3233662e67656e0a,0x202c313031662520\n"
".quad 0x6d660a3b32386625,0x3233662e6e722e61,0x202c323031662520,0x25202c3130316625\n"
".quad 0x316625202c303266,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c33303166\n"
".quad 0x33326625202c3039,0x3b3230316625202c,0x203220636f6c2e0a,0x756d0a3120333531\n"
".quad 0x6625203233662e6c,0x376625202c343031,0x3946336630202c38,0x660a3b3731333836\n"
".quad 0x33662e6e722e616d,0x2c35303166252032,0x30202c3937662520,0x3433323934463366\n"
".quad 0x3430316625202c45,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3630\n"
".quad 0x2c33326625202c31,0x0a3b353031662520,0x662e6e722e616d66,0x3730316625203233\n"
".quad 0x202c34386625202c,0x3234443845336630,0x30316625202c4641,0x20636f6c2e0a3b36\n"
".quad 0x0a31203535312032,0x203233662e646461,0x25202c3830316625,0x386625202c363766\n"
".quad 0x662e6c756d0a3b35,0x3930316625203233,0x2c3830316625202c,0x3035424533663020\n"
".quad 0x2e74730a3b334634,0x662e646572616873,0x316c72255b203233,0x30316625202c5d30\n"
".quad 0x20636f6c2e0a3b39,0x0a31203635312032,0x203233662e627573,0x25202c3031316625\n"
".quad 0x386625202c363766,0x662e6c756d0a3b35,0x3131316625203233,0x2c3031316625202c\n"
".quad 0x3035424533663020,0x2e74730a3b334634,0x662e646572616873,0x316c72255b203233\n"
".quad 0x202c5d3432392b30,0x2e0a3b3131316625,0x3531203220636f6c,0x2e6464610a312037\n"
".quad 0x3131662520323366,0x2c37376625202c32,0x6d0a3b3139662520,0x25203233662e6c75\n"
".quad 0x6625202c33313166,0x336630202c323131,0x3b33463430354245,0x726168732e74730a\n"
".quad 0x5b203233662e6465,0x32352b30316c7225,0x31316625202c5d38,0x20636f6c2e0a3b33\n"
".quad 0x0a31203835312032,0x203233662e627573,0x25202c3431316625,0x396625202c373766\n"
".quad 0x662e6c756d0a3b31,0x3531316625203233,0x2c3431316625202c,0x3035424533663020\n"
".quad 0x2e74730a3b334634,0x662e646572616873,0x316c72255b203233,0x202c5d3639332b30\n"
".quad 0x2e0a3b3531316625,0x3631203220636f6c,0x2e6464610a312030,0x3131662520323366\n"
".quad 0x2c36396625202c36,0x0a3b333031662520,0x203233662e6c756d,0x25202c3731316625\n"
".quad 0x6630202c36313166,0x3346343035424533,0x6168732e74730a3b,0x203233662e646572\n"
".quad 0x312b30316c72255b,0x316625202c5d3233,0x636f6c2e0a3b3731,0x3120313631203220\n"
".quad 0x3233662e6275730a,0x202c383131662520,0x6625202c37396625,0x6c756d0a3b373031\n"
".quad 0x316625203233662e,0x31316625202c3931,0x4245336630202c38,0x730a3b3346343035\n"
".quad 0x6465726168732e74,0x72255b203233662e,0x5d3036362b30316c,0x3b3931316625202c\n"
".quad 0x203220636f6c2e0a,0x64610a3120323631,0x6625203233662e64,0x396625202c303231\n"
".quad 0x3730316625202c37,0x33662e6c756d0a3b,0x2c31323166252032,0x202c303231662520\n"
".quad 0x3430354245336630,0x732e74730a3b3346,0x33662e6465726168,0x30316c72255b2032\n"
".quad 0x25202c5d3436322b,0x6c2e0a3b31323166,0x333631203220636f,0x662e6275730a3120\n"
".quad 0x3232316625203233,0x202c36396625202c,0x6d0a3b3330316625,0x25203233662e6c75\n"
".quad 0x6625202c33323166,0x336630202c323231,0x3b33463430354245,0x726168732e74730a\n"
".quad 0x5b203233662e6465,0x39372b30316c7225,0x32316625202c5d32,0x20636f6c2e0a3b33\n"
".quad 0x0a31203135322032,0x203436732e646461,0x25202c38346c7225,0x6c7225202c336c72\n"
".quad 0x732e646c0a3b3231,0x33662e6465726168,0x2c34323166252032,0x5d30316c72255b20\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d38346c72255b,0x0a3b343231662520\n"
".quad 0x203436732e646461,0x25202c39346c7225,0x6c7225202c336c72,0x732e646c0a3b3631\n"
".quad 0x33662e6465726168,0x2c35323166252032,0x2b30316c72255b20,0x74730a3b5d323331\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3934,0x2e6464610a3b3532\n"
".quad 0x356c722520343673,0x2c336c7225202c30,0x0a3b30326c722520,0x65726168732e646c\n"
".quad 0x6625203233662e64,0x72255b202c363231,0x5d3436322b30316c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d30356c72255b,0x0a3b363231662520,0x203436732e646461\n"
".quad 0x25202c31356c7225,0x6c7225202c336c72,0x732e646c0a3b3432,0x33662e6465726168\n"
".quad 0x2c37323166252032,0x2b30316c72255b20,0x74730a3b5d363933,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x316625202c5d3135,0x2e6464610a3b3732,0x356c722520343673\n"
".quad 0x2c336c7225202c32,0x0a3b38326c722520,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x72255b202c383231,0x5d3832352b30316c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d32356c72255b,0x0a3b383231662520,0x203436732e646461,0x25202c33356c7225\n"
".quad 0x6c7225202c336c72,0x732e646c0a3b3233,0x33662e6465726168,0x2c39323166252032\n"
".quad 0x2b30316c72255b20,0x74730a3b5d303636,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3335,0x2e6464610a3b3932,0x356c722520343673,0x2c336c7225202c34\n"
".quad 0x0a3b36336c722520,0x65726168732e646c,0x6625203233662e64,0x72255b202c303331\n"
".quad 0x5d3239372b30316c,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d34356c72255b\n"
".quad 0x0a3b303331662520,0x203436732e646461,0x25202c35356c7225,0x6c7225202c336c72\n"
".quad 0x732e646c0a3b3034,0x33662e6465726168,0x2c31333166252032,0x2b30316c72255b20\n"
".quad 0x74730a3b5d343239,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3535\n"
".quad 0x636f6c2e0a3b3133,0x3220323532203220,0x0a7d0a3b7465720a,0x207972746e652e0a\n"
".quad 0x4144554338315a5f,0x68536c656e72656b,0x735054434474726f,0x617261702e0a2869\n"
".quad 0x5f203436752e206d,0x6b4144554338315a,0x6f68536c656e7265,0x6973505443447472\n"
".quad 0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203233752e20,0x656b414455433831\n"
".quad 0x726f68536c656e72,0x5f69735054434474,0x0a315f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x2520646572702e20,0x722e0a3b3e333c70,0x203233732e206765,0x3b3e3637323c7225\n"
".quad 0x732e206765722e0a,0x333c6c7225203436,0x732e090a0a3b3e37,0x612e206465726168\n"
".quad 0x2e2032206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61,0x393239335f726176\n"
".quad 0x6e6f6e5f35335f37,0x625f74736e6f635f,0x3731325b6b636f6c,0x2e646c0a0a3b5d36\n"
".quad 0x36752e6d61726170,0x202c346c72252034,0x44554338315a5f5b,0x536c656e72656b41\n"
".quad 0x5054434474726f68,0x6d617261705f6973,0x2e646c0a3b5d305f,0x33752e6d61726170\n"
".quad 0x5b202c3172252032,0x4144554338315a5f,0x68536c656e72656b,0x735054434474726f\n"
".quad 0x5f6d617261705f69,0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x6c7225202c356c72,0x20636f6c2e0a3b34,0x0a31203334342033,0x203233752e766f6d\n"
".quad 0x697425202c367225,0x766f6d0a3b792e64,0x377225203233752e,0x6f6c2e0a3b38202c\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x2c367225202c3872\n"
".quad 0x6c2e0a3b37722520,0x333434203320636f,0x752e766f6d0a3120,0x202c397225203233\n"
".quad 0x0a3b782e64697425,0x203233732e646461,0x397225202c327225,0x2e0a3b387225202c\n"
".quad 0x3434203320636f6c,0x2e766f6d0a312034,0x3031722520323375,0x7a2e64697425202c\n"
".quad 0x3420636f6c2e0a3b,0x6d0a352034393220,0x2e6f6c2e34326c75,0x2c33722520323373\n"
".quad 0x25202c3031722520,0x636f6c2e0a3b3772,0x3120353434203320,0x3233622e646e610a\n"
".quad 0x25202c3131722520,0x3b32332d202c3272,0x3233622e6c68730a,0x25202c3231722520\n"
".quad 0x730a3b31202c3272,0x25203233752e7268,0x327225202c333172,0x6f6c2e0a3b34202c\n"
".quad 0x2035343420332063,0x33622e646e610a31,0x202c343172252032,0x3b31202c33317225\n"
".quad 0x3233622e646e610a,0x25202c3531722520,0x3b3033202c323172,0x203233622e726f0a\n"
".quad 0x7225202c36317225,0x31317225202c3431,0x3320636f6c2e0a3b,0x6f0a312035343420\n"
".quad 0x7225203233622e72,0x2c36317225202c34,0x2e0a3b3531722520,0x3434203320636f6c\n"
".quad 0x2e766f6d0a312037,0x3731722520323375,0x646961746325202c,0x2e6c68730a3b792e\n"
".quad 0x3831722520323362,0x202c37317225202c,0x20636f6c2e0a3b35,0x0a31203734342033\n"
".quad 0x203233732e646461,0x7225202c39317225,0x3b337225202c3831,0x3233752e766f6d0a\n"
".quad 0x25202c3032722520,0x3b782e6469617463,0x3233622e6c68730a,0x25202c3132722520\n"
".quad 0x0a3b35202c303272,0x34203320636f6c2e,0x6464610a31203734,0x327225203233732e\n"
".quad 0x2c31327225202c32,0x6d0a3b3231722520,0x33732e6f6c2e6461,0x202c333272252032\n"
".quad 0x7225202c39317225,0x3b32327225202c31,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x33327225202c366c,0x6464610a3b32202c,0x6c7225203436732e,0x2c356c7225202c32\n"
".quad 0x2e0a3b366c722520,0x3434203320636f6c,0x2e6c756d0a312038,0x25203233732e6f6c\n"
".quad 0x2c337225202c3572,0x64616d0a3b343320,0x203233732e6f6c2e,0x7225202c34327225\n"
".quad 0x25202c3433202c33,0x6c756d0a3b323172,0x33732e656469772e,0x202c376c72252032\n"
".quad 0x3b32202c34327225,0x3436752e766f6d0a,0x5f202c386c722520,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x35335f3739323933,0x6e6f635f6e6f6e5f,0x6b636f6c625f7473\n"
".quad 0x36732e6464610a3b,0x202c336c72252034,0x7225202c386c7225,0x636f6c2e0a3b376c\n"
".quad 0x3120313534203320,0x746c2e707465730a,0x317025203233732e,0x31202c327225202c\n"
".quad 0x2e707465730a3b36,0x25203233732e7467,0x2c327225202c3270,0x7025400a3b353120\n"
".quad 0x4242206172622032,0x2e0a0a3b325f3031,0x3534203320636f6c,0x672e646c0a312034\n"
".quad 0x33752e6c61626f6c,0x202c353272252032,0x0a3b5d326c72255b,0x65726168732e7473\n"
".quad 0x255b203233752e64,0x7225202c5d336c72,0x702e646c0a3b3532,0x3233752e6d617261\n"
".quad 0x202c353732722520,0x44554338315a5f5b,0x536c656e72656b41,0x5054434474726f68\n"
".quad 0x6d617261705f6973,0x6f6c2e0a3b5d315f,0x2034353420332063,0x33752e7268730a31\n"
".quad 0x202c383272252032,0x33202c3537327225,0x732e6464610a3b31,0x2c39327225203233\n"
".quad 0x202c353732722520,0x68730a3b38327225,0x7225203233732e72,0x39327225202c3033\n"
".quad 0x6c756d0a3b31202c,0x33732e656469772e,0x202c396c72252032,0x3b34202c30337225\n"
".quad 0x3436732e6464610a,0x202c30316c722520,0x7225202c326c7225,0x636f6c2e0a3b396c\n"
".quad 0x3120343534203320,0x626f6c672e646c0a,0x25203233752e6c61,0x72255b202c313372\n"
".quad 0x74730a3b5d30316c,0x2e6465726168732e,0x6c72255b20323375,0x25202c5d38362b33\n"
".quad 0x6464610a3b313372,0x6c7225203436732e,0x316c7225202c3131,0x3b396c7225202c30\n"
".quad 0x203320636f6c2e0a,0x646c0a3120343534,0x2e6c61626f6c672e,0x3433722520323375\n"
".quad 0x31316c72255b202c,0x68732e74730a3b5d,0x3233752e64657261,0x312b336c72255b20\n"
".quad 0x337225202c5d3633,0x732e6464610a3b34,0x32316c7225203436,0x2c31316c7225202c\n"
".quad 0x2e0a3b396c722520,0x3534203320636f6c,0x672e646c0a312034,0x33752e6c61626f6c\n"
".quad 0x202c373372252032,0x3b5d32316c72255b,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x3430322b336c7225,0x3b37337225202c5d,0x3436732e6464610a,0x202c33316c722520\n"
".quad 0x25202c32316c7225,0x6f6c2e0a3b396c72,0x2034353420332063,0x6f6c672e646c0a31\n"
".quad 0x203233752e6c6162,0x255b202c30347225,0x730a3b5d33316c72,0x6465726168732e74\n"
".quad 0x72255b203233752e,0x2c5d3237322b336c,0x610a3b3034722520,0x25203436732e6464\n"
".quad 0x7225202c34316c72,0x6c7225202c33316c,0x20636f6c2e0a3b39,0x0a31203435342033\n"
".quad 0x61626f6c672e646c,0x7225203233752e6c,0x6c72255b202c3334,0x2e74730a3b5d3431\n"
".quad 0x752e646572616873,0x336c72255b203233,0x25202c5d3034332b,0x6464610a3b333472\n"
".quad 0x6c7225203436732e,0x316c7225202c3531,0x3b396c7225202c34,0x203320636f6c2e0a\n"
".quad 0x646c0a3120343534,0x2e6c61626f6c672e,0x3634722520323375,0x35316c72255b202c\n"
".quad 0x68732e74730a3b5d,0x3233752e64657261,0x342b336c72255b20,0x347225202c5d3830\n"
".quad 0x732e6464610a3b36,0x36316c7225203436,0x2c35316c7225202c,0x2e0a3b396c722520\n"
".quad 0x3534203320636f6c,0x672e646c0a312034,0x33752e6c61626f6c,0x202c393472252032\n"
".quad 0x3b5d36316c72255b,0x726168732e74730a,0x5b203233752e6465,0x3637342b336c7225\n"
".quad 0x3b39347225202c5d,0x325f303142420a0a,0x3320636f6c2e0a3a,0x620a312037353420\n"
".quad 0x20636e79732e7261,0x20636f6c2e0a3b30,0x0a31203835342033,0x2e3436732e747663\n"
".quad 0x316c722520323373,0x0a3b347225202c37,0x2e3436732e747663,0x316c722520323373\n"
".quad 0x0a3b357225202c38,0x203436732e646461,0x25202c39316c7225,0x7225202c37316c72\n"
".quad 0x6c68730a3b38316c,0x6c7225203436622e,0x316c7225202c3032,0x64610a3b31202c39\n"
".quad 0x7225203436732e64,0x6c7225202c32326c,0x30326c7225202c38,0x3320636f6c2e0a3b\n"
".quad 0x6c0a312036333120,0x6465726168732e64,0x357225203631732e,0x326c72255b202c32\n"
".quad 0x636f6c2e0a3b5d32,0x3120303531203320,0x726168732e646c0a,0x25203631732e6465\n"
".quad 0x72255b202c343572,0x5d3637342b32326c,0x3320636f6c2e0a3b,0x610a312032353120\n"
".quad 0x25203233732e6464,0x357225202c363572,0x3b32357225202c34,0x203320636f6c2e0a\n"
".quad 0x646c0a3120383331,0x2e6465726168732e,0x3735722520363173,0x32326c72255b202c\n"
".quad 0x6c2e0a3b5d38362b,0x383431203320636f,0x68732e646c0a3120,0x3631732e64657261\n"
".quad 0x5b202c3935722520,0x30342b32326c7225,0x636f6c2e0a3b5d38,0x3120333531203320\n"
".quad 0x3233732e6464610a,0x25202c3136722520,0x357225202c393572,0x20636f6c2e0a3b37\n"
".quad 0x0a31203034312033,0x65726168732e646c,0x7225203631732e64,0x6c72255b202c3236\n"
".quad 0x3b5d3633312b3232,0x203320636f6c2e0a,0x646c0a3120363431,0x2e6465726168732e\n"
".quad 0x3436722520363173,0x32326c72255b202c,0x2e0a3b5d3034332b,0x3531203320636f6c\n"
".quad 0x2e6464610a312034,0x3636722520323373,0x202c34367225202c,0x6c2e0a3b32367225\n"
".quad 0x323431203320636f,0x68732e646c0a3120,0x3631732e64657261,0x5b202c3736722520\n"
".quad 0x30322b32326c7225,0x636f6c2e0a3b5d34,0x3120343431203320,0x726168732e646c0a\n"
".quad 0x25203631732e6465,0x72255b202c393672,0x5d3237322b32326c,0x3320636f6c2e0a3b\n"
".quad 0x610a312035353120,0x25203233732e6464,0x367225202c313772,0x3b37367225202c39\n"
".quad 0x203320636f6c2e0a,0x75730a3120363531,0x7225203233732e62,0x37367225202c3237\n"
".quad 0x0a3b39367225202c,0x31203320636f6c2e,0x6275730a31203735,0x377225203233732e\n"
".quad 0x2c32367225202c33,0x2e0a3b3436722520,0x3531203320636f6c,0x2e6275730a312038\n"
".quad 0x3437722520323373,0x202c37357225202c,0x6c2e0a3b39357225,0x393531203320636f\n"
".quad 0x732e6275730a3120,0x2c35377225203233,0x25202c3235722520,0x6f6c2e0a3b343572\n"
".quad 0x2031363120332063,0x33732e6464610a31,0x202c363772252032,0x7225202c36357225\n"
".quad 0x636f6c2e0a3b3137,0x3120323631203320,0x3233732e6464610a,0x25202c3737722520\n"
".quad 0x367225202c313672,0x20636f6c2e0a3b36,0x0a31203336312033,0x203233732e627573\n"
".quad 0x7225202c38377225,0x36367225202c3136,0x3320636f6c2e0a3b,0x730a312034363120\n"
".quad 0x25203233732e6275,0x357225202c393772,0x3b31377225202c36,0x203320636f6c2e0a\n"
".quad 0x64610a3120363631,0x7225203233732e64,0x34377225202c3038,0x0a3b33377225202c\n"
".quad 0x203233752e766f6d,0x3332202c31387225,0x6f6c2e0a3b303731,0x2034393220342063\n"
".quad 0x2e34326c756d0a35,0x25203233732e6f6c,0x387225202c323872,0x3b31387225202c30\n"
".quad 0x203320636f6c2e0a,0x64610a3120363631,0x7225203233732e64,0x32387225202c3338\n"
".quad 0x0a3b36393034202c,0x203233732e726873,0x7225202c34387225,0x0a3b3331202c3338\n"
".quad 0x31203320636f6c2e,0x6275730a31203736,0x387225203233732e,0x2c34377225202c35\n"
".quad 0x2e0a3b3337722520,0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34\n"
".quad 0x25202c3638722520,0x387225202c353872,0x20636f6c2e0a3b31,0x0a31203736312033\n"
".quad 0x203233732e646461,0x7225202c37387225,0x36393034202c3638,0x33732e7268730a3b\n"
".quad 0x202c383872252032,0x3331202c37387225,0x3320636f6c2e0a3b,0x730a312039363120\n"
".quad 0x25203233622e6c68,0x377225202c393872,0x6c2e0a3b32202c32,0x303731203320636f\n"
".quad 0x622e6c68730a3120,0x2c30397225203233,0x32202c3537722520,0x3320636f6c2e0a3b\n"
".quad 0x610a312032373120,0x25203233732e6464,0x387225202c313972,0x3b39387225202c38\n"
".quad 0x203320636f6c2e0a,0x75730a3120333731,0x7225203233732e62,0x39387225202c3239\n"
".quad 0x0a3b38387225202c,0x31203320636f6c2e,0x6275730a31203437,0x397225203233732e\n"
".quad 0x2c30397225202c33,0x2e0a3b3438722520,0x3731203320636f6c,0x2e6464610a312035\n"
".quad 0x3439722520323373,0x202c30397225202c,0x6c2e0a3b34387225,0x383731203320636f\n"
".quad 0x732e6464610a3120,0x2c35397225203233,0x25202c3637722520,0x6f6c2e0a3b373772\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x397225202c363972\n"
".quad 0x3b31387225202c35,0x203320636f6c2e0a,0x64610a3120383731,0x7225203233732e64\n"
".quad 0x36397225202c3739,0x3b3836373233202c,0x3233752e7268730a,0x25202c3839722520\n"
".quad 0x3b3631202c373972,0x203320636f6c2e0a,0x74730a3120383731,0x2e6465726168732e\n"
".quad 0x6c72255b20363175,0x397225202c5d3232,0x752e766f6d0a3b38,0x3030317225203233\n"
".quad 0x3b3437323033202c,0x203420636f6c2e0a,0x756d0a3520343932,0x732e6f6c2e34326c\n"
".quad 0x3130317225203233,0x202c39377225202c,0x6d0a3b3030317225,0x25203233752e766f\n"
".quad 0x3231202c32303172,0x6f6c2e0a3b303435,0x2034393220342063,0x2e34326c756d0a35\n"
".quad 0x25203233732e6f6c,0x7225202c33303172,0x30317225202c3837,0x20636f6c2e0a3b32\n"
".quad 0x0a31203038312033,0x203233732e646461,0x25202c3430317225,0x7225202c31303172\n"
".quad 0x6464610a3b333031,0x317225203233732e,0x30317225202c3530,0x3836373233202c34\n"
".quad 0x33752e7268730a3b,0x2c36303172252032,0x202c353031722520,0x636f6c2e0a3b3631\n"
".quad 0x3120303831203320,0x726168732e74730a,0x5b203631752e6465,0x33312b32326c7225\n"
".quad 0x30317225202c5d36,0x20636f6c2e0a3b36,0x0a31203238312033,0x203233732e627573\n"
".quad 0x25202c3830317225,0x377225202c363772,0x20636f6c2e0a3b37,0x0a35203439322034\n"
".quad 0x6f6c2e34326c756d,0x317225203233732e,0x30317225202c3930,0x3b31387225202c38\n"
".quad 0x203320636f6c2e0a,0x64610a3120323831,0x7225203233732e64,0x317225202c303131\n"
".quad 0x36373233202c3930,0x752e7268730a3b38,0x3131317225203233,0x2c3031317225202c\n"
".quad 0x6f6c2e0a3b363120,0x2032383120332063,0x6168732e74730a31,0x203631752e646572\n"
".quad 0x322b32326c72255b,0x317225202c5d3237,0x636f6c2e0a3b3131,0x3520343932203420\n"
".quad 0x6c2e34326c756d0a,0x7225203233732e6f,0x377225202c333131,0x3230317225202c39\n"
".quad 0x2e34326c756d0a3b,0x25203233732e6f6c,0x7225202c34313172,0x30317225202c3837\n"
".quad 0x732e6464610a3b30,0x3531317225203233,0x2c3331317225202c,0x0a3b383637323320\n"
".quad 0x203233732e627573,0x25202c3631317225,0x7225202c35313172,0x7268730a3b343131\n"
".quad 0x317225203233752e,0x31317225202c3731,0x2e0a3b3631202c36,0x3831203320636f6c\n"
".quad 0x732e74730a312034,0x31752e6465726168,0x32326c72255b2036,0x25202c5d3830342b\n"
".quad 0x6f6d0a3b37313172,0x7225203233752e76,0x333038202c393131,0x20636f6c2e0a3b35\n"
".quad 0x0a35203439322034,0x6f6c2e34326c756d,0x317225203233732e,0x34397225202c3032\n"
".quad 0x3b3931317225202c,0x3233752e766f6d0a,0x202c313231722520,0x6c2e0a3b38393531\n"
".quad 0x343932203420636f,0x34326c756d0a3520,0x203233732e6f6c2e,0x25202c3232317225\n"
".quad 0x317225202c313972,0x636f6c2e0a3b3132,0x3120373831203320,0x3233732e6464610a\n"
".quad 0x202c333231722520,0x25202c3032317225,0x64610a3b32323172,0x7225203233732e64\n"
".quad 0x317225202c343231,0x36373233202c3332,0x752e7268730a3b38,0x3532317225203233\n"
".quad 0x2c3432317225202c,0x6f6c2e0a3b363120,0x2037383120332063,0x6168732e74730a31\n"
".quad 0x203631752e646572,0x362b32326c72255b,0x32317225202c5d38,0x752e766f6d0a3b35\n"
".quad 0x3732317225203233,0x0a3b31313836202c,0x32203420636f6c2e,0x6c756d0a35203439\n"
".quad 0x33732e6f6c2e3432,0x2c38323172252032,0x25202c3339722520,0x6f6d0a3b37323172\n"
".quad 0x7225203233752e76,0x353534202c393231,0x20636f6c2e0a3b31,0x0a35203439322034\n"
".quad 0x6f6c2e34326c756d,0x317225203233732e,0x32397225202c3033,0x3b3932317225202c\n"
".quad 0x3233732e6464610a,0x202c313331722520,0x33202c3832317225,0x75730a3b38363732\n"
".quad 0x7225203233732e62,0x317225202c323331,0x33317225202c3133,0x752e7268730a3b30\n"
".quad 0x3333317225203233,0x2c3233317225202c,0x6f6c2e0a3b363120,0x2039383120332063\n"
".quad 0x6168732e74730a31,0x203631752e646572,0x322b32326c72255b,0x317225202c5d3430\n"
".quad 0x636f6c2e0a3b3333,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x397225202c353331,0x3932317225202c33,0x2e34326c756d0a3b,0x25203233732e6f6c\n"
".quad 0x7225202c36333172,0x32317225202c3239,0x20636f6c2e0a3b37,0x0a31203139312033\n"
".quad 0x203233732e646461,0x25202c3733317225,0x7225202c35333172,0x6464610a3b363331\n"
".quad 0x317225203233732e,0x33317225202c3833,0x3836373233202c37,0x33752e7268730a3b\n"
".quad 0x2c39333172252032,0x202c383331722520,0x636f6c2e0a3b3631,0x3120313931203320\n"
".quad 0x726168732e74730a,0x5b203631752e6465,0x34332b32326c7225,0x33317225202c5d30\n"
".quad 0x20636f6c2e0a3b39,0x0a35203439322034,0x6f6c2e34326c756d,0x317225203233732e\n"
".quad 0x34397225202c3134,0x3b3132317225202c,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x397225202c323431,0x3931317225202c31,0x33732e6464610a3b,0x2c33343172252032\n"
".quad 0x202c313431722520,0x730a3b3836373233,0x25203233732e6275,0x7225202c34343172\n"
".quad 0x317225202c333431,0x2e7268730a3b3234,0x3431722520323375,0x3434317225202c35\n"
".quad 0x6c2e0a3b3631202c,0x333931203320636f,0x68732e74730a3120,0x3631752e64657261\n"
".quad 0x2b32326c72255b20,0x7225202c5d363734,0x6f6c2e0a3b353431,0x2039353420332063\n"
".quad 0x79732e7261620a31,0x6c2e0a3b3020636e,0x303634203320636f,0x6c2e6c756d0a3120\n"
".quad 0x7225203233732e6f,0x327225202c373431,0x76630a3b3433202c,0x33732e3436732e74\n"
".quad 0x2c33326c72252032,0x0a3b373431722520,0x2e3436732e747663,0x326c722520323373\n"
".quad 0x0a3b337225202c34,0x203436732e646461,0x25202c35326c7225,0x7225202c33326c72\n"
".quad 0x6c68730a3b34326c,0x6c7225203436622e,0x326c7225202c3632,0x64610a3b31202c35\n"
".quad 0x7225203436732e64,0x6c7225202c38326c,0x36326c7225202c38,0x3320636f6c2e0a3b\n"
".quad 0x6c0a312034313220,0x6465726168732e64,0x317225203233752e,0x6c72255b202c3834\n"
".quad 0x7268730a3b5d3832,0x317225203233732e,0x34317225202c3035,0x2e0a3b3631202c38\n"
".quad 0x3132203320636f6c,0x732e646c0a312035,0x33752e6465726168,0x2c31353172252032\n"
".quad 0x2b38326c72255b20,0x2e7268730a3b5d34,0x3531722520323373,0x3135317225202c33\n"
".quad 0x6c2e0a3b3631202c,0x363132203320636f,0x68732e646c0a3120,0x3233752e64657261\n"
".quad 0x202c343531722520,0x382b38326c72255b,0x732e7268730a3b5d,0x3635317225203233\n"
".quad 0x2c3435317225202c,0x6f6c2e0a3b363120,0x2037313220332063,0x6168732e646c0a31\n"
".quad 0x203233752e646572,0x5b202c3735317225,0x32312b38326c7225,0x732e7268730a3b5d\n"
".quad 0x3935317225203233,0x2c3735317225202c,0x6c68730a3b363120,0x317225203233622e\n"
".quad 0x34317225202c3036,0x730a3b3631202c38,0x25203233732e7268,0x7225202c31363172\n"
".quad 0x3b3631202c303631,0x203320636f6c2e0a,0x64610a3120373232,0x7225203233732e64\n"
".quad 0x317225202c323631,0x36317225202c3935,0x622e6c68730a3b31,0x3336317225203233\n"
".quad 0x2c3735317225202c,0x7268730a3b363120,0x317225203233732e,0x36317225202c3436\n"
".quad 0x2e0a3b3631202c33,0x3232203320636f6c,0x2e6464610a312038,0x3631722520323373\n"
".quad 0x3436317225202c35,0x3b3035317225202c,0x3233622e6c68730a,0x202c363631722520\n"
".quad 0x31202c3135317225,0x732e7268730a3b36,0x3736317225203233,0x2c3636317225202c\n"
".quad 0x6f6c2e0a3b363120,0x2039323220332063,0x33732e6464610a31,0x2c38363172252032\n"
".quad 0x202c363531722520,0x730a3b3736317225,0x25203233622e6c68,0x7225202c39363172\n"
".quad 0x3b3631202c343531,0x3233732e7268730a,0x202c303731722520,0x31202c3936317225\n"
".quad 0x20636f6c2e0a3b36,0x0a31203033322033,0x203233732e646461,0x25202c3137317225\n"
".quad 0x7225202c30373172,0x6f6c2e0a3b333531,0x2031333220332063,0x33732e6275730a31\n"
".quad 0x2c32373172252032,0x202c333531722520,0x2e0a3b3037317225,0x3332203320636f6c\n"
".quad 0x2e6275730a312032,0x3731722520323373,0x3736317225202c33,0x3b3635317225202c\n"
".quad 0x203320636f6c2e0a,0x75730a3120333332,0x7225203233732e62,0x317225202c343731\n"
".quad 0x36317225202c3035,0x20636f6c2e0a3b34,0x0a31203433322033,0x203233732e627573\n"
".quad 0x25202c3537317225,0x7225202c31363172,0x6f6c2e0a3b393531,0x2036333220332063\n"
".quad 0x33732e6464610a31,0x2c36373172252032,0x202c313731722520,0x2e0a3b3236317225\n"
".quad 0x3332203320636f6c,0x2e6464610a312037,0x3731722520323373,0x3536317225202c37\n"
".quad 0x3b3836317225202c,0x203320636f6c2e0a,0x75730a3120383332,0x7225203233732e62\n"
".quad 0x317225202c383731,0x36317225202c3536,0x20636f6c2e0a3b38,0x0a31203933322033\n"
".quad 0x203233732e627573,0x25202c3937317225,0x7225202c32363172,0x6f6c2e0a3b313731\n"
".quad 0x2031343220332063,0x33732e6464610a31,0x2c30383172252032,0x202c373731722520\n"
".quad 0x2e0a3b3637317225,0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34\n"
".quad 0x202c323831722520,0x25202c3038317225,0x6f6c2e0a3b313872,0x2031343220332063\n"
".quad 0x33732e6464610a31,0x2c33383172252032,0x202c323831722520,0x730a3b3836373233\n"
".quad 0x25203233752e7268,0x7225202c34383172,0x3b3631202c333831,0x203320636f6c2e0a\n"
".quad 0x75730a3120323432,0x7225203233732e62,0x317225202c353831,0x37317225202c3637\n"
".quad 0x20636f6c2e0a3b37,0x0a35203439322034,0x6f6c2e34326c756d,0x317225203233732e\n"
".quad 0x38317225202c3638,0x3b31387225202c35,0x203320636f6c2e0a,0x64610a3120323432\n"
".quad 0x7225203233732e64,0x317225202c373831,0x36373233202c3638,0x752e7268730a3b38\n"
".quad 0x3838317225203233,0x2c3738317225202c,0x6f6c2e0a3b363120,0x2034393220342063\n"
".quad 0x2e34326c756d0a35,0x25203233732e6f6c,0x7225202c30393172,0x317225202c393731\n"
".quad 0x326c756d0a3b3030,0x3233732e6f6c2e34,0x202c323931722520,0x25202c3837317225\n"
".quad 0x6c2e0a3b32303172,0x343432203320636f,0x732e6464610a3120,0x3339317225203233\n"
".quad 0x2c3039317225202c,0x0a3b323931722520,0x203233732e646461,0x25202c3439317225\n"
".quad 0x3233202c33393172,0x7268730a3b383637,0x317225203233752e,0x39317225202c3539\n"
".quad 0x2e0a3b3631202c34,0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34\n"
".quad 0x202c363931722520,0x25202c3937317225,0x756d0a3b32303172,0x732e6f6c2e34326c\n"
".quad 0x3739317225203233,0x2c3837317225202c,0x0a3b303031722520,0x203233732e646461\n"
".quad 0x25202c3839317225,0x3233202c36393172,0x6275730a3b383637,0x317225203233732e\n"
".quad 0x39317225202c3939,0x3739317225202c38,0x33752e7268730a3b,0x2c30303272252032\n"
".quad 0x202c393931722520,0x636f6c2e0a3b3631,0x3120373432203320,0x3233732e6464610a\n"
".quad 0x202c313032722520,0x25202c3437317225,0x6c2e0a3b33373172,0x343932203420636f\n"
".quad 0x34326c756d0a3520,0x203233732e6f6c2e,0x25202c3230327225,0x7225202c31303272\n"
".quad 0x636f6c2e0a3b3138,0x3120373432203320,0x3233732e6464610a,0x202c333032722520\n"
".quad 0x34202c3230327225,0x7268730a3b363930,0x327225203233732e,0x30327225202c3430\n"
".quad 0x2e0a3b3331202c33,0x3432203320636f6c,0x2e6275730a312038,0x3032722520323373\n"
".quad 0x3437317225202c35,0x3b3337317225202c,0x203420636f6c2e0a,0x756d0a3520343932\n"
".quad 0x732e6f6c2e34326c,0x3630327225203233,0x2c3530327225202c,0x2e0a3b3138722520\n"
".quad 0x3432203320636f6c,0x2e6464610a312038,0x3032722520323373,0x3630327225202c37\n"
".quad 0x0a3b36393034202c,0x203233732e726873,0x25202c3830327225,0x3331202c37303272\n"
".quad 0x3320636f6c2e0a3b,0x730a312030353220,0x25203233622e6c68,0x7225202c39303272\n"
".quad 0x0a3b32202c323731,0x32203320636f6c2e,0x6c68730a31203135,0x327225203233622e\n"
".quad 0x37317225202c3031,0x6c2e0a3b32202c35,0x333532203320636f,0x732e6464610a3120\n"
".quad 0x3131327225203233,0x2c3830327225202c,0x0a3b393032722520,0x32203320636f6c2e\n"
".quad 0x6275730a31203435,0x327225203233732e,0x30327225202c3231,0x3830327225202c39\n"
".quad 0x3320636f6c2e0a3b,0x730a312035353220,0x25203233732e6275,0x7225202c33313272\n"
".quad 0x327225202c303132,0x636f6c2e0a3b3430,0x3120363532203320,0x3233732e6464610a\n"
".quad 0x202c343132722520,0x25202c3430327225,0x6c2e0a3b30313272,0x343932203420636f\n"
".quad 0x34326c756d0a3520,0x203233732e6f6c2e,0x25202c3631327225,0x7225202c34313272\n"
".quad 0x6c756d0a3b393131,0x33732e6f6c2e3432,0x2c38313272252032,0x202c313132722520\n"
".quad 0x2e0a3b3132317225,0x3532203320636f6c,0x2e6464610a312038,0x3132722520323373\n"
".quad 0x3631327225202c39,0x3b3831327225202c,0x3233732e6464610a,0x202c303232722520\n"
".quad 0x33202c3931327225,0x6e610a3b38363732,0x7225203233622e64,0x327225202c313232\n"
".quad 0x3535362d202c3032,0x622e726f0a3b3633,0x3232327225203233,0x2c3132327225202c\n"
".quad 0x0a3b343831722520,0x32203420636f6c2e,0x6c756d0a35203439,0x33732e6f6c2e3432\n"
".quad 0x2c33323272252032,0x202c343132722520,0x6d0a3b3132317225,0x2e6f6c2e34326c75\n"
".quad 0x3232722520323373,0x3131327225202c34,0x3b3931317225202c,0x3233732e6464610a\n"
".quad 0x202c353232722520,0x33202c3332327225,0x75730a3b38363732,0x7225203233732e62\n"
".quad 0x327225202c363232,0x32327225202c3532,0x622e646e610a3b34,0x3732327225203233\n"
".quad 0x2c3632327225202c,0x3b36333535362d20,0x203233622e726f0a,0x25202c3832327225\n"
".quad 0x7225202c37323272,0x6f6c2e0a3b303032,0x2034393220342063,0x2e34326c756d0a35\n"
".quad 0x25203233732e6f6c,0x7225202c30333272,0x317225202c333132,0x326c756d0a3b3932\n"
".quad 0x3233732e6f6c2e34,0x202c323332722520,0x25202c3231327225,0x6c2e0a3b37323172\n"
".quad 0x303632203320636f,0x732e6464610a3120,0x3333327225203233,0x2c3033327225202c\n"
".quad 0x0a3b323332722520,0x203233732e646461,0x25202c3433327225,0x3233202c33333272\n"
".quad 0x646e610a3b383637,0x327225203233622e,0x33327225202c3533,0x333535362d202c34\n"
".quad 0x33622e726f0a3b36,0x2c36333272252032,0x202c353332722520,0x2e0a3b3838317225\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x202c373332722520\n"
".quad 0x25202c3331327225,0x756d0a3b37323172,0x732e6f6c2e34326c,0x3833327225203233\n"
".quad 0x2c3231327225202c,0x0a3b393231722520,0x203233732e646461,0x25202c3933327225\n"
".quad 0x3233202c37333272,0x6275730a3b383637,0x327225203233732e,0x33327225202c3034\n"
".quad 0x3833327225202c39,0x33622e646e610a3b,0x2c31343272252032,0x202c303432722520\n"
".quad 0x0a3b36333535362d,0x25203233622e726f,0x7225202c32343272,0x317225202c313432\n"
".quad 0x636f6c2e0a3b3539,0x3120333632203320,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x202c5d38326c7225,0x2e0a3b3232327225,0x3632203320636f6c,0x732e74730a312034\n"
".quad 0x33752e6465726168,0x38326c72255b2032,0x327225202c5d342b,0x636f6c2e0a3b3234\n"
".quad 0x3120353632203320,0x726168732e74730a,0x5b203233752e6465,0x5d382b38326c7225\n"
".quad 0x3b3633327225202c,0x203320636f6c2e0a,0x74730a3120363632,0x2e6465726168732e\n"
".quad 0x6c72255b20323375,0x202c5d32312b3832,0x2e0a3b3832327225,0x3634203320636f6c\n"
".quad 0x2e7261620a312031,0x0a3b3020636e7973,0x34203320636f6c2e,0x7025400a31203436\n"
".quad 0x4242206172622031,0x2e0a0a3b345f3031,0x3634203320636f6c,0x3b7465720a322039\n"
".quad 0x345f303142420a0a,0x3320636f6c2e0a3a,0x6c0a312037363420,0x6465726168732e64\n"
".quad 0x327225203233752e,0x6c72255b202c3734,0x672e74730a3b5d33,0x33752e6c61626f6c\n"
".quad 0x5d326c72255b2032,0x3b3734327225202c,0x617261702e646c0a,0x7225203233752e6d\n"
".quad 0x5a5f5b202c343732,0x656b414455433831,0x726f68536c656e72,0x5f69735054434474\n"
".quad 0x5d315f6d61726170,0x3320636f6c2e0a3b,0x730a312037363420,0x25203233752e7268\n"
".quad 0x7225202c30353272,0x3b3133202c343732,0x3233732e6464610a,0x202c313532722520\n"
".quad 0x25202c3437327225,0x68730a3b30353272,0x7225203233732e72,0x327225202c323532\n"
".quad 0x6d0a3b31202c3135,0x2e656469772e6c75,0x326c722520323373,0x3235327225202c39\n"
".quad 0x6464610a3b34202c,0x6c7225203436732e,0x326c7225202c3033,0x3b39326c7225202c\n"
".quad 0x203320636f6c2e0a,0x646c0a3120373634,0x2e6465726168732e,0x3532722520323375\n"
".quad 0x336c72255b202c33,0x74730a3b5d38362b,0x2e6c61626f6c672e,0x6c72255b20323375\n"
".quad 0x327225202c5d3033,0x2e6464610a3b3335,0x336c722520343673,0x30336c7225202c31\n"
".quad 0x3b39326c7225202c,0x203320636f6c2e0a,0x646c0a3120373634,0x2e6465726168732e\n"
".quad 0x3532722520323375,0x336c72255b202c36,0x730a3b5d3633312b,0x6c61626f6c672e74\n"
".quad 0x72255b203233752e,0x7225202c5d31336c,0x6464610a3b363532,0x6c7225203436732e\n"
".quad 0x336c7225202c3233,0x39326c7225202c31,0x3320636f6c2e0a3b,0x6c0a312037363420\n"
".quad 0x6465726168732e64,0x327225203233752e,0x6c72255b202c3935,0x0a3b5d3430322b33\n"
".quad 0x61626f6c672e7473,0x255b203233752e6c,0x25202c5d32336c72,0x64610a3b39353272\n"
".quad 0x7225203436732e64,0x6c7225202c33336c,0x326c7225202c3233,0x20636f6c2e0a3b39\n"
".quad 0x0a31203736342033,0x65726168732e646c,0x7225203233752e64,0x72255b202c323632\n"
".quad 0x3b5d3237322b336c,0x626f6c672e74730a,0x5b203233752e6c61,0x202c5d33336c7225\n"
".quad 0x610a3b3236327225,0x25203436732e6464,0x7225202c34336c72,0x6c7225202c33336c\n"
".quad 0x636f6c2e0a3b3932,0x3120373634203320,0x726168732e646c0a,0x25203233752e6465\n"
".quad 0x255b202c35363272,0x5d3034332b336c72,0x6f6c672e74730a3b,0x203233752e6c6162\n"
".quad 0x2c5d34336c72255b,0x0a3b353632722520,0x203436732e646461,0x25202c35336c7225\n"
".quad 0x7225202c34336c72,0x6f6c2e0a3b39326c,0x2037363420332063,0x6168732e646c0a31\n"
".quad 0x203233752e646572,0x5b202c3836327225,0x3830342b336c7225,0x6c672e74730a3b5d\n"
".quad 0x3233752e6c61626f,0x5d35336c72255b20,0x3b3836327225202c,0x3436732e6464610a\n"
".quad 0x202c36336c722520,0x25202c35336c7225,0x6c2e0a3b39326c72,0x373634203320636f\n"
".quad 0x68732e646c0a3120,0x3233752e64657261,0x202c313732722520,0x37342b336c72255b\n"
".quad 0x672e74730a3b5d36,0x33752e6c61626f6c,0x36336c72255b2032,0x3137327225202c5d\n"
".quad 0x3320636f6c2e0a3b,0x720a322039363420,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x656b414455433931,0x726f68536c656e72,0x6973505443444974,0x6d617261702e0a28\n"
".quad 0x5a5f203436752e20,0x656b414455433931,0x726f68536c656e72,0x6973505443444974\n"
".quad 0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203233752e20,0x656b414455433931\n"
".quad 0x726f68536c656e72,0x6973505443444974,0x315f6d617261705f,0x65722e0a7b0a290a\n"
".quad 0x20646572702e2067,0x2e0a3b3e333c7025,0x3233732e20676572,0x3e3736323c722520\n"
".quad 0x2e206765722e0a3b,0x3c6c722520343673,0x2e090a0a3b3e3733,0x2e20646572616873\n"
".quad 0x2032206e67696c61,0x75635f5f2038622e,0x6c61636f6c5f6164,0x3339335f7261765f\n"
".quad 0x6f6e5f35335f3732,0x5f74736e6f635f6e,0x31325b6b636f6c62,0x646c0a0a3b5d3637\n"
".quad 0x752e6d617261702e,0x2c346c7225203436,0x554339315a5f5b20,0x6c656e72656b4144\n"
".quad 0x43444974726f6853,0x7261705f69735054,0x6c0a3b5d305f6d61,0x2e6d617261702e64\n"
".quad 0x2c31722520323375,0x554339315a5f5b20,0x6c656e72656b4144,0x43444974726f6853\n"
".quad 0x7261705f69735054,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x202c356c72252034,0x6c2e0a3b346c7225,0x393834203320636f,0x752e766f6d0a3120\n"
".quad 0x202c367225203233,0x0a3b792e64697425,0x203233622e6c6873,0x367225202c377225\n"
".quad 0x6f6c2e0a3b33202c,0x2039383420332063,0x33752e766f6d0a31,0x25202c3872252032\n"
".quad 0x610a3b782e646974,0x25203233732e6464,0x2c377225202c3272,0x6c2e0a3b38722520\n"
".quad 0x303934203320636f,0x752e766f6d0a3120,0x202c397225203233,0x0a3b7a2e64697425\n"
".quad 0x203233622e6c6873,0x397225202c337225,0x6f6c2e0a3b33202c,0x2031393420332063\n"
".quad 0x33622e646e610a31,0x202c303172252032,0x32332d202c327225,0x33622e6c68730a3b\n"
".quad 0x202c313172252032,0x0a3b31202c327225,0x203233752e726873,0x7225202c32317225\n"
".quad 0x6c2e0a3b34202c32,0x313934203320636f,0x622e646e610a3120,0x2c33317225203233\n"
".quad 0x31202c3231722520,0x33622e646e610a3b,0x202c343172252032,0x3033202c31317225\n"
".quad 0x3233622e726f0a3b,0x25202c3531722520,0x317225202c333172,0x20636f6c2e0a3b30\n"
".quad 0x0a31203139342033,0x25203233622e726f,0x35317225202c3472,0x0a3b34317225202c\n"
".quad 0x34203320636f6c2e,0x766f6d0a31203339,0x317225203233752e,0x6961746325202c36\n"
".quad 0x6c68730a3b792e64,0x317225203233622e,0x2c36317225202c37,0x636f6c2e0a3b3520\n"
".quad 0x3120333934203320,0x3233732e6464610a,0x25202c3831722520,0x337225202c373172\n"
".quad 0x33752e766f6d0a3b,0x202c393172252032,0x782e646961746325,0x33622e6c68730a3b\n"
".quad 0x202c303272252032,0x3b35202c39317225,0x203320636f6c2e0a,0x64610a3120333934\n"
".quad 0x7225203233732e64,0x30327225202c3132,0x0a3b31317225202c,0x732e6f6c2e64616d\n"
".quad 0x2c32327225203233,0x25202c3831722520,0x31327225202c3172,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x327225202c366c72,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x356c7225202c326c,0x0a3b366c7225202c,0x732e6f6c2e6c756d,0x202c357225203233\n"
".quad 0x323732202c397225,0x3320636f6c2e0a3b,0x6d0a312034393420,0x33732e6f6c2e6461\n"
".quad 0x202c333272252032,0x323732202c397225,0x0a3b31317225202c,0x656469772e6c756d\n"
".quad 0x6c7225203233732e,0x2c33327225202c37,0x2e766f6d0a3b3220,0x386c722520343675\n"
".quad 0x616475635f5f202c,0x765f6c61636f6c5f,0x37323339335f7261,0x5f6e6f6e5f35335f\n"
".quad 0x6c625f74736e6f63,0x6464610a3b6b636f,0x6c7225203436732e,0x2c386c7225202c33\n"
".quad 0x2e0a3b376c722520,0x3934203320636f6c,0x707465730a312037,0x203233732e746c2e\n"
".quad 0x327225202c317025,0x65730a3b3631202c,0x33732e74672e7074,0x25202c3270252032\n"
".quad 0x0a3b3531202c3272,0x6172622032702540,0x3b325f3131424220,0x3320636f6c2e0a0a\n"
".quad 0x6c0a312030303520,0x6c61626f6c672e64,0x327225203233752e,0x326c72255b202c34\n"
".quad 0x68732e74730a3b5d,0x3233752e64657261,0x2c5d336c72255b20,0x6c0a3b3432722520\n"
".quad 0x2e6d617261702e64,0x3632722520323375,0x39315a5f5b202c36,0x6e72656b41445543\n"
".quad 0x4974726f68536c65,0x705f697350544344,0x3b5d315f6d617261,0x203320636f6c2e0a\n"
".quad 0x68730a3120303035,0x7225203233752e72,0x36327225202c3732,0x610a3b3133202c36\n"
".quad 0x25203233732e6464,0x327225202c383272,0x37327225202c3636,0x33732e7268730a3b\n"
".quad 0x202c393272252032,0x3b31202c38327225,0x6469772e6c756d0a,0x7225203233732e65\n"
".quad 0x39327225202c396c,0x6464610a3b34202c,0x6c7225203436732e,0x326c7225202c3031\n"
".quad 0x0a3b396c7225202c,0x35203320636f6c2e,0x2e646c0a31203030,0x752e6c61626f6c67\n"
".quad 0x2c30337225203233,0x5d30316c72255b20,0x6168732e74730a3b,0x203233752e646572\n"
".quad 0x38362b336c72255b,0x3b30337225202c5d,0x3436732e6464610a,0x202c31316c722520\n"
".quad 0x25202c30316c7225,0x6f6c2e0a3b396c72,0x2030303520332063,0x6f6c672e646c0a31\n"
".quad 0x203233752e6c6162,0x255b202c33337225,0x730a3b5d31316c72,0x6465726168732e74\n"
".quad 0x72255b203233752e,0x2c5d3633312b336c,0x610a3b3333722520,0x25203436732e6464\n"
".quad 0x7225202c32316c72,0x6c7225202c31316c,0x20636f6c2e0a3b39,0x0a31203030352033\n"
".quad 0x61626f6c672e646c,0x7225203233752e6c,0x6c72255b202c3633,0x2e74730a3b5d3231\n"
".quad 0x752e646572616873,0x336c72255b203233,0x25202c5d3430322b,0x6464610a3b363372\n"
".quad 0x6c7225203436732e,0x316c7225202c3331,0x3b396c7225202c32,0x203320636f6c2e0a\n"
".quad 0x646c0a3120303035,0x2e6c61626f6c672e,0x3933722520323375,0x33316c72255b202c\n"
".quad 0x68732e74730a3b5d,0x3233752e64657261,0x322b336c72255b20,0x337225202c5d3237\n"
".quad 0x732e6464610a3b39,0x34316c7225203436,0x2c33316c7225202c,0x2e0a3b396c722520\n"
".quad 0x3035203320636f6c,0x672e646c0a312030,0x33752e6c61626f6c,0x202c323472252032\n"
".quad 0x3b5d34316c72255b,0x726168732e74730a,0x5b203233752e6465,0x3034332b336c7225\n"
".quad 0x3b32347225202c5d,0x3436732e6464610a,0x202c35316c722520,0x25202c34316c7225\n"
".quad 0x6f6c2e0a3b396c72,0x2030303520332063,0x6f6c672e646c0a31,0x203233752e6c6162\n"
".quad 0x255b202c35347225,0x730a3b5d35316c72,0x6465726168732e74,0x72255b203233752e\n"
".quad 0x2c5d3830342b336c,0x610a3b3534722520,0x25203436732e6464,0x7225202c36316c72\n"
".quad 0x6c7225202c35316c,0x20636f6c2e0a3b39,0x0a31203030352033,0x61626f6c672e646c\n"
".quad 0x7225203233752e6c,0x6c72255b202c3834,0x2e74730a3b5d3631,0x752e646572616873\n"
".quad 0x336c72255b203233,0x25202c5d3637342b,0x42420a0a3b383472,0x6c2e0a3a325f3131\n"
".quad 0x333035203320636f,0x732e7261620a3120,0x2e0a3b3020636e79,0x3035203320636f6c\n"
".quad 0x2e7476630a312034,0x203233732e343673,0x25202c37316c7225,0x2e7476630a3b3472\n"
".quad 0x203233732e343673,0x25202c38316c7225,0x2e6464610a3b3572,0x316c722520343673\n"
".quad 0x37316c7225202c39,0x3b38316c7225202c,0x3436622e6c68730a,0x202c30326c722520\n"
".quad 0x31202c39316c7225,0x36732e6464610a3b,0x2c32326c72252034,0x25202c386c722520\n"
".quad 0x6c2e0a3b30326c72,0x393832203320636f,0x68732e646c0a3120,0x3631732e64657261\n"
".quad 0x5b202c3135722520,0x0a3b5d32326c7225,0x32203320636f6c2e,0x2e646c0a31203739\n"
".quad 0x732e646572616873,0x2c33357225203631,0x2b32326c72255b20,0x6c2e0a3b5d323732\n"
".quad 0x353033203320636f,0x732e6464610a3120,0x2c35357225203233,0x25202c3335722520\n"
".quad 0x766f6d0a3b313572,0x357225203233752e,0x3037313332202c36,0x3420636f6c2e0a3b\n"
".quad 0x6d0a352034393220,0x2e6f6c2e34326c75,0x3735722520323373,0x202c35357225202c\n"
".quad 0x6c2e0a3b36357225,0x363033203320636f,0x732e6275730a3120,0x2c38357225203233\n"
".quad 0x25202c3135722520,0x6f6c2e0a3b333572,0x2034393220342063,0x2e34326c756d0a35\n"
".quad 0x25203233732e6f6c,0x357225202c393572,0x3b36357225202c38,0x3233752e766f6d0a\n"
".quad 0x31202c3036722520,0x6c2e0a3b30343532,0x333932203320636f,0x68732e646c0a3120\n"
".quad 0x3631732e64657261,0x5b202c3136722520,0x33312b32326c7225,0x636f6c2e0a3b5d36\n"
".quad 0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f,0x31367225202c3336\n"
".quad 0x0a3b30367225202c,0x203233752e766f6d,0x3033202c34367225,0x6f6c2e0a3b343732\n"
".quad 0x2031303320332063,0x6168732e646c0a31,0x203631732e646572,0x255b202c35367225\n"
".quad 0x3830342b32326c72,0x20636f6c2e0a3b5d,0x0a35203439322034,0x6f6c2e34326c756d\n"
".quad 0x367225203233732e,0x2c35367225202c37,0x2e0a3b3436722520,0x3033203320636f6c\n"
".quad 0x2e6275730a312037,0x3836722520323373,0x202c33367225202c,0x6c2e0a3b37367225\n"
".quad 0x343932203420636f,0x34326c756d0a3520,0x203233732e6f6c2e,0x7225202c39367225\n"
".quad 0x30367225202c3536,0x2e34326c756d0a3b,0x25203233732e6f6c,0x367225202c303772\n"
".quad 0x3b34367225202c31,0x203320636f6c2e0a,0x64610a3120383033,0x7225203233732e64\n"
".quad 0x30377225202c3137,0x0a3b39367225202c,0x33203320636f6c2e,0x6464610a31203031\n"
".quad 0x377225203233732e,0x2c31377225202c32,0x2e0a3b3735722520,0x3133203320636f6c\n"
".quad 0x2e6464610a312031,0x3337722520323373,0x202c38367225202c,0x6c2e0a3b39357225\n"
".quad 0x323133203320636f,0x732e6275730a3120,0x2c34377225203233,0x25202c3935722520\n"
".quad 0x6f6c2e0a3b383672,0x2033313320332063,0x33732e6275730a31,0x202c353772252032\n"
".quad 0x7225202c37357225,0x636f6c2e0a3b3137,0x3120353932203320,0x726168732e646c0a\n"
".quad 0x25203631732e6465,0x72255b202c363772,0x5d3430322b32326c,0x3320636f6c2e0a3b\n"
".quad 0x6c0a312039393220,0x6465726168732e64,0x377225203631732e,0x326c72255b202c38\n"
".quad 0x0a3b5d3034332b32,0x33203320636f6c2e,0x6464610a31203531,0x387225203233732e\n"
".quad 0x2c38377225202c30,0x2e0a3b3637722520,0x3932203420636f6c,0x326c756d0a352034\n"
".quad 0x3233732e6f6c2e34,0x25202c3138722520,0x357225202c303872,0x20636f6c2e0a3b36\n"
".quad 0x0a31203531332033,0x203233732e646461,0x7225202c32387225,0x36393034202c3138\n"
".quad 0x33732e7268730a3b,0x202c333872252032,0x3331202c32387225,0x3320636f6c2e0a3b\n"
".quad 0x730a312036313320,0x25203233732e6275,0x377225202c343872,0x3b38377225202c36\n"
".quad 0x203420636f6c2e0a,0x756d0a3520343932,0x732e6f6c2e34326c,0x2c35387225203233\n"
".quad 0x25202c3438722520,0x6f6c2e0a3b363572,0x2036313320332063,0x33732e6464610a31\n"
".quad 0x202c363872252032,0x3034202c35387225,0x2e7268730a3b3639,0x3738722520323373\n"
".quad 0x202c36387225202c,0x636f6c2e0a3b3331,0x3120313932203320,0x726168732e646c0a\n"
".quad 0x25203631732e6465,0x72255b202c383872,0x3b5d38362b32326c,0x203320636f6c2e0a\n"
".quad 0x68730a3120383133,0x7225203233622e6c,0x38387225202c3039,0x6f6c2e0a3b32202c\n"
".quad 0x2033303320332063,0x6168732e646c0a31,0x203631732e646572,0x255b202c31397225\n"
".quad 0x3637342b32326c72,0x20636f6c2e0a3b5d,0x0a31203931332033,0x203233622e6c6873\n"
".quad 0x7225202c33397225,0x2e0a3b32202c3139,0x3233203320636f6c,0x2e6464610a312031\n"
".quad 0x3439722520323373,0x202c33387225202c,0x6c2e0a3b30397225,0x323233203320636f\n"
".quad 0x732e6464610a3120,0x2c35397225203233,0x25202c3738722520,0x6f6c2e0a3b333972\n"
".quad 0x2033323320332063,0x33732e6275730a31,0x202c363972252032,0x7225202c30397225\n"
".quad 0x636f6c2e0a3b3338,0x3120343233203320,0x3233732e6275730a,0x25202c3739722520\n"
".quad 0x387225202c333972,0x752e766f6d0a3b37,0x2c38397225203233,0x2e0a3b3533303820\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x25202c3939722520\n"
".quad 0x397225202c343972,0x752e766f6d0a3b38,0x3030317225203233,0x0a3b38393531202c\n"
".quad 0x32203420636f6c2e,0x6c756d0a35203439,0x33732e6f6c2e3432,0x2c31303172252032\n"
".quad 0x25202c3539722520,0x6c2e0a3b30303172,0x363233203320636f,0x732e6464610a3120\n"
".quad 0x3230317225203233,0x2c3130317225202c,0x2e0a3b3939722520,0x3932203420636f6c\n"
".quad 0x326c756d0a352034,0x3233732e6f6c2e34,0x202c333031722520,0x7225202c34397225\n"
".quad 0x6c756d0a3b303031,0x33732e6f6c2e3432,0x2c34303172252032,0x25202c3539722520\n"
".quad 0x6f6c2e0a3b383972,0x2037323320332063,0x33732e6275730a31,0x2c35303172252032\n"
".quad 0x202c333031722520,0x6d0a3b3430317225,0x25203233752e766f,0x3534202c36303172\n"
".quad 0x636f6c2e0a3b3135,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x397225202c373031,0x3630317225202c36,0x33752e766f6d0a3b,0x2c38303172252032\n"
".quad 0x2e0a3b3131383620,0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34\n"
".quad 0x202c393031722520,0x7225202c37397225,0x6f6c2e0a3b383031,0x2038323320332063\n"
".quad 0x33732e6464610a31,0x2c30313172252032,0x202c393031722520,0x2e0a3b3730317225\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x202c313131722520\n"
".quad 0x7225202c36397225,0x6c756d0a3b383031,0x33732e6f6c2e3432,0x2c32313172252032\n"
".quad 0x25202c3739722520,0x6c2e0a3b36303172,0x393233203320636f,0x732e6275730a3120\n"
".quad 0x3331317225203233,0x2c3131317225202c,0x0a3b323131722520,0x33203320636f6c2e\n"
".quad 0x6464610a31203233,0x317225203233732e,0x32377225202c3431,0x3b3836373233202c\n"
".quad 0x3233732e6464610a,0x202c353131722520,0x25202c3431317225,0x68730a3b32303172\n"
".quad 0x7225203233752e72,0x317225202c363131,0x0a3b3631202c3531,0x33203320636f6c2e\n"
".quad 0x2e74730a31203233,0x752e646572616873,0x326c72255b203631,0x31317225202c5d32\n"
".quad 0x20636f6c2e0a3b36,0x0a31203433332033,0x203233732e646461,0x25202c3831317225\n"
".quad 0x373233202c333772,0x2e6464610a3b3836,0x3131722520323373,0x3831317225202c39\n"
".quad 0x3b3331317225202c,0x3233752e7268730a,0x202c303231722520,0x31202c3931317225\n"
".quad 0x20636f6c2e0a3b36,0x0a31203433332033,0x65726168732e7473,0x255b203631752e64\n"
".quad 0x5d38362b32326c72,0x3b3032317225202c,0x203320636f6c2e0a,0x64610a3120363333\n"
".quad 0x7225203233732e64,0x377225202c323231,0x3836373233202c34,0x33732e6464610a3b\n"
".quad 0x2c33323172252032,0x202c323231722520,0x730a3b3031317225,0x25203233752e7268\n"
".quad 0x7225202c34323172,0x3b3631202c333231,0x203320636f6c2e0a,0x74730a3120363333\n"
".quad 0x2e6465726168732e,0x6c72255b20363175,0x2c5d3633312b3232,0x0a3b343231722520\n"
".quad 0x33203320636f6c2e,0x6464610a31203833,0x317225203233732e,0x35377225202c3632\n"
".quad 0x3b3836373233202c,0x3233732e6464610a,0x202c373231722520,0x25202c3632317225\n"
".quad 0x68730a3b35303172,0x7225203233752e72,0x317225202c383231,0x0a3b3631202c3732\n"
".quad 0x33203320636f6c2e,0x2e74730a31203833,0x752e646572616873,0x326c72255b203631\n"
".quad 0x202c5d3430322b32,0x730a3b3832317225,0x25203233732e6275,0x7225202c30333172\n"
".quad 0x317225202c363231,0x2e7268730a3b3530,0x3331722520323375,0x3033317225202c31\n"
".quad 0x6c2e0a3b3631202c,0x303433203320636f,0x68732e74730a3120,0x3631752e64657261\n"
".quad 0x2b32326c72255b20,0x7225202c5d323732,0x6275730a3b313331,0x317225203233732e\n"
".quad 0x32317225202c3333,0x3031317225202c32,0x33752e7268730a3b,0x2c34333172252032\n"
".quad 0x202c333331722520,0x636f6c2e0a3b3631,0x3120323433203320,0x726168732e74730a\n"
".quad 0x5b203631752e6465,0x34332b32326c7225,0x33317225202c5d30,0x732e6275730a3b34\n"
".quad 0x3633317225203233,0x2c3831317225202c,0x0a3b333131722520,0x203233752e726873\n"
".quad 0x25202c3733317225,0x3631202c36333172,0x3320636f6c2e0a3b,0x730a312034343320\n"
".quad 0x6465726168732e74,0x72255b203631752e,0x5d3830342b32326c,0x3b3733317225202c\n"
".quad 0x3233732e6275730a,0x202c393331722520,0x25202c3431317225,0x68730a3b32303172\n"
".quad 0x7225203233752e72,0x317225202c303431,0x0a3b3631202c3933,0x33203320636f6c2e\n"
".quad 0x2e74730a31203634,0x752e646572616873,0x326c72255b203631,0x202c5d3637342b32\n"
".quad 0x2e0a3b3034317225,0x3035203320636f6c,0x2e7261620a312035,0x0a3b3020636e7973\n"
".quad 0x35203320636f6c2e,0x6c756d0a31203630,0x203233732e6f6c2e,0x25202c3234317225\n"
".quad 0x0a3b3433202c3272,0x2e3436732e747663,0x326c722520323373,0x3234317225202c33\n"
".quad 0x36732e7476630a3b,0x7225203233732e34,0x337225202c34326c,0x36732e6464610a3b\n"
".quad 0x2c35326c72252034,0x202c33326c722520,0x730a3b34326c7225,0x25203436622e6c68\n"
".quad 0x7225202c36326c72,0x0a3b31202c35326c,0x203436732e646461,0x25202c38326c7225\n"
".quad 0x6c7225202c386c72,0x636f6c2e0a3b3632,0x3120383633203320,0x726168732e646c0a\n"
".quad 0x25203233752e6465,0x255b202c33343172,0x2e0a3b5d38326c72,0x3633203320636f6c\n"
".quad 0x732e646c0a312039,0x33752e6465726168,0x2c35343172252032,0x2b38326c72255b20\n"
".quad 0x2e7268730a3b5d34,0x3431722520323373,0x3534317225202c37,0x6c2e0a3b3631202c\n"
".quad 0x303733203320636f,0x68732e646c0a3120,0x3233752e64657261,0x202c383431722520\n"
".quad 0x382b38326c72255b,0x732e7268730a3b5d,0x3035317225203233,0x2c3834317225202c\n"
".quad 0x6f6c2e0a3b363120,0x2031373320332063,0x6168732e646c0a31,0x203233752e646572\n"
".quad 0x5b202c3135317225,0x32312b38326c7225,0x622e6c68730a3b5d,0x3335317225203233\n"
".quad 0x2c3334317225202c,0x7268730a3b363120,0x317225203233732e,0x35317225202c3435\n"
".quad 0x730a3b3631202c33,0x25203233622e6c68,0x7225202c35353172,0x3b3631202c383431\n"
".quad 0x3233732e7268730a,0x202c363531722520,0x31202c3535317225,0x20636f6c2e0a3b36\n"
".quad 0x0a31203138332033,0x203233732e646461,0x25202c3735317225,0x7225202c36353172\n"
".quad 0x6f6c2e0a3b343531,0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c\n"
".quad 0x7225202c39353172,0x357225202c373531,0x20636f6c2e0a3b36,0x0a31203238332033\n"
".quad 0x203233732e627573,0x25202c3036317225,0x7225202c34353172,0x6f6c2e0a3b363531\n"
".quad 0x2034393220342063,0x2e34326c756d0a35,0x25203233732e6f6c,0x7225202c31363172\n"
".quad 0x357225202c303631,0x622e6c68730a3b36,0x3336317225203233,0x2c3534317225202c\n"
".quad 0x7268730a3b363120,0x317225203233732e,0x36317225202c3436,0x2e0a3b3631202c33\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x202c353631722520\n"
".quad 0x25202c3436317225,0x6c68730a3b303672,0x317225203233622e,0x35317225202c3736\n"
".quad 0x730a3b3631202c31,0x25203233732e7268,0x7225202c38363172,0x3b3631202c373631\n"
".quad 0x203420636f6c2e0a,0x756d0a3520343932,0x732e6f6c2e34326c,0x3936317225203233\n"
".quad 0x2c3836317225202c,0x2e0a3b3436722520,0x3833203320636f6c,0x2e6275730a312033\n"
".quad 0x3731722520323373,0x3536317225202c30,0x3b3936317225202c,0x203420636f6c2e0a\n"
".quad 0x756d0a3520343932,0x732e6f6c2e34326c,0x3137317225203233,0x2c3836317225202c\n"
".quad 0x6d0a3b3036722520,0x2e6f6c2e34326c75,0x3731722520323373,0x3436317225202c32\n"
".quad 0x0a3b34367225202c,0x33203320636f6c2e,0x6464610a31203438,0x317225203233732e\n"
".quad 0x37317225202c3337,0x3137317225202c32,0x3320636f6c2e0a3b,0x610a312036383320\n"
".quad 0x25203233732e6464,0x7225202c34373172,0x317225202c333731,0x636f6c2e0a3b3935\n"
".quad 0x3120373833203320,0x3233732e6464610a,0x202c353731722520,0x25202c3037317225\n"
".quad 0x6c2e0a3b31363172,0x383833203320636f,0x732e6275730a3120,0x3637317225203233\n"
".quad 0x2c3136317225202c,0x0a3b303731722520,0x33203320636f6c2e,0x6275730a31203938\n"
".quad 0x317225203233732e,0x35317225202c3737,0x3337317225202c39,0x3320636f6c2e0a3b\n"
".quad 0x610a312031393320,0x25203233732e6464,0x7225202c38373172,0x317225202c303531\n"
".quad 0x636f6c2e0a3b3734,0x3520343932203420,0x6c2e34326c756d0a,0x7225203233732e6f\n"
".quad 0x317225202c393731,0x36357225202c3837,0x3320636f6c2e0a3b,0x610a312031393320\n"
".quad 0x25203233732e6464,0x7225202c30383172,0x393034202c393731,0x732e7268730a3b36\n"
".quad 0x3138317225203233,0x2c3038317225202c,0x6f6c2e0a3b333120,0x2032393320332063\n"
".quad 0x33732e6275730a31,0x2c32383172252032,0x202c373431722520,0x2e0a3b3035317225\n"
".quad 0x3932203420636f6c,0x326c756d0a352034,0x3233732e6f6c2e34,0x202c333831722520\n"
".quad 0x25202c3238317225,0x6f6c2e0a3b363572,0x2032393320332063,0x33732e6464610a31\n"
".quad 0x2c34383172252032,0x202c333831722520,0x68730a3b36393034,0x7225203233732e72\n"
".quad 0x317225202c353831,0x0a3b3331202c3438,0x203233732e726873,0x25202c3638317225\n"
".quad 0x3431202c33343172,0x33622e646e610a3b,0x2c37383172252032,0x202c363831722520\n"
".quad 0x2e7268730a3b342d,0x3831722520323373,0x3135317225202c38,0x6e610a3b3431202c\n"
".quad 0x7225203233622e64,0x317225202c393831,0x0a3b342d202c3838,0x33203320636f6c2e\n"
".quad 0x6464610a31203739,0x317225203233732e,0x38317225202c3039,0x3738317225202c31\n"
".quad 0x3320636f6c2e0a3b,0x610a312038393320,0x25203233732e6464,0x7225202c31393172\n"
".quad 0x317225202c353831,0x636f6c2e0a3b3938,0x3120393933203320,0x3233732e6275730a\n"
".quad 0x202c323931722520,0x25202c3738317225,0x6c2e0a3b31383172,0x303034203320636f\n"
".quad 0x732e6275730a3120,0x3339317225203233,0x2c3938317225202c,0x0a3b353831722520\n"
".quad 0x32203420636f6c2e,0x6c756d0a35203439,0x33732e6f6c2e3432,0x2c35393172252032\n"
".quad 0x202c303931722520,0x756d0a3b38397225,0x732e6f6c2e34326c,0x3739317225203233\n"
".quad 0x2c3139317225202c,0x0a3b303031722520,0x34203320636f6c2e,0x6464610a31203230\n"
".quad 0x317225203233732e,0x39317225202c3839,0x3539317225202c37,0x3420636f6c2e0a3b\n"
".quad 0x6d0a352034393220,0x2e6f6c2e34326c75,0x3931722520323373,0x3039317225202c39\n"
".quad 0x3b3030317225202c,0x6c2e34326c756d0a,0x7225203233732e6f,0x317225202c303032\n"
".quad 0x38397225202c3139,0x3320636f6c2e0a3b,0x730a312033303420,0x25203233732e6275\n"
".quad 0x7225202c31303272,0x327225202c393931,0x636f6c2e0a3b3030,0x3520343932203420\n"
".quad 0x6c2e34326c756d0a,0x7225203233732e6f,0x317225202c333032,0x30317225202c3239\n"
".quad 0x34326c756d0a3b36,0x203233732e6f6c2e,0x25202c3530327225,0x7225202c33393172\n"
".quad 0x6f6c2e0a3b383031,0x2034303420332063,0x33732e6464610a31,0x2c36303272252032\n"
".quad 0x202c353032722520,0x2e0a3b3330327225,0x3932203420636f6c,0x326c756d0a352034\n"
".quad 0x3233732e6f6c2e34,0x202c373032722520,0x25202c3239317225,0x756d0a3b38303172\n"
".quad 0x732e6f6c2e34326c,0x3830327225203233,0x2c3339317225202c,0x0a3b363031722520\n"
".quad 0x34203320636f6c2e,0x6275730a31203530,0x327225203233732e,0x30327225202c3930\n"
".quad 0x3830327225202c37,0x3320636f6c2e0a3b,0x610a312037303420,0x25203233732e6464\n"
".quad 0x7225202c30313272,0x373233202c343731,0x2e6464610a3b3836,0x3132722520323373\n"
".quad 0x3031327225202c31,0x3b3839317225202c,0x3233752e7268730a,0x202c323132722520\n"
".quad 0x31202c3131327225,0x20636f6c2e0a3b36,0x0a31203830342033,0x203233732e646461\n"
".quad 0x25202c3331327225,0x3233202c35373172,0x6464610a3b383637,0x327225203233732e\n"
".quad 0x31327225202c3431,0x3930327225202c33,0x33622e646e610a3b,0x2c35313272252032\n"
".quad 0x202c343132722520,0x0a3b36333535362d,0x25203233622e726f,0x7225202c36313272\n"
".quad 0x327225202c353132,0x636f6c2e0a3b3231,0x3120393034203320,0x3233732e6464610a\n"
".quad 0x202c373132722520,0x33202c3637317225,0x64610a3b38363732,0x7225203233732e64\n"
".quad 0x327225202c383132,0x30327225202c3731,0x752e7268730a3b36,0x3931327225203233\n"
".quad 0x2c3831327225202c,0x6f6c2e0a3b363120,0x2030313420332063,0x33732e6464610a31\n"
".quad 0x2c30323272252032,0x202c373731722520,0x610a3b3836373233,0x25203233732e6464\n"
".quad 0x7225202c31323272,0x327225202c303232,0x2e646e610a3b3130,0x3232722520323362\n"
".quad 0x3132327225202c32,0x36333535362d202c,0x3233622e726f0a3b,0x202c333232722520\n"
".quad 0x25202c3931327225,0x75730a3b32323272,0x7225203233732e62,0x327225202c343232\n"
".quad 0x30327225202c3032,0x752e7268730a3b31,0x3532327225203233,0x2c3432327225202c\n"
".quad 0x6275730a3b363120,0x327225203233732e,0x31327225202c3632,0x3630327225202c37\n"
".quad 0x33622e646e610a3b,0x2c37323272252032,0x202c363232722520,0x0a3b36333535362d\n"
".quad 0x25203233622e726f,0x7225202c38323272,0x327225202c373232,0x2e6275730a3b3532\n"
".quad 0x3232722520323373,0x3331327225202c39,0x3b3930327225202c,0x3233752e7268730a\n"
".quad 0x202c303332722520,0x31202c3932327225,0x732e6275730a3b36,0x3133327225203233\n"
".quad 0x2c3031327225202c,0x0a3b383931722520,0x203233622e646e61,0x25202c3233327225\n"
".quad 0x362d202c31333272,0x726f0a3b36333535,0x327225203233622e,0x33327225202c3333\n"
".quad 0x3233327225202c30,0x3320636f6c2e0a3b,0x730a312036313420,0x6465726168732e74\n"
".quad 0x72255b203233752e,0x7225202c5d38326c,0x6f6c2e0a3b363132,0x2037313420332063\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x342b38326c72255b,0x3332327225202c5d\n"
".quad 0x3320636f6c2e0a3b,0x730a312038313420,0x6465726168732e74,0x72255b203233752e\n"
".quad 0x202c5d382b38326c,0x2e0a3b3832327225,0x3134203320636f6c,0x732e74730a312039\n"
".quad 0x33752e6465726168,0x38326c72255b2032,0x7225202c5d32312b,0x6f6c2e0a3b333332\n"
".quad 0x2037303520332063,0x79732e7261620a31,0x6c2e0a3b3020636e,0x303135203320636f\n"
".quad 0x20317025400a3120,0x3131424220617262,0x6f6c2e0a0a3b345f,0x2035313520332063\n"
".quad 0x0a0a3b7465720a32,0x0a3a345f31314242,0x35203320636f6c2e,0x2e646c0a31203331\n"
".quad 0x752e646572616873,0x3833327225203233,0x5d336c72255b202c,0x6f6c672e74730a3b\n"
".quad 0x203233752e6c6162,0x202c5d326c72255b,0x6c0a3b3833327225,0x2e6d617261702e64\n"
".quad 0x3632722520323375,0x39315a5f5b202c35,0x6e72656b41445543,0x4974726f68536c65\n"
".quad 0x705f697350544344,0x3b5d315f6d617261,0x203320636f6c2e0a,0x68730a3120333135\n"
".quad 0x7225203233752e72,0x327225202c313432,0x0a3b3133202c3536,0x203233732e646461\n"
".quad 0x25202c3234327225,0x7225202c35363272,0x7268730a3b313432,0x327225203233732e\n"
".quad 0x34327225202c3334,0x756d0a3b31202c32,0x732e656469772e6c,0x39326c7225203233\n"
".quad 0x2c3334327225202c,0x2e6464610a3b3420,0x336c722520343673,0x2c326c7225202c30\n"
".quad 0x0a3b39326c722520,0x35203320636f6c2e,0x2e646c0a31203331,0x752e646572616873\n"
".quad 0x3434327225203233,0x2b336c72255b202c,0x2e74730a3b5d3836,0x752e6c61626f6c67\n"
".quad 0x336c72255b203233,0x34327225202c5d30,0x732e6464610a3b34,0x31336c7225203436\n"
".quad 0x2c30336c7225202c,0x0a3b39326c722520,0x35203320636f6c2e,0x2e646c0a31203331\n"
".quad 0x752e646572616873,0x3734327225203233,0x2b336c72255b202c,0x74730a3b5d363331\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323375,0x327225202c5d3133,0x2e6464610a3b3734\n"
".quad 0x336c722520343673,0x31336c7225202c32,0x3b39326c7225202c,0x203320636f6c2e0a\n"
".quad 0x646c0a3120333135,0x2e6465726168732e,0x3532722520323375,0x336c72255b202c30\n"
".quad 0x730a3b5d3430322b,0x6c61626f6c672e74,0x72255b203233752e,0x7225202c5d32336c\n"
".quad 0x6464610a3b303532,0x6c7225203436732e,0x336c7225202c3333,0x39326c7225202c32\n"
".quad 0x3320636f6c2e0a3b,0x6c0a312033313520,0x6465726168732e64,0x327225203233752e\n"
".quad 0x6c72255b202c3335,0x0a3b5d3237322b33,0x61626f6c672e7473,0x255b203233752e6c\n"
".quad 0x25202c5d33336c72,0x64610a3b33353272,0x7225203436732e64,0x6c7225202c34336c\n"
".quad 0x326c7225202c3333,0x20636f6c2e0a3b39,0x0a31203331352033,0x65726168732e646c\n"
".quad 0x7225203233752e64,0x72255b202c363532,0x3b5d3034332b336c,0x626f6c672e74730a\n"
".quad 0x5b203233752e6c61,0x202c5d34336c7225,0x610a3b3635327225,0x25203436732e6464\n"
".quad 0x7225202c35336c72,0x6c7225202c34336c,0x636f6c2e0a3b3932,0x3120333135203320\n"
".quad 0x726168732e646c0a,0x25203233752e6465,0x255b202c39353272,0x5d3830342b336c72\n"
".quad 0x6f6c672e74730a3b,0x203233752e6c6162,0x2c5d35336c72255b,0x0a3b393532722520\n"
".quad 0x203436732e646461,0x25202c36336c7225,0x7225202c35336c72,0x6f6c2e0a3b39326c\n"
".quad 0x2033313520332063,0x6168732e646c0a31,0x203233752e646572,0x5b202c3236327225\n"
".quad 0x3637342b336c7225,0x6c672e74730a3b5d,0x3233752e6c61626f,0x5d36336c72255b20\n"
".quad 0x3b3236327225202c,0x203320636f6c2e0a,0x65720a3220353135,0x652e0a0a7d0a3b74\n"
".quad 0x325a5f207972746e,0x72656b4144554337,0x746e6175516c656e,0x466e6f6974617a69\n"
".quad 0x2869665074616f6c,0x206d617261702e0a,0x325a5f203436752e,0x72656b4144554337\n"
".quad 0x746e6175516c656e,0x466e6f6974617a69,0x5f69665074616f6c,0x2c305f6d61726170\n"
".quad 0x206d617261702e0a,0x325a5f203233752e,0x72656b4144554337,0x746e6175516c656e\n"
".quad 0x466e6f6974617a69,0x5f69665074616f6c,0x0a315f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x6625203233662e20,0x722e0a3b3e33313c,0x203631732e206765,0x0a3b3e323c737225\n"
".quad 0x72702e206765722e,0x3e333c7025206465,0x2e206765722e0a3b,0x313c722520323373\n"
".quad 0x6765722e0a3b3e39,0x7225203436732e20,0x0a0a0a3b3e383c6c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x37325a5f5b202c32,0x6e72656b41445543,0x69746e6175516c65\n"
".quad 0x6c466e6f6974617a,0x705f69665074616f,0x3b5d305f6d617261,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x37325a5f5b202c31,0x6e72656b41445543,0x69746e6175516c65\n"
".quad 0x6c466e6f6974617a,0x705f69665074616f,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x336c722520343675,0x0a3b326c7225202c,0x35203620636f6c2e\n"
".quad 0x2e766f6d0a312035,0x2c32722520323375,0x2e64696174632520,0x622e6c68730a3b79\n"
".quad 0x202c337225203233,0x0a3b33202c327225,0x35203620636f6c2e,0x2e766f6d0a312039\n"
".quad 0x2c34722520323375,0x3b792e6469742520,0x203620636f6c2e0a,0x6464610a31203236\n"
".quad 0x357225203233732e,0x25202c347225202c,0x636f6c2e0a3b3372,0x0a31203435203620\n"
".quad 0x203233752e766f6d,0x746325202c367225,0x730a3b782e646961,0x25203233622e6c68\n"
".quad 0x2c367225202c3772,0x636f6c2e0a3b3320,0x0a31203835203620,0x203233752e766f6d\n"
".quad 0x697425202c387225,0x6f6c2e0a3b782e64,0x3120323620362063,0x3233732e6464610a\n"
".quad 0x7225202c39722520,0x0a3b377225202c38,0x732e6f6c2e64616d,0x2c30317225203233\n"
".quad 0x7225202c35722520,0x0a3b397225202c31,0x656469772e6c756d,0x6c7225203233732e\n"
".quad 0x2c30317225202c34,0x2e6464610a3b3420,0x316c722520343673,0x202c336c7225202c\n"
".quad 0x68730a3b346c7225,0x7225203233622e6c,0x2c347225202c3131,0x636f6c2e0a3b3320\n"
".quad 0x0a31203336203620,0x203233732e646461,0x7225202c32317225,0x3b387225202c3131\n"
".quad 0x6469772e6c756d0a,0x7225203233732e65,0x32317225202c356c,0x766f6d0a3b32202c\n"
".quad 0x6c7225203436752e,0x64610a3b51202c36,0x7225203436732e64,0x366c7225202c376c\n"
".quad 0x0a3b356c7225202c,0x36203620636f6c2e,0x632e646c0a312033,0x3631752e74736e6f\n"
".quad 0x5b202c3173722520,0x630a3b5d376c7225,0x33662e6e722e7476,0x6625203631732e32\n"
".quad 0x3b31737225202c31,0x203620636f6c2e0a,0x2e646c0a31203236,0x662e6c61626f6c67\n"
".quad 0x202c366625203233,0x0a3b5d316c72255b,0x31203720636f6c2e,0x69640a3320313133\n"
".quad 0x3233662e6e722e76,0x6625202c32662520,0x0a3b316625202c36,0x33203420636f6c2e\n"
".quad 0x7362610a35203539,0x376625203233662e,0x2e0a3b326625202c,0x3731203420636f6c\n"
".quad 0x766f6d0a35203538,0x317225203233622e,0x0a3b326625202c35,0x35203820636f6c2e\n"
".quad 0x6e610a3320383833,0x7225203233622e64,0x35317225202c3631,0x34373431322d202c\n"
".quad 0x6f0a3b3834363338,0x7225203233622e72,0x36317225202c3731,0x363936353031202c\n"
".quad 0x6c2e0a3b38303634,0x373731203420636f,0x2e766f6d0a352038,0x2c38662520323362\n"
".quad 0x2e0a3b3731722520,0x3335203820636f6c,0x6464610a33203938,0x396625203233662e\n"
".quad 0x25202c326625202c,0x636f6c2e0a3b3866,0x3520343036203420,0x697a722e7476630a\n"
".quad 0x3233662e3233662e,0x25202c3031662520,0x636f6c2e0a3b3966,0x2030393335203820\n"
".quad 0x672e707465730a33,0x7025203233662e74,0x202c376625202c31,0x3030303042346630\n"
".quad 0x706c65730a3b3030,0x316625203233662e,0x202c326625202c32,0x7025202c30316625\n"
".quad 0x20636f6c2e0a3b31,0x3320313933352038,0x746c2e707465730a,0x327025203233662e\n"
".quad 0x30202c376625202c,0x3030303030463366,0x20327025400a3b30,0x3231424220617262\n"
".quad 0x2e6172620a3b315f,0x3231424220696e75,0x3142420a0a3b325f,0x6f6c2e0a3a315f32\n"
".quad 0x2034303620342063,0x7a722e7476630a35,0x33662e3233662e69,0x202c323166252032\n"
".quad 0x42420a0a3b326625,0x6c2e0a3a325f3231,0x203736203620636f,0x33662e6c756d0a31\n"
".quad 0x202c313166252032,0x6625202c32316625,0x20636f6c2e0a3b31,0x730a312030372036\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x316625202c5d316c,0x20636f6c2e0a3b31\n"
".quad 0x720a322031372036,0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x656b414455433732\n"
".quad 0x6e6175516c656e72,0x6e6f6974617a6974,0x69735074726f6853,0x6d617261702e0a28\n"
".quad 0x5a5f203436752e20,0x656b414455433732,0x6e6175516c656e72,0x6e6f6974617a6974\n"
".quad 0x69735074726f6853,0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203233752e20\n"
".quad 0x656b414455433732,0x6e6175516c656e72,0x6e6f6974617a6974,0x69735074726f6853\n"
".quad 0x315f6d617261705f,0x65722e0a7b0a290a,0x25203631732e2067,0x2e0a3b3e393c7372\n"
".quad 0x6572702e20676572,0x3b3e323c70252064,0x732e206765722e0a,0x31333c7225203233\n"
".quad 0x206765722e0a3b3e,0x6c7225203436732e,0x6c0a0a0a3b3e383c,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x4337325a5f5b202c,0x656e72656b414455,0x7a69746e6175516c\n"
".quad 0x6f68536e6f697461,0x61705f6973507472,0x0a3b5d305f6d6172,0x6d617261702e646c\n"
".quad 0x317225203233752e,0x4337325a5f5b202c,0x656e72656b414455,0x7a69746e6175516c\n"
".quad 0x6f68536e6f697461,0x61705f6973507472,0x0a3b5d315f6d6172,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x2c336c7225203436,0x2e0a3b326c722520,0x3838203620636f6c\n"
".quad 0x752e766f6d0a3120,0x202c327225203233,0x792e646961746325,0x33622e6c68730a3b\n"
".quad 0x25202c3372252032,0x2e0a3b33202c3272,0x3239203620636f6c,0x752e766f6d0a3120\n"
".quad 0x202c347225203233,0x0a3b792e64697425,0x39203620636f6c2e,0x2e6464610a312035\n"
".quad 0x2c35722520323373,0x7225202c34722520,0x20636f6c2e0a3b33,0x6d0a312037382036\n"
".quad 0x25203233752e766f,0x61746325202c3672,0x68730a3b782e6469,0x7225203233622e6c\n"
".quad 0x202c367225202c37,0x20636f6c2e0a3b33,0x6d0a312031392036,0x25203233752e766f\n"
".quad 0x64697425202c3872,0x636f6c2e0a3b782e,0x0a31203539203620,0x203233732e646461\n"
".quad 0x387225202c397225,0x6d0a3b377225202c,0x33732e6f6c2e6461,0x202c303172252032\n"
".quad 0x317225202c357225,0x6d0a3b397225202c,0x2e656469772e6c75,0x346c722520323373\n"
".quad 0x202c30317225202c,0x732e6464610a3b32,0x2c316c7225203436,0x25202c336c722520\n"
".quad 0x6c68730a3b346c72,0x317225203233622e,0x202c347225202c31,0x20636f6c2e0a3b33\n"
".quad 0x610a312036392036,0x25203233732e6464,0x317225202c323172,0x0a3b387225202c31\n"
".quad 0x656469772e6c756d,0x6c7225203233732e,0x2c32317225202c35,0x2e766f6d0a3b3220\n"
".quad 0x366c722520343675,0x6464610a3b51202c,0x6c7225203436732e,0x2c366c7225202c37\n"
".quad 0x2e0a3b356c722520,0x3639203620636f6c,0x6f632e646c0a3120,0x203631752e74736e\n"
".quad 0x255b202c31737225,0x6c2e0a3b5d376c72,0x203539203620636f,0x6f6c672e646c0a31\n"
".quad 0x203631752e6c6162,0x255b202c32737225,0x65730a3b5d316c72,0x31732e746c2e7074\n"
".quad 0x25202c3170252036,0x0a3b30202c327372,0x39203620636f6c2e,0x317025400a312039\n"
".quad 0x3142422061726220,0x6c2e0a0a3b325f33,0x383031203620636f,0x732e7476630a3120\n"
".quad 0x25203631732e3233,0x737225202c353172,0x752e7268730a3b31,0x2c36317225203233\n"
".quad 0x31202c3531722520,0x33752e7476630a3b,0x7225203631752e32,0x32737225202c3731\n"
".quad 0x3620636f6c2e0a3b,0x610a312038303120,0x25203233732e6464,0x317225202c383172\n"
".quad 0x3b37317225202c36,0x3233622e6c68730a,0x25202c3931722520,0x3b3631202c383172\n"
".quad 0x3233732e7268730a,0x25202c3032722520,0x3b3631202c393172,0x203620636f6c2e0a\n"
".quad 0x69640a3120393031,0x7225203233732e76,0x30327225202c3132,0x0a3b35317225202c\n"
".quad 0x2e3631752e747663,0x3873722520323375,0x0a3b31327225202c,0x20696e752e617262\n"
".quad 0x0a3b335f33314242,0x3a325f333142420a,0x3631732e67656e0a,0x25202c3673722520\n"
".quad 0x6f6c2e0a3b327372,0x2032303120362063,0x33732e7476630a31,0x7225203631732e32\n"
".quad 0x31737225202c3232,0x33752e7268730a3b,0x202c333272252032,0x3b31202c32327225\n"
".quad 0x3233752e7476630a,0x327225203631752e,0x3b36737225202c34,0x203620636f6c2e0a\n"
".quad 0x64610a3120323031,0x7225203233732e64,0x33327225202c3532,0x0a3b34327225202c\n"
".quad 0x203233622e6c6873,0x7225202c36327225,0x0a3b3631202c3532,0x203233732e726873\n"
".quad 0x7225202c37327225,0x0a3b3631202c3632,0x31203620636f6c2e,0x7669640a31203330\n"
".quad 0x327225203233732e,0x2c37327225202c38,0x2e0a3b3232722520,0x3031203620636f6c\n"
".quad 0x2e67656e0a312034,0x3932722520323373,0x0a3b38327225202c,0x2e3631752e747663\n"
".quad 0x3873722520323375,0x0a3b39327225202c,0x3a335f333142420a,0x203620636f6c2e0a\n"
".quad 0x61620a3120313131,0x3020636e79732e72,0x6f6c2e6c756d0a3b,0x737225203631732e\n"
".quad 0x2c38737225202c37,0x2e0a3b3173722520,0x3131203620636f6c,0x672e74730a312036\n"
".quad 0x31752e6c61626f6c,0x5d316c72255b2036,0x0a3b37737225202c,0x31203620636f6c2e\n"
".quad 0x7465720a32203731,0x02000a0a0a7d0a3b,0x8c00000050010000,0x000000000000004b\n"
".quad 0x0400000000000000,0x3800000014000100,0x1500000016000000,0x0000000000000000\n"
".quad 0x7400000000000000,0x7463642f73747365,0x387463642f387838,0x7f000075632e3878\n"
".quad 0x0433010102464c45,0x0200000000000000,0x000000000100be00,0x0c00000000000000\n"
".quad 0x4000000000000048,0x1400000000000000,0x1000380040001405,0x0000010028004000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0100000000000000\n"
".quad 0x0000000003000000,0x0000000000000000,0x4000000000000000,0x4f0000000000000a\n"
".quad 0x0000000000000005,0x0400000000000000,0x0000000000000000,0x0b00000000000000\n"
".quad 0x0000000003000000,0x0000000000000000,0x8f00000000000000,0x300000000000000f\n"
".quad 0x0000000000000001,0x0100000000000000,0x0000000000000000,0x1300000000000000\n"
".quad 0x0000000002000000,0x0000000000000000,0xbf00000000000000,0x2800000000000010\n"
".quad 0x0200000000000005,0x010000002a000000,0x1800000000000000,0x2c00000000000000\n"
".quad 0x0600000001000002,0x0000000000001000,0xe700000000000000,0x6000000000000015\n"
".quad 0x0300000000000008,0x0416000015000000,0x0000000000000000,0x0d00000000000000\n"
".quad 0x0200000001000003,0x0000000000000000,0x4700000000000000,0x2c0000000000001e\n"
".quad 0x0000000000000000,0x0400000004000000,0x0000000000000000,0x4d00000000000000\n"
".quad 0x0200000001000002,0x0000000000000000,0x7300000000000000,0x3c0000000000001e\n"
".quad 0x0000000000000000,0x0100000004000000,0x0000000000000000,0xe700000000000000\n"
".quad 0x0300000008000002,0x0000000000000000,0xaf00000000000000,0x800000000000001e\n"
".quad 0x0000000000000008,0x0400000004000000,0x0000000000000000,0xeb00000000000000\n"
".quad 0x0600000001000001,0x0000000000001000,0xaf00000000000000,0x400000000000001e\n"
".quad 0x0300000000000002,0x0413000013000000,0x0000000000000000,0x1a00000000000000\n"
".quad 0x0200000001000005,0x0000000000000000,0xef00000000000000,0x3400000000000020\n"
".quad 0x0000000000000000,0x0400000008000000,0x0000000000000000,0x0a00000000000000\n"
".quad 0x0200000001000002,0x0000000000000000,0x2300000000000000,0x5c00000000000021\n"
".quad 0x0000000000000000,0x0100000008000000,0x0000000000000000,0xf600000000000000\n"
".quad 0x0300000008000004,0x0000000000000000,0x7f00000000000000,0x0000000000000021\n"
".quad 0x0000000000000002,0x0400000008000000,0x0000000000000000,0x9600000000000000\n"
".quad 0x0600000001000001,0x0000000000001000,0x7f00000000000000,0x9800000000000021\n"
".quad 0x0300000000000002,0x040a000011000000,0x0000000000000000,0xa600000000000000\n"
".quad 0x0200000001000003,0x0000000000000000,0x1700000000000000,0x2c00000000000024\n"
".quad 0x0000000000000000,0x040000000c000000,0x0000000000000000,0xbf00000000000000\n"
".quad 0x0200000001000001,0x0000000000000000,0x4300000000000000,0x3c00000000000024\n"
".quad 0x0000000000000000,0x010000000c000000,0x0000000000000000,0x5500000000000000\n"
".quad 0x0600000001000001,0x0000000000000000,0x7f00000000000000,0x3800000000000024\n"
".quad 0x0300000000000007,0x042200000f000000,0x0000000000000000,0xcf00000000000000\n"
".quad 0x0200000001000004,0x0000000000000000,0xb700000000000000,0x340000000000002b\n"
".quad 0x0000000000000000,0x040000000f000000,0x0000000000000000,0xa700000000000000\n"
".quad 0x0200000001000004,0x0000000000000000,0xeb00000000000000,0x140000000000002b\n"
".quad 0x0000000000000000,0x040000000f000000,0x0000000000000000,0x7400000000000000\n"
".quad 0x0200000001000001,0x0000000000000000,0xff00000000000000,0x400000000000002b\n"
".quad 0x0000000000000000,0x010000000f000000,0x0000000000000000,0x8300000000000000\n"
".quad 0x0300000008000004,0x0000000000000000,0x3f00000000000000,0x400000000000002c\n"
".quad 0x0000000000000008,0x040000000f000000,0x0000000000000000,0x1200000000000000\n"
".quad 0x0600000001000001,0x0000000000001000,0x3f00000000000000,0x800000000000002c\n"
".quad 0x0300000000000008,0x041600000d000000,0x0000000000000000,0xbf00000000000000\n"
".quad 0x0200000001000002,0x0000000000000000,0xbf00000000000000,0x2c00000000000034\n"
".quad 0x0000000000000000,0x0400000014000000,0x0000000000000000,0x9600000000000000\n"
".quad 0x0200000001000002,0x0000000000000000,0xeb00000000000000,0x0800000000000034\n"
".quad 0x0000000000000000,0x0400000014000000,0x0000000000000000,0x3200000000000000\n"
".quad 0x0200000001000001,0x0000000000000000,0xf300000000000000,0x3c00000000000034\n"
".quad 0x0000000000000000,0x0100000014000000,0x0000000000000000,0x7100000000000000\n"
".quad 0x0300000008000002,0x0000000000000000,0x2f00000000000000,0x8000000000000035\n"
".quad 0x0000000000000008,0x0400000014000000,0x0000000000000000,0xd300000000000000\n"
".quad 0x0600000001000000,0x0000000000001000,0x2f00000000000000,0xa000000000000035\n"
".quad 0x0300000000000002,0x040e00000b000000,0x0000000000000000,0xfa00000000000000\n"
".quad 0x0200000001000003,0x0000000000000000,0xcf00000000000000,0x3400000000000037\n"
".quad 0x0000000000000000,0x0400000019000000,0x0000000000000000,0xf100000000000000\n"
".quad 0x0200000001000000,0x0000000000000000,0x0300000000000000,0x5c00000000000038\n"
".quad 0x0000000000000000,0x0100000019000000,0x0000000000000000,0xd700000000000000\n"
".quad 0x0300000008000003,0x0000000000000000,0x5f00000000000000,0x0000000000000038\n"
".quad 0x0000000000000002,0x0400000019000000,0x0000000000000000,0x7e00000000000000\n"
".quad 0x0600000001000000,0x0000000000000000,0x5f00000000000000,0xf800000000000038\n"
".quad 0x0300000000000004,0x040d000009000000,0x0000000000000000,0x5200000000000000\n"
".quad 0x0200000001000004,0x0000000000000000,0x5700000000000000,0x2c0000000000003d\n"
".quad 0x0000000000000000,0x040000001d000000,0x0000000000000000,0x2000000000000000\n"
".quad 0x0200000001000004,0x0000000000000000,0x8300000000000000,0x080000000000003d\n"
".quad 0x0000000000000000,0x040000001d000000,0x0000000000000000,0xa700000000000000\n"
".quad 0x0200000001000000,0x0000000000000000,0x8b00000000000000,0x3c0000000000003d\n"
".quad 0x0000000000000000,0x010000001d000000,0x0000000000000000,0x3600000000000000\n"
".quad 0x0600000001000000,0x0000000000000000,0xc700000000000000,0x380000000000003d\n"
".quad 0x0300000000000007,0x0422000006000000,0x0000000000000000,0x8000000000000000\n"
".quad 0x0200000001000003,0x0000000000000000,0xff00000000000000,0x3400000000000044\n"
".quad 0x0000000000000000,0x0400000021000000,0x0000000000000000,0x5900000000000000\n"
".quad 0x0200000001000003,0x0000000000000000,0x3300000000000000,0x1400000000000045\n"
".quad 0x0000000000000000,0x0400000021000000,0x0000000000000000,0x5d00000000000000\n"
".quad 0x0200000001000000,0x0000000000000000,0x4700000000000000,0x4000000000000045\n"
".quad 0x0000000000000000,0x0100000021000000,0x0000000000000000,0x3600000000000000\n"
".quad 0x0300000008000003,0x0000000000000000,0x8700000000000000,0x4000000000000045\n"
".quad 0x0000000000000008,0x0400000021000000,0x0000000000000000,0x4100000000000000\n"
".quad 0x0200000001000005,0x0000000000000000,0x8700000000000000,0x8000000000000045\n"
".quad 0x0000000000000001,0x0400000000000000,0x0000000000000000,0x5400000000000000\n"
".quad 0x0200000001000000,0x0000000000000000,0x0700000000000000,0x0400000000000047\n"
".quad 0x0000000000000001,0x0100000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x617472747368732e,0x61747274732e0062,0x61746d79732e0062,0x6c672e766e2e0062\n"
".quad 0x696e692e6c61626f,0x6c672e766e2e0074,0x65742e006c61626f,0x4334315a5f2e7478\n"
".quad 0x656e72656b414455,0x536650544344326c,0x692e766e2e00695f,0x2e766e2e006f666e\n"
".quad 0x315a5f2e6f666e69,0x72656b4144554334,0x50544344326c656e,0x65742e00695f5366\n"
".quad 0x4337325a5f2e7478,0x656e72656b414455,0x7a69746e6175516c,0x6f6c466e6f697461\n"
".quad 0x6e2e006966507461,0x5f2e6f666e692e76,0x6b4144554337325a,0x6175516c656e7265\n"
".quad 0x6f6974617a69746e,0x665074616f6c466e,0x2e747865742e0069,0x4144554334315a5f\n"
".quad 0x44316c656e72656b,0x0069696966505443,0x6f666e692e766e2e,0x44554334315a5f2e\n"
".quad 0x316c656e72656b41,0x6969696650544344,0x5f2e747865742e00,0x6b4144554338315a\n"
".quad 0x6f68536c656e7265,0x6973505443447472,0x666e692e766e2e00,0x554338315a5f2e6f\n"
".quad 0x6c656e72656b4144,0x54434474726f6853,0x7865742e00697350,0x554335315a5f2e74\n"
".quad 0x6c656e72656b4144,0x5366505443444932,0x692e766e2e00695f,0x35315a5f2e6f666e\n"
".quad 0x6e72656b41445543,0x5054434449326c65,0x65742e00695f5366,0x4337325a5f2e7478\n"
".quad 0x656e72656b414455,0x7a69746e6175516c,0x6f68536e6f697461,0x6e2e006973507472\n"
".quad 0x5f2e6f666e692e76,0x6b4144554337325a,0x6175516c656e7265,0x6f6974617a69746e\n"
".quad 0x735074726f68536e,0x2e747865742e0069,0x4144554335315a5f,0x49316c656e72656b\n"
".quad 0x6969696650544344,0x666e692e766e2e00,0x554335315a5f2e6f,0x6c656e72656b4144\n"
".quad 0x6966505443444931,0x747865742e006969,0x44554339315a5f2e,0x536c656e72656b41\n"
".quad 0x5443444974726f68,0x2e766e2e00697350,0x315a5f2e6f666e69,0x72656b4144554339\n"
".quad 0x74726f68536c656e,0x0069735054434449,0x726168732e766e2e,0x4338315a5f2e6465\n"
".quad 0x656e72656b414455,0x434474726f68536c,0x766e2e0069735054,0x6e6174736e6f632e\n"
".quad 0x38315a5f2e363174,0x6e72656b41445543,0x4474726f68536c65,0x6e2e006973505443\n"
".quad 0x6174736e6f632e76,0x38315a5f2e30746e,0x6e72656b41445543,0x4474726f68536c65\n"
".quad 0x6e2e006973505443,0x6465726168732e76,0x44554339315a5f2e,0x536c656e72656b41\n"
".quad 0x5443444974726f68,0x2e766e2e00697350,0x746e6174736e6f63,0x554339315a5f2e30\n"
".quad 0x6c656e72656b4144,0x43444974726f6853,0x766e2e0069735054,0x2e6465726168732e\n"
".quad 0x4144554334315a5f,0x44326c656e72656b,0x00695f5366505443,0x736e6f632e766e2e\n"
".quad 0x5f2e3631746e6174,0x6b4144554334315a,0x4344326c656e7265,0x2e00695f53665054\n"
".quad 0x74736e6f632e766e,0x315a5f2e30746e61,0x72656b4144554334,0x50544344326c656e\n"
".quad 0x766e2e00695f5366,0x6e6174736e6f632e,0x4337325a5f2e3074,0x656e72656b414455\n"
".quad 0x7a69746e6175516c,0x6f68536e6f697461,0x6e2e006973507472,0x6465726168732e76\n"
".quad 0x44554334315a5f2e,0x316c656e72656b41,0x6969696650544344,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x6b4144554334315a,0x4344316c656e7265,0x2e00696969665054\n"
".quad 0x74736e6f632e766e,0x5a5f2e3631746e61,0x656b414455433732,0x6e6175516c656e72\n"
".quad 0x6e6f6974617a6974,0x69665074616f6c46,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x6b4144554337325a,0x6175516c656e7265,0x6f6974617a69746e,0x665074616f6c466e\n"
".quad 0x68732e766e2e0069,0x315a5f2e64657261,0x72656b4144554335,0x54434449326c656e\n"
".quad 0x6e2e00695f536650,0x6174736e6f632e76,0x315a5f2e3631746e,0x72656b4144554335\n"
".quad 0x54434449326c656e,0x6e2e00695f536650,0x6174736e6f632e76,0x35315a5f2e30746e\n"
".quad 0x6e72656b41445543,0x5054434449326c65,0x766e2e00695f5366,0x2e6465726168732e\n"
".quad 0x4144554335315a5f,0x49316c656e72656b,0x6969696650544344,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x6b4144554335315a,0x4449316c656e7265,0x0069696966505443\n"
".quad 0x736e6f632e766e2e,0x5f000032746e6174,0x6b4144554334315a,0x4344326c656e7265\n"
".quad 0x5f00695f53665054,0x6b4144554337325a,0x6175516c656e7265,0x6f6974617a69746e\n"
".quad 0x665074616f6c466e,0x616475635f5f0069,0x69645f30326d735f,0x3233665f6e725f76\n"
".quad 0x5f616475635f5f00,0x7669645f30326d73,0x74666f6e5f6e725f,0x6c735f3233665f7a\n"
".quad 0x5f0068746170776f,0x6b4144554334315a,0x4344316c656e7265,0x5f00696969665054\n"
".quad 0x6b4144554338315a,0x6f68536c656e7265,0x6973505443447472,0x44554335315a5f00\n"
".quad 0x326c656e72656b41,0x5f53665054434449,0x554337325a5f0069,0x6c656e72656b4144\n"
".quad 0x617a69746e617551,0x726f68536e6f6974,0x315a5f0069735074,0x72656b4144554335\n"
".quad 0x54434449316c656e,0x5a5f006969696650,0x656b414455433931,0x726f68536c656e72\n"
".quad 0x6973505443444974,0x0063725378655400,0x74616d3876544344,0x0000005100786972\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000100030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000200030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000300030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000030000,0x0000000000000000,0x0000000000000000,0x0000000000030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000002100030000,0x0738000000000000\n"
".quad 0x0000000000000000,0x0000002700030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000002400030000,0x0000000000000000,0x0000000000000000,0x0000001d00030000\n"
".quad 0x04f8000000000000,0x0000000000000000,0x0000002000030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000001900030000,0x02a0000000000000,0x0000000000000000\n"
".quad 0x0000001b00030000,0x0000000000000000,0x0000000000000000,0x0000001400030000\n"
".quad 0x0880000000000000,0x0000000000000000,0x0000001700030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000f00030000,0x0738000000000000,0x0000000000000000\n"
".quad 0x0000001200030000,0x0000000000000000,0x0000000000000000,0x0000000c00030000\n"
".quad 0x0298000000000000,0x0000000000000000,0x0000000e00030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000800030000,0x0240000000000000,0x0000000000000000\n"
".quad 0x0000000a00030000,0x0000000000000000,0x0000000000000000,0x0000000400030000\n"
".quad 0x0860000000000000,0x0000000000000000,0x0000000600030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000001800030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000001600030000,0x0000000000000000,0x0000000000000000,0x0000001500030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000700030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000500030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000002500030000,0x0000000000000000,0x0000000000000000,0x0000002300030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000002200030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000d00030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000001c00030000,0x0000000000000000,0x0000000000000000,0x0000001a00030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000001f00030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000001e00030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000001300030000,0x0000000000000000,0x0000000000000000,0x0000001100030000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000001000030000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000b00030000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000900030000,0x0000000000000000,0x0000000000000000,0x0000002600030000\n"
".quad 0x0000000000000000,0x0001000000000000,0x0000002110120000,0x0738000000000000\n"
".quad 0x0019000000000000,0x0000001d10120000,0x00f0000000000000,0x003c000000000000\n"
".quad 0x00f0001d00120000,0x00a0000000000000,0x0053000000000000,0x0190001d00120000\n"
".quad 0x0368000000000000,0x0079000000000000,0x0000001910120000,0x02a0000000000000\n"
".quad 0x0091000000000000,0x0000001410120000,0x0880000000000000,0x00ab000000000000\n"
".quad 0x0000000f10120000,0x0738000000000000,0x00c4000000000000,0x0000000c10120000\n"
".quad 0x0298000000000000,0x00e7000000000000,0x0000000810120000,0x0240000000000000\n"
".quad 0x0100000000000000,0x0000000410120000,0x0860000000000000,0x011b000000000000\n"
".quad 0x00000000001a0000,0x0000000000000000,0x0122000000000000,0x0000002600110000\n"
".quad 0x0100000000000000,0x012e000000000000,0x0100002600110000,0x0080000000000000\n"
".quad 0x5de4000000000000,0xdc04280044040000,0x9c042c0000008c00,0x1c042c0000008400\n"
".quad 0x1c042c0000008800,0x1c032c0000009801,0xdc636000c0000c35,0x9c04400000000804\n"
".quad 0x5ca32c0000009401,0x1c03400000005041,0x1c036000c0000531,0x9c035800c0001130\n"
".quad 0x9ca36800ffff8130,0x1c03400000001061,0x1de46800c0000400,0x5ca3280040008002\n"
".quad 0x9ca3200c4000a051,0xdca35000c0044034,0xdc032008c0044031,0x1c436800c0007840\n"
".quad 0xdc23680000000800,0x9c031a0ec0003d33,0x1c432011c0000850,0x1c435000c0000851\n"
".quad 0xdc23680000000c00,0x5e03188ec0004131,0xdc436000c0000475,0x85e7480040009040\n"
".quad 0x25e4400000046000,0x240328004000a001,0x24035800c0007c41,0x242348004000a041\n"
".quad 0x64e35800c0000444,0xa4a35000c0001104,0xe4432005c0001102,0x24a3480000004432\n"
".quad 0x64432015c0001102,0xa4a34800000044b2,0xe4852011c0001101,0xe4438400000000a2\n"
".quad 0x24a3480000004491,0xa485200dc0001101,0x6485840000000022,0x6443840000000082\n"
".quad 0x24a3480000004471,0xe4852009c0001103,0x6443840000000061,0xa4a3480000004453\n"
".quad 0x64852019c0001103,0xe443840000000041,0x24a34800000044d3,0x6485201dc0001104\n"
".quad 0xa4858400000000c3,0x64438400000000e1,0x24854800000044f4,0xe485840000000101\n"
".quad 0xa485c90000011152,0x6485c90000000152,0xe485c90000022152,0x6485c90000033151\n"
".quad 0x6485c90000044151,0xa485c90000055153,0x2485c90000066151,0xdc03c90000077151\n"
".quad 0xdc04207e00000c1f,0x1c0350ee0000ffff,0x1de2480000004800,0x1c03180000400002\n"
".quad 0x9c65480000000000,0x5c65c10000000002,0x1c65c10000044001,0x5c65c10000033003\n"
".quad 0xdc65c10000055003,0x5c65c10000022002,0x9c65c10000066002,0x1c03c10000077001\n"
".quad 0x5d03480000002851,0x9c034800000014a1,0x1d034800000030d2,0xdc234800000034c3\n"
".quad 0x9c237000c06000b2,0x5c237000c06000a3,0x5c237000c06000c3,0x1ca37000c0600092\n"
".quad 0x5ca35000c0c3f0b3,0x9ca32010c16a08d3,0x9ca35000c1d908b2,0xdc232010c16a08e3\n"
".quad 0xdc655800c00034d2,0x1ea3c10000011001,0x5c232018c1d90892,0x1c435800c00034e3\n"
".quad 0x5ca3400000002c63,0x1c232014c0c3f092,0x9c437000c0600041,0x9c23400000003473\n"
".quad 0x1c437000c06000c2,0x5c23408000003473,0xdca37000c06000e3,0x9c435000c018f8a1\n"
".quad 0xdca3408000002c63,0x9ca35000c018f8d3,0xdc23200ec07d8cd1,0x5c237000c06000e1\n"
".quad 0x1c237000c06000c3,0x9ca37000c0600053,0xdda35000c06a6c73,0x9ea32012c16a0842\n"
".quad 0x5ca3201ec07d8ca2,0x5ca3201cc0471cd1,0xdc035000c06a6cd3,0x1ca34800c20000b3\n"
".quad 0xdea32012c16a0841,0x5da3201ac0471c71,0xdc032010c16a08c3,0x1ca34800000028f2\n"
".quad 0x1c032010c16a08c2,0x5c034800c20000d3,0xdc035800c00040b3,0x5c034800c2000082\n"
".quad 0x5c454800c2000042,0x9d03c90000033003,0x1c034800000028f2,0x1d034800000014c1\n"
".quad 0x1c034800000014c3,0x5c03480000001cb2,0x5d03480000001891,0xdd03480000001893\n"
".quad 0x5c03480000001cb2,0xdc035800c00040a2,0x9c035800c0004041,0x9c035800c00040c2\n"
".quad 0x5c455800c0004081,0x1c03c90000044002,0xdc455800c00040b2,0x1c03c90000022001\n"
".quad 0x9c455800c0004051,0x5c03c90000055002,0x9c455800c00040d1,0x1c45c90000011001\n"
".quad 0x1c45c90000066002,0x5c45c90000000001,0xdc04c90000077001,0x1ca350ee0000ffff\n"
".quad 0x5de22028c0008930,0x1c03180000400001,0x1c85480000000000,0x1c85c10000002001\n"
".quad 0x9c85c10000001002,0xdc85c10000000001,0x5c23c10000003001,0xdc035800c0004043\n"
".quad 0x9c236000c0004042,0x1c035800c0004083,0x1c236000c0004061,0x9c035800c0003863\n"
".quad 0x9c036000c0004082,0x5c236000c0004071,0xdc035800c0003872,0x1d034800000038d1\n"
".quad 0x9c234800000034e2,0x1c035800c0004043,0x1c236800fffff0c1,0xdc235800c00040a3\n"
".quad 0x5c235800c00040b3,0x9c035800c0004063,0x5c236800fffff091,0x1c237000c06000c2\n"
".quad 0xdc037000c0600082,0x1c234800000038f2,0xdc237000c0600073,0x5ca37000c06000d1\n"
".quad 0x9d03200ac16a0883,0x1c23480000003ce2,0x1ca37000c06000b2,0xdca3200ac16a08c3\n"
".quad 0x5c235000c0c3f092,0x9ca37000c06000a1,0x5ea35000c1d90893,0x9c232016c1d90872\n"
".quad 0xdc235800c00034c2,0xdca35800c00034d2,0xdc03201cc0c3f073,0x1d034800000010a1\n"
".quad 0x9c03480000002843,0x9d034800000018b2,0xdda3480000002c63,0x9ca3201ec16a0882\n"
".quad 0x1c23201ec16a0881,0x1c237000c06000c2,0xdda37000c06000a3,0x1ca32012c16a0853\n"
".quad 0x5c032012c16a0851,0x5c234800c20000b2,0xdca37000c0600073,0x9c235000c018f8c2\n"
".quad 0x5c037000c06000e2,0x9ca34800c2000061,0x9ca35000c018f8d3,0x5ca32016c07d8cd1\n"
".quad 0x9ea35000c06a6ca3,0xdca3201cc07d8cc3,0xdc035000c06a6c82,0x1ca34800c20000f1\n"
".quad 0x1c03201ac0471c83,0xdea34800c2000041,0x5c032016c0471ca2,0x9c03480000003073\n"
".quad 0x1d03480000003892,0x1d03480000003892,0xdc03480000003073,0x5c03480000002c41\n"
".quad 0x1d03480000001852,0x9d03480000002c41,0xdc03480000001853,0x9c036800fc0000a2\n"
".quad 0x5c035800c00040d2,0x9c036800fc000071,0x5c035800c0004091,0x1c035800c0004083\n"
".quad 0x5c036800fc0000c2,0x1c035800c0004042,0x1c436800fc0000e3,0xdc43680000001851\n"
".quad 0x5c43680000002ca1,0x9c43680000003481,0x1c85680000003091,0xdc85c90000000001\n"
".quad 0x5c85c90000001001,0x9c85c90000002001,0xdc04c90000003001,0xa1e750ee0000ffff\n"
".quad 0x01e4400000046000,0x408528004000a000,0x4085c10000000152,0x0003c10000011154\n"
".quad 0x00855800c0007c00,0x8085c10000022154,0x0003c10000044153,0x408548004000a000\n"
".quad 0xc085940000000022,0x0023c10000055153,0x00855800c0000403,0x8085c10000033150\n"
".quad 0x80a3c10000066154,0x40e32005c00010c2,0xc0435000c00010c3,0x00a3480000003432\n"
".quad 0x40852015c00010c1,0x40439400000000a4,0x80a34800000034b1,0x00852009c00010c1\n"
".quad 0xc043940000000044,0x00a3480000003451,0x4085200dc00010c2,0x0085c10000077154\n"
".quad 0x4043940000000060,0x80a3480000003472,0x80852011c00010c0,0xc043940000000083\n"
".quad 0x80a3480000003490,0xc0852005c00010c2,0xc043940000000023,0x00a3480000003432\n"
".quad 0x80852015c00010c1,0x40439400000000a4,0x40854800000034b1,0x1de7940000000044\n"
".quad 0x0000800000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x001b00080a040000,0x1903000c00200000\n"
".quad 0x0000000c1704000c,0xf000000800010000,0x0000000c17040011,0xf000000000000000\n"
".quad 0x001800080d040021,0x5de4000000010002,0x9c04280044040000,0x1c042c0000009800\n"
".quad 0x1c042c0000009400,0x9c032c0000008801,0xdc0448004000c020,0x1c032c0000008400\n"
".quad 0x9c6348004000b000,0x1c63400000001020,0x9e04400000000c00,0x5e04180000000921\n"
".quad 0xdc00180000000121,0x9c005000cfc00061,0x5c865000cfc00051,0x1c0380104000fc61\n"
".quad 0xdc036000c0000c41,0xdc03207e0000fc1f,0xde03480000000c40,0x5c856000c0000830\n"
".quad 0xdc04c90000000031,0x5c0450ee0000ffff,0x1e032c0000008401,0x1e036000c0000844\n"
".quad 0x1cc66000c0000853,0x1cc6140008000102,0x9c85140008004101,0x5c85c100000000c3\n"
".quad 0x9c00c100000080c3,0x1c85307e00003883,0x9c00c100000100c2,0x5c85301c00003493\n"
".quad 0x9c00c100000180c2,0x1c85301c000020a2,0x9c00c100000200c2,0x5c853014000024b2\n"
".quad 0x1c00c100000280c2,0x1c85301400002042,0x1c00c100000300c1,0x5c85301000002452\n"
".quad 0x1c00c100000380c1,0x1c00301000001061,0x1c85300800001471,0xdc04c90000040031\n"
".quad 0x1c0450ee0000ffff,0x1cc52c0000008401,0x1c03c10000040103,0x5e036000c0000c41\n"
".quad 0x1cc66000c0000844,0x1c00140008000112,0x9de4307e000020c1,0x1c00280000002c04\n"
".quad 0x1cc63008000024d2,0x1c00140008004111,0x1cc53010000028e3,0x1c00c10000044102\n"
".quad 0x1c003018000048f3,0x1c00301800001081,0x1c00300800001491,0x1c003008000018a1\n"
".quad 0x1c85300800001cb1,0xdc04c90000000031,0x1de450ee0000ffff,0x9c2328004000a001\n"
".quad 0x5de47000c0600020,0x1c23280040008001,0x1ca37000c0600041,0x1ca3200000001020\n"
".quad 0x9ce3200bc0001001,0x1c855000c0001000,0x5c43c10000000030,0x1c85480040009021\n"
".quad 0x1de7940000000040,0x0000800000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0034000802040000,0x0a04000000000000,0x0020000000280008,0x1704001419030014\n"
".quad 0x000300000000000c,0x17040011f0000010,0x000200000000000c,0x17040011f000000c\n"
".quad 0x000100000000000c,0x17040011f0000008,0x000000000000000c,0x5de40021f0000000\n"
".quad 0xdc04280044040000,0x1c042c0000009400,0x9c042c0000008401,0x1c042c0000009800\n"
".quad 0xdc632c0000008800,0x5de4400000001030,0x9c63280040008001,0x1c63400000000020\n"
".quad 0x0007400000001000,0xdca3600000088000,0x1e0320064000a020,0x9ca36000c0000400\n"
".quad 0xdce3200bc0000830,0x1c465000c0000830,0xdc43140008040000,0x9c45480040009030\n"
".quad 0x1e84840000000021,0xdc231c00000018a1,0x01e7188e0000fc41,0x5e84400000038000\n"
".quad 0x1ec41c00000000a1,0xdc041c0000001521,0x1c00180400001121,0xdc04c80000001072\n"
".quad 0x9c031c00000018a1,0x1c025800c0000451,0x9c03083ffffff882,0x1c04480000001c61\n"
".quad 0x9c03148600002122,0xdc036000c0004061,0x5c23500000002041,0x9f845800c0004062\n"
".quad 0xdec41c0000001d21,0x9c431c0000002521,0x1c83201000001881,0x9c43680000001492\n"
".quad 0xdc23500000001c61,0xde031b0e0000fc83,0xdc03200e00001841,0xc103198e00001c41\n"
".quad 0x8003480000001071,0xdc034800c0000461,0x1dc31b0e00001071,0x80036800000017f1\n"
".quad 0xa7844800c0000461,0x1c231c0000001921,0x1c94310a00001841,0x5e841c0000001091\n"
".quad 0x9f841c00000000a1,0x1ec41c0000001921,0xdc041c0000001521,0x1c00180400001121\n"
".quad 0xdc04c80000001072,0x9c031c00000018a1,0x1c025800c0000451,0x9c03083ffffff882\n"
".quad 0x1c04480000001c61,0x9c03148600002122,0xdc036000c0004061,0x5c23500000002041\n"
".quad 0x9f845800c0004062,0xdec41c0000001d21,0x9c431c0000002521,0x1c83201000001881\n"
".quad 0x9c43680000001492,0xdc23500000001c61,0xde031b0e0000fc83,0xdc03200e00001841\n"
".quad 0xc103198e00001c41,0x8003480000001071,0xdc034800c0000461,0x1dc31b0e00001071\n"
".quad 0x80036800000017f1,0xa7844800c0000461,0x1c231c0000001921,0x1f84310a00001841\n"
".quad 0x1c941c0000001121,0xdc031c0000001091,0xdc04207e0000fc1f,0x1ca350ee0000ffff\n"
".quad 0x1c45500000000040,0x1de7940000000020,0x0000800000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x001f00080a040000,0x1903000c00200000,0x0000000c1704000c,0xf000000800010000\n"
".quad 0x0000000c17040011,0xf000000000000000,0x003000080d040021,0x5de4000000020004\n"
".quad 0x1c04280044040000,0x1c042c0000009800,0x1c042c0000008c03,0x9c032c0000008407\n"
".quad 0x1c046000c0001000,0x9de42c0000008800,0x9c6328004000c002,0x5c634000000008c0\n"
".quad 0xdc23400000007007,0x1c237000c06000a0,0x9c047000c0600020,0x1de22c0000009400\n"
".quad 0x1ca3180000001004,0x9ca3203a00000c00,0x5c43400000000027,0x9c035000c00011e3\n"
".quad 0xdc4320218000a1e0,0xdc0348004000b0d0,0xdc8548014000c1e6,0x1c43840000000027\n"
".quad 0x5c0348000000fff2,0xdc03203dc00008a6,0x5c435800c00079b2,0xdca348000000fff2\n"
".quad 0x9c43203dc0000ca5,0xdc03400000002c86,0xdc435800c0007993,0x1c0348000000fff1\n"
".quad 0x1c43203dc00010a5,0x5c03400000003c96,0x1c435800c0007974,0x9ca348000000fff1\n"
".quad 0xdc03203dc00014a4,0x9c435800c0007944,0x9c43400000004475,0x9ca348000000fff1\n"
".quad 0xdc03203dc00018a3,0xdc435800c0007923,0x5c43400000004c44,0x1ca348000000fff1\n"
".quad 0x9c03203dc0001ca0,0x5c435800c00078e0,0x1c43400000003c64,0x9c0348000000fff8\n"
".quad 0xdc4320218000a1b2,0x5c03400000000853,0xdc435800c0007805,0x1c0348004000b1a2\n"
".quad 0x5c4320218000a192,0x9c85400000005605,0x5c438400000000a2,0x1c0348004000b182\n"
".quad 0xdc8520218000a171,0x5c43840000000082,0x9c0348004000b161,0x5c8520218000a140\n"
".quad 0xdc43840000000048,0x9c0348004000b130,0x9c8520218000a121,0xdc43840000000020\n"
".quad 0x1c0348004000b111,0xdc8520218000a0e2,0x5c43840000000061,0x1c0348004000b0f2\n"
".quad 0xdc8520218000a001,0x5c43840000000080,0x9c6348004000b151,0x1ca34000000070c1\n"
".quad 0x1c85203ac00420c3,0x1d03840000000041,0x1c034800000071d2,0x1c036000c00008c7\n"
".quad 0x5ca32021800081e3,0x5c432010c0008461,0x5c034800400090d3,0xdc856000c0000857\n"
".quad 0x9c85c900000001c7,0xdc85c900000211c2,0x5c85c900000421c2,0x9c85c900000631c8\n"
".quad 0xdc85c900000841c0,0xdc85c900000a51c1,0x1c85c900000c61c0,0x9c85c900000e71c1\n"
".quad 0x9c85c100000061d0,0x5c85c100000041d1,0x1c85c100000001d2,0x1c85c100000021d1\n"
".quad 0xdc85c100000011d2,0x9c02c100000071d1,0xdc8530fc2a2f5022,0x5c00c100000031d7\n"
".quad 0xdd00500000001891,0x5c02500000001890,0x9c0030fc2a2f5042,0x1c02301440000441\n"
".quad 0x9c0230fec62a1881,0x9e0030fe5a0c5c82,0x9c00301240000427,0x1e00300840001470\n"
".quad 0xdc02301440003471,0x5c0230fe5a0c5c72,0x9c0330fec62a1872,0xdc002021800081b2\n"
".quad 0xde00301640003486,0xdc43301240001481,0x1c034800400091a2,0x5c00202180008192\n"
".quad 0x9d00500000001856,0x5c85500000001856,0x5c43c100000051d1,0x9c03480040009182\n"
".quad 0xdc00202180008171,0x9c003004400025f5,0xdc43300e400035f0,0xdc00480040009161\n"
".quad 0x1e00302e40003455,0xde003008400015f6,0x9c003036400045f6,0x1c03500000005d95\n"
".quad 0x1e00202180008141,0xdc02300440002455,0x9e0030fad413cd67,0x1c00303040004455\n"
".quad 0x5c43303640001456,0xdd00480040009131,0x9c03500000005d95,0x9c00202180008120\n"
".quad 0xdd005000000051a4,0x1c025000000051a4,0xdd0030fad413cd75,0xdc00500000007835\n"
".quad 0xdc85500000007830,0x5d00c900000001d7,0x1c00500000006176,0x1c85500000006176\n"
".quad 0xdc00c900000071d5,0x9d00500000005835,0xdc02500000005835,0x9c0230fad413cd20\n"
".quad 0x1c0230fad413cd34,0x1c0230fad413cd95,0xdc8530fad413cd86,0xdc02c900000041d0\n"
".quad 0x9c8530fad413cd74,0xdc02c900000031d4,0x1c8530fad413cd65,0x1c85c900000051d5\n"
".quad 0xdc85c900000021d6,0xdc85c900000011d4,0x9c85c900000061d5,0x9c85c100000841c4\n"
".quad 0xdc43c100000001c5,0x5c85480040009110,0xdc85c100000c61c4,0x1c85c100000421c4\n"
".quad 0xdc85c100000211c5,0x9c00c100000e71c5,0x9d00500000004966,0x9c02500000004964\n"
".quad 0x5c0230fc2a2f5115,0x1c0230fc2a2f5136,0xdc0030fec62a1946,0x9c02302c40000536\n"
".quad 0xde0030fe5a0c5d45,0x5c02303240000514,0x5c0030fec62a1976,0x1c02303040001574\n"
".quad 0x9e0030fe5a0c5d76,0x9c03302c40003575,0xde002021800080e3,0x5c00303240001545\n"
".quad 0x1c85303040003546,0xdc43c100000631c6,0x1c034800400090f3,0x1c85202180008004\n"
".quad 0x1c00c100000a51c0,0x9d00500000006da5,0xdc00500000006da6,0x5c00302240002586\n"
".quad 0x9e00302e40003587,0x1e00302c40001585,0x5c43303240004586,0xdc00480040009154\n"
".quad 0x5e00303640003405,0x5e00302c40004405,0x9c00303a40002406,0x1c00303040001405\n"
".quad 0x1d00500000005d46,0x1c00500000005d45,0xdd005000000065a0,0x5d005000000065a5\n"
".quad 0x9c00500000004d26,0x1c02500000004d24,0x9d0030fad413cd86,0x5c00500000005996\n"
".quad 0x9c00500000005996,0xdd00500000005525,0x9c02500000005526,0x1c0230fad413cd44\n"
".quad 0x1c8530fad413cc00,0xdc02c900000001c6,0x5c0230fad413cd74,0x9c8530fad413cda5\n"
".quad 0x5c02c900000e71c4,0x1c8530fad413cd96,0x1c02c900000841c0,0xdc8530fad413cd65\n"
".quad 0x9c02c900000631c4,0x5c8530fad413cdb6,0x5c85c900000a51c5,0x1c85c900000421c6\n"
".quad 0x9c85c900000211c5,0x1c85c900000c61c6,0xdc85c100000001c6,0x9c85c100000211c5\n"
".quad 0x5c85c100000421c5,0x1c85c100000631c5,0xdc85c100000841c5,0x1c85c100000a51c4\n"
".quad 0x9c859400000000c6,0xdc85c100000c61c4,0x1c859400000000a5,0x9c85c100000e71c0\n"
".quad 0x5c85940000000085,0x1c85940000000065,0xdc85940000000045,0x9c85940000000024\n"
".quad 0x1c859400000000e4,0x1de7940000000100,0x0000800000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x42af3fa73d750000,0x234e3f9683173e8d,0x0a043fb18a863f49\n"
".quad 0x0020000000260008,0x1704001419030014,0x000200000000000c,0x17040011f0000010\n"
".quad 0x000100000000000c,0x17040021f0000008,0x000000000000000c,0x5de40021f0000000\n"
".quad 0x9c04280044040000,0xdc042c0000008800,0x1c042c0000008c00,0x9c232c0000008400\n"
".quad 0xdc237000c0600020,0x9c047000c0600030,0xdc632c0000009401,0x1e03400000000024\n"
".quad 0x1c046000c0000c35,0xdc032c0000009801,0x1c036000c0000530,0x5ca35800c0001130\n"
".quad 0x9ca3400000005041,0x9c03400000000c61,0x1c036800ffff8130,0xdde46800c0000400\n"
".quad 0x5ca3280040008001,0x1c03200c4000a051,0x9ca36800c0007831,0x1c432006c0008941\n"
".quad 0xdc23680000000800,0x9c031a0ec0003d33,0xdc43200fc0000850,0xdc235000c0000850\n"
".quad 0x9ca3188ec0004131,0x5e035000c0008944,0x1c436000c0000465,0xdc43680000001000\n"
".quad 0x85e7480040009030,0x25e4400000046000,0x240328004000a001,0x24035800c0007c41\n"
".quad 0x242348004000a041,0x64e35800c0000444,0xa4a35000c0001104,0xe4432005c0001102\n"
".quad 0x24a3480000004432,0x64432015c0001102,0xa4a34800000044b2,0xe4852011c0001101\n"
".quad 0xe4438400000000a2,0x24a3480000004491,0xa485200dc0001101,0x6485840000000022\n"
".quad 0x6443840000000082,0x24a3480000004471,0xe4852009c0001103,0x6443840000000061\n"
".quad 0xa4a3480000004453,0x64852019c0001103,0xe443840000000041,0x24a34800000044d3\n"
".quad 0x6485201dc0001104,0xa4858400000000c3,0x64438400000000e1,0x24854800000044f4\n"
".quad 0xe485840000000101,0xa485c90000011152,0x6485c90000000152,0xe485c90000022152\n"
".quad 0x6485c90000033151,0x6485c90000044151,0xa485c90000055153,0x2485c90000066151\n"
".quad 0xdc03c90000077151,0xdc04207e00000c1f,0x1c0350ee0000ffff,0x5c03480000004800\n"
".quad 0x9c65480000000001,0x1c65c10000000051,0x9c65c10000077050,0x5c65c10000011052\n"
".quad 0x9c65c10000066052,0x5c65c10000022053,0xdc65c10000055053,0x1c65c10000033052\n"
".quad 0xdc03c10000044051,0x1d03480000001801,0x1c03480000000060,0x9d03480000002892\n"
".quad 0x1c034800000024a1,0x9d034800000038d3,0x5c034800000034e2,0x1d03480000002c43\n"
".quad 0x9c034800000010b1,0xdc03480000002863,0xdd03480000003472,0x5c03480000003471\n"
".quad 0x1d03480000003083,0xdd03480000003082,0x1c03480000002863,0x5d034800000034b3\n"
".quad 0x5de24800000034b3,0x9c231800016a0802,0xdc237000c06000e2,0x1c237000c06000f2\n"
".quad 0xdc237000c06000c3,0x5c237000c0600071,0x9de27000c06000d3,0x9ca3180002000001\n"
".quad 0xdca32012800004a2,0x1ca32012800004b2,0x1c232012800014c3,0x9ca37000c0600082\n"
".quad 0x5ca35000c1d90873,0x5ca32012800014d2,0xdca3200cc0c3f073,0x9c23201cc0c3f081\n"
".quad 0x1ea35800c00034a3,0x5c23201ac1d90882,0x1c035800c00034b3,0x5c035800c00040c3\n"
".quad 0x9c435800c0004092,0x1c43408000003802,0xdc43400000003800,0xdc03408000003442\n"
".quad 0x1c454800c2000071,0x1c43c90000000053,0x5c45400000003441,0x5c03c90000044052\n"
".quad 0x9c235800c0004083,0x1c037000c06000a2,0x1c235800c0004072,0x5c457000c0600000\n"
".quad 0xdc23c90000066053,0x5ca37000c06000b1,0x1c45200cc06a6ca2,0x9ca3c90000022052\n"
".quad 0xdca35000c0471ca2,0x1c23200cc018f802,0x1ca37000c0600041,0x9ea35000c07d8c00\n"
".quad 0xdca32012c0471c71,0x1ca32014c06a6c71,0x1ea32000c018f840,0x1c032016c07d8c42\n"
".quad 0x9c035800c0004061,0x1c034800c2000071,0xdc034800c2000000,0x9c035800c0004081\n"
".quad 0x1c455800c0004061,0x1c03c90000033051,0xdc455800c0004000,0x9c45c90000077051\n"
".quad 0x1c45c90000055051,0xdc04c90000011050,0x1ca350ee0000ffff,0x9de22028c0008930\n"
".quad 0x1de21800016a0801,0x1c03180002000001,0x5c85480000000000,0x9c85c10000000001\n"
".quad 0x1c85c10000003002,0xdc85c10000001002,0x5c23c10000002001,0x5c035800c0004052\n"
".quad 0x5c236000c0004053,0x1c035800c00040a1,0x9c236000c00040a3,0x1c035800c0004082\n"
".quad 0xdc236000c0004082,0xdc035800c0004072,0xdc236000c0004073,0x9c235800c00040d1\n"
".quad 0x5c235800c00040c3,0x1c235800c0004083,0x1c035800c00040f3,0x5d03480000001c52\n"
".quad 0xdc03480000001471,0xdc034800000024e1,0x5d034800000028c3,0x9c03480000003892\n"
".quad 0x9d034800000034b3,0xdd034800000030a2,0x1c03480000002cd2,0x1d034800000020f3\n"
".quad 0xdc03480000003c82,0x5d03480000003873,0x9c03480000003873,0xdd03480000002c93\n"
".quad 0xdc03480000002c92,0x5d034800000030f1,0x1c23480000003cc2,0x9c237000c06000e3\n"
".quad 0xdc237000c06000b3,0xdc237000c0600083,0x1ca37000c06000d2,0x5ca3200c800004c2\n"
".quad 0x1c23200c800004e3,0x9ca37000c0600073,0xdca35000c1d908f1,0x9c232008c0c3f0f1\n"
".quad 0x9ca37000c0600093,0xdea3200cc0c3f0b1,0xdc23200ec1d908b1,0x5c235800c00034d2\n"
".quad 0x1ca35800c0003482,0x1c432008c16a08c3,0x9c43400000002ca2,0xdc43408000002ca2\n"
".quad 0x5c43400000002452,0x9ca3408000002453,0xdc232008c16a08e3,0x5c037000c06000b2\n"
".quad 0x5c235800c0004072,0x5c037000c06000d3,0xdc035800c00040c1,0x1ca35800c00040e1\n"
".quad 0x9ca35000c07d8cb3,0x1c232008c018f8b3,0xdca37000c0600082,0x9c232008c06a6cd2\n"
".quad 0x5ca37000c06000a2,0x1ca35000c0471cd3,0x9ea32018c018f881,0x9c03201cc07d8c83\n"
".quad 0x1ca34800c2000061,0x1ea3201ac06a6ca3,0x1c032016c0471ca2,0xdc034800c2000041\n"
".quad 0x9c036800fc0000e2,0x9c035800c0004061,0x1c034800c20000c2,0xdc436800fc000082\n"
".quad 0x1c036800000024b2,0x5c036800fc000041,0x9c436800fc0000a2,0x1c43680000001881\n"
".quad 0x5c43680000001441,0x9c85680000001c91,0xdc85c90000001001,0x1c85c90000003002\n"
".quad 0x5c85c90000000001,0xdc04c90000002001,0xa1e750ee0000ffff,0x01e4400000046000\n"
".quad 0x408528004000a000,0x4085c10000000152,0x0003c10000011154,0x00855800c0007c00\n"
".quad 0x8085c10000022154,0x0003c10000044153,0x408548004000a000,0xc085940000000022\n"
".quad 0x0023c10000055153,0x00855800c0000403,0x8085c10000033150,0x80a3c10000066154\n"
".quad 0x40e32005c00010c2,0xc0435000c00010c3,0x00a3480000003432,0x40852015c00010c1\n"
".quad 0x40439400000000a4,0x80a34800000034b1,0x00852009c00010c1,0xc043940000000044\n"
".quad 0x00a3480000003451,0x4085200dc00010c2,0x0085c10000077154,0x4043940000000060\n"
".quad 0x80a3480000003472,0x80852011c00010c0,0xc043940000000083,0x80a3480000003490\n"
".quad 0xc0852005c00010c2,0xc043940000000023,0x00a3480000003432,0x80852015c00010c1\n"
".quad 0x40439400000000a4,0x40854800000034b1,0x1de7940000000044,0x0000800000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x8000000010000000,0x001900080a040000,0x1903000c00200000\n"
".quad 0x0000000c1704000c,0xf000000800010000,0x0000000c17040011,0xf000000000000000\n"
".quad 0x001800080d040021,0x5de4000000010002,0x9c04280044040000,0x1c042c0000009800\n"
".quad 0x5c042c0000009400,0x1c032c0000008801,0xdc0448004000c021,0x9c032c0000008400\n"
".quad 0x1c6348004000b000,0x9c63400000001440,0x9e04400000000c20,0x1e04180000000121\n"
".quad 0xdc00180000000921,0x9c005000cfc00061,0x9c865000cfc00041,0x1c0380104000fc61\n"
".quad 0xdc036000c0000c51,0xdc03207e0000fc1f,0xde03480000000c40,0x9c856000c0000830\n"
".quad 0xdc04c90000000031,0x5c0450ee0000ffff,0x9c042c0000008401,0x5e032c0000008801\n"
".quad 0x9e036000c0000851,0xdc856000c0000861,0x5c86c10000000051,0x1c85140008000062\n"
".quad 0x9c86c10000008052,0xdc00140008008062,0xdc85307e00001c92,0x5c86c10000010051\n"
".quad 0xdc00140008010062,0x1c853016000020a2,0x9c86c10000018052,0xdc00140008018062\n"
".quad 0xdc85301600001c92,0x5c86c10000020051,0xdc00140008020062,0x1c853016000020a2\n"
".quad 0x9c86c10000028052,0xdc00140008028062,0x5c86301600001c92,0xdc85140008030062\n"
".quad 0x9c00c10000030051,0x1c853016000020a2,0x9c86c10000038052,0xdc00140008038061\n"
".quad 0x5c00301400001c91,0x5c85300e00002061,0xdc04c90000040031,0x5c0450ee0000ffff\n"
".quad 0x5e032c0000008401,0x1e036000c0000843,0x1cc56000c0000853,0x1c86c100000400d1\n"
".quad 0x5c861400080000c2,0x1c001400080080c2,0x1c86307e00002041,0x5c001400080100c2\n"
".quad 0x1c86300800002451,0x9c001400080180c1,0x1cc5300a00002061,0x5c86c100000440d2\n"
".quad 0x9c001400080200c1,0x1c86300c00001071,0x9c001400080280c1,0x5c86300c00001481\n"
".quad 0x9c001400080300c1,0x1c86300c00001091,0x5c001400080380c1,0x1c00300c000014a1\n"
".quad 0x1c85300a000010b1,0xdc04c90000000031,0x1de450ee0000ffff,0x1c2328004000a001\n"
".quad 0x5de47000c0600000,0x1c23280040008001,0x1ca37000c0600041,0x1ca3200400001000\n"
".quad 0x9ce3200bc0001001,0x1c855000c0001000,0x5c43c10000000030,0x1c85480040009021\n"
".quad 0x1de7940000000040,0x0000800000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0034000802040000,0x0a04000000000000,0x0020000000210008,0x1704001419030014\n"
".quad 0x000300000000000c,0x17040011f0000010,0x000200000000000c,0x17040011f000000c\n"
".quad 0x000100000000000c,0x17040011f0000008,0x000000000000000c,0x5de40021f0000000\n"
".quad 0x1c04280044040000,0x9c042c0000008800,0x5c042c0000009800,0xdc042c0000008401\n"
".quad 0x9c632c0000009400,0x1c63400000000020,0xdc63400000001400,0x1de4400000001430\n"
".quad 0x1e03280040008001,0xdca36000c0000400,0x1c4620064000a020,0x9ca3140008040000\n"
".quad 0xdce32009c0001030,0x1e045000c0001030,0xdc431800000000a0,0x5de4480040009030\n"
".quad 0x1c85280000000001,0x0007840000000021,0x5c02500000016001,0xdc803a0000000041\n"
".quad 0xdc80220ed2c00041,0x5c42208ecfc00043,0x5c0038fc00000051,0x5c84500000001441\n"
".quad 0x5c04100600001521,0x4484200000001441,0x1c00100600001121,0x1c85580000000050\n"
".quad 0x1de7940000000020,0xdc00800000000000,0x9c02c80000001051,0x1e403801fffffc41\n"
".quad 0x9c42300e80000452,0xdc4038fe00000061,0x1c40300e00002071,0x5e40307e00001c62\n"
".quad 0x1c40300c00002052,0x5c02301000001c92,0x9e403bfe00000042,0x1c40300c00002051\n"
".quad 0x9c40301000001c62,0xdc02307e00002481,0xdc0239fffffffc61,0xdc030bfdffffc071\n"
".quad 0x21e71a0e40001471,0x0007400000004000,0x9de4500000006001,0x1de4280000001001\n"
".quad 0x1de7280000001801,0x9c03900000000000,0xdc036000c0000441,0x9c036000c0000451\n"
".quad 0xdc035800c0006061,0x9c035800c0006071,0xdc034800fffffc61,0xdc034800fffffc71\n"
".quad 0xdc031a0ec003f461,0x21e71a20c003f471,0xdc8040000004e000,0x21e7218edfe00041\n"
".quad 0xdc80400000004000,0x01e7218edfe00051,0x1c00400000004000,0x1de7500000001441\n"
".quad 0x1c034000000ba000,0x5c036000c0000442,0xdc036000c0000452,0xdc03190e0000fc83\n"
".quad 0xdc04190e0000fc95,0x01e70c0e00000811,0xdc80400000008000,0xdc80210edfe00047\n"
".quad 0x2de7210edfe00051,0x21e7400000008000,0x1de2400000006000,0x1c001bff00000001\n"
".quad 0x1de7c80000001441,0xdc044000000a0000,0x21e70c0e00004401,0x1c83400000006000\n"
".quad 0x1c02680000001051,0x1de73a0000000041,0xdc04400000096000,0x21e70c0e00004831\n"
".quad 0x1c83400000008000,0x1c02680000001051,0x1c423a0000000041,0x1de739fe00000041\n"
".quad 0xdc2340000008a000,0xdc231b0e0000fc63,0x24001b0e0000fc71,0x25e2307ed7e00041\n"
".quad 0x05e41bffffff0002,0x01e728000000fc02,0x5c00400000008000,0x1c03307ed7e00051\n"
".quad 0x1de74800c0010082,0x1de4400000002000,0x5c0328000000fc02,0xdee34800fffe0872\n"
".quad 0x5c03410000001492,0x9d034800fffe0862,0x1c00480000001c61,0x9ee3c800000010b3\n"
".quad 0x5e00410000001092,0x5c003018800004b1,0x5c003018000014c1,0x1e00307e000014a2\n"
".quad 0x5c003014000024b1,0x9e00301200001442,0x1c003014000024b2,0xdc033012000014a1\n"
".quad 0xdc036000c0000442,0x9c035800c00060b2,0x9c03480000002c61,0xdc03480000001881\n"
".quad 0xdc034800fffffc61,0x01e71a0ec003f471,0x5d03400000006000,0x1ee3480000002c61\n"
".quad 0x1de7400000001051,0xdc23400000048000,0x01e7198ec003f861,0x1c02400000006000\n"
".quad 0x1c423a0000000041,0x1de739fe00000041,0xdc2340000003e000,0x01e71a0e0000fc61\n"
".quad 0xdc2340000003a000,0x01e71b0effffa061,0x1c02400000004000,0x1de73a0000000041\n"
".quad 0x1c00400000032000,0xdf843192000014a2,0xdc001c0000001922,0x1c023092000014a1\n"
".quad 0xdc233801fffffc82,0x5c00190e0000fcb1,0x1c423112000014a1,0x6003380200000082\n"
".quad 0x9f844800c0008062,0x5c001c0000001921,0xe003168e00001471,0x2003600000002481\n"
".quad 0x5f84580000001882,0xe0031c0000001521,0x9c03310ec00007f1,0x1c026000c0007881\n"
".quad 0x60433a0000000041,0xdc03680000001c51,0x9c035800c0007c61,0xdc436800c0000481\n"
".quad 0x5c03680000001c51,0x9c03680000001c61,0xdc035800c0000481,0x80031a8e0000fc51\n"
".quad 0x1c434800c0000461,0x1de7680000001841,0x0000900000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xffef3f8000000000,0x002300080a047eff,0x1903000c00200000,0x0000000c1704000c\n"
".quad 0xf000000800010000,0x0000000c17040011,0xf000000000000000,0x00b400080d040021\n"
".quad 0x5de40000000c000f,0x1c04280044040000,0x1c042c0000009800,0x1c042c0000008c03\n"
".quad 0x9c032c0000008407,0x1c046000c0001000,0x9de42c0000008800,0x9c6328004000c002\n"
".quad 0x5c634000000008c0,0xdc23400000007007,0x1c237000c06000a0,0x9c047000c0600020\n"
".quad 0x1de22c0000009400,0x1ca3180000001004,0x9ca3203a00000c00,0x5c43400000000027\n"
".quad 0x9c035000c00011e3,0xdc4320218000a1e0,0xdc0348004000b0d0,0xdc8548014000c1e6\n"
".quad 0x1c43840000000027,0x5c0348000000fff2,0xdc03203dc00008a6,0x5c435800c00079b2\n"
".quad 0xdca348000000fff2,0x9c43203dc0000ca5,0xdc03400000002c86,0xdc435800c0007993\n"
".quad 0x1c0348000000fff1,0x1c43203dc00010a5,0x5c03400000003c96,0x1c435800c0007974\n"
".quad 0x9ca348000000fff1,0xdc03203dc00014a4,0x9c435800c0007944,0x9c43400000004475\n"
".quad 0x9ca348000000fff1,0xdc03203dc00018a3,0xdc435800c0007923,0x5c43400000004c44\n"
".quad 0x1ca348000000fff1,0x9c03203dc0001ca0,0x5c435800c00078e0,0x1c43400000003c64\n"
".quad 0x9c0348000000fff8,0xdc4320218000a1b2,0x5c03400000000853,0xdc435800c0007805\n"
".quad 0x1c0348004000b1a2,0x5c4320218000a192,0x9c85400000005605,0x5c438400000000a2\n"
".quad 0x1c0348004000b182,0x5c8520218000a171,0x5c43840000000088,0x9c0348004000b161\n"
".quad 0xdc8520218000a140,0xdc43840000000042,0x9c0348004000b130,0x9c8520218000a121\n"
".quad 0xdc43840000000020,0x1c0348004000b111,0xdc8520218000a0e2,0x5c43840000000061\n"
".quad 0x1c0348004000b0f2,0xdc8520218000a001,0x5c43840000000080,0x9c6348004000b151\n"
".quad 0x1ca34000000070c1,0x1c85203ac00420c3,0x1d03840000000041,0x1c034800000071d2\n"
".quad 0x1c036000c00008c7,0x5ca32021800081e3,0x5c432010c0008461,0x5c034800400090d3\n"
".quad 0xdc856000c0000857,0x9c85c900000001c7,0x5c85c900000211c2,0x9c03c900000421c8\n"
".quad 0xdc852021800081b2,0x9c85c900000631c2,0xdc43c900000841c0,0xdc854800400091a2\n"
".quad 0xdc85c900000a51c1,0x1c85c900000c61c0,0x9c85c900000e71c1,0x5c85c100000071d0\n"
".quad 0xdc85c100000001d2,0xdc85c100000061d0,0x1c85c100000011d1,0x9c85c100000051d2\n"
".quad 0x5c85c100000021d1,0x1c00c100000041d1,0x1d00500000000891,0x9c00500000000898\n"
".quad 0xdd00500000000c70,0xdc85500000001c37,0xdc00c100000031d1,0x9d00500000002060\n"
".quad 0x1c03500000002067,0x9c00202180008192,0xdd00500000001471,0x5c43500000001c56\n"
".quad 0x5c00480040009182,0x5d00500000001841,0x9c03500000001846,0x1c00202180008171\n"
".quad 0xdd00500000000c26,0xdc43500000000c25,0x1c03480040009161,0xdc00202180008141\n"
".quad 0x1d00500000006050,0x9c02500000006055,0x5c4330fc2a2f5175,0x9c03480040009131\n"
".quad 0x9c00202180008120,0xdc02302c40000594,0x9c0230fad413cc34,0x1c0230fc2a2f5195\n"
".quad 0xdc4330fad413cd45,0xdc85480040009110,0x5e00c900000001d4,0x9c02302c40000574\n"
".quad 0x9c0230fad413cd24,0x1c8530fec62a1a05,0xdc02c900000041d5,0x9c8530fa350abdf5\n"
".quad 0x1c02c900000021d4,0xde0030fec62a19f6,0x5c02302c400015f4,0x1c0030fd248d39f6\n"
".quad 0x9c00302e40001605,0xdc00303040002605,0x9c00303240003605,0xde003026400025e4\n"
".quad 0x1c003028400045e4,0x9c00302c400035e5,0x9e00302e400015e5,0xdc003024400035b4\n"
".quad 0x5c023026400025b4,0x1e0030fad413cd14,0xdc003028400015b5,0x9c02302c400045b5\n"
".quad 0xdc0230fad413cd24,0x5c8530fad413cd34,0x9c02c900000061d4,0x1c0230fad413cd45\n"
".quad 0x9c8530fad413cd76,0xdc85c900000011d4,0x9c85c900000031d4,0x1c85c900000051d5\n"
".quad 0x5c85c900000071d6,0x1c85c100000e71c4,0xdc85c100000001c5,0xdc85c100000c61c4\n"
".quad 0x9c85c100000211c5,0x9c85c100000a51c4,0x5c85c100000421c6,0x1c00c100000841c6\n"
".quad 0x9c85500000004546,0x1d00c100000631c5,0x5c00500000004545,0xdd00500000004d74\n"
".quad 0xdc00500000005d34,0x9d005000000049a5,0x9c005000000049a4,0x9d00500000006566\n"
".quad 0x9c03500000005995,0x5c002021800080e3,0x1d00500000006986,0xdc00500000006986\n"
".quad 0x9d00500000005d16,0xdc43500000005d16,0xdc004800400090f3,0x5c02500000006d95\n"
".quad 0x5d0030fc2a2f51a4,0x1c03500000006d96,0xdc02202180008004,0x1c0030fc2a2f5186\n"
".quad 0x5c43302240000580,0x5e00480040009154,0xdc023036400005a5,0x9c0230fad413cd75\n"
".quad 0x1c0230fec62a1946,0xdc8530fad413cd96,0xdc02c900000001c5,0x1c8530fa350abd36\n"
".quad 0x5c02c900000841c6,0x5e0030fec62a1937,0xdc02303440001536,0xdc0030fd248d3934\n"
".quad 0x1c00303640001545,0x9c00303a40002546,0xdc00302640003546,0x1e00303240002524\n"
".quad 0xdc00302e40004525,0x1c02303040003525,0x1c0030fad413cc00,0xde00303440001526\n"
".quad 0x9c02302640003564,0x1c0030fad413cd54,0xde00302840002565,0x1c85302e40001565\n"
".quad 0x9c00c900000421c0,0xdc02303040004565,0x9c8530fad413cd34,0x5c02c900000c61c4\n"
".quad 0x5c0230fad413cd45,0x1c8530fad413cd76,0x1c85c100000001c6,0x1c02c100000841c5\n"
".quad 0xdc8530fad413cd60,0x5c85c900000211c4,0x5c85c900000631c5,0x1c85c900000a51c6\n"
".quad 0xdc85c900000e71c0,0x9c85c100000211c5,0x5c85c100000421c5,0xdc85c100000631c5\n"
".quad 0x1c85c100000a51c4,0x9c859400000000c6,0xdc85c100000c61c4,0x1c859400000000a5\n"
".quad 0x9c85c100000e71c0,0x5c85940000000085,0x1c85940000000065,0xdc85940000000045\n"
".quad 0x9c85940000000024,0x1c859400000000e4,0x1de7940000000100,0x0000800000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x83173fa73d750000,0x42af3f49234e3f96\n"
".quad 0x0a043fb18a863e8d,0x00200000001e0008,0x1704001419030014,0x000200000000000c\n"
".quad 0x17040011f0000010,0x000100000000000c,0x17040021f0000008,0x000000000000000c\n"
".quad 0x04f30021f0000000,0x835e3efb14be3eb5,0x04f33ed4db313eec,0xef153e8e39da3eb5\n"
".quad 0x04f33dc7c5c23e43,0xef153ed4db313eb5,0x04f3bdc7c5c23e43,0x835ebefb14bebeb5\n"
".quad 0x04f3be8e39dabeec,0xef153e8e39da3eb5,0x04f3befb14bebe43,0x835e3dc7c5c2beb5\n"
".quad 0x04f33ed4db313eec,0x835e3dc7c5c23eb5,0x04f3be8e39dabeec,0xef153ed4db313eb5\n"
".quad 0x04f3befb14bebe43,0x835ebdc7c5c23eb5,0x04f33e8e39dabeec,0xef15bed4db313eb5\n"
".quad 0x04f33efb14bebe43,0xef15be8e39da3eb5,0x04f33efb14bebe43,0x835ebdc7c5c2beb5\n"
".quad 0x04f3bed4db313eec,0xef15bed4db313eb5,0x04f33dc7c5c23e43,0x835e3efb14bebeb5\n"
".quad 0x04f33e8e39dabeec,0x835ebefb14be3eb5,0x04f3bed4db313eec,0xef15be8e39da3eb5\n"
".quad 0x0020bdc7c5c23e43,0x0042005100330021,0x0021001100220027,0x001c002f00300024\n"
".quad 0x0033000c000c0017,0x0017001c002f0030,0x0051000c000c000c,0x000c0017001c002f\n"
".quad 0x0042000c000c000c,0x000c000c0017001c,0x0027000c000c000c,0x000c000c000c0017\n"
".quad 0x0022000c000c000c,0x000c000c000c000c,0x0011000c000c000c,0x000c000c000c000c\n"
".quad 0x0704000c000c000c,0xffff000000340010,0xffffffffffffffff,0x003300081204ffff\n"
".quad 0x1104000000000000,0x0000000000330008,0x0032000812040000,0x1104000000000000\n"
".quad 0x0000000000320008,0x0031000812040000,0x1104000000000000,0x0000000000310008\n"
".quad 0x0030000812040000,0x1104000000000000,0x0000000000300008,0x002f000812040000\n"
".quad 0x1104000000000000,0x00000000002f0008,0x002e000812040000,0x1104000000000000\n"
".quad 0x00000000002e0008,0x002d000812040000,0x1104000000000000,0x00000000002d0008\n"
".quad 0x002c000812040000,0x1104000000000000,0x00000000002c0008,0x002b000812040000\n"
".quad 0x1104000000000000,0x00000000002b0008,0x002a000812040000,0x1104000000000000\n"
".quad 0x00000000002a0008,0x0500000006000000,0x000000480c000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000380000000,0x0000000380000000,0x0000000004000000\n"
".quad 0x0560000000000000,0x00000015e7000033,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000008c8000000,0x00000008c8000000,0x0000000004000000,0x0660000000000000\n"
".quad 0x0000001eaf000033,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000880000000,0x0000000004000000,0x0560000000000000,0x0000001eaf000032\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000002d0000000,0x00000002d0000000\n"
".quad 0x0000000004000000,0x0660000000000000,0x000000217f000032,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000200000000,0x0000000004000000\n"
".quad 0x0560000000000000,0x000000217f000031,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000300000000,0x0000000300000000,0x0000000004000000,0x0560000000000000\n"
".quad 0x000000247f000030,0x0000000000000000,0x0000000000000000,0x00000007c0000000\n"
".quad 0x00000007c0000000,0x0000000004000000,0x0660000000000000,0x0000002c3f000030\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000840000000\n"
".quad 0x0000000004000000,0x0560000000000000,0x0000002c3f00002f,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000008f0000000,0x00000008f0000000,0x0000000004000000\n"
".quad 0x0660000000000000,0x000000352f00002f,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000880000000,0x0000000004000000,0x0560000000000000\n"
".quad 0x000000352f00002e,0x0000000000000000,0x0000000000000000,0x0000000330000000\n"
".quad 0x0000000330000000,0x0000000004000000,0x0660000000000000,0x000000385f00002e\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000200000000\n"
".quad 0x0000000004000000,0x0560000000000000,0x000000385f00002b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000568000000,0x0000000568000000,0x0000000004000000\n"
".quad 0x0560000000000000,0x0000003dc700002a,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000007c0000000,0x00000007c0000000,0x0000000004000000,0x0660000000000000\n"
".quad 0x000000458700002a,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000840000000,0x0000000004000000,0x0500000001000000,0x0000004587000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000180000000,0x0000000180000000\n"
".quad 0x0000000004000000,0x0000000000000000\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[11178];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 3 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c" 2 3
extern void __device_stub__Z14CUDAkernel1DCTPfiii(float *, int, int, int);
extern void __device_stub__Z15CUDAkernel1IDCTPfiii(float *, int, int, int);
extern void __device_stub__Z14CUDAkernel2DCTPfS_i(float *, float *, int);
extern void __device_stub__Z15CUDAkernel2IDCTPfS_i(float *, float *, int);
extern void __device_stub__Z18CUDAkernelShortDCTPsi(short *, int);
extern void __device_stub__Z19CUDAkernelShortIDCTPsi(short *, int);
extern void __device_stub__Z27CUDAkernelQuantizationFloatPfi(float *, int);
extern void __device_stub__Z27CUDAkernelQuantizationShortPsi(short *, int);
static void __sti____cudaRegisterAll_41_tmpxft_00006d56_00000000_4_dct8x8_cpp1_ii_TexSrc(void) __attribute__((__constructor__));
void __device_stub__Z14CUDAkernel1DCTPfiii(float *__par0, int __par1, int __par2, int __par3){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)12UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)16UL) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(float *, int, int, int))CUDAkernel1DCT)); (void)cudaLaunch(((char *)((void ( *)(float *, int, int, int))CUDAkernel1DCT))); };}
# 61 "tests/dct8x8/dct8x8_kernel1.cu"
void CUDAkernel1DCT( float *__cuda_0,int __cuda_1,int __cuda_2,int __cuda_3)
# 62 "tests/dct8x8/dct8x8_kernel1.cu"
{__device_stub__Z14CUDAkernel1DCTPfiii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 115 "tests/dct8x8/dct8x8_kernel1.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z15CUDAkernel1IDCTPfiii( float *__par0, int __par1, int __par2, int __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)12UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, int, int, int))CUDAkernel1IDCT)); (void)cudaLaunch(((char *)((void ( *)(float *, int, int, int))CUDAkernel1IDCT))); }; }
# 130 "tests/dct8x8/dct8x8_kernel1.cu"
void CUDAkernel1IDCT( float *__cuda_0,int __cuda_1,int __cuda_2,int __cuda_3)
# 131 "tests/dct8x8/dct8x8_kernel1.cu"
{__device_stub__Z15CUDAkernel1IDCTPfiii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 184 "tests/dct8x8/dct8x8_kernel1.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z14CUDAkernel2DCTPfS_i( float *__par0, float *__par1, int __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int))CUDAkernel2DCT)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int))CUDAkernel2DCT))); }; }
# 181 "tests/dct8x8/dct8x8_kernel2.cu"
void CUDAkernel2DCT( float *__cuda_0,float *__cuda_1,int __cuda_2)
# 181 "tests/dct8x8/dct8x8_kernel2.cu"
{__device_stub__Z14CUDAkernel2DCTPfS_i( __cuda_0,__cuda_1,__cuda_2);
# 208 "tests/dct8x8/dct8x8_kernel2.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z15CUDAkernel2IDCTPfS_i( float *__par0, float *__par1, int __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int))CUDAkernel2IDCT)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int))CUDAkernel2IDCT))); }; }
# 225 "tests/dct8x8/dct8x8_kernel2.cu"
void CUDAkernel2IDCT( float *__cuda_0,float *__cuda_1,int __cuda_2)
# 225 "tests/dct8x8/dct8x8_kernel2.cu"
{__device_stub__Z15CUDAkernel2IDCTPfS_i( __cuda_0,__cuda_1,__cuda_2);
# 252 "tests/dct8x8/dct8x8_kernel2.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z18CUDAkernelShortDCTPsi( short *__par0, int __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(short *, int))CUDAkernelShortDCT)); (void)cudaLaunch(((char *)((void ( *)(short *, int))CUDAkernelShortDCT))); }; }
# 441 "tests/dct8x8/dct8x8_kernel_short.cu"
void CUDAkernelShortDCT( short *__cuda_0,int __cuda_1)
# 441 "tests/dct8x8/dct8x8_kernel_short.cu"
{__device_stub__Z18CUDAkernelShortDCTPsi( __cuda_0,__cuda_1);
# 469 "tests/dct8x8/dct8x8_kernel_short.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z19CUDAkernelShortIDCTPsi( short *__par0, int __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(short *, int))CUDAkernelShortIDCT)); (void)cudaLaunch(((char *)((void ( *)(short *, int))CUDAkernelShortIDCT))); }; }
# 486 "tests/dct8x8/dct8x8_kernel_short.cu"
void CUDAkernelShortIDCT( short *__cuda_0,int __cuda_1)
# 486 "tests/dct8x8/dct8x8_kernel_short.cu"
{__device_stub__Z19CUDAkernelShortIDCTPsi( __cuda_0,__cuda_1);
# 515 "tests/dct8x8/dct8x8_kernel_short.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z27CUDAkernelQuantizationFloatPfi( float *__par0, int __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, int))CUDAkernelQuantizationFloat)); (void)cudaLaunch(((char *)((void ( *)(float *, int))CUDAkernelQuantizationFloat))); }; }
# 51 "tests/dct8x8/dct8x8_kernel_quantization.cu"
void CUDAkernelQuantizationFloat( float *__cuda_0,int __cuda_1)
# 52 "tests/dct8x8/dct8x8_kernel_quantization.cu"
{__device_stub__Z27CUDAkernelQuantizationFloatPfi( __cuda_0,__cuda_1);
# 71 "tests/dct8x8/dct8x8_kernel_quantization.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
void __device_stub__Z27CUDAkernelQuantizationShortPsi( short *__par0, int __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(short *, int))CUDAkernelQuantizationShort)); (void)cudaLaunch(((char *)((void ( *)(short *, int))CUDAkernelQuantizationShort))); }; }
# 84 "tests/dct8x8/dct8x8_kernel_quantization.cu"
void CUDAkernelQuantizationShort( short *__cuda_0,int __cuda_1)
# 85 "tests/dct8x8/dct8x8_kernel_quantization.cu"
{__device_stub__Z27CUDAkernelQuantizationShortPsi( __cuda_0,__cuda_1);
# 117 "tests/dct8x8/dct8x8_kernel_quantization.cu"
}
# 1 "/tmp/tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
static void __sti____cudaRegisterAll_41_tmpxft_00006d56_00000000_4_dct8x8_cpp1_ii_TexSrc(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(short *, int))CUDAkernelQuantizationShort), (char*)"_Z27CUDAkernelQuantizationShortPsi", "_Z27CUDAkernelQuantizationShortPsi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, int))CUDAkernelQuantizationFloat), (char*)"_Z27CUDAkernelQuantizationFloatPfi", "_Z27CUDAkernelQuantizationFloatPfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(short *, int))CUDAkernelShortIDCT), (char*)"_Z19CUDAkernelShortIDCTPsi", "_Z19CUDAkernelShortIDCTPsi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(short *, int))CUDAkernelShortDCT), (char*)"_Z18CUDAkernelShortDCTPsi", "_Z18CUDAkernelShortDCTPsi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, int))CUDAkernel2IDCT), (char*)"_Z15CUDAkernel2IDCTPfS_i", "_Z15CUDAkernel2IDCTPfS_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, int))CUDAkernel2DCT), (char*)"_Z14CUDAkernel2DCTPfS_i", "_Z14CUDAkernel2DCTPfS_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, int, int, int))CUDAkernel1IDCT), (char*)"_Z15CUDAkernel1IDCTPfiii", "_Z15CUDAkernel1IDCTPfiii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, int, int, int))CUDAkernel1DCT), (char*)"_Z14CUDAkernel1DCTPfiii", "_Z14CUDAkernel1DCTPfiii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&TexSrc, (const void**)"TexSrc", "TexSrc", 2, 0, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&DCTv8matrix, (char*)"DCTv8matrix", "DCTv8matrix", 0, 256, 1, 0); __cudaRegisterVar(__cudaFatCubinHandle, (char*)&Q, (char*)"Q", "Q", 0, 128, 1, 0); }
# 2 "tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c" 2
# 1 "tmpxft_00006d56_00000000-1_dct8x8.cudafe1.stub.c"
