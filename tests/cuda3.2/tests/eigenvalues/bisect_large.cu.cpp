# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.cpp"
# 1 "tests/eigenvalues/bisect_large.cu"
# 61 "/usr/local/cuda4.1/cuda/include/device_types.h"
# 149 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 1 3
# 56 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/device_types.h" 1 3
# 53 "/usr/local/cuda4.1/cuda/include/device_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/host_defines.h" 1 3
# 54 "/usr/local/cuda4.1/cuda/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/driver_types.h" 1 3
# 125 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 160 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 169 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 179 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 188 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 203 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 284 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 293 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 302 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 311 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 360 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 395 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 457 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 483 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,







    cudaErrorProfilerDisabled = 55,






    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,





     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




struct cudaArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 752 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 976 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
struct cudaIpcEventHandle_st
{
    char reserved[64];
};

struct cudaIpcMemHandle_st
{
    char reserved[64];
};
# 995 "/usr/local/cuda4.1/cuda/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef struct cudaIpcEventHandle_st cudaIpcEventHandle_t;
typedef struct cudaIpcMemHandle_st cudaIpcMemHandle_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/surface_types.h" 1 3
# 84 "/usr/local/cuda4.1/cuda/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};
# 59 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/texture_types.h" 1 3
# 84 "/usr/local/cuda4.1/cuda/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;
    int __cudaReserved[15];
};
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/vector_types.h" 1 3
# 59 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 1 3
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/vector_types.h" 1 3
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 60 "/usr/local/cuda4.1/cuda/include/vector_types.h" 2 3
# 94 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda4.1/cuda/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda4.1/cuda/include/builtin_types.h" 2 3
# 70 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stddef.h" 2 3
# 125 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 577 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 588 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 600 "/usr/local/cuda4.1/cuda/include/driver_types.h"
struct cudaArray;
# 605 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 614 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 627 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 639 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 650 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 660 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 677 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 695 "/usr/local/cuda4.1/cuda/include/driver_types.h"
struct cudaGraphicsResource;
# 700 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 712 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 722 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 735 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 770 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 820 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 831 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 842 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 852 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 861 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 976 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 981 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 995 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1000 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1005 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1010 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1015 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1020 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1021 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 1026 "/usr/local/cuda4.1/cuda/include/driver_types.h"
# 84 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 94 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 103 "/usr/local/cuda4.1/cuda/include/surface_types.h"
# 84 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 95 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 104 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 113 "/usr/local/cuda4.1/cuda/include/texture_types.h"
# 94 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 99 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 105 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 110 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 115 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 120 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 125 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 130 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 135 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 140 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 145 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 150 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 155 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 160 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 165 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 166 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 168 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 173 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 178 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 179 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 181 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 186 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 191 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 196 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 201 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 206 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 216 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 221 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 228 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 233 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 238 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 243 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 248 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 253 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 255 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 260 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 265 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 270 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 275 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 280 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 285 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 290 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 295 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 300 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 305 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 310 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 315 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 320 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 338 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 339 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 340 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 341 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 342 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 343 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 344 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 345 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 346 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 347 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 348 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 349 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 350 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 351 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 352 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 353 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 354 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 355 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 356 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 357 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 358 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 359 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 360 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 361 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 362 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 363 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 364 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 365 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 366 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 367 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 368 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 369 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 370 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 371 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 372 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 373 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 374 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 375 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 376 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 377 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 378 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 379 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 380 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 381 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 382 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 383 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 384 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 385 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 393 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 403 "/usr/local/cuda4.1/cuda/include/vector_types.h"
# 134 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 151 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 203 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 227 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 257 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 298 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 321 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 348 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 387 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 419 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 454 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 492 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t );
# 519 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 553 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 577 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 636 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 667 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 702 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 748 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 800 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 841 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 855 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 885 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1088 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1107 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1140 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1157 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1186 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1246 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1272 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1293 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1329 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1348 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1366 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1398 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1429 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1462 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1491 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1523 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1548 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 1589 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 1628 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 1655 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 1701 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char * , cudaFuncCache );
# 1736 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char * );
# 1769 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const char * );
# 1791 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 1813 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 1845 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 1874 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 1913 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 1955 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray ** , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 1979 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 1999 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2021 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray * );
# 2080 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2136 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2155 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2182 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2201 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2236 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2336 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray ** , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2433 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 2460 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 2565 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 2586 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 2605 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 2638 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 2669 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 2702 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 2735 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind );
# 2770 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2812 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 2853 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 2894 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 2933 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 2968 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char * , const void * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 3002 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const char * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 3045 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3075 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3117 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3159 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3210 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3260 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3310 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3354 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3397 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const char * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3419 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 3445 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 3484 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 3511 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 3543 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 3588 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 3615 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const char * );
# 3638 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const char * );
# 3783 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , void * );
# 3817 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 3858 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 3883 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 3929 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 3961 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 3996 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4027 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4056 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4090 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray ** , cudaGraphicsResource_t , unsigned , unsigned );
# 4123 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , const cudaArray * );
# 4158 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4205 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4256 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4284 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4305 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 4330 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 4354 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const char * );
# 4387 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4405 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const char * );
# 4432 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 4449 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 4454 "/usr/local/cuda4.1/cuda/include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 109 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 112 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 114 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 119 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 121 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 126 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 128 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 133 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 135 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 140 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 142 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 151 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 153 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 158 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 160 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 165 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 167 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 172 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 174 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 179 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 181 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 186 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 188 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 193 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 195 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 200 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 202 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 207 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 209 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 214 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 216 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 221 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 223 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 228 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 230 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 235 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 237 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 242 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 244 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 249 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 251 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 256 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 258 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 263 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 265 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 270 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 272 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 277 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 279 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 284 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 291 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 293 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 298 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 300 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 305 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 307 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 312 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 314 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 379 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 381 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 386 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 388 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 393 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 395 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 400 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
{
# 402 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda4.1/cuda/include/channel_descriptor.h"
}
# 79 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 81 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return s;
# 89 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 106 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 108 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return p;
# 115 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 132 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
{
# 134 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
return e;
# 141 "/usr/local/cuda4.1/cuda/include/driver_functions.h"
}
# 69 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 71 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 74 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 76 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 79 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 81 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 84 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 86 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 89 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 91 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 94 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 96 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 99 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 101 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 104 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 106 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 109 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 111 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 114 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 116 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 119 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 121 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 124 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 126 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 129 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 131 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 134 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 136 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 139 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 141 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 144 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 146 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 149 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 151 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 154 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 156 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 161 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 164 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 166 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 169 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 171 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 174 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 176 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 179 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 181 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 184 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 186 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 189 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 191 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 194 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 196 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 199 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 201 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 204 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 206 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 209 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 211 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 214 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 216 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 219 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 221 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 224 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 226 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 229 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 231 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 234 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 236 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 239 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 241 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 244 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 246 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 249 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 251 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 254 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 256 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 259 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 261 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 264 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 266 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 269 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 271 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 274 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 276 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 279 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 281 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 284 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 289 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 291 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 294 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 296 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 299 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 301 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 304 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
{
# 306 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda4.1/cuda/include/vector_functions.h"
}
# 44 "/usr/include/string.h" 3
extern "C" void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 46 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 49 "/usr/include/string.h" 3
extern "C" void *memmove(void * , const void * , size_t ) throw()
# 50 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 57 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 59 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 65 "/usr/include/string.h" 3
extern "C" void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1)));
# 68 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 69 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 75 "/usr/include/string.h" 3
extern void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 76 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 77 "/usr/include/string.h" 3
extern const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 78 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 104 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 105 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 106 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 107 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 115 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 116 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 117 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 118 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 128 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 129 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 131 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 133 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 139 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 140 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 146 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 147 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 151 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 153 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 155 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 165 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , __locale_t ) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 168 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , __locale_t ) throw()
# 169 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 175 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 176 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 183 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 184 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 215 "/usr/include/string.h" 3
extern char *strchr(char * , int ) throw() __asm__("strchr")
# 216 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 217 "/usr/include/string.h" 3
extern const char *strchr(const char * , int ) throw() __asm__("strchr")
# 218 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 242 "/usr/include/string.h" 3
extern char *strrchr(char * , int ) throw() __asm__("strrchr")
# 243 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 244 "/usr/include/string.h" 3
extern const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 245 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 271 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 272 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 273 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 274 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 284 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 288 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 289 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 294 "/usr/include/string.h" 3
extern char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 295 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 296 "/usr/include/string.h" 3
extern const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 297 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/string.h" 3
extern char *strstr(char * , const char * ) throw() __asm__("strstr")
# 322 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 323 "/usr/include/string.h" 3
extern const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 325 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 348 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 349 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 354 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 357 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 359 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 361 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 367 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 368 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 371 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 382 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 384 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 388 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 390 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 391 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 393 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 399 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 400 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 406 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 407 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 413 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 438 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 439 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 445 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , __locale_t ) throw();
# 451 "/usr/include/string.h" 3
extern "C" void __bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 455 "/usr/include/string.h" 3
extern "C" void bcopy(const void * , void * , size_t ) throw()
# 456 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/string.h" 3
extern "C" void bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 462 "/usr/include/string.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 463 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 469 "/usr/include/string.h" 3
extern char *index(char * , int ) throw() __asm__("index")
# 470 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 471 "/usr/include/string.h" 3
extern const char *index(const char * , int ) throw() __asm__("index")
# 472 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 497 "/usr/include/string.h" 3
extern char *rindex(char * , int ) throw() __asm__("rindex")
# 498 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 499 "/usr/include/string.h" 3
extern const char *rindex(const char * , int ) throw() __asm__("rindex")
# 500 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 523 "/usr/include/string.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 528 "/usr/include/string.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 530 "/usr/include/string.h" 3
extern "C" int ffsll(long long ) throw()
# 531 "/usr/include/string.h" 3
 __attribute((const));
# 536 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 537 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 541 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 547 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char * , const char * , __locale_t ) throw()
# 549 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 551 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , __locale_t ) throw()
# 553 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 559 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 561 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 566 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 569 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 570 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 571 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 572 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 576 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 578 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 581 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 586 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 587 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 590 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 593 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 601 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 602 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 603 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 604 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 44 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 45 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 53 "/usr/include/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 54 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 190 "/usr/include/time.h" 3
 __attribute((const));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , __locale_t ) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t * ) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" void *memset(void *, int, size_t) throw();
# 71 "/usr/local/cuda4.1/cuda/include/common_functions.h"
extern "C" void *memcpy(void *, const void *, size_t) throw();
# 160 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int abs(int) throw();
# 161 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long labs(long) throw();
# 162 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 175 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fabs(double ) throw();
# 188 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 189 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int min(int, int);
# 190 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 191 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 192 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 208 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 224 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 225 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int max(int, int);
# 226 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 228 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 244 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 260 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 273 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sin(double ) throw();
# 286 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cos(double ) throw();
# 301 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 317 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 330 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tan(double ) throw();
# 345 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 360 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rsqrt(double );
# 375 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rsqrtf(float );
# 390 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log2(double ) throw();
# 401 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp2(double ) throw();
# 412 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 423 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp10(double ) throw();
# 435 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 446 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double expm1(double ) throw();
# 457 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 472 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log2f(float ) throw();
# 487 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log10(double ) throw();
# 502 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log(double ) throw();
# 517 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double log1p(double ) throw();
# 532 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 546 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double floor(double ) throw();
# 557 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double exp(double ) throw();
# 570 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cosh(double ) throw();
# 582 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sinh(double ) throw();
# 594 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tanh(double ) throw();
# 608 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double acosh(double ) throw();
# 622 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double asinh(double ) throw();
# 646 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 660 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atanh(double ) throw();
# 674 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 686 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 698 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 711 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double logb(double ) throw();
# 724 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float logbf(float ) throw();
# 742 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 760 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 774 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 802 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 816 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 837 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 858 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 871 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double round(double ) throw();
# 884 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float roundf(float ) throw();
# 898 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lround(double ) throw();
# 912 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 926 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llround(double ) throw();
# 940 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 951 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rint(double ) throw();
# 962 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rintf(float ) throw();
# 974 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lrint(double ) throw();
# 986 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 998 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 1010 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 1023 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 1036 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 1048 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double ceil(double ) throw();
# 1059 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double trunc(double ) throw();
# 1070 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float truncf(float ) throw();
# 1084 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 1098 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 1113 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 1126 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double atan(double ) throw();
# 1140 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double acos(double ) throw();
# 1154 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double asin(double ) throw();
# 1169 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 1186 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 1200 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 1214 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 1227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double rcbrt(double );
# 1240 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float rcbrtf(float );
# 1254 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double sinpi(double );
# 1268 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinpif(float );
# 1282 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double cospi(double );
# 1296 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cospif(float );
# 1324 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 1341 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 1361 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 1379 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 1398 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 1417 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 1436 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 1451 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double j0(double ) throw();
# 1466 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float j0f(float ) throw();
# 1482 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double j1(double ) throw();
# 1498 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float j1f(float ) throw();
# 1514 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 1530 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 1547 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double y0(double ) throw();
# 1564 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float y0f(float ) throw();
# 1581 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double y1(double ) throw();
# 1598 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float y1f(float ) throw();
# 1616 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 1634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 1648 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erf(double ) throw();
# 1662 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erff(float ) throw();
# 1677 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfinv(double );
# 1692 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfinvf(float );
# 1706 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfc(double ) throw();
# 1720 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 1738 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 1753 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfcinv(double );
# 1768 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcinvf(float );
# 1778 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double erfcx(double );
# 1788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float erfcxf(float );
# 1806 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 1824 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 1842 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 1851 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 1860 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 1875 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 1890 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 1902 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 1914 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 1915 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinff(float) throw();
# 1916 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 1925 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finite(double) throw();
# 1926 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finitef(float) throw();
# 1927 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbit(double) throw();
# 1928 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnan(double) throw();
# 1929 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinf(double) throw();
# 1932 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 1949 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 1966 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 1971 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 1977 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 1978 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 1979 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 2017 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float acosf(float ) throw();
# 2031 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float asinf(float ) throw();
# 2045 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atanf(float ) throw();
# 2060 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 2074 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float cosf(float ) throw();
# 2088 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinf(float ) throw();
# 2102 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tanf(float ) throw();
# 2116 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float coshf(float ) throw();
# 2129 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 2141 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 2156 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float logf(float ) throw();
# 2168 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float expf(float ) throw();
# 2183 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float log10f(float ) throw();
# 2199 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 2227 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 2242 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 2254 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 2268 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float floorf(float ) throw();
# 2288 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 31 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 32 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double ) throw(); extern "C" double __pow10(double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw() __attribute((const)); extern "C" double __nan(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw() __attribute((const)); extern "C" double __nextafter(double , double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw() __attribute((const)); extern "C" double __nexttoward(double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw(); extern "C" double __fmax(double , double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw(); extern "C" double __fmin(double , double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbit(double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float ) throw(); extern "C" float __pow10f(float ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw() __attribute((const)); extern "C" float __nanf(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw() __attribute((const)); extern "C" float __nextafterf(float , float ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw() __attribute((const)); extern "C" float __nexttowardf(float , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw(); extern "C" float __fmaxf(float , float ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw(); extern "C" float __fminf(float , float ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitf(float ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw();
# 83 "/usr/include/bits/mathcalls.h" 3
extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double ) throw(); extern "C" long double __pow10l(long double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw() __attribute((const)); extern "C" long double __nanl(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw() __attribute((const)); extern "C" long double __nextafterl(long double , long double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw() __attribute((const)); extern "C" long double __nexttowardl(long double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw(); extern "C" long double __fmaxl(long double , long double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw(); extern "C" long double __fminl(long double , long double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitl(long double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 161 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 203 "/usr/include/math.h" 3
enum {
# 204 "/usr/include/math.h" 3
FP_NAN,
# 206 "/usr/include/math.h" 3
FP_INFINITE,
# 208 "/usr/include/math.h" 3
FP_ZERO,
# 210 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 212 "/usr/include/math.h" 3
FP_NORMAL
# 214 "/usr/include/math.h" 3
};
# 302 "/usr/include/math.h" 3
extern "C" { typedef
# 296 "/usr/include/math.h" 3
enum {
# 297 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 298 "/usr/include/math.h" 3
_SVID_ = 0,
# 299 "/usr/include/math.h" 3
_XOPEN_,
# 300 "/usr/include/math.h" 3
_POSIX_,
# 301 "/usr/include/math.h" 3
_ISOC_
# 302 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 307 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 318 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 323 "/usr/include/math.h" 3
int type;
# 324 "/usr/include/math.h" 3
char *name;
# 325 "/usr/include/math.h" 3
double arg1;
# 326 "/usr/include/math.h" 3
double arg2;
# 327 "/usr/include/math.h" 3
double retval;
# 328 "/usr/include/math.h" 3
}; }
# 331 "/usr/include/math.h" 3
extern "C" int matherr(__exception * ) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char * ) throw()
# 146 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char * ) throw()
# 149 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char * ) throw()
# 152 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char * ) throw()
# 159 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 167 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 174 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 186 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 190 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 198 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 212 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 217 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 242 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 247 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 253 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 259 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 263 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 267 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 272 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 315 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 34 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 45 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 49 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 56 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 61 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 66 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 71 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 76 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 81 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 87 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 94 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t __attribute((__mode__(__QI__))); }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t __attribute((__mode__(__HI__))); }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t __attribute((__mode__(__SI__))); }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long int64_t __attribute((__mode__(__DI__))); }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t __attribute((__mode__(__SI__))); }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 75 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 77 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 78 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 79 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long ) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long ) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned , unsigned ) throw();
# 229 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 236 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 240 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 244 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 265 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 65 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 61 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 63 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 64 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 65 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 84 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 90 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 91 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 154 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 155 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 156 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 157 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 158 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 159 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 160 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 161 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 162 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 163 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 164 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 167 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 168 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 337 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 361 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 364 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 369 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 373 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 401 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 406 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 429 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 437 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 446 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 450 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 454 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 457 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 461 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 474 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 486 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void * ) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 503 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__));
# 508 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 509 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 514 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 518 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 525 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 526 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 536 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 537 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 544 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 552 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 560 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 567 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1)));
# 572 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char * ) throw()
# 573 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 579 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 585 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 586 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 589 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw() __attribute((__nonnull__(1)));
# 596 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 620 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1)));
# 630 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1)));
# 642 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1)));
# 652 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 653 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 663 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1)));
# 674 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1)));
# 684 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1)));
# 694 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 695 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 706 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 707 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 717 "/usr/include/stdlib.h" 3
extern "C" int system(const char * );
# 724 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 725 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 734 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__ , char *__restrict__ ) throw();
# 742 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 745 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 749 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 755 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 757 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 761 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 762 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 764 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 766 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 771 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const));
# 772 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const));
# 776 "/usr/include/stdlib.h" 3
extern "C" long long llabs(long long ) throw()
# 777 "/usr/include/stdlib.h" 3
 __attribute((const));
# 785 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 786 "/usr/include/stdlib.h" 3
 __attribute((const));
# 787 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 788 "/usr/include/stdlib.h" 3
 __attribute((const));
# 793 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long , long long ) throw()
# 795 "/usr/include/stdlib.h" 3
 __attribute((const));
# 808 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 809 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 814 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 815 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 820 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 821 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 826 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 828 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 829 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 832 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 833 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 838 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 840 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 841 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 845 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 848 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 849 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 852 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 860 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 863 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 867 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char * , wchar_t ) throw();
# 871 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 874 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 885 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1)));
# 896 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 899 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 905 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char * ) throw() __attribute((__nonnull__(1)));
# 913 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int );
# 921 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 925 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 930 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw();
# 937 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int , char * , size_t ) throw()
# 938 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 941 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 948 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 949 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 69 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 74 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 418 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
class __is_iterator_helper {
# 420 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef char __one;
# 421 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef struct { char __arr[2]; } __two;
# 423 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up>
# 424 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct _Wrap_type {
# 425 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 427 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up> static __one __test(_Wrap_type< typename _Up::iterator_category> *);
# 430 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Up> static __two __test(...);
# 434 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
public: static const bool __value = ((sizeof(__test< _Tp> (0)) == (1)) || __is_pointer< _Tp> ::__value);
# 436 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 438 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 439 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
struct __is_iterator {
# 441 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
enum { __value = __is_iterator_helper< _Tp> ::__value};
# 442 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 443 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
};
# 445 "/usr/include/c++/4.5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.5/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.5/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.5/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.5/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.5/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.5/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.5/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.5/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.5/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.5/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.5/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    abs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 111 "/usr/include/c++/4.5/cmath" 3
using ::acos;
# 114 "/usr/include/c++/4.5/cmath" 3
inline float acos(float __x)
# 115 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_acosf(__x); }
# 118 "/usr/include/c++/4.5/cmath" 3
inline long double acos(long double __x)
# 119 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_acosl(__x); }
# 121 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 127 "/usr/include/c++/4.5/cmath" 3
using ::asin;
# 130 "/usr/include/c++/4.5/cmath" 3
inline float asin(float __x)
# 131 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_asinf(__x); }
# 134 "/usr/include/c++/4.5/cmath" 3
inline long double asin(long double __x)
# 135 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_asinl(__x); }
# 137 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 143 "/usr/include/c++/4.5/cmath" 3
using ::atan;
# 146 "/usr/include/c++/4.5/cmath" 3
inline float atan(float __x)
# 147 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atanf(__x); }
# 150 "/usr/include/c++/4.5/cmath" 3
inline long double atan(long double __x)
# 151 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atanl(__x); }
# 153 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 159 "/usr/include/c++/4.5/cmath" 3
using ::atan2;
# 162 "/usr/include/c++/4.5/cmath" 3
inline float atan2(float __y, float __x)
# 163 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 166 "/usr/include/c++/4.5/cmath" 3
inline long double atan2(long double __y, long double __x)
# 167 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 169 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 181 "/usr/include/c++/4.5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/4.5/cmath" 3
inline float ceil(float __x)
# 185 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/4.5/cmath" 3
inline long double ceil(long double __x)
# 189 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ceill(__x); }
# 191 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 197 "/usr/include/c++/4.5/cmath" 3
using ::cos;
# 200 "/usr/include/c++/4.5/cmath" 3
inline float cos(float __x)
# 201 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_cosf(__x); }
# 204 "/usr/include/c++/4.5/cmath" 3
inline long double cos(long double __x)
# 205 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_cosl(__x); }
# 207 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 213 "/usr/include/c++/4.5/cmath" 3
using ::cosh;
# 216 "/usr/include/c++/4.5/cmath" 3
inline float cosh(float __x)
# 217 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_coshf(__x); }
# 220 "/usr/include/c++/4.5/cmath" 3
inline long double cosh(long double __x)
# 221 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_coshl(__x); }
# 223 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 229 "/usr/include/c++/4.5/cmath" 3
using ::exp;
# 232 "/usr/include/c++/4.5/cmath" 3
inline float exp(float __x)
# 233 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_expf(__x); }
# 236 "/usr/include/c++/4.5/cmath" 3
inline long double exp(long double __x)
# 237 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_expl(__x); }
# 239 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 245 "/usr/include/c++/4.5/cmath" 3
using ::fabs;
# 248 "/usr/include/c++/4.5/cmath" 3
inline float fabs(float __x)
# 249 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsf(__x); }
# 252 "/usr/include/c++/4.5/cmath" 3
inline long double fabs(long double __x)
# 253 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fabsl(__x); }
# 255 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 261 "/usr/include/c++/4.5/cmath" 3
using ::floor;
# 264 "/usr/include/c++/4.5/cmath" 3
inline float floor(float __x)
# 265 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_floorf(__x); }
# 268 "/usr/include/c++/4.5/cmath" 3
inline long double floor(long double __x)
# 269 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_floorl(__x); }
# 271 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 277 "/usr/include/c++/4.5/cmath" 3
using ::fmod;
# 280 "/usr/include/c++/4.5/cmath" 3
inline float fmod(float __x, float __y)
# 281 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 284 "/usr/include/c++/4.5/cmath" 3
inline long double fmod(long double __x, long double __y)
# 285 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 287 "/usr/include/c++/4.5/cmath" 3
using ::frexp;
# 290 "/usr/include/c++/4.5/cmath" 3
inline float frexp(float __x, int *__exp)
# 291 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 294 "/usr/include/c++/4.5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 295 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 297 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 303 "/usr/include/c++/4.5/cmath" 3
using ::ldexp;
# 306 "/usr/include/c++/4.5/cmath" 3
inline float ldexp(float __x, int __exp)
# 307 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 310 "/usr/include/c++/4.5/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 311 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 313 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 319 "/usr/include/c++/4.5/cmath" 3
using ::log;
# 322 "/usr/include/c++/4.5/cmath" 3
inline float log(float __x)
# 323 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_logf(__x); }
# 326 "/usr/include/c++/4.5/cmath" 3
inline long double log(long double __x)
# 327 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_logl(__x); }
# 329 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 335 "/usr/include/c++/4.5/cmath" 3
using ::log10;
# 338 "/usr/include/c++/4.5/cmath" 3
inline float log10(float __x)
# 339 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_log10f(__x); }
# 342 "/usr/include/c++/4.5/cmath" 3
inline long double log10(long double __x)
# 343 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_log10l(__x); }
# 345 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 351 "/usr/include/c++/4.5/cmath" 3
using ::modf;
# 354 "/usr/include/c++/4.5/cmath" 3
inline float modf(float __x, float *__iptr)
# 355 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 358 "/usr/include/c++/4.5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 359 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 361 "/usr/include/c++/4.5/cmath" 3
using ::pow;
# 364 "/usr/include/c++/4.5/cmath" 3
inline float pow(float __x, float __y)
# 365 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 368 "/usr/include/c++/4.5/cmath" 3
inline long double pow(long double __x, long double __y)
# 369 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 375 "/usr/include/c++/4.5/cmath" 3
inline double pow(double __x, int __i)
# 376 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powi(__x, __i); }
# 379 "/usr/include/c++/4.5/cmath" 3
inline float pow(float __x, int __n)
# 380 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powif(__x, __n); }
# 383 "/usr/include/c++/4.5/cmath" 3
inline long double pow(long double __x, int __n)
# 384 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_powil(__x, __n); }
# 387 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 399 "/usr/include/c++/4.5/cmath" 3
using ::sin;
# 402 "/usr/include/c++/4.5/cmath" 3
inline float sin(float __x)
# 403 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinf(__x); }
# 406 "/usr/include/c++/4.5/cmath" 3
inline long double sin(long double __x)
# 407 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinl(__x); }
# 409 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 415 "/usr/include/c++/4.5/cmath" 3
using ::sinh;
# 418 "/usr/include/c++/4.5/cmath" 3
inline float sinh(float __x)
# 419 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinhf(__x); }
# 422 "/usr/include/c++/4.5/cmath" 3
inline long double sinh(long double __x)
# 423 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sinhl(__x); }
# 425 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 431 "/usr/include/c++/4.5/cmath" 3
using ::sqrt;
# 434 "/usr/include/c++/4.5/cmath" 3
inline float sqrt(float __x)
# 435 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 438 "/usr/include/c++/4.5/cmath" 3
inline long double sqrt(long double __x)
# 439 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 441 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 447 "/usr/include/c++/4.5/cmath" 3
using ::tan;
# 450 "/usr/include/c++/4.5/cmath" 3
inline float tan(float __x)
# 451 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanf(__x); }
# 454 "/usr/include/c++/4.5/cmath" 3
inline long double tan(long double __x)
# 455 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanl(__x); }
# 457 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 463 "/usr/include/c++/4.5/cmath" 3
using ::tanh;
# 466 "/usr/include/c++/4.5/cmath" 3
inline float tanh(float __x)
# 467 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanhf(__x); }
# 470 "/usr/include/c++/4.5/cmath" 3
inline long double tanh(long double __x)
# 471 "/usr/include/c++/4.5/cmath" 3
{ return __builtin_tanhl(__x); }
# 473 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 479 "/usr/include/c++/4.5/cmath" 3
}
# 498 "/usr/include/c++/4.5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 500 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 510 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 519 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 528 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 537 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 546 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 555 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 564 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 573 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 582 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 591 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 600 "/usr/include/c++/4.5/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 609 "/usr/include/c++/4.5/cmath" 3
}
# 35 "/usr/include/c++/4.5/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.5/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.5/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.5/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.5/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.5/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.5/cstddef" 3
}
# 100 "/usr/include/c++/4.5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.5/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.5/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.5/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.5/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.5/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.5/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.5/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.5/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.5/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.5/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.5/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.5/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.5/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.5/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.5/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.5/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.5/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.5/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.5/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.5/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.5/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.5/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.5/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.5/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.5/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.5/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.5/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.5/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.5/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.5/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.5/cstdlib" 3
}
# 157 "/usr/include/c++/4.5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.5/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.5/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.5/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.5/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.5/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.5/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.5/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.5/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.5/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.5/cstdlib" 3
}
# 199 "/usr/include/c++/4.5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.5/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.5/cstdlib" 3
}
# 2335 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace __gnu_cxx {
# 2337 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline long long abs(long long);
# 2338 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2340 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace std {
# 2342 "/usr/local/cuda4.1/cuda/include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 2343 "/usr/local/cuda4.1/cuda/include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 2344 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2346 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::abs;
# 2347 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::fabs;
# 2348 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::ceil;
# 2349 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::floor;
# 2350 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sqrt;
# 2351 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::pow;
# 2352 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::log;
# 2353 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::log10;
# 2354 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::fmod;
# 2355 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::modf;
# 2356 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::exp;
# 2357 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::frexp;
# 2358 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::ldexp;
# 2359 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::asin;
# 2360 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sin;
# 2361 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::sinh;
# 2362 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::acos;
# 2363 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::cos;
# 2364 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::cosh;
# 2365 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::atan;
# 2366 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::atan2;
# 2367 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::tan;
# 2368 "/usr/local/cuda4.1/cuda/include/math_functions.h"
using std::tanh;
# 2531 "/usr/local/cuda4.1/cuda/include/math_functions.h"
namespace std {
# 2534 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline long abs(long);
# 2535 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float abs(float);
# 2536 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline double abs(double);
# 2537 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float fabs(float);
# 2538 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float ceil(float);
# 2539 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float floor(float);
# 2540 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sqrt(float);
# 2541 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float pow(float, float);
# 2542 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float pow(float, int);
# 2543 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline double pow(double, int);
# 2544 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float log(float);
# 2545 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float log10(float);
# 2546 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float fmod(float, float);
# 2547 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float modf(float, float *);
# 2548 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float exp(float);
# 2549 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float frexp(float, int *);
# 2550 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float ldexp(float, int);
# 2551 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float asin(float);
# 2552 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sin(float);
# 2553 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float sinh(float);
# 2554 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float acos(float);
# 2555 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float cos(float);
# 2556 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float cosh(float);
# 2557 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float atan(float);
# 2558 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float atan2(float, float);
# 2559 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float tan(float);
# 2560 "/usr/local/cuda4.1/cuda/include/math_functions.h"
extern inline float tanh(float);
# 2563 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2566 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float logb(float a)
# 2567 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2568 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return logbf(a);
# 2569 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2571 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline int ilogb(float a)
# 2572 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2573 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ilogbf(a);
# 2574 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2576 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float scalbn(float a, int b)
# 2577 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2578 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return scalbnf(a, b);
# 2579 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2581 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float scalbln(float a, long b)
# 2582 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2583 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return scalblnf(a, b);
# 2584 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2586 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float exp2(float a)
# 2587 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2588 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return exp2f(a);
# 2589 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2591 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float exp10(float a)
# 2592 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2593 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return exp10f(a);
# 2594 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2596 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float expm1(float a)
# 2597 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2598 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return expm1f(a);
# 2599 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2601 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float log2(float a)
# 2602 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2603 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return log2f(a);
# 2604 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2606 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float log1p(float a)
# 2607 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2608 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return log1pf(a);
# 2609 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2611 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rsqrt(float a)
# 2612 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2613 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rsqrtf(a);
# 2614 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2616 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float acosh(float a)
# 2617 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2618 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return acoshf(a);
# 2619 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2621 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float asinh(float a)
# 2622 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2623 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return asinhf(a);
# 2624 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2626 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float atanh(float a)
# 2627 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2628 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return atanhf(a);
# 2629 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2631 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float hypot(float a, float b)
# 2632 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2633 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return hypotf(a, b);
# 2634 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2636 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float cbrt(float a)
# 2637 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2638 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return cbrtf(a);
# 2639 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2641 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rcbrt(float a)
# 2642 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2643 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rcbrtf(a);
# 2644 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2646 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float sinpi(float a)
# 2647 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2648 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return sinpif(a);
# 2649 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2651 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float cospi(float a)
# 2652 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2653 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return cospif(a);
# 2654 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2656 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 2657 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2658 "/usr/local/cuda4.1/cuda/include/math_functions.h"
sincosf(a, sptr, cptr);
# 2659 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2661 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float j0(float a)
# 2662 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2663 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return j0f(a);
# 2664 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2666 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float j1(float a)
# 2667 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2668 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return j1f(a);
# 2669 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2671 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float jn(int n, float a)
# 2672 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2673 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return jnf(n, a);
# 2674 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2676 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float y0(float a)
# 2677 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2678 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return y0f(a);
# 2679 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2681 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float y1(float a)
# 2682 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2683 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return y1f(a);
# 2684 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2686 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float yn(int n, float a)
# 2687 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2688 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ynf(n, a);
# 2689 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2691 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erf(float a)
# 2692 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2693 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erff(a);
# 2694 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2696 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfinv(float a)
# 2697 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2698 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfinvf(a);
# 2699 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2701 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfc(float a)
# 2702 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2703 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcf(a);
# 2704 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2706 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfcinv(float a)
# 2707 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2708 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcinvf(a);
# 2709 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2711 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float erfcx(float a)
# 2712 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2713 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return erfcxf(a);
# 2714 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2716 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float lgamma(float a)
# 2717 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2718 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lgammaf(a);
# 2719 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2721 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float tgamma(float a)
# 2722 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2723 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return tgammaf(a);
# 2724 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2726 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float copysign(float a, float b)
# 2727 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2728 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysignf(a, b);
# 2729 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2731 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double copysign(double a, float b)
# 2732 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2733 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysign(a, (double)b);
# 2734 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2736 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float copysign(float a, double b)
# 2737 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2738 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return copysignf(a, (float)b);
# 2739 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2741 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float nextafter(float a, float b)
# 2742 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2743 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return nextafterf(a, b);
# 2744 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2746 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float remainder(float a, float b)
# 2747 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2748 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return remainderf(a, b);
# 2749 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2751 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 2752 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2753 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return remquof(a, b, quo);
# 2754 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2756 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float round(float a)
# 2757 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2758 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return roundf(a);
# 2759 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2761 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long lround(float a)
# 2762 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2763 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lroundf(a);
# 2764 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2766 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long llround(float a)
# 2767 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2768 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llroundf(a);
# 2769 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2771 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float trunc(float a)
# 2772 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2773 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return truncf(a);
# 2774 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2776 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float rint(float a)
# 2777 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2778 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return rintf(a);
# 2779 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2781 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long lrint(float a)
# 2782 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2783 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return lrintf(a);
# 2784 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2786 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long llrint(float a)
# 2787 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2788 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llrintf(a);
# 2789 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2791 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float nearbyint(float a)
# 2792 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2793 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return nearbyintf(a);
# 2794 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2796 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fdim(float a, float b)
# 2797 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2798 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fdimf(a, b);
# 2799 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2801 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fma(float a, float b, float c)
# 2802 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2803 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaf(a, b, c);
# 2804 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2806 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fmax(float a, float b)
# 2807 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2808 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaxf(a, b);
# 2809 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2811 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float fmin(float a, float b)
# 2812 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2813 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fminf(a, b);
# 2814 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2816 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 2817 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2818 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin(a, b);
# 2819 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2821 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 2822 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2823 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin((unsigned)a, b);
# 2824 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2826 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 2827 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2828 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umin(a, (unsigned)b);
# 2829 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2831 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long min(long long a, long long b)
# 2832 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2833 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llmin(a, b);
# 2834 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2836 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 2837 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2838 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin(a, b);
# 2839 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2841 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 2842 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2843 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 2844 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2846 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 2847 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2848 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 2849 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2851 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float min(float a, float b)
# 2852 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2853 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fminf(a, b);
# 2854 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2856 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(double a, double b)
# 2857 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2858 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin(a, b);
# 2859 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2861 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(float a, double b)
# 2862 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2863 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin((double)a, b);
# 2864 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2866 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double min(double a, float b)
# 2867 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2868 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmin(a, (double)b);
# 2869 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2871 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 2872 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2873 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax(a, b);
# 2874 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2876 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 2877 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2878 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax((unsigned)a, b);
# 2879 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2881 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 2882 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2883 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return umax(a, (unsigned)b);
# 2884 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2886 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline long long max(long long a, long long b)
# 2887 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2888 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return llmax(a, b);
# 2889 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2891 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 2892 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2893 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax(a, b);
# 2894 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2896 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 2897 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2898 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 2899 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2901 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 2902 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2903 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 2904 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2906 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline float max(float a, float b)
# 2907 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2908 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmaxf(a, b);
# 2909 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2911 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(double a, double b)
# 2912 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2913 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax(a, b);
# 2914 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2916 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(float a, double b)
# 2917 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2918 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax((double)a, b);
# 2919 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 2921 "/usr/local/cuda4.1/cuda/include/math_functions.h"
static inline double max(double a, float b)
# 2922 "/usr/local/cuda4.1/cuda/include/math_functions.h"
{
# 2923 "/usr/local/cuda4.1/cuda/include/math_functions.h"
return fmax(a, (double)b);
# 2924 "/usr/local/cuda4.1/cuda/include/math_functions.h"
}
# 73 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda4.1/cuda/include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 77 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 78 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 79 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda4.1/cuda/include/cuda_texture_types.h"
};
# 1103 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 1104 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1106 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1108 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 1109 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1111 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1113 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 1114 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1116 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1118 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 1119 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1121 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1123 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 1124 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1126 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1128 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 1129 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1131 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1133 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 1134 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1136 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1138 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 1139 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1141 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1143 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 1144 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1146 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1148 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 1149 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1151 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1153 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 1154 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1156 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1158 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 1159 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1161 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1163 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 1164 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1166 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1168 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 1169 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;
# 1171 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1174 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = 0)
# 1175 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 1177 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1179 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 1180 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1184 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 1185 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 1202 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1204 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = true)
# 1205 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 1207 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1209 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero)
# 1210 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1215 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1217 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero)
# 1218 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1223 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1225 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest)
# 1226 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1231 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 1233 "/usr/local/cuda4.1/cuda/include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 1234 "/usr/local/cuda4.1/cuda/include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1239 "/usr/local/cuda4.1/cuda/include/device_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 106 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 111 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 116 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 121 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 126 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 131 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 136 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 141 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 146 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 151 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 156 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 161 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 166 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 171 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 176 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 181 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 186 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 191 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 196 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda4.1/cuda/include/sm_11_atomic_functions.h"
exit(___);}
# 81 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 86 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 91 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda4.1/cuda/include/sm_12_atomic_functions.h"
exit(___);}
# 521 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 522 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 527 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 529 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 530 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 535 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 537 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 538 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 543 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero)
# 546 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 551 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 553 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero)
# 554 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 559 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 561 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero)
# 562 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 567 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 569 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero)
# 570 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 575 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 577 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest)
# 578 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 583 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 585 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest)
# 586 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 591 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 593 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest)
# 594 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 596 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 598 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 599 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 601 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 603 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest)
# 604 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 606 "/usr/local/cuda4.1/cuda/include/sm_13_double_functions.h"
exit(___);}
# 77 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda4.1/cuda/include/sm_20_atomic_functions.h"
exit(___);}
# 239 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 240 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 242 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 244 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 245 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 247 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 249 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 250 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 252 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 254 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 255 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 257 "/usr/local/cuda4.1/cuda/include/sm_20_intrinsics.h"
exit(___);}
# 99 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 100 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 110 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 111 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 112 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 120 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 122 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 139 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 151 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 157 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 179 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 197 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 203 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 217 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 237 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 249 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 295 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 301 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 307 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 387 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 447 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 459 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 469 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 481 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 487 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 499 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 505 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 519 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 527 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 533 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 539 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 551 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 565 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 579 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 585 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 591 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 597 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 603 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 623 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 631 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 637 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 643 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 649 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 655 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 669 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 735 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 741 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 747 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 755 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 795 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 796 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 797 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 806 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 807 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 808 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 816 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 817 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 818 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 823 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 829 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 835 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 847 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 853 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 867 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 875 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 887 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 905 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 913 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 927 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 933 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 939 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 945 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 957 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 965 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 985 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 997 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1003 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1017 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1083 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1089 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1095 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1103 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1143 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1144 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1155 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1156 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1177 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1195 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1215 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1247 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1267 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1287 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1305 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1319 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1327 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1357 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1365 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1431 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1437 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1443 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1451 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1491 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1492 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1503 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1504 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1512 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1514 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1519 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1525 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1531 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1543 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1549 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1577 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1583 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1589 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1595 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1601 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1615 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1623 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1635 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1641 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1647 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1653 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1675 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1681 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1693 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1705 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1713 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1779 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1785 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1791 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1799 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1840 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1850 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1851 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1852 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1860 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1862 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1867 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1873 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1879 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1885 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1891 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1897 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1905 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1925 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1931 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1937 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1943 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1957 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1963 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1977 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1983 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 1995 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2015 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2023 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2029 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2035 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2041 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2053 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2061 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2139 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2147 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2189 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2199 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 2200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2209 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2211 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2222 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2234 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2254 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2260 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2274 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2292 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2312 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2320 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2326 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2332 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2338 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2350 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2364 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2372 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2378 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2390 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2402 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2410 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2476 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2496 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2539 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2559 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2561 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2566 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2567 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2571 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2572 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2576 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2577 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2581 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2582 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2586 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2587 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2591 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2592 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2596 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2597 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2601 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2602 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2606 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2607 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2611 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2621 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2622 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2627 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2631 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2632 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2636 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2637 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2641 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2642 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2646 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2647 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2651 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2652 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2656 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2657 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2661 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2662 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2671 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2672 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2676 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2677 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2681 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2682 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2686 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2691 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2692 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2696 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2697 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2701 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2706 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2707 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2711 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2712 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2716 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2717 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2765 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2766 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2770 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2771 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2775 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2776 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2781 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2819 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2821 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2841 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2843 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2848 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2849 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2853 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2854 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2858 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2859 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2863 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2864 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2868 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2869 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2873 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2874 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2878 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2879 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2883 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2884 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2888 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2889 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2903 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2904 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2909 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2913 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2914 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2918 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2919 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2923 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2924 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2928 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2929 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2933 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2934 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2938 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2939 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2943 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2944 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2953 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2954 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2958 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2959 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2963 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2964 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2968 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2969 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2973 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2974 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2978 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2983 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2988 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2993 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 2998 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2999 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3048 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3052 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3053 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3057 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3058 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3063 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3102 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3103 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3123 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3125 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3130 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3131 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3135 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3136 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3140 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3141 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3145 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3146 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3150 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3151 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3155 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3156 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3160 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3161 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3165 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3166 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3170 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3171 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3175 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3181 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3195 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3196 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3200 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3201 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3205 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3206 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3210 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3211 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3215 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3216 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3220 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3221 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3225 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3226 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3235 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3236 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3240 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3241 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3245 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3246 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3250 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3256 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3260 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3265 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3270 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3275 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3280 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3330 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3335 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3340 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3345 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3383 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3385 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3405 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3406 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3407 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3412 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3413 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3417 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3418 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3422 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3423 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3427 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3428 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3432 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3433 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3437 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3438 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3442 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3443 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3447 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3448 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3452 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3453 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3457 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3462 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3463 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3467 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3473 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3477 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3478 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3482 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3483 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3487 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3488 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3492 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3493 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3497 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3498 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3502 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3503 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3507 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3508 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3512 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3513 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3517 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3518 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3522 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3523 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3527 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3528 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3532 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3533 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3537 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3538 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3542 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3543 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3547 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3548 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3552 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3553 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3557 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3558 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3562 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3563 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3611 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3612 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3616 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3617 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3621 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3622 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3626 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3627 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3665 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3666 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3667 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3687 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3688 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3689 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3694 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3695 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3699 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3700 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3704 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3705 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3709 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3710 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3714 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3715 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3719 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3720 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3724 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3725 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3729 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3730 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3734 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3735 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3739 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3740 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3744 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3745 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3749 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3750 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3754 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3755 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3759 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3760 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3764 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3765 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3769 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3770 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3774 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3775 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3779 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3780 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3784 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3785 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3789 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3790 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3794 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3795 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3799 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3800 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3804 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3805 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3809 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3810 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3814 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3815 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3819 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3820 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3824 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3825 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3829 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3830 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3834 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3835 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3839 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3840 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3844 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3845 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3893 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3894 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3898 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3899 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3903 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3904 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3908 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3909 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3947 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3948 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3949 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3969 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3970 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3971 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3976 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3977 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3981 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3982 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3986 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3987 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3991 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3992 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 3996 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3997 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4001 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4002 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4006 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4007 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4011 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4012 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4016 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4017 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4021 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4022 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4026 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4027 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4031 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4032 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4036 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4037 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4041 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4042 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4046 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4047 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4051 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4052 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4056 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4057 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4061 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4062 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4066 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4067 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4071 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4072 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4076 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4077 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4081 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4082 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4086 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4087 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4091 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4092 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4096 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4097 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4101 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4102 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4106 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4107 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4111 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4112 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4116 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4117 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4121 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4122 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4126 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4127 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4175 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4176 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4180 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4181 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4185 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4186 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4190 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4191 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4229 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4230 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4231 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4251 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4252 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4253 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4258 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4259 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4263 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4264 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4268 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4269 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4273 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4274 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4278 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4279 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4283 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4284 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4288 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4289 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4293 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4294 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4298 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4299 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4303 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4304 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4308 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4309 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4313 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4314 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4318 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4319 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4323 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4324 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4328 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4329 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4333 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4334 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4338 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4339 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4343 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4344 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4348 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4349 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4353 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4354 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4358 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4359 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4363 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4364 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4368 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4369 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4373 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4374 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4378 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4379 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4383 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4384 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4388 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4389 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4393 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4394 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4398 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4399 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4403 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4404 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4408 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4409 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4457 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4458 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4462 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4463 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4467 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4468 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 4472 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4473 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda4.1/cuda/include/surface_functions.h"
exit(___);}
# 96 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 107 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 114 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 121 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 128 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 142 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 149 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 156 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 169 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 190 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 197 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 204 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 211 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 218 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 238 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 252 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 259 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 266 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 273 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 280 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 359 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 373 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 453 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 461 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 531 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 545 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 556 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 563 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 570 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 577 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 591 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 598 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 605 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 618 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 639 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 646 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 653 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 660 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 667 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 687 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 694 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 701 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 708 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 715 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 722 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 729 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 848 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 908 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 986 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1011 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1032 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1039 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1046 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1053 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1087 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1094 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1101 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1108 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1115 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1142 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1149 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1156 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1163 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1170 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1177 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1270 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1284 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1297 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1357 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1449 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1460 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1474 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1481 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1488 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1495 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1502 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1509 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1536 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1543 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1550 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1557 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1564 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1591 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1598 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1605 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1612 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1619 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1626 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1712 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1719 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1726 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1733 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1746 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1806 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1937 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1944 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1951 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1958 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 1999 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2006 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2013 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2020 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2054 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2061 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2068 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2075 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2082 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2168 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2182 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2195 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2207 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2215 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2239 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2247 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2255 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2293 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2301 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2309 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2317 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2372 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2379 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2386 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2393 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2400 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2407 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2434 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2441 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2448 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2455 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2462 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2469 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2482 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2489 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2496 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2503 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2510 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2517 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2524 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2531 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2617 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2631 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2644 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2656 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2664 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2688 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2696 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2704 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2712 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2726 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2734 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2742 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2750 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2758 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2766 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2774 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2782 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2807 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2814 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2842 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2849 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2856 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2869 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2883 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2897 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2904 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2911 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2918 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2952 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2959 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2966 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2973 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 2980 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3059 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3066 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3073 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3080 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3093 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3105 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3113 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3121 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3129 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3137 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3145 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3153 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3161 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3175 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3183 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3191 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3199 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3207 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3215 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3223 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3231 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3245 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3256 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3263 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3270 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3277 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3284 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3291 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3298 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3305 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3318 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3325 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3332 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3339 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3346 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3353 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3360 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3367 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3380 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3387 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3394 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3401 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3408 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3415 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3422 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3429 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3508 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3515 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3522 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3529 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3542 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3554 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3562 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3570 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3578 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3586 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3594 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3602 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3610 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3624 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3632 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3640 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3648 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3656 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3664 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3672 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3680 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3780 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3781 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3783 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3785 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3786 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3788 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3790 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3791 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3793 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3795 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3796 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3798 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3800 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3801 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3803 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3805 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3806 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3808 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3810 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3811 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3813 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3815 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3816 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3818 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3820 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3821 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3823 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3825 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3826 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3828 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3830 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3831 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3833 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3835 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3836 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3838 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3840 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3841 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3843 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3845 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3846 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3848 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3850 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3851 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3853 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3855 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3856 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3858 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3860 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3861 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3863 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3865 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3866 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3868 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3870 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3871 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3873 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3875 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3876 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3878 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3880 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3881 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3883 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3885 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3886 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3888 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3890 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3891 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3893 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3895 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3896 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3898 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3900 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3901 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3903 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3905 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3906 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3908 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3910 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3911 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3913 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3915 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3916 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3918 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3920 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3921 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3923 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3925 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3926 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3928 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3930 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3931 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3933 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3935 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3936 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3938 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3940 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3941 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3943 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3945 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3946 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3948 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3950 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3951 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3953 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3955 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3956 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3958 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3967 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3968 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3972 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3973 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3977 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3978 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3982 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3983 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3987 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3988 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3990 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3992 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3993 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3995 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 3997 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3998 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4000 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4002 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4003 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4005 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4007 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4008 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4010 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4012 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4013 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4015 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4017 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4018 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4020 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4022 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4023 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4025 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4027 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4028 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4030 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4032 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4033 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4035 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4037 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4038 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4040 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4042 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4043 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4045 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4047 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4048 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4050 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4052 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4053 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4055 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4057 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4058 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4060 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4062 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4063 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4065 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 4067 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4068 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4070 "/usr/local/cuda4.1/cuda/include/texture_fetch_functions.h"
exit(___);}
# 66 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda4.1/cuda/include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 126 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 164 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 222 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 228 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 231 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 238 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 241 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 248 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 251 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 257 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 260 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 267 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 270 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 278 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 289 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 290 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 291 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 292 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 293 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 294 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 296 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 297 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 298 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 300 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 301 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 302 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 303 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 304 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 305 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 306 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 308 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 309 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 310 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 312 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 313 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 314 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 315 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 316 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 317 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 318 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 320 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 321 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 322 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 324 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 325 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 326 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, const void *
# 327 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
src, size_t
# 328 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 329 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 330 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 331 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 333 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 334 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 335 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 343 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 344 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, char *
# 345 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 346 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 347 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 348 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 350 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 351 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 352 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 354 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 355 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 356 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, const T &
# 357 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 358 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 359 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 360 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 362 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 363 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 364 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 366 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 367 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, char *
# 368 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 369 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 370 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 371 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 372 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 374 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 375 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 376 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 378 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 379 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 380 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
dst, const T &
# 381 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol, size_t
# 382 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
count, size_t
# 383 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 384 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 385 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
stream = 0)
# 387 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 388 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 389 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 391 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 392 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, char *
# 393 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 395 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 396 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 397 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 424 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 425 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 426 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const T &
# 427 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 429 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 430 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 431 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 439 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 440 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, char *
# 441 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 443 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 444 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 445 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 472 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 473 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 474 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size, const T &
# 475 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
symbol)
# 477 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 478 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 479 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 521 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 522 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 523 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 524 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 525 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 526 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc, size_t
# 527 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 529 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 530 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 531 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 566 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 567 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture(size_t *
# 568 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 569 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 570 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 571 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 573 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 574 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 575 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 622 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 623 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 624 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 625 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 626 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 627 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc, size_t
# 628 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 629 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height, size_t
# 630 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch)
# 632 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 633 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 634 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 680 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 681 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 682 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 683 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const void *
# 684 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
devPtr, size_t
# 685 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
width, size_t
# 686 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
height, size_t
# 687 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
pitch)
# 689 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 690 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 691 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 722 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 723 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 724 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const cudaArray *
# 725 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 726 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc)
# 728 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 729 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 730 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 760 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 761 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 762 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex, const cudaArray *
# 763 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array)
# 765 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 766 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 767 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 769 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 770 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 799 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 800 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 801 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex)
# 803 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 804 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 805 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 839 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 840 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 841 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 842 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
tex)
# 844 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 845 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 846 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 900 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 901 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 902 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
func, cudaFuncCache
# 903 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cacheConfig)
# 905 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 906 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 907 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 944 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 945 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaLaunch(T *
# 946 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
entry)
# 948 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 949 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 950 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 984 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T> inline cudaError_t
# 985 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 986 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
attr, T *
# 987 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
entry)
# 989 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 990 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 991 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 1013 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1014 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1015 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
surf, const cudaArray *
# 1016 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1017 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
desc)
# 1019 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 1020 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1021 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 1042 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1043 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1044 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
surf, const cudaArray *
# 1045 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
array)
# 1047 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
{
# 1048 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1049 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1051 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1052 "/usr/local/cuda4.1/cuda/include/cuda_runtime.h"
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE FILE; }
# 65 "/usr/include/stdio.h" 3
extern "C" { typedef _IO_FILE __FILE; }
# 95 "/usr/include/wchar.h" 3
extern "C" { typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t; }
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t __attribute((__mode__(__HI__))); }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t __attribute((__mode__(__SI__))); }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t __attribute((__mode__(__HI__))); }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t __attribute((__mode__(__SI__))); }
# 40 "/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.5.2/include/stdarg.h" 3
extern "C" { typedef __builtin_va_list __gnuc_va_list; }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void * , char * , size_t ); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void * , const char * , size_t ); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void * , __off64_t * , int ); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void * ); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file * , int , void * , _IO_cookie_io_functions_t );
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE * );
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int , _IO_FILE * );
# 462 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE * ) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE * ) throw();
# 465 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE * );
# 471 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 472 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 473 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 492 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 494 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 495 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 497 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 498 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 500 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 111 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 117 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 165 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 166 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 167 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 175 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 177 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 182 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 202 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 206 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw();
# 212 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw();
# 224 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 225 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 234 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 239 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 249 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 259 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 269 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ );
# 275 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 294 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ );
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 303 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , _IO_cookie_io_functions_t ) throw();
# 316 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw();
# 322 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw();
# 329 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 340 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 344 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 353 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__ , const char *__restrict__ , ...);
# 359 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__ , ...);
# 361 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw();
# 368 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list );
# 374 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__ , __gnuc_va_list );
# 376 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw();
# 383 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 385 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 387 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 389 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 396 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 398 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 399 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 402 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 414 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 417 "/usr/include/stdio.h" 3
extern "C" int dprintf(int , const char *__restrict__ , ...)
# 418 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 427 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...);
# 433 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...);
# 435 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 473 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 475 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 481 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 482 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 485 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 487 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 533 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 534 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 540 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 552 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE * );
# 553 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 563 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE * );
# 575 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 576 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 582 "/usr/include/stdio.h" 3
extern "C" int putchar(int );
# 596 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int , FILE * );
# 604 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int , FILE * );
# 605 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int );
# 612 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 615 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 624 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__ , int , FILE *__restrict__ );
# 632 "/usr/include/stdio.h" 3
extern "C" char *gets(char * );
# 642 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ );
# 658 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 661 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 671 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ );
# 682 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 688 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 695 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 702 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 708 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 719 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 730 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 732 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 742 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 747 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * );
# 752 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 766 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 771 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * );
# 791 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 796 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 811 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 812 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * );
# 813 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 814 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 819 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 821 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw();
# 823 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw();
# 828 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 829 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE * ) throw();
# 830 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE * ) throw();
# 839 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 851 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw();
# 856 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw();
# 866 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * );
# 872 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 878 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 884 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 889 "/usr/include/stdio.h" 3
struct obstack;
# 892 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 894 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 895 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 898 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 906 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 910 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw();
# 913 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 157 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef unsigned long long CUdeviceptr; }
# 164 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef int CUdevice; }
# 165 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 166 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 167 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 168 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 169 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 170 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 171 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 172 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 173 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 177 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 175 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUuuid_st {
# 176 "/usr/local/cuda4.1/cuda/include/cuda.h"
char bytes[16];
# 177 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUuuid; }
# 189 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 187 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUipcEventHandle_st {
# 188 "/usr/local/cuda4.1/cuda/include/cuda.h"
char reserved[64];
# 189 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUipcEventHandle; }
# 193 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 191 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUipcMemHandle_st {
# 192 "/usr/local/cuda4.1/cuda/include/cuda.h"
char reserved[64];
# 193 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUipcMemHandle; }
# 212 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 200 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUctx_flags_enum {
# 201 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_AUTO,
# 202 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_SPIN,
# 203 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_YIELD,
# 204 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 205 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 208 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 209 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_MAP_HOST,
# 210 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 211 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 212 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUctx_flags; }
# 222 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 217 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUevent_flags_enum {
# 218 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_DEFAULT,
# 219 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 220 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 221 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 222 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUevent_flags; }
# 236 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 227 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUarray_format_enum {
# 228 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 229 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 230 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 231 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 232 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 233 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 234 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 235 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 236 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUarray_format; }
# 246 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 241 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUaddress_mode_enum {
# 242 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 243 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 244 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 245 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 246 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUaddress_mode; }
# 254 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 251 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfilter_mode_enum {
# 252 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 253 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 254 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfilter_mode; }
# 337 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 259 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUdevice_attribute_enum {
# 260 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 261 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 262 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 263 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 264 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 265 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 266 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 267 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 268 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 269 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 270 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 271 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 272 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 273 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 274 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 275 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 276 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 277 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 278 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 279 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 280 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 281 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 282 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 283 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 284 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 285 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 286 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 287 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 288 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 289 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 290 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 291 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 292 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 293 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 294 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 295 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 296 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 297 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 298 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 299 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 300 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 301 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 302 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 303 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 304 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 305 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 306 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 307 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 308 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 309 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 310 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 311 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 312 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 313 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 314 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 315 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 316 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 317 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 318 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 319 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 320 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 321 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 322 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 323 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 324 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 325 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 326 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 327 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 328 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 329 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 330 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 331 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 332 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 333 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 334 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 335 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 336 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH
# 337 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUdevice_attribute; }
# 353 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 342 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUdevprop_st {
# 343 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxThreadsPerBlock;
# 344 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxThreadsDim[3];
# 345 "/usr/local/cuda4.1/cuda/include/cuda.h"
int maxGridSize[3];
# 346 "/usr/local/cuda4.1/cuda/include/cuda.h"
int sharedMemPerBlock;
# 347 "/usr/local/cuda4.1/cuda/include/cuda.h"
int totalConstantMemory;
# 348 "/usr/local/cuda4.1/cuda/include/cuda.h"
int SIMDWidth;
# 349 "/usr/local/cuda4.1/cuda/include/cuda.h"
int memPitch;
# 350 "/usr/local/cuda4.1/cuda/include/cuda.h"
int regsPerBlock;
# 351 "/usr/local/cuda4.1/cuda/include/cuda.h"
int clockRate;
# 352 "/usr/local/cuda4.1/cuda/include/cuda.h"
int textureAlign;
# 353 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUdevprop; }
# 363 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 358 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUpointer_attribute_enum {
# 359 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 360 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 361 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 362 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER
# 363 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUpointer_attribute; }
# 418 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 368 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfunction_attribute_enum {
# 374 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 381 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 387 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 392 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 397 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 406 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 415 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 417 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 418 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfunction_attribute; }
# 428 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 423 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUfunc_cache_enum {
# 424 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 425 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 426 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 427 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 428 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUfunc_cache; }
# 438 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 433 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUmemorytype_enum {
# 434 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 435 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 436 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 437 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 438 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUmemorytype; }
# 448 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 443 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUcomputemode_enum {
# 444 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 445 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 446 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_PROHIBITED,
# 447 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 448 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUcomputemode; }
# 540 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 453 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_option_enum {
# 459 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 472 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 479 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_WALL_TIME,
# 487 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 495 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 503 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 511 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 518 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 525 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 531 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_TARGET,
# 538 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 540 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_option; }
# 553 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 545 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_target_enum {
# 547 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_10,
# 548 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_11,
# 549 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_12,
# 550 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_13,
# 551 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_20,
# 552 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_TARGET_COMPUTE_21
# 553 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_target; }
# 564 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 558 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUjit_fallback_enum {
# 560 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_PREFER_PTX,
# 562 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_PREFER_BINARY
# 564 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUjit_fallback; }
# 575 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 569 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 570 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 571 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 572 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 573 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 574 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 575 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUgraphicsRegisterFlags; }
# 584 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 580 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 581 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 582 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 583 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 584 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 596 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 589 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUarray_cubemap_face_enum {
# 590 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 591 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 592 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 593 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 594 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 595 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 596 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUarray_cubemap_face; }
# 605 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 601 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum CUlimit_enum {
# 602 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 603 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 604 "/usr/local/cuda4.1/cuda/include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
# 605 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUlimit; }
# 914 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 610 "/usr/local/cuda4.1/cuda/include/cuda.h"
enum cudaError_enum {
# 616 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_SUCCESS,
# 622 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 628 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 634 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 639 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 645 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 650 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 655 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 660 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 665 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 671 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 678 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 688 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 697 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 702 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 707 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 713 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 718 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 726 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 731 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 736 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 742 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 748 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 754 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 760 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 767 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 772 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 777 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 782 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 787 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 792 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 799 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 806 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 815 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 826 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 837 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 848 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 854 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 861 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 868 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 874 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 881 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 889 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_ASSERT,
# 896 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 902 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 908 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 913 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 914 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUresult; }
# 976 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 955 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 956 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 957 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 959 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 960 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 961 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 962 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 963 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 965 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 966 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 968 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 969 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 970 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 971 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 972 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 974 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 975 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 976 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY2D; }
# 1009 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 981 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 982 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 983 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 984 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcZ;
# 985 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcLOD;
# 986 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 987 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 988 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 989 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 990 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *reserved0;
# 991 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 992 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcHeight;
# 994 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 995 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 996 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstZ;
# 997 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstLOD;
# 998 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 999 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 1000 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1001 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 1002 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *reserved1;
# 1003 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 1004 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstHeight;
# 1006 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 1007 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1008 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1009 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY3D; }
# 1042 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1014 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1015 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcXInBytes;
# 1016 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcY;
# 1017 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcZ;
# 1018 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcLOD;
# 1019 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype srcMemoryType;
# 1020 "/usr/local/cuda4.1/cuda/include/cuda.h"
const void *srcHost;
# 1021 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr srcDevice;
# 1022 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray srcArray;
# 1023 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUcontext srcContext;
# 1024 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcPitch;
# 1025 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t srcHeight;
# 1027 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstXInBytes;
# 1028 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstY;
# 1029 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstZ;
# 1030 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstLOD;
# 1031 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUmemorytype dstMemoryType;
# 1032 "/usr/local/cuda4.1/cuda/include/cuda.h"
void *dstHost;
# 1033 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUdeviceptr dstDevice;
# 1034 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray dstArray;
# 1035 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUcontext dstContext;
# 1036 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstPitch;
# 1037 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t dstHeight;
# 1039 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t WidthInBytes;
# 1040 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1041 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1042 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_MEMCPY3D_PEER; }
# 1054 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1047 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1049 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Width;
# 1050 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1052 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray_format Format;
# 1053 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned NumChannels;
# 1054 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 1068 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" { typedef
# 1059 "/usr/local/cuda4.1/cuda/include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1061 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Width;
# 1062 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Height;
# 1063 "/usr/local/cuda4.1/cuda/include/cuda.h"
size_t Depth;
# 1065 "/usr/local/cuda4.1/cuda/include/cuda.h"
CUarray_format Format;
# 1066 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned NumChannels;
# 1067 "/usr/local/cuda4.1/cuda/include/cuda.h"
unsigned Flags;
# 1068 "/usr/local/cuda4.1/cuda/include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 1195 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuInit(unsigned );
# 1222 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int * );
# 1260 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice * , int );
# 1286 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int * );
# 1315 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetName(char * , int , CUdevice );
# 1344 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int * , int * , CUdevice );
# 1372 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t * , CUdevice );
# 1432 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop * , CUdevice );
# 1597 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice );
# 1697 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext * , unsigned , CUdevice );
# 1736 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDestroy_v2(CUcontext );
# 1786 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext * , unsigned );
# 1821 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext );
# 1857 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxPushCurrent_v2(CUcontext );
# 1890 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxPopCurrent_v2(CUcontext * );
# 1916 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetCurrent(CUcontext );
# 1935 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetCurrent(CUcontext * );
# 1964 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice * );
# 1992 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 2053 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit , size_t );
# 2086 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t * , CUlimit );
# 2128 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache * );
# 2177 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache );
# 2212 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext , unsigned * );
# 2261 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule * , const char * );
# 2295 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule * , const void * );
# 2374 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** );
# 2414 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule * , const void * );
# 2439 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule );
# 2469 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction * , CUmodule , const char * );
# 2503 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * );
# 2537 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref * , CUmodule , const char * );
# 2568 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * );
# 2611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t * , size_t * );
# 2644 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr * , size_t );
# 2705 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned );
# 2734 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr );
# 2767 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr );
# 2813 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void ** , size_t );
# 2843 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemFreeHost(void * );
# 2925 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void ** , size_t , unsigned );
# 2963 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned );
# 2988 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned * , void * );
# 3015 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetByPCIBusId(CUdevice * , char * );
# 3043 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceGetPCIBusId(char * , int , CUdevice );
# 3082 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcGetEventHandle(CUipcEventHandle * , CUevent );
# 3115 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcOpenEventHandle(CUevent * , CUipcEventHandle );
# 3149 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr );
# 3188 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle );
# 3216 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuIpcCloseMemHandle(CUdeviceptr );
# 3278 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostRegister(void * , size_t , unsigned );
# 3301 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemHostUnregister(void * );
# 3337 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy(CUdeviceptr , CUdeviceptr , size_t );
# 3370 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t );
# 3406 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t );
# 3439 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t );
# 3472 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t );
# 3506 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t );
# 3542 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t );
# 3576 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t );
# 3610 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t );
# 3648 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t );
# 3808 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * );
# 3966 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * );
# 4133 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * );
# 4164 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * );
# 4204 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4235 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream );
# 4277 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream );
# 4317 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream );
# 4354 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4396 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream );
# 4438 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream );
# 4609 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream );
# 4784 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream );
# 4809 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream );
# 4844 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t );
# 4877 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t );
# 4910 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr , unsigned , size_t );
# 4948 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t );
# 4987 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t );
# 5026 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t );
# 5063 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream );
# 5100 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream );
# 5136 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream );
# 5178 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream );
# 5221 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream );
# 5264 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream );
# 5367 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * );
# 5400 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray );
# 5431 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray );
# 5611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * );
# 5647 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray );
# 5854 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr );
# 5891 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream * , unsigned );
# 5933 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream , CUevent , unsigned );
# 5957 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream );
# 5982 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream );
# 6010 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuStreamDestroy_v2(CUstream );
# 6059 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent * , unsigned );
# 6097 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent , CUstream );
# 6128 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent );
# 6162 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent );
# 6191 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventDestroy_v2(CUevent );
# 6235 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float * , CUevent , CUevent );
# 6298 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction );
# 6340 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction , CUfunc_cache );
# 6456 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** );
# 6512 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction , int , int , int );
# 6546 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction , unsigned );
# 6578 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction , unsigned );
# 6611 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction , int , unsigned );
# 6644 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction , int , float );
# 6679 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction , int , void * , unsigned );
# 6716 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction );
# 6755 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction , int , int );
# 6799 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction , int , int , CUstream );
# 6824 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction , int , CUtexref );
# 6865 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref , CUarray , unsigned );
# 6909 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t );
# 6961 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t );
# 6990 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref , CUarray_format , int );
# 7030 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode );
# 7063 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref , CUfilter_mode );
# 7098 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref , unsigned );
# 7124 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref );
# 7150 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray * , CUtexref );
# 7176 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int );
# 7200 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode * , CUtexref );
# 7226 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format * , int * , CUtexref );
# 7249 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned * , CUtexref );
# 7283 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref * );
# 7303 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref );
# 7341 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref , CUarray , unsigned );
# 7362 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray * , CUsurfref );
# 7400 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuDeviceCanAccessPeer(int * , CUdevice , CUdevice );
# 7447 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxEnablePeerAccess(CUcontext , unsigned );
# 7472 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuCtxDisablePeerAccess(CUcontext );
# 7513 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource );
# 7551 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned );
# 7585 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource );
# 7626 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned );
# 7664 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream );
# 7699 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream );
# 7703 "/usr/local/cuda4.1/cuda/include/cuda.h"
extern "C" CUresult cuGetExportTable(const void ** , const CUuuid * );
# 60 "./sdk/cutil.h"
enum CUTBoolean {
# 62 "./sdk/cutil.h"
CUTFalse,
# 63 "./sdk/cutil.h"
CUTTrue
# 64 "./sdk/cutil.h"
};
# 72 "./sdk/cutil.h"
extern "C" void cutFree(void * );
# 90 "./sdk/cutil.h"
extern "C" void cutCheckBankAccess(unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , const char * , const int , const char * , const int );
# 103 "./sdk/cutil.h"
extern "C" char *cutFindFilePath(const char * , const char * );
# 118 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFilef(const char * , float ** , unsigned * , bool = false);
# 134 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFiled(const char * , double ** , unsigned * , bool = false);
# 150 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFilei(const char * , int ** , unsigned * , bool = false);
# 165 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileui(const char * , unsigned ** , unsigned * , bool = false);
# 181 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileb(const char * , char ** , unsigned * , bool = false);
# 197 "./sdk/cutil.h"
extern "C" CUTBoolean cutReadFileub(const char * , unsigned char ** , unsigned * , bool = false);
# 211 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilef(const char * , const float * , unsigned , const float , bool = false);
# 225 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFiled(const char * , const float * , unsigned , const double , bool = false);
# 237 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFilei(const char * , const int * , unsigned , bool = false);
# 249 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileui(const char * , const unsigned * , unsigned , bool = false);
# 261 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileb(const char * , const char * , unsigned , bool = false);
# 273 "./sdk/cutil.h"
extern "C" CUTBoolean cutWriteFileub(const char * , const unsigned char * , unsigned , bool = false);
# 289 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 302 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPMub(const char * , unsigned char ** , unsigned * , unsigned * );
# 316 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPPM4ub(const char * , unsigned char ** , unsigned * , unsigned * );
# 332 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMi(const char * , unsigned ** , unsigned * , unsigned * );
# 348 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMs(const char * , unsigned short ** , unsigned * , unsigned * );
# 363 "./sdk/cutil.h"
extern "C" CUTBoolean cutLoadPGMf(const char * , float ** , unsigned * , unsigned * );
# 375 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMub(const char * , unsigned char * , unsigned , unsigned );
# 387 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePPMub(const char * , unsigned char * , unsigned , unsigned );
# 400 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePPM4ub(const char * , unsigned char * , unsigned , unsigned );
# 412 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMi(const char * , unsigned * , unsigned , unsigned );
# 424 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMs(const char * , unsigned short * , unsigned , unsigned );
# 436 "./sdk/cutil.h"
extern "C" CUTBoolean cutSavePGMf(const char * , float * , unsigned , unsigned );
# 457 "./sdk/cutil.h"
extern "C" CUTBoolean cutCheckCmdLineFlag(const int , const char ** , const char * );
# 471 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumenti(const int , const char ** , const char * , int * );
# 485 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentf(const int , const char ** , const char * , float * );
# 499 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentstr(const int , const char ** , const char * , char ** );
# 514 "./sdk/cutil.h"
extern "C" CUTBoolean cutGetCmdLineArgumentListstr(const int , const char ** , const char * , char ** , unsigned * );
# 528 "./sdk/cutil.h"
extern "C" CUTBoolean cutCheckCondition(int , const char * , const int );
# 540 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparef(const float * , const float * , const unsigned );
# 553 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparei(const int * , const int * , const unsigned );
# 567 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareuit(const unsigned * , const unsigned * , const unsigned , const float , const float );
# 580 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareub(const unsigned char * , const unsigned char * , const unsigned );
# 595 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareubt(const unsigned char * , const unsigned char * , const unsigned , const float , const float );
# 609 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareube(const unsigned char * , const unsigned char * , const unsigned , const float );
# 623 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparefe(const float * , const float * , const unsigned , const float );
# 638 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparefet(const float * , const float * , const unsigned , const float , const float );
# 653 "./sdk/cutil.h"
extern "C" CUTBoolean cutCompareL2fe(const float * , const float * , const unsigned , const float );
# 668 "./sdk/cutil.h"
extern "C" CUTBoolean cutComparePPM(const char * , const char * , const float , const float , bool = false);
# 681 "./sdk/cutil.h"
extern "C" CUTBoolean cutCreateTimer(unsigned * );
# 690 "./sdk/cutil.h"
extern "C" CUTBoolean cutDeleteTimer(unsigned );
# 698 "./sdk/cutil.h"
extern "C" CUTBoolean cutStartTimer(const unsigned );
# 706 "./sdk/cutil.h"
extern "C" CUTBoolean cutStopTimer(const unsigned );
# 714 "./sdk/cutil.h"
extern "C" CUTBoolean cutResetTimer(const unsigned );
# 723 "./sdk/cutil.h"
extern "C" float cutGetTimerValue(const unsigned );
# 734 "./sdk/cutil.h"
extern "C" float cutGetAverageTimerValue(const unsigned );
# 30 "./sdk/cutil_inline_bankchecker.h"
inline void __cutilBankChecker(unsigned tidx, unsigned tidy, unsigned tidz, unsigned
# 31 "./sdk/cutil_inline_bankchecker.h"
bdimx, unsigned bdimy, unsigned bdimz, char *
# 32 "./sdk/cutil_inline_bankchecker.h"
aname, int index, char *file, int line)
# 33 "./sdk/cutil_inline_bankchecker.h"
{
# 34 "./sdk/cutil_inline_bankchecker.h"
cutCheckBankAccess(tidx, tidy, tidz, bdimx, bdimy, bdimz, file, line, aname, index);
# 35 "./sdk/cutil_inline_bankchecker.h"
}
# 60 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { typedef float2 cuFloatComplex; }
# 62 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCrealf(cuFloatComplex x)
# 63 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 64 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.x;
# 65 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 67 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCimagf(cuFloatComplex x)
# 68 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 69 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.y;
# 70 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 72 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex make_cuFloatComplex(float
# 73 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
r, float i)
# 74 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 75 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex res;
# 76 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.x) = r;
# 77 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.y) = i;
# 78 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return res;
# 79 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 81 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuConjf(cuFloatComplex x)
# 82 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 83 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x), -cuCimagf(x));
# 84 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 85 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCaddf(cuFloatComplex x, cuFloatComplex
# 86 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 87 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 88 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) + cuCrealf(y), cuCimagf(x) + cuCimagf(y));
# 90 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 92 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCsubf(cuFloatComplex x, cuFloatComplex
# 93 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 94 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 95 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(cuCrealf(x) - cuCrealf(y), cuCimagf(x) - cuCimagf(y));
# 97 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 104 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCmulf(cuFloatComplex x, cuFloatComplex
# 105 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 106 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 107 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex prod;
# 108 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
prod = make_cuFloatComplex((cuCrealf(x) * cuCrealf(y)) - (cuCimagf(x) * cuCimagf(y)), (cuCrealf(x) * cuCimagf(y)) + (cuCimagf(x) * cuCrealf(y)));
# 112 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return prod;
# 113 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 120 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuFloatComplex cuCdivf(cuFloatComplex x, cuFloatComplex
# 121 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 122 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 123 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuFloatComplex quot;
# 124 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float s = (fabsf(cuCrealf(y)) + fabsf(cuCimagf(y)));
# 125 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float oos = ((1.0F) / s);
# 126 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float ars = (cuCrealf(x) * oos);
# 127 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float ais = (cuCimagf(x) * oos);
# 128 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float brs = (cuCrealf(y) * oos);
# 129 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float bis = (cuCimagf(y) * oos);
# 130 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 131 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
oos = ((1.0F) / s);
# 132 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
quot = make_cuFloatComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 134 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return quot;
# 135 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 145 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline float cuCabsf(cuFloatComplex x)
# 146 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 147 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float a = cuCrealf(x);
# 148 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float b = cuCimagf(x);
# 149 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float v, w, t;
# 150 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
a = fabsf(a);
# 151 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
b = fabsf(b);
# 152 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (a > b) {
# 153 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = a;
# 154 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = b;
# 155 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} else {
# 156 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = b;
# 157 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = a;
# 158 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 159 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (w / v);
# 160 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = ((1.0F) + (t * t));
# 161 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v * sqrtf(t));
# 162 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (((v == (0.0F)) || (v > (3.402823466e+38F))) || (w > (3.402823466e+38F))) {
# 163 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v + w);
# 164 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 165 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return t;
# 166 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 169 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { typedef double2 cuDoubleComplex; }
# 171 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCreal(cuDoubleComplex x)
# 172 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 173 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.x;
# 174 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 176 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCimag(cuDoubleComplex x)
# 177 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 178 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return x.y;
# 179 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 181 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex make_cuDoubleComplex(double
# 182 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
r, double i)
# 183 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 184 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex res;
# 185 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.x) = r;
# 186 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
(res.y) = i;
# 187 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return res;
# 188 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 190 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuConj(cuDoubleComplex x)
# 191 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 192 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x), -cuCimag(x));
# 193 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 195 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCadd(cuDoubleComplex x, cuDoubleComplex
# 196 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 197 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 198 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) + cuCreal(y), cuCimag(x) + cuCimag(y));
# 200 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 202 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCsub(cuDoubleComplex x, cuDoubleComplex
# 203 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 204 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 205 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(cuCreal(x) - cuCreal(y), cuCimag(x) - cuCimag(y));
# 207 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 214 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCmul(cuDoubleComplex x, cuDoubleComplex
# 215 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 216 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 217 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex prod;
# 218 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
prod = make_cuDoubleComplex((cuCreal(x) * cuCreal(y)) - (cuCimag(x) * cuCimag(y)), (cuCreal(x) * cuCimag(y)) + (cuCimag(x) * cuCreal(y)));
# 222 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return prod;
# 223 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 230 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline cuDoubleComplex cuCdiv(cuDoubleComplex x, cuDoubleComplex
# 231 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 232 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 233 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
cuDoubleComplex quot;
# 234 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double s = (fabs(cuCreal(y)) + fabs(cuCimag(y)));
# 235 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double oos = ((1.0) / s);
# 236 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double ars = (cuCreal(x) * oos);
# 237 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double ais = (cuCimag(x) * oos);
# 238 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double brs = (cuCreal(y) * oos);
# 239 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double bis = (cuCimag(y) * oos);
# 240 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
s = ((brs * brs) + (bis * bis));
# 241 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
oos = ((1.0) / s);
# 242 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
quot = make_cuDoubleComplex(((ars * brs) + (ais * bis)) * oos, ((ais * brs) - (ars * bis)) * oos);
# 244 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return quot;
# 245 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 253 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
extern "C" { static inline double cuCabs(cuDoubleComplex x)
# 254 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 255 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double a = cuCreal(x);
# 256 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double b = cuCimag(x);
# 257 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double v, w, t;
# 258 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
a = fabs(a);
# 259 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
b = fabs(b);
# 260 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (a > b) {
# 261 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = a;
# 262 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = b;
# 263 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} else {
# 264 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
v = b;
# 265 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
w = a;
# 266 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 267 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (w / v);
# 268 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = ((1.0) + (t * t));
# 269 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v * sqrt(t));
# 270 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
if (((v == (0.0)) || (v > (1.797693134862315708e+308))) || (w > (1.797693134862315708e+308)))
# 271 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 272 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
t = (v + w);
# 273 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 274 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return t;
# 275 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
} }
# 282 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
typedef cuFloatComplex cuComplex;
# 283 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuComplex make_cuComplex(float x, float
# 284 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
y)
# 285 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 286 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex(x, y);
# 287 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 290 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuComplexFloatToDouble(cuFloatComplex
# 291 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
c)
# 292 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 293 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex((double)cuCrealf(c), (double)cuCimagf(c));
# 294 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 296 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuFloatComplex cuComplexDoubleToFloat(cuDoubleComplex
# 297 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
c)
# 298 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 299 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuFloatComplex((float)cuCreal(c), (float)cuCimag(c));
# 300 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 303 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuComplex cuCfmaf(cuComplex x, cuComplex y, cuComplex d)
# 304 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 305 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float real_res;
# 306 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
float imag_res;
# 308 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((cuCrealf(x) * cuCrealf(y)) + cuCrealf(d));
# 309 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCrealf(x) * cuCimagf(y)) + cuCimagf(d));
# 311 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((-(cuCimagf(x) * cuCimagf(y))) + real_res);
# 312 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCimagf(x) * cuCrealf(y)) + imag_res);
# 314 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuComplex(real_res, imag_res);
# 315 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 317 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
static inline cuDoubleComplex cuCfma(cuDoubleComplex x, cuDoubleComplex y, cuDoubleComplex d)
# 318 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
{
# 319 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double real_res;
# 320 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
double imag_res;
# 322 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((cuCreal(x) * cuCreal(y)) + cuCreal(d));
# 323 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCreal(x) * cuCimag(y)) + cuCimag(d));
# 325 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
real_res = ((-(cuCimag(x) * cuCimag(y))) + real_res);
# 326 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
imag_res = ((cuCimag(x) * cuCreal(y)) + imag_res);
# 328 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
return make_cuDoubleComplex(real_res, imag_res);
# 329 "/usr/local/cuda4.1/cuda/include/cuComplex.h"
}
# 86 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 75 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftResult_t {
# 76 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_SUCCESS,
# 77 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_PLAN,
# 78 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_ALLOC_FAILED,
# 79 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_TYPE,
# 80 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_VALUE,
# 81 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INTERNAL_ERROR,
# 82 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_EXEC_FAILED,
# 83 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_SETUP_FAILED,
# 84 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_INVALID_SIZE,
# 85 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_UNALIGNED_DATA
# 86 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftResult; }
# 91 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef unsigned cufftHandle; }
# 95 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef float cufftReal; }
# 96 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef double cufftDoubleReal; }
# 101 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef cuComplex cufftComplex; }
# 102 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef cuDoubleComplex cufftDoubleComplex; }
# 116 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 109 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftType_t {
# 110 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_R2C = 42,
# 111 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_C2R = 44,
# 112 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_C2C = 41,
# 113 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_D2Z = 106,
# 114 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_Z2D = 108,
# 115 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_Z2Z = 105
# 116 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftType; }
# 145 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" { typedef
# 140 "/usr/local/cuda4.1/cuda/include/cufft.h"
enum cufftCompatibility_t {
# 141 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_NATIVE,
# 142 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_PADDING,
# 143 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ASYMMETRIC,
# 144 "/usr/local/cuda4.1/cuda/include/cufft.h"
CUFFT_COMPATIBILITY_FFTW_ALL
# 145 "/usr/local/cuda4.1/cuda/include/cufft.h"
} cufftCompatibility; }
# 149 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan1d(cufftHandle * , int , cufftType , int );
# 154 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan2d(cufftHandle * , int , int , cufftType );
# 158 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlan3d(cufftHandle * , int , int , int , cufftType );
# 162 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftPlanMany(cufftHandle * , int , int * , int * , int , int , int * , int , int , cufftType , int );
# 170 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftDestroy(cufftHandle );
# 172 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecC2C(cufftHandle , cufftComplex * , cufftComplex * , int );
# 177 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecR2C(cufftHandle , cufftReal * , cufftComplex * );
# 181 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecC2R(cufftHandle , cufftComplex * , cufftReal * );
# 185 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecZ2Z(cufftHandle , cufftDoubleComplex * , cufftDoubleComplex * , int );
# 190 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecD2Z(cufftHandle , cufftDoubleReal * , cufftDoubleComplex * );
# 194 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftExecZ2D(cufftHandle , cufftDoubleComplex * , cufftDoubleReal * );
# 198 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftSetStream(cufftHandle , cudaStream_t );
# 201 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftSetCompatibilityMode(cufftHandle , cufftCompatibility );
# 204 "/usr/local/cuda4.1/cuda/include/cufft.h"
extern "C" cufftResult cufftGetVersion(int * );
# 43 "./sdk/cutil_inline_runtime.h"
inline void __cutilCondition(int val, char *file, int line)
# 44 "./sdk/cutil_inline_runtime.h"
{
# 45 "./sdk/cutil_inline_runtime.h"
if ((CUTFalse) == (cutCheckCondition(val, file, line))) {
# 46 "./sdk/cutil_inline_runtime.h"
exit(1);
# 47 "./sdk/cutil_inline_runtime.h"
}
# 48 "./sdk/cutil_inline_runtime.h"
}
# 50 "./sdk/cutil_inline_runtime.h"
inline void __cutilExit(int argc, char **argv)
# 51 "./sdk/cutil_inline_runtime.h"
{
# 52 "./sdk/cutil_inline_runtime.h"
if (!(cutCheckCmdLineFlag(argc, (const char **)argv, "noprompt"))) {
# 53 "./sdk/cutil_inline_runtime.h"
printf("\nPress ENTER to exit...\n");
# 54 "./sdk/cutil_inline_runtime.h"
fflush(stdout);
# 55 "./sdk/cutil_inline_runtime.h"
fflush(stderr);
# 56 "./sdk/cutil_inline_runtime.h"
getchar();
# 57 "./sdk/cutil_inline_runtime.h"
}
# 58 "./sdk/cutil_inline_runtime.h"
exit(0);
# 59 "./sdk/cutil_inline_runtime.h"
}
# 65 "./sdk/cutil_inline_runtime.h"
inline int _ConvertSMVer2Cores(int major, int minor)
# 66 "./sdk/cutil_inline_runtime.h"
{
# 71 "./sdk/cutil_inline_runtime.h"
typedef
# 68 "./sdk/cutil_inline_runtime.h"
struct {
# 69 "./sdk/cutil_inline_runtime.h"
int SM;
# 70 "./sdk/cutil_inline_runtime.h"
int Cores;
# 71 "./sdk/cutil_inline_runtime.h"
} sSMtoCores;
# 73 "./sdk/cutil_inline_runtime.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {(-1), (-1)}};
# 83 "./sdk/cutil_inline_runtime.h"
int index = 0;
# 84 "./sdk/cutil_inline_runtime.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1)) {
# 85 "./sdk/cutil_inline_runtime.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor)) {
# 86 "./sdk/cutil_inline_runtime.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 87 "./sdk/cutil_inline_runtime.h"
}
# 88 "./sdk/cutil_inline_runtime.h"
index++;
# 89 "./sdk/cutil_inline_runtime.h"
}
# 90 "./sdk/cutil_inline_runtime.h"
printf("MapSMtoCores undefined SMversion %d.%d!\n", major, minor);
# 91 "./sdk/cutil_inline_runtime.h"
return -1;
# 92 "./sdk/cutil_inline_runtime.h"
}
# 96 "./sdk/cutil_inline_runtime.h"
inline int cutGetMaxGflopsDeviceId()
# 97 "./sdk/cutil_inline_runtime.h"
{
# 98 "./sdk/cutil_inline_runtime.h"
int current_device = 0, sm_per_multiproc = 0;
# 99 "./sdk/cutil_inline_runtime.h"
int max_compute_perf = 0, max_perf_device = 0;
# 100 "./sdk/cutil_inline_runtime.h"
int device_count = 0, best_SM_arch = 0;
# 101 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 103 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceCount(&device_count);
# 105 "./sdk/cutil_inline_runtime.h"
while (current_device < device_count) {
# 106 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 107 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) > 0) && ((deviceProp.major) < 9999)) {
# 108 "./sdk/cutil_inline_runtime.h"
best_SM_arch = ((best_SM_arch > (deviceProp.major)) ? best_SM_arch : (deviceProp.major));
# 109 "./sdk/cutil_inline_runtime.h"
}
# 110 "./sdk/cutil_inline_runtime.h"
current_device++;
# 111 "./sdk/cutil_inline_runtime.h"
}
# 114 "./sdk/cutil_inline_runtime.h"
current_device = 0;
# 115 "./sdk/cutil_inline_runtime.h"
while (current_device < device_count) {
# 116 "./sdk/cutil_inline_runtime.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 117 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) == 9999) && ((deviceProp.minor) == 9999)) {
# 118 "./sdk/cutil_inline_runtime.h"
sm_per_multiproc = 1;
# 119 "./sdk/cutil_inline_runtime.h"
} else {
# 120 "./sdk/cutil_inline_runtime.h"
sm_per_multiproc = _ConvertSMVer2Cores(deviceProp.major, deviceProp.minor);
# 121 "./sdk/cutil_inline_runtime.h"
}
# 123 "./sdk/cutil_inline_runtime.h"
int compute_perf = (((deviceProp.multiProcessorCount) * sm_per_multiproc) * (deviceProp.clockRate));
# 124 "./sdk/cutil_inline_runtime.h"
if (compute_perf > max_compute_perf) {
# 126 "./sdk/cutil_inline_runtime.h"
if (best_SM_arch > 2) {
# 128 "./sdk/cutil_inline_runtime.h"
if ((deviceProp.major) == best_SM_arch) {
# 129 "./sdk/cutil_inline_runtime.h"
max_compute_perf = compute_perf;
# 130 "./sdk/cutil_inline_runtime.h"
max_perf_device = current_device;
# 131 "./sdk/cutil_inline_runtime.h"
}
# 132 "./sdk/cutil_inline_runtime.h"
} else {
# 133 "./sdk/cutil_inline_runtime.h"
max_compute_perf = compute_perf;
# 134 "./sdk/cutil_inline_runtime.h"
max_perf_device = current_device;
# 135 "./sdk/cutil_inline_runtime.h"
}
# 136 "./sdk/cutil_inline_runtime.h"
}
# 137 "./sdk/cutil_inline_runtime.h"
++current_device;
# 138 "./sdk/cutil_inline_runtime.h"
}
# 139 "./sdk/cutil_inline_runtime.h"
return max_perf_device;
# 140 "./sdk/cutil_inline_runtime.h"
}
# 178 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeCallNoSync(cudaError err, const char *file, const int line)
# 179 "./sdk/cutil_inline_runtime.h"
{
# 180 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 181 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaSafeCallNoSync() Runtime API error : %s.\n", file, line, cudaGetErrorString(err));
# 183 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 184 "./sdk/cutil_inline_runtime.h"
}
# 185 "./sdk/cutil_inline_runtime.h"
}
# 187 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeCall(cudaError err, const char *file, const int line)
# 188 "./sdk/cutil_inline_runtime.h"
{
# 189 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 190 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaSafeCall() Runtime API error : %s.\n", file, line, cudaGetErrorString(err));
# 192 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 193 "./sdk/cutil_inline_runtime.h"
}
# 194 "./sdk/cutil_inline_runtime.h"
}
# 196 "./sdk/cutil_inline_runtime.h"
inline void __cudaSafeThreadSync(const char *file, const int line)
# 197 "./sdk/cutil_inline_runtime.h"
{
# 198 "./sdk/cutil_inline_runtime.h"
cudaError err = cudaThreadSynchronize();
# 199 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 200 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cudaThreadSynchronize() Driver API error : %s.\n", file, line, cudaGetErrorString(err));
# 202 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 203 "./sdk/cutil_inline_runtime.h"
}
# 204 "./sdk/cutil_inline_runtime.h"
}
# 206 "./sdk/cutil_inline_runtime.h"
inline void __cufftSafeCall(cufftResult err, const char *file, const int line)
# 207 "./sdk/cutil_inline_runtime.h"
{
# 208 "./sdk/cutil_inline_runtime.h"
if ((CUFFT_SUCCESS) != err) {
# 209 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cufftSafeCall() CUFFT error.\n", file, line);
# 211 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 212 "./sdk/cutil_inline_runtime.h"
}
# 213 "./sdk/cutil_inline_runtime.h"
}
# 215 "./sdk/cutil_inline_runtime.h"
inline void __cutilCheckError(CUTBoolean err, const char *file, const int line)
# 216 "./sdk/cutil_inline_runtime.h"
{
# 217 "./sdk/cutil_inline_runtime.h"
if ((CUTTrue) != err) {
# 218 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CUTIL CUDA error.\n", file, line);
# 220 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 221 "./sdk/cutil_inline_runtime.h"
}
# 222 "./sdk/cutil_inline_runtime.h"
}
# 224 "./sdk/cutil_inline_runtime.h"
inline void __cutilCheckMsg(const char *errorMessage, const char *file, const int line)
# 225 "./sdk/cutil_inline_runtime.h"
{
# 226 "./sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 227 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 228 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cutilCheckMsg() CUTIL CUDA error : %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 230 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 231 "./sdk/cutil_inline_runtime.h"
}
# 240 "./sdk/cutil_inline_runtime.h"
}
# 241 "./sdk/cutil_inline_runtime.h"
inline void __cutilSafeMalloc(void *pointer, const char *file, const int line)
# 242 "./sdk/cutil_inline_runtime.h"
{
# 243 "./sdk/cutil_inline_runtime.h"
if (!(pointer)) {
# 244 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : cutilSafeMalloc host malloc failure\n", file, line);
# 246 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 247 "./sdk/cutil_inline_runtime.h"
}
# 248 "./sdk/cutil_inline_runtime.h"
}
# 254 "./sdk/cutil_inline_runtime.h"
inline int cutilDeviceInit(int ARGC, char **ARGV)
# 255 "./sdk/cutil_inline_runtime.h"
{
# 256 "./sdk/cutil_inline_runtime.h"
int deviceCount;
# 257 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceCount(&deviceCount), "./sdk/cutil_inline_runtime.h", 257);
# 258 "./sdk/cutil_inline_runtime.h"
if (deviceCount == 0) {
# 259 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "CUTIL CUDA error: no devices supporting CUDA.\n");
# 260 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 261 "./sdk/cutil_inline_runtime.h"
}
# 262 "./sdk/cutil_inline_runtime.h"
int dev = 0;
# 263 "./sdk/cutil_inline_runtime.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 264 "./sdk/cutil_inline_runtime.h"
if (dev < 0) {
# 265 "./sdk/cutil_inline_runtime.h"
dev = 0; }
# 266 "./sdk/cutil_inline_runtime.h"
if (dev > (deviceCount - 1)) {
# 267 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutilDeviceInit (Device=%d) invalid GPU device.  %d GPU device(s) detected.\n\n", dev, deviceCount);
# 268 "./sdk/cutil_inline_runtime.h"
return -dev;
# 269 "./sdk/cutil_inline_runtime.h"
}
# 270 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 271 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, dev), "./sdk/cutil_inline_runtime.h", 271);
# 272 "./sdk/cutil_inline_runtime.h"
if ((deviceProp.major) < 1) {
# 273 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "cutil error: GPU device does not support CUDA.\n");
# 274 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 275 "./sdk/cutil_inline_runtime.h"
}
# 276 "./sdk/cutil_inline_runtime.h"
printf("> Using CUDA device [%d]: %s\n", dev, deviceProp.name);
# 277 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaSetDevice(dev), "./sdk/cutil_inline_runtime.h", 277);
# 279 "./sdk/cutil_inline_runtime.h"
return dev;
# 280 "./sdk/cutil_inline_runtime.h"
}
# 283 "./sdk/cutil_inline_runtime.h"
inline int cutilChooseCudaDevice(int argc, char **argv)
# 284 "./sdk/cutil_inline_runtime.h"
{
# 285 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 286 "./sdk/cutil_inline_runtime.h"
int devID = 0;
# 288 "./sdk/cutil_inline_runtime.h"
if (cutCheckCmdLineFlag(argc, (const char **)argv, "device")) {
# 289 "./sdk/cutil_inline_runtime.h"
devID = cutilDeviceInit(argc, argv);
# 290 "./sdk/cutil_inline_runtime.h"
if (devID < 0) {
# 291 "./sdk/cutil_inline_runtime.h"
printf("exiting...\n");
# 292 "./sdk/cutil_inline_runtime.h"
__cutilExit(argc, argv);
# 293 "./sdk/cutil_inline_runtime.h"
exit(0);
# 294 "./sdk/cutil_inline_runtime.h"
}
# 295 "./sdk/cutil_inline_runtime.h"
} else {
# 297 "./sdk/cutil_inline_runtime.h"
devID = cutGetMaxGflopsDeviceId();
# 298 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaSetDevice(devID), "./sdk/cutil_inline_runtime.h", 298);
# 299 "./sdk/cutil_inline_runtime.h"
__cudaSafeCallNoSync(cudaGetDeviceProperties(&deviceProp, devID), "./sdk/cutil_inline_runtime.h", 299);
# 300 "./sdk/cutil_inline_runtime.h"
printf("> Using CUDA device [%d]: %s\n", devID, deviceProp.name);
# 301 "./sdk/cutil_inline_runtime.h"
}
# 302 "./sdk/cutil_inline_runtime.h"
return devID;
# 303 "./sdk/cutil_inline_runtime.h"
}
# 308 "./sdk/cutil_inline_runtime.h"
inline void cutilCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 309 "./sdk/cutil_inline_runtime.h"
{
# 310 "./sdk/cutil_inline_runtime.h"
cudaError_t err = cudaGetLastError();
# 311 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 312 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CUDA error: %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 314 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 315 "./sdk/cutil_inline_runtime.h"
}
# 316 "./sdk/cutil_inline_runtime.h"
err = cudaThreadSynchronize();
# 317 "./sdk/cutil_inline_runtime.h"
if ((cudaSuccess) != err) {
# 318 "./sdk/cutil_inline_runtime.h"
fprintf(stderr, "%s(%i) : CCUDA error: %s : %s.\n", file, line, errorMessage, cudaGetErrorString(err));
# 320 "./sdk/cutil_inline_runtime.h"
exit(-1);
# 321 "./sdk/cutil_inline_runtime.h"
}
# 322 "./sdk/cutil_inline_runtime.h"
}
# 325 "./sdk/cutil_inline_runtime.h"
inline bool cutilCudaCapabilities(int major_version, int minor_version)
# 326 "./sdk/cutil_inline_runtime.h"
{
# 327 "./sdk/cutil_inline_runtime.h"
cudaDeviceProp deviceProp;
# 328 "./sdk/cutil_inline_runtime.h"
(deviceProp.major) = 0;
# 329 "./sdk/cutil_inline_runtime.h"
(deviceProp.minor) = 0;
# 330 "./sdk/cutil_inline_runtime.h"
int dev;
# 336 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaGetDevice(&dev), "./sdk/cutil_inline_runtime.h", 336);
# 337 "./sdk/cutil_inline_runtime.h"
__cudaSafeCall(cudaGetDeviceProperties(&deviceProp, dev), "./sdk/cutil_inline_runtime.h", 337);
# 339 "./sdk/cutil_inline_runtime.h"
if (((deviceProp.major) > major_version) || (((deviceProp.major) == major_version) && ((deviceProp.minor) >= minor_version)))
# 341 "./sdk/cutil_inline_runtime.h"
{
# 342 "./sdk/cutil_inline_runtime.h"
printf("> Device %d: <%16s >, Compute SM %d.%d detected\n", dev, deviceProp.name, deviceProp.major, deviceProp.minor);
# 343 "./sdk/cutil_inline_runtime.h"
return true;
# 344 "./sdk/cutil_inline_runtime.h"
} else
# 346 "./sdk/cutil_inline_runtime.h"
{
# 347 "./sdk/cutil_inline_runtime.h"
printf("There is no device supporting CUDA compute capability %d.%d.\n", major_version, minor_version);
# 348 "./sdk/cutil_inline_runtime.h"
printf("PASSED\n");
# 349 "./sdk/cutil_inline_runtime.h"
return false;
# 350 "./sdk/cutil_inline_runtime.h"
}
# 351 "./sdk/cutil_inline_runtime.h"
}
# 32 "./sdk/cutil_inline_drvapi.h"
inline int _ConvertSMVer2CoresDrvApi(int major, int minor)
# 33 "./sdk/cutil_inline_drvapi.h"
{
# 38 "./sdk/cutil_inline_drvapi.h"
typedef
# 35 "./sdk/cutil_inline_drvapi.h"
struct {
# 36 "./sdk/cutil_inline_drvapi.h"
int SM;
# 37 "./sdk/cutil_inline_drvapi.h"
int Cores;
# 38 "./sdk/cutil_inline_drvapi.h"
} sSMtoCores;
# 40 "./sdk/cutil_inline_drvapi.h"
sSMtoCores nGpuArchCoresPerSM[] = {{16, 8}, {17, 8}, {18, 8}, {19, 8}, {32, 32}, {33, 48}, {(-1), (-1)}};
# 50 "./sdk/cutil_inline_drvapi.h"
int index = 0;
# 51 "./sdk/cutil_inline_drvapi.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1)) {
# 52 "./sdk/cutil_inline_drvapi.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor)) {
# 53 "./sdk/cutil_inline_drvapi.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 54 "./sdk/cutil_inline_drvapi.h"
}
# 55 "./sdk/cutil_inline_drvapi.h"
index++;
# 56 "./sdk/cutil_inline_drvapi.h"
}
# 57 "./sdk/cutil_inline_drvapi.h"
printf("MapSMtoCores undefined SMversion %d.%d!\n", major, minor);
# 58 "./sdk/cutil_inline_drvapi.h"
return -1;
# 59 "./sdk/cutil_inline_drvapi.h"
}
# 63 "./sdk/cutil_inline_drvapi.h"
inline int cutilDrvGetMaxGflopsDeviceId()
# 64 "./sdk/cutil_inline_drvapi.h"
{
# 65 "./sdk/cutil_inline_drvapi.h"
CUdevice current_device = 0, max_perf_device = 0;
# 66 "./sdk/cutil_inline_drvapi.h"
int device_count = 0, sm_per_multiproc = 0;
# 67 "./sdk/cutil_inline_drvapi.h"
int max_compute_perf = 0, best_SM_arch = 0;
# 68 "./sdk/cutil_inline_drvapi.h"
int major = 0, minor = 0, multiProcessorCount, clockRate;
# 70 "./sdk/cutil_inline_drvapi.h"
cuInit(0);
# 71 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetCount(&device_count); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 71); exit(1); } } ;
# 74 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 75 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 75); exit(1); } } ;
# 76 "./sdk/cutil_inline_drvapi.h"
if ((major > 0) && (major < 9999)) {
# 77 "./sdk/cutil_inline_drvapi.h"
best_SM_arch = ((best_SM_arch > major) ? best_SM_arch : major);
# 78 "./sdk/cutil_inline_drvapi.h"
}
# 79 "./sdk/cutil_inline_drvapi.h"
current_device++;
# 80 "./sdk/cutil_inline_drvapi.h"
}
# 83 "./sdk/cutil_inline_drvapi.h"
current_device = 0;
# 84 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 85 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&multiProcessorCount, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 87);
# 85 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 87 "./sdk/cutil_inline_drvapi.h"
;
# 88 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&clockRate, CU_DEVICE_ATTRIBUTE_CLOCK_RATE, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 90);
# 88 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 90 "./sdk/cutil_inline_drvapi.h"
;
# 91 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 91); exit(1); } } ;
# 93 "./sdk/cutil_inline_drvapi.h"
if ((major == 9999) && (minor == 9999)) {
# 94 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = 1;
# 95 "./sdk/cutil_inline_drvapi.h"
} else {
# 96 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = _ConvertSMVer2CoresDrvApi(major, minor);
# 97 "./sdk/cutil_inline_drvapi.h"
}
# 99 "./sdk/cutil_inline_drvapi.h"
int compute_perf = ((multiProcessorCount * sm_per_multiproc) * clockRate);
# 100 "./sdk/cutil_inline_drvapi.h"
if (compute_perf > max_compute_perf) {
# 102 "./sdk/cutil_inline_drvapi.h"
if (best_SM_arch > 2) {
# 104 "./sdk/cutil_inline_drvapi.h"
if (major == best_SM_arch) {
# 105 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 106 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 107 "./sdk/cutil_inline_drvapi.h"
}
# 108 "./sdk/cutil_inline_drvapi.h"
} else {
# 109 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 110 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 111 "./sdk/cutil_inline_drvapi.h"
}
# 112 "./sdk/cutil_inline_drvapi.h"
}
# 113 "./sdk/cutil_inline_drvapi.h"
++current_device;
# 114 "./sdk/cutil_inline_drvapi.h"
}
# 115 "./sdk/cutil_inline_drvapi.h"
return max_perf_device;
# 116 "./sdk/cutil_inline_drvapi.h"
}
# 119 "./sdk/cutil_inline_drvapi.h"
inline int cutilDrvGetMaxGflopsGraphicsDeviceId()
# 120 "./sdk/cutil_inline_drvapi.h"
{
# 121 "./sdk/cutil_inline_drvapi.h"
CUdevice current_device = 0, max_perf_device = 0;
# 122 "./sdk/cutil_inline_drvapi.h"
int device_count = 0, sm_per_multiproc = 0;
# 123 "./sdk/cutil_inline_drvapi.h"
int max_compute_perf = 0, best_SM_arch = 0;
# 124 "./sdk/cutil_inline_drvapi.h"
int major = 0, minor = 0, multiProcessorCount, clockRate;
# 125 "./sdk/cutil_inline_drvapi.h"
int bTCC = 0;
# 126 "./sdk/cutil_inline_drvapi.h"
char deviceName[256];
# 128 "./sdk/cutil_inline_drvapi.h"
cuInit(0);
# 129 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetCount(&device_count); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 129); exit(1); } } ;
# 132 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 133 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetName(deviceName, 256, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 133); exit(1); } } ;
# 134 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 134); exit(1); } } ;
# 136 "./sdk/cutil_inline_drvapi.h"
if ((major > 0) && (major < 9999)) {
# 137 "./sdk/cutil_inline_drvapi.h"
best_SM_arch = ((best_SM_arch > major) ? best_SM_arch : major);
# 138 "./sdk/cutil_inline_drvapi.h"
}
# 139 "./sdk/cutil_inline_drvapi.h"
current_device++;
# 140 "./sdk/cutil_inline_drvapi.h"
}
# 143 "./sdk/cutil_inline_drvapi.h"
current_device = 0;
# 144 "./sdk/cutil_inline_drvapi.h"
while (current_device < device_count) {
# 145 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&multiProcessorCount, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 147);
# 145 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 147 "./sdk/cutil_inline_drvapi.h"
;
# 148 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&clockRate, CU_DEVICE_ATTRIBUTE_CLOCK_RATE, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 150);
# 148 "./sdk/cutil_inline_drvapi.h"
exit(1); } }
# 150 "./sdk/cutil_inline_drvapi.h"
;
# 151 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceComputeCapability(&major, &minor, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 151); exit(1); } } ;
# 154 "./sdk/cutil_inline_drvapi.h"
{ CUresult err = cuDeviceGetAttribute(&bTCC, CU_DEVICE_ATTRIBUTE_TCC_DRIVER, current_device); if ((CUDA_SUCCESS) != err) { fprintf(stderr, "Cuda driver error %x in file \'%s\' in line %i.\n", err, "./sdk/cutil_inline_drvapi.h", 154); exit(1); } } ;
# 160 "./sdk/cutil_inline_drvapi.h"
if ((major == 9999) && (minor == 9999)) {
# 161 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = 1;
# 162 "./sdk/cutil_inline_drvapi.h"
} else {
# 163 "./sdk/cutil_inline_drvapi.h"
sm_per_multiproc = _ConvertSMVer2CoresDrvApi(major, minor);
# 164 "./sdk/cutil_inline_drvapi.h"
}
# 167 "./sdk/cutil_inline_drvapi.h"
if ((major >= 2) && (!(bTCC)))
# 168 "./sdk/cutil_inline_drvapi.h"
{
# 169 "./sdk/cutil_inline_drvapi.h"
int compute_perf = ((multiProcessorCount * sm_per_multiproc) * clockRate);
# 170 "./sdk/cutil_inline_drvapi.h"
if (compute_perf > max_compute_perf) {
# 172 "./sdk/cutil_inline_drvapi.h"
if (best_SM_arch > 2) {
# 174 "./sdk/cutil_inline_drvapi.h"
if (major == best_SM_arch) {
# 175 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 176 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 177 "./sdk/cutil_inline_drvapi.h"
}
# 178 "./sdk/cutil_inline_drvapi.h"
} else {
# 179 "./sdk/cutil_inline_drvapi.h"
max_compute_perf = compute_perf;
# 180 "./sdk/cutil_inline_drvapi.h"
max_perf_device = current_device;
# 181 "./sdk/cutil_inline_drvapi.h"
}
# 182 "./sdk/cutil_inline_drvapi.h"
}
# 183 "./sdk/cutil_inline_drvapi.h"
}
# 184 "./sdk/cutil_inline_drvapi.h"
++current_device;
# 185 "./sdk/cutil_inline_drvapi.h"
}
# 186 "./sdk/cutil_inline_drvapi.h"
return max_perf_device;
# 187 "./sdk/cutil_inline_drvapi.h"
}
# 190 "./sdk/cutil_inline_drvapi.h"
inline void __cuSafeCallNoSync(CUresult err, const char *file, const int line)
# 191 "./sdk/cutil_inline_drvapi.h"
{
# 192 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 193 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuSafeCallNoSync() Driver API error = %04d from file <%s>, line %i.\n", err, file, line);
# 195 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 196 "./sdk/cutil_inline_drvapi.h"
}
# 197 "./sdk/cutil_inline_drvapi.h"
}
# 198 "./sdk/cutil_inline_drvapi.h"
inline void __cuSafeCall(CUresult err, const char *file, const int line)
# 199 "./sdk/cutil_inline_drvapi.h"
{
# 200 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(err, file, line);
# 201 "./sdk/cutil_inline_drvapi.h"
}
# 203 "./sdk/cutil_inline_drvapi.h"
inline void __cuCtxSync(const char *file, const int line)
# 204 "./sdk/cutil_inline_drvapi.h"
{
# 205 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 206 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 207 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cuCtxSynchronize() API error = %04d in file <%s>, line %i.\n", err, file, line);
# 209 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 210 "./sdk/cutil_inline_drvapi.h"
}
# 211 "./sdk/cutil_inline_drvapi.h"
}
# 213 "./sdk/cutil_inline_drvapi.h"
inline void __cuCheckMsg(const char *msg, const char *file, const int line)
# 214 "./sdk/cutil_inline_drvapi.h"
{
# 215 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 216 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 217 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> %s", msg);
# 218 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDrvCheckMsg -> cuCtxSynchronize API error = %04d in file <%s>, line %i.\n", err, file, line);
# 220 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 221 "./sdk/cutil_inline_drvapi.h"
}
# 222 "./sdk/cutil_inline_drvapi.h"
}
# 228 "./sdk/cutil_inline_drvapi.h"
inline int cutilDeviceInitDrv(int ARGC, char **ARGV)
# 229 "./sdk/cutil_inline_drvapi.h"
{
# 230 "./sdk/cutil_inline_drvapi.h"
int cuDevice = 0;
# 231 "./sdk/cutil_inline_drvapi.h"
int deviceCount = 0;
# 232 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuInit(0);
# 233 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) == err) {
# 234 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetCount(&deviceCount), "./sdk/cutil_inline_drvapi.h", 234); }
# 235 "./sdk/cutil_inline_drvapi.h"
if (deviceCount == 0) {
# 236 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "CUTIL DeviceInitDrv error: no devices supporting CUDA\n");
# 237 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 238 "./sdk/cutil_inline_drvapi.h"
}
# 239 "./sdk/cutil_inline_drvapi.h"
int dev = 0;
# 240 "./sdk/cutil_inline_drvapi.h"
cutGetCmdLineArgumenti(ARGC, (const char **)ARGV, "device", &dev);
# 241 "./sdk/cutil_inline_drvapi.h"
if (dev < 0) { dev = 0; }
# 242 "./sdk/cutil_inline_drvapi.h"
if (dev > (deviceCount - 1)) {
# 243 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "cutilDeviceInitDrv (Device=%d) invalid GPU device.  %d GPU device(s) detected.\n\n", dev, deviceCount);
# 244 "./sdk/cutil_inline_drvapi.h"
return -dev;
# 245 "./sdk/cutil_inline_drvapi.h"
}
# 246 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, dev), "./sdk/cutil_inline_drvapi.h", 246);
# 247 "./sdk/cutil_inline_drvapi.h"
char name[100];
# 248 "./sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 249 "./sdk/cutil_inline_drvapi.h"
if ((cutCheckCmdLineFlag(ARGC, (const char **)ARGV, "quiet")) == (CUTFalse)) {
# 250 "./sdk/cutil_inline_drvapi.h"
printf("> Using CUDA Device [%d]: %s\n", dev, name);
# 251 "./sdk/cutil_inline_drvapi.h"
}
# 252 "./sdk/cutil_inline_drvapi.h"
return dev;
# 253 "./sdk/cutil_inline_drvapi.h"
}
# 260 "./sdk/cutil_inline_drvapi.h"
inline CUdevice cutilChooseCudaDeviceDrv(int argc, char **argv, int *p_devID)
# 261 "./sdk/cutil_inline_drvapi.h"
{
# 262 "./sdk/cutil_inline_drvapi.h"
CUdevice cuDevice;
# 263 "./sdk/cutil_inline_drvapi.h"
int devID = 0;
# 265 "./sdk/cutil_inline_drvapi.h"
if (cutCheckCmdLineFlag(argc, (const char **)argv, "device")) {
# 266 "./sdk/cutil_inline_drvapi.h"
devID = cutilDeviceInitDrv(argc, argv);
# 267 "./sdk/cutil_inline_drvapi.h"
if (devID < 0) {
# 268 "./sdk/cutil_inline_drvapi.h"
printf("exiting...\n");
# 269 "./sdk/cutil_inline_drvapi.h"
exit(0);
# 270 "./sdk/cutil_inline_drvapi.h"
}
# 271 "./sdk/cutil_inline_drvapi.h"
} else {
# 273 "./sdk/cutil_inline_drvapi.h"
char name[100];
# 274 "./sdk/cutil_inline_drvapi.h"
devID = cutilDrvGetMaxGflopsDeviceId();
# 275 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&cuDevice, devID), "./sdk/cutil_inline_drvapi.h", 275);
# 276 "./sdk/cutil_inline_drvapi.h"
cuDeviceGetName(name, 100, cuDevice);
# 277 "./sdk/cutil_inline_drvapi.h"
printf("> Using CUDA Device [%d]: %s\n", devID, name);
# 278 "./sdk/cutil_inline_drvapi.h"
}
# 279 "./sdk/cutil_inline_drvapi.h"
cuDeviceGet(&cuDevice, devID);
# 280 "./sdk/cutil_inline_drvapi.h"
if (p_devID) { (*p_devID) = devID; }
# 281 "./sdk/cutil_inline_drvapi.h"
return cuDevice;
# 282 "./sdk/cutil_inline_drvapi.h"
}
# 287 "./sdk/cutil_inline_drvapi.h"
inline void cutilDrvCudaCheckCtxLost(const char *errorMessage, const char *file, const int line)
# 288 "./sdk/cutil_inline_drvapi.h"
{
# 289 "./sdk/cutil_inline_drvapi.h"
CUresult err = cuCtxSynchronize();
# 290 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_ERROR_INVALID_CONTEXT) != err) {
# 291 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 293 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 294 "./sdk/cutil_inline_drvapi.h"
}
# 295 "./sdk/cutil_inline_drvapi.h"
err = cuCtxSynchronize();
# 296 "./sdk/cutil_inline_drvapi.h"
if ((CUDA_SUCCESS) != err) {
# 297 "./sdk/cutil_inline_drvapi.h"
fprintf(stderr, "Cuda error: %s in file \'%s\' in line %i\n", errorMessage, file, line);
# 299 "./sdk/cutil_inline_drvapi.h"
exit(-1);
# 300 "./sdk/cutil_inline_drvapi.h"
}
# 301 "./sdk/cutil_inline_drvapi.h"
}
# 304 "./sdk/cutil_inline_drvapi.h"
inline bool cutilDrvCudaDevCapabilities(int major_version, int minor_version, int deviceNum)
# 305 "./sdk/cutil_inline_drvapi.h"
{
# 306 "./sdk/cutil_inline_drvapi.h"
int major, minor, dev;
# 307 "./sdk/cutil_inline_drvapi.h"
char device_name[256];
# 313 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGet(&dev, deviceNum), "./sdk/cutil_inline_drvapi.h", 313);
# 314 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceComputeCapability(&major, &minor, dev), "./sdk/cutil_inline_drvapi.h", 314);
# 315 "./sdk/cutil_inline_drvapi.h"
__cuSafeCallNoSync(cuDeviceGetName(device_name, 256, dev), "./sdk/cutil_inline_drvapi.h", 315);
# 317 "./sdk/cutil_inline_drvapi.h"
if ((major > major_version) || ((major == major_version) && (minor >= minor_version)))
# 319 "./sdk/cutil_inline_drvapi.h"
{
# 320 "./sdk/cutil_inline_drvapi.h"
printf("> Device %d: < %s >, Compute SM %d.%d detected\n", dev, device_name, major, minor);
# 321 "./sdk/cutil_inline_drvapi.h"
return true;
# 322 "./sdk/cutil_inline_drvapi.h"
} else
# 324 "./sdk/cutil_inline_drvapi.h"
{
# 325 "./sdk/cutil_inline_drvapi.h"
printf("There is no device supporting CUDA compute capability %d.%d.\n", major_version, minor_version);
# 326 "./sdk/cutil_inline_drvapi.h"
printf("PASSED\n");
# 327 "./sdk/cutil_inline_drvapi.h"
return false;
# 328 "./sdk/cutil_inline_drvapi.h"
}
# 329 "./sdk/cutil_inline_drvapi.h"
}
# 332 "./sdk/cutil_inline_drvapi.h"
inline bool cutilDrvCudaCapabilities(int major_version, int minor_version)
# 333 "./sdk/cutil_inline_drvapi.h"
{
# 334 "./sdk/cutil_inline_drvapi.h"
return cutilDrvCudaDevCapabilities(major_version, minor_version, 0);
# 335 "./sdk/cutil_inline_drvapi.h"
}
# 23 "./sdk/cutil_inline.h"
inline void print_NVCC_min_spec(const char *sSDKsample, const char *sNVCCReq, const char *sDriverReq)
# 24 "./sdk/cutil_inline.h"
{
# 25 "./sdk/cutil_inline.h"
printf("CUDA %d.%02d Toolkit built this project.\n", 4010 / 1000, 4010 % 100);
# 26 "./sdk/cutil_inline.h"
printf("  [ %s ] requirements:\n", sSDKsample);
# 27 "./sdk/cutil_inline.h"
printf(" -> CUDA %s Toolkit\n", sNVCCReq);
# 28 "./sdk/cutil_inline.h"
printf(" -> %s NVIDIA Display Driver.\n", sDriverReq);
# 29 "./sdk/cutil_inline.h"
}
# 17 "tests/eigenvalues/structs.h"
struct InputData {
# 20 "tests/eigenvalues/structs.h"
float *a;
# 22 "tests/eigenvalues/structs.h"
float *b;
# 25 "tests/eigenvalues/structs.h"
float *g_a;
# 27 "tests/eigenvalues/structs.h"
float *g_b;
# 30 "tests/eigenvalues/structs.h"
float *g_b_raw;
# 32 "tests/eigenvalues/structs.h"
};
# 34 "tests/eigenvalues/structs.h"
struct ResultDataSmall {
# 37 "tests/eigenvalues/structs.h"
float *eigenvalues;
# 40 "tests/eigenvalues/structs.h"
float *g_left;
# 43 "tests/eigenvalues/structs.h"
float *g_right;
# 46 "tests/eigenvalues/structs.h"
unsigned *g_left_count;
# 49 "tests/eigenvalues/structs.h"
unsigned *g_right_count;
# 52 "tests/eigenvalues/structs.h"
unsigned *g_converged;
# 56 "tests/eigenvalues/structs.h"
unsigned mat_size_f;
# 57 "tests/eigenvalues/structs.h"
unsigned mat_size_ui;
# 59 "tests/eigenvalues/structs.h"
float *zero_f;
# 60 "tests/eigenvalues/structs.h"
unsigned *zero_ui;
# 61 "tests/eigenvalues/structs.h"
};
# 64 "tests/eigenvalues/structs.h"
struct ResultDataLarge {
# 67 "tests/eigenvalues/structs.h"
unsigned *g_num_one;
# 71 "tests/eigenvalues/structs.h"
unsigned *g_num_blocks_mult;
# 75 "tests/eigenvalues/structs.h"
float *g_left_one;
# 79 "tests/eigenvalues/structs.h"
float *g_right_one;
# 83 "tests/eigenvalues/structs.h"
unsigned *g_pos_one;
# 87 "tests/eigenvalues/structs.h"
float *g_left_mult;
# 91 "tests/eigenvalues/structs.h"
float *g_right_mult;
# 95 "tests/eigenvalues/structs.h"
unsigned *g_left_count_mult;
# 99 "tests/eigenvalues/structs.h"
unsigned *g_right_count_mult;
# 103 "tests/eigenvalues/structs.h"
unsigned *g_blocks_mult;
# 107 "tests/eigenvalues/structs.h"
unsigned *g_blocks_mult_sum;
# 111 "tests/eigenvalues/structs.h"
float *g_lambda_mult;
# 115 "tests/eigenvalues/structs.h"
unsigned *g_pos_mult;
# 117 "tests/eigenvalues/structs.h"
};
# 20 "tests/eigenvalues/util.h"
template< class T> inline void
# 22 "tests/eigenvalues/util.h"
freePtr(T *&ptr) {
# 24 "tests/eigenvalues/util.h"
if (__null != ptr) {
# 25 "tests/eigenvalues/util.h"
free(ptr);
# 26 "tests/eigenvalues/util.h"
ptr = __null;
# 27 "tests/eigenvalues/util.h"
}
# 28 "tests/eigenvalues/util.h"
}
# 33 "tests/eigenvalues/util.h"
template< class T> T
# 38 "tests/eigenvalues/util.h"
min(const T &lhs, const T &rhs) {
# 40 "tests/eigenvalues/util.h"
return (lhs < rhs) ? lhs : rhs;
# 41 "tests/eigenvalues/util.h"
}
# 46 "tests/eigenvalues/util.h"
template< class T> T
# 51 "tests/eigenvalues/util.h"
max(const T &lhs, const T &rhs) {
# 53 "tests/eigenvalues/util.h"
return (lhs < rhs) ? rhs : lhs;
# 54 "tests/eigenvalues/util.h"
}
# 59 "tests/eigenvalues/util.h"
template< class T> T
# 64 "tests/eigenvalues/util.h"
sign_i(const T &val) {
# 65 "tests/eigenvalues/util.h"
return (val < 0) ? (-1) : 1;
# 66 "tests/eigenvalues/util.h"
}
# 75 "tests/eigenvalues/util.h"
inline float sign_f(const float &val) {
# 76 "tests/eigenvalues/util.h"
return (val < (0.0F)) ? (-(1.0F)) : (1.0F);
# 77 "tests/eigenvalues/util.h"
}
# 86 "tests/eigenvalues/util.h"
inline double sign_d(const double &val) {
# 87 "tests/eigenvalues/util.h"
return (val < (0.0)) ? (-(1.0)) : (1.0);
# 88 "tests/eigenvalues/util.h"
}
# 93 "tests/eigenvalues/util.h"
template< class T> void
# 98 "tests/eigenvalues/util.h"
swap(T &lhs, T &rhs) {
# 100 "tests/eigenvalues/util.h"
T temp = rhs;
# 101 "tests/eigenvalues/util.h"
rhs = lhs;
# 102 "tests/eigenvalues/util.h"
lhs = temp;
# 103 "tests/eigenvalues/util.h"
}
# 112 "tests/eigenvalues/util.h"
extern "C" { inline unsigned getNumBlocksLinear(const unsigned num_threads, const unsigned
# 113 "tests/eigenvalues/util.h"
num_threads_block)
# 114 "tests/eigenvalues/util.h"
{
# 115 "tests/eigenvalues/util.h"
const unsigned block_rem = (((num_threads % num_threads_block) != (0)) ? 1 : 0);
# 117 "tests/eigenvalues/util.h"
return (num_threads / num_threads_block) + block_rem;
# 118 "tests/eigenvalues/util.h"
} }
# 40 "tests/eigenvalues/matlab.h"
extern "C" void writeTridiagSymMatlab(const char * , float * , float * , float * , const unsigned );
# 52 "tests/eigenvalues/matlab.h"
template< class T, class S> void writeMatrixMatlab(T & , const char * , S *& , const unsigned );
# 64 "tests/eigenvalues/matlab.h"
template< class T, class S> void writeVectorMatlab(T & , const char * , S *& , const unsigned );
# 78 "tests/eigenvalues/matlab.h"
template< class T, class S> void
# 80 "tests/eigenvalues/matlab.h"
writeMatrixMatlab(T &file, const char *mat_name, S *&
# 81 "tests/eigenvalues/matlab.h"
mat, const unsigned mat_size) {
# 83 "tests/eigenvalues/matlab.h"
const unsigned pitch = (sizeof(S) * mat_size);
# 85 "tests/eigenvalues/matlab.h"
(file << mat_name) << " = [";
# 86 "tests/eigenvalues/matlab.h"
for (unsigned i = (0); i < mat_size; ++i) {
# 87 "tests/eigenvalues/matlab.h"
for (unsigned j = (0); j < mat_size; ++j) {
# 89 "tests/eigenvalues/matlab.h"
(file << getMatrix(mat, pitch, i, j)) << " ";
# 90 "tests/eigenvalues/matlab.h"
}
# 91 "tests/eigenvalues/matlab.h"
if (i != (mat_size - (1))) {
# 92 "tests/eigenvalues/matlab.h"
file << "; ";
# 93 "tests/eigenvalues/matlab.h"
}
# 94 "tests/eigenvalues/matlab.h"
}
# 95 "tests/eigenvalues/matlab.h"
file << "];\n";
# 96 "tests/eigenvalues/matlab.h"
}
# 105 "tests/eigenvalues/matlab.h"
template< class T, class S> void
# 107 "tests/eigenvalues/matlab.h"
writeVectorMatlab(T &file, const char *vec_name, S *&
# 108 "tests/eigenvalues/matlab.h"
vec, const unsigned vec_len)
# 109 "tests/eigenvalues/matlab.h"
{
# 110 "tests/eigenvalues/matlab.h"
(file << vec_name) << " = [";
# 111 "tests/eigenvalues/matlab.h"
for (unsigned i = (0); i < vec_len; ++i) {
# 112 "tests/eigenvalues/matlab.h"
(file << (vec[i])) << " ";
# 113 "tests/eigenvalues/matlab.h"
}
# 114 "tests/eigenvalues/matlab.h"
file << "];\n";
# 115 "tests/eigenvalues/matlab.h"
}
# 30 "tests/eigenvalues/bisect_large.cuh"
extern "C" void computeEigenvaluesLargeMatrix(const InputData & , const ResultDataLarge & , const unsigned , const float , const float , const float , const unsigned );
# 41 "tests/eigenvalues/bisect_large.cuh"
extern "C" void initResultDataLargeMatrix(ResultDataLarge & , const unsigned );
# 48 "tests/eigenvalues/bisect_large.cuh"
extern "C" void cleanupResultDataLargeMatrix(ResultDataLarge & );
# 59 "tests/eigenvalues/bisect_large.cuh"
extern "C" void processResultDataLargeMatrix(const InputData & , const ResultDataLarge & , const unsigned , const char * , const unsigned , char * );
# 27 "tests/eigenvalues/bisect_util.cu"
__attribute__((unused)) inline int floorPow2(int n) {int volatile ___ = 1;(void)n;
# 37 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 45 "tests/eigenvalues/bisect_util.cu"
__attribute__((unused)) inline int ceilPow2(int n) {int volatile ___ = 1;(void)n;
# 55 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 65 "tests/eigenvalues/bisect_util.cu"
__attribute__((unused)) inline float computeMidpoint(const float left, const float right) {int volatile ___ = 1;(void)left;(void)right;
# 76 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 93 "tests/eigenvalues/bisect_util.cu"
template< class S, class T> __attribute__((unused)) void
# 96 "tests/eigenvalues/bisect_util.cu"
storeInterval(unsigned addr, float *
# 97 "tests/eigenvalues/bisect_util.cu"
s_left, float *s_right, T *
# 98 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, float
# 99 "tests/eigenvalues/bisect_util.cu"
left, float right, S
# 100 "tests/eigenvalues/bisect_util.cu"
left_count, S right_count, float
# 101 "tests/eigenvalues/bisect_util.cu"
precision)
# 102 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)addr;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)left;(void)right;(void)left_count;(void)right_count;(void)precision;
# 124 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 146 "tests/eigenvalues/bisect_util.cu"
__attribute__((unused)) inline unsigned computeNumSmallerEigenvals(float *g_d, float *g_s, const unsigned n, const float
# 147 "tests/eigenvalues/bisect_util.cu"
x, const unsigned
# 148 "tests/eigenvalues/bisect_util.cu"
tid, const unsigned
# 149 "tests/eigenvalues/bisect_util.cu"
num_intervals_active, float *
# 150 "tests/eigenvalues/bisect_util.cu"
s_d, float *s_s, unsigned
# 151 "tests/eigenvalues/bisect_util.cu"
converged)
# 153 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)g_d;(void)g_s;(void)n;(void)x;(void)tid;(void)num_intervals_active;(void)s_d;(void)s_s;(void)converged;
# 181 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 203 "tests/eigenvalues/bisect_util.cu"
__attribute__((unused)) inline unsigned computeNumSmallerEigenvalsLarge(float *g_d, float *g_s, const unsigned n, const float
# 204 "tests/eigenvalues/bisect_util.cu"
x, const unsigned
# 205 "tests/eigenvalues/bisect_util.cu"
tid, const unsigned
# 206 "tests/eigenvalues/bisect_util.cu"
num_intervals_active, float *
# 207 "tests/eigenvalues/bisect_util.cu"
s_d, float *s_s, unsigned
# 208 "tests/eigenvalues/bisect_util.cu"
converged)
# 210 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)g_d;(void)g_s;(void)n;(void)x;(void)tid;(void)num_intervals_active;(void)s_d;(void)s_s;(void)converged;
# 247 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 274 "tests/eigenvalues/bisect_util.cu"
template< class S, class T> __attribute__((unused)) void
# 277 "tests/eigenvalues/bisect_util.cu"
storeNonEmptyIntervals(unsigned addr, const unsigned
# 278 "tests/eigenvalues/bisect_util.cu"
num_threads_active, float *
# 279 "tests/eigenvalues/bisect_util.cu"
s_left, float *s_right, T *
# 280 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, float
# 281 "tests/eigenvalues/bisect_util.cu"
left, float mid, float right, const S
# 282 "tests/eigenvalues/bisect_util.cu"
left_count, const S
# 283 "tests/eigenvalues/bisect_util.cu"
mid_count, const S
# 284 "tests/eigenvalues/bisect_util.cu"
right_count, float
# 285 "tests/eigenvalues/bisect_util.cu"
precision, unsigned &
# 286 "tests/eigenvalues/bisect_util.cu"
compact_second_chunk, T *
# 287 "tests/eigenvalues/bisect_util.cu"
s_compaction_list_exc, unsigned &
# 288 "tests/eigenvalues/bisect_util.cu"
is_active_second)
# 289 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)addr;(void)num_threads_active;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)left;(void)mid;(void)right;(void)left_count;(void)mid_count;(void)right_count;(void)precision;(void)compact_second_chunk;(void)s_compaction_list_exc;(void)is_active_second;
# 322 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 333 "tests/eigenvalues/bisect_util.cu"
template< class T> __attribute__((unused)) void
# 336 "tests/eigenvalues/bisect_util.cu"
createIndicesCompaction(T *s_compaction_list_exc, unsigned
# 337 "tests/eigenvalues/bisect_util.cu"
num_threads_compaction) {int volatile ___ = 1;(void)s_compaction_list_exc;(void)num_threads_compaction;
# 377 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 396 "tests/eigenvalues/bisect_util.cu"
template< class T> __attribute__((unused)) void
# 399 "tests/eigenvalues/bisect_util.cu"
compactIntervals(float *s_left, float *s_right, T *
# 400 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, float
# 401 "tests/eigenvalues/bisect_util.cu"
mid, float right, unsigned
# 402 "tests/eigenvalues/bisect_util.cu"
mid_count, unsigned right_count, T *
# 403 "tests/eigenvalues/bisect_util.cu"
s_compaction_list, unsigned
# 404 "tests/eigenvalues/bisect_util.cu"
num_threads_active, unsigned
# 405 "tests/eigenvalues/bisect_util.cu"
is_active_second)
# 406 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)mid;(void)right;(void)mid_count;(void)right_count;(void)s_compaction_list;(void)num_threads_active;(void)is_active_second;
# 420 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 443 "tests/eigenvalues/bisect_util.cu"
template< class T, class S> __attribute__((unused)) void
# 446 "tests/eigenvalues/bisect_util.cu"
storeIntervalConverged(float *s_left, float *s_right, T *
# 447 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, float &
# 448 "tests/eigenvalues/bisect_util.cu"
left, float &mid, float &right, S &
# 449 "tests/eigenvalues/bisect_util.cu"
left_count, S &mid_count, S &right_count, T *
# 450 "tests/eigenvalues/bisect_util.cu"
s_compaction_list_exc, unsigned &
# 451 "tests/eigenvalues/bisect_util.cu"
compact_second_chunk, const unsigned
# 452 "tests/eigenvalues/bisect_util.cu"
num_threads_active)
# 453 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)left;(void)mid;(void)right;(void)left_count;(void)mid_count;(void)right_count;(void)s_compaction_list_exc;(void)compact_second_chunk;(void)num_threads_active;
# 488 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 490 "tests/eigenvalues/bisect_util.cu"
template< class T, class S> __attribute__((unused)) void
# 493 "tests/eigenvalues/bisect_util.cu"
storeIntervalConverged(float *s_left, float *s_right, T *
# 494 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, float &
# 495 "tests/eigenvalues/bisect_util.cu"
left, float &mid, float &right, S &
# 496 "tests/eigenvalues/bisect_util.cu"
left_count, S &mid_count, S &right_count, T *
# 497 "tests/eigenvalues/bisect_util.cu"
s_compaction_list_exc, unsigned &
# 498 "tests/eigenvalues/bisect_util.cu"
compact_second_chunk, const unsigned
# 499 "tests/eigenvalues/bisect_util.cu"
num_threads_active, unsigned &
# 500 "tests/eigenvalues/bisect_util.cu"
is_active_second)
# 501 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)left;(void)mid;(void)right;(void)left_count;(void)mid_count;(void)right_count;(void)s_compaction_list_exc;(void)compact_second_chunk;(void)num_threads_active;(void)is_active_second;
# 536 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 555 "tests/eigenvalues/bisect_util.cu"
template< class T> __attribute__((unused)) void
# 558 "tests/eigenvalues/bisect_util.cu"
subdivideActiveInterval(const unsigned tid, float *
# 559 "tests/eigenvalues/bisect_util.cu"
s_left, float *s_right, T *
# 560 "tests/eigenvalues/bisect_util.cu"
s_left_count, T *s_right_count, const unsigned
# 561 "tests/eigenvalues/bisect_util.cu"
num_threads_active, float &
# 562 "tests/eigenvalues/bisect_util.cu"
left, float &right, unsigned &
# 563 "tests/eigenvalues/bisect_util.cu"
left_count, unsigned &right_count, float &
# 564 "tests/eigenvalues/bisect_util.cu"
mid, unsigned &all_threads_converged)
# 565 "tests/eigenvalues/bisect_util.cu"
{int volatile ___ = 1;(void)tid;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)num_threads_active;(void)left;(void)right;(void)left_count;(void)right_count;(void)mid;(void)all_threads_converged;
# 587 "tests/eigenvalues/bisect_util.cu"
exit(___);}
# 31 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void writeToGmem(const unsigned , const unsigned , const unsigned , const unsigned , float * , float * , unsigned * , float * , float * , unsigned * , unsigned * , float * , float * , unsigned short * , unsigned short * , unsigned * , unsigned * , unsigned short * , unsigned short * , unsigned );
# 53 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void compactStreamsFinal(const unsigned , const unsigned , const unsigned , unsigned & , float * , float * , unsigned short * , unsigned short * , unsigned short * , unsigned short * , unsigned short * , unsigned short * , unsigned , unsigned , float & , float & , float & , float & , unsigned & , unsigned & , unsigned & , unsigned & , unsigned , unsigned , unsigned , unsigned );
# 73 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanCompactBlocksStartAddress(const unsigned , const unsigned , const unsigned , unsigned short * , unsigned short * );
# 84 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanSumBlocks(const unsigned , const unsigned , const unsigned , const unsigned , unsigned short * , unsigned short * );
# 97 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanInitial(const unsigned , const unsigned , const unsigned , const unsigned , unsigned short * , unsigned short * , unsigned short * , unsigned short * );
# 111 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void storeNonEmptyIntervalsLarge(unsigned , const unsigned , float * , float * , unsigned short * , unsigned short * , float , float , float , const unsigned short , const unsigned short , const unsigned short , float , unsigned & , unsigned short * , unsigned & );
# 140 "tests/eigenvalues/bisect_kernel_large.cu"
void bisectKernelLarge(float *g_d, float *g_s, const unsigned n, const float
# 141 "tests/eigenvalues/bisect_kernel_large.cu"
lg, const float ug, const unsigned
# 142 "tests/eigenvalues/bisect_kernel_large.cu"
lg_eig_count, const unsigned
# 143 "tests/eigenvalues/bisect_kernel_large.cu"
ug_eig_count, float
# 144 "tests/eigenvalues/bisect_kernel_large.cu"
epsilon, unsigned *
# 145 "tests/eigenvalues/bisect_kernel_large.cu"
g_num_one, unsigned *
# 146 "tests/eigenvalues/bisect_kernel_large.cu"
g_num_blocks_mult, float *
# 147 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_one, float *g_right_one, unsigned *
# 148 "tests/eigenvalues/bisect_kernel_large.cu"
g_pos_one, float *
# 149 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_mult, float *g_right_mult, unsigned *
# 150 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_count_mult, unsigned *
# 151 "tests/eigenvalues/bisect_kernel_large.cu"
g_right_count_mult, unsigned *
# 152 "tests/eigenvalues/bisect_kernel_large.cu"
g_blocks_mult, unsigned *
# 153 "tests/eigenvalues/bisect_kernel_large.cu"
g_blocks_mult_sum) ;
# 507 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void writeToGmem(const unsigned tid, const unsigned tid_2, const unsigned
# 508 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_active, const unsigned
# 509 "tests/eigenvalues/bisect_kernel_large.cu"
num_blocks_mult, float *
# 510 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_one, float *g_right_one, unsigned *
# 511 "tests/eigenvalues/bisect_kernel_large.cu"
g_pos_one, float *
# 512 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_mult, float *g_right_mult, unsigned *
# 513 "tests/eigenvalues/bisect_kernel_large.cu"
g_left_count_mult, unsigned *
# 514 "tests/eigenvalues/bisect_kernel_large.cu"
g_right_count_mult, float *
# 515 "tests/eigenvalues/bisect_kernel_large.cu"
s_left, float *s_right, unsigned short *
# 516 "tests/eigenvalues/bisect_kernel_large.cu"
s_left_count, unsigned short *s_right_count, unsigned *
# 517 "tests/eigenvalues/bisect_kernel_large.cu"
g_blocks_mult, unsigned *
# 518 "tests/eigenvalues/bisect_kernel_large.cu"
g_blocks_mult_sum, unsigned short *
# 519 "tests/eigenvalues/bisect_kernel_large.cu"
s_compaction_list, unsigned short *
# 520 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_helper, unsigned
# 521 "tests/eigenvalues/bisect_kernel_large.cu"
offset_mult_lambda)
# 522 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)tid;(void)tid_2;(void)num_threads_active;(void)num_blocks_mult;(void)g_left_one;(void)g_right_one;(void)g_pos_one;(void)g_left_mult;(void)g_right_mult;(void)g_left_count_mult;(void)g_right_count_mult;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)g_blocks_mult;(void)g_blocks_mult_sum;(void)s_compaction_list;(void)s_cl_helper;(void)offset_mult_lambda;
# 568 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 575 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void compactStreamsFinal(const unsigned tid, const unsigned tid_2, const unsigned
# 576 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_active, unsigned &
# 577 "tests/eigenvalues/bisect_kernel_large.cu"
offset_mult_lambda, float *
# 578 "tests/eigenvalues/bisect_kernel_large.cu"
s_left, float *s_right, unsigned short *
# 579 "tests/eigenvalues/bisect_kernel_large.cu"
s_left_count, unsigned short *s_right_count, unsigned short *
# 580 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_one, unsigned short *s_cl_mult, unsigned short *
# 581 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_blocking, unsigned short *s_cl_helper, unsigned
# 582 "tests/eigenvalues/bisect_kernel_large.cu"
is_one_lambda, unsigned is_one_lambda_2, float &
# 583 "tests/eigenvalues/bisect_kernel_large.cu"
left, float &right, float &left_2, float &right_2, unsigned &
# 584 "tests/eigenvalues/bisect_kernel_large.cu"
left_count, unsigned &right_count, unsigned &
# 585 "tests/eigenvalues/bisect_kernel_large.cu"
left_count_2, unsigned &right_count_2, unsigned
# 586 "tests/eigenvalues/bisect_kernel_large.cu"
c_block_iend, unsigned c_sum_block, unsigned
# 587 "tests/eigenvalues/bisect_kernel_large.cu"
c_block_iend_2, unsigned c_sum_block_2)
# 589 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)tid;(void)tid_2;(void)num_threads_active;(void)offset_mult_lambda;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)s_cl_one;(void)s_cl_mult;(void)s_cl_blocking;(void)s_cl_helper;(void)is_one_lambda;(void)is_one_lambda_2;(void)left;(void)right;(void)left_2;(void)right_2;(void)left_count;(void)right_count;(void)left_count_2;(void)right_count_2;(void)c_block_iend;(void)c_sum_block;(void)c_block_iend_2;(void)c_sum_block_2;
# 648 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 655 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanCompactBlocksStartAddress(const unsigned tid, const unsigned tid_2, const unsigned
# 656 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_compaction, unsigned short *
# 657 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_blocking, unsigned short *
# 658 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_helper)
# 660 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)tid;(void)tid_2;(void)num_threads_compaction;(void)s_cl_blocking;(void)s_cl_helper;
# 707 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 714 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanSumBlocks(const unsigned tid, const unsigned tid_2, const unsigned
# 715 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_active, const unsigned
# 716 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_compaction, unsigned short *
# 717 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_blocking, unsigned short *
# 718 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_helper)
# 719 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)tid;(void)tid_2;(void)num_threads_active;(void)num_threads_compaction;(void)s_cl_blocking;(void)s_cl_helper;
# 767 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 775 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void scanInitial(const unsigned tid, const unsigned tid_2, const unsigned
# 776 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_active, const unsigned
# 777 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_compaction, unsigned short *
# 778 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_one, unsigned short *s_cl_mult, unsigned short *
# 779 "tests/eigenvalues/bisect_kernel_large.cu"
s_cl_blocking, unsigned short *s_cl_helper)
# 781 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)tid;(void)tid_2;(void)num_threads_active;(void)num_threads_compaction;(void)s_cl_one;(void)s_cl_mult;(void)s_cl_blocking;(void)s_cl_helper;
# 861 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 869 "tests/eigenvalues/bisect_kernel_large.cu"
__attribute__((unused)) void storeNonEmptyIntervalsLarge(unsigned addr, const unsigned
# 870 "tests/eigenvalues/bisect_kernel_large.cu"
num_threads_active, float *
# 871 "tests/eigenvalues/bisect_kernel_large.cu"
s_left, float *s_right, unsigned short *
# 872 "tests/eigenvalues/bisect_kernel_large.cu"
s_left_count, unsigned short *
# 873 "tests/eigenvalues/bisect_kernel_large.cu"
s_right_count, float
# 874 "tests/eigenvalues/bisect_kernel_large.cu"
left, float mid, float right, const unsigned short
# 875 "tests/eigenvalues/bisect_kernel_large.cu"
left_count, const unsigned short
# 876 "tests/eigenvalues/bisect_kernel_large.cu"
mid_count, const unsigned short
# 877 "tests/eigenvalues/bisect_kernel_large.cu"
right_count, float
# 878 "tests/eigenvalues/bisect_kernel_large.cu"
epsilon, unsigned &
# 879 "tests/eigenvalues/bisect_kernel_large.cu"
compact_second_chunk, unsigned short *
# 880 "tests/eigenvalues/bisect_kernel_large.cu"
s_compaction_list, unsigned &
# 881 "tests/eigenvalues/bisect_kernel_large.cu"
is_active_second)
# 882 "tests/eigenvalues/bisect_kernel_large.cu"
{int volatile ___ = 1;(void)addr;(void)num_threads_active;(void)s_left;(void)s_right;(void)s_left_count;(void)s_right_count;(void)left;(void)mid;(void)right;(void)left_count;(void)mid_count;(void)right_count;(void)epsilon;(void)compact_second_chunk;(void)s_compaction_list;(void)is_active_second;
# 911 "tests/eigenvalues/bisect_kernel_large.cu"
exit(___);}
# 42 "tests/eigenvalues/bisect_kernel_large_onei.cu"
void bisectKernelLarge_OneIntervals(float *g_d, float *g_s, const unsigned n, unsigned
# 43 "tests/eigenvalues/bisect_kernel_large_onei.cu"
num_intervals, float *
# 44 "tests/eigenvalues/bisect_kernel_large_onei.cu"
g_left, float *g_right, unsigned *
# 45 "tests/eigenvalues/bisect_kernel_large_onei.cu"
g_pos, float
# 46 "tests/eigenvalues/bisect_kernel_large_onei.cu"
precision) ;
# 47 "tests/eigenvalues/bisect_kernel_large_multi.cu"
void bisectKernelLarge_MultIntervals(float *g_d, float *g_s, const unsigned n, unsigned *
# 48 "tests/eigenvalues/bisect_kernel_large_multi.cu"
blocks_mult, unsigned *
# 49 "tests/eigenvalues/bisect_kernel_large_multi.cu"
blocks_mult_sum, float *
# 50 "tests/eigenvalues/bisect_kernel_large_multi.cu"
g_left, float *g_right, unsigned *
# 51 "tests/eigenvalues/bisect_kernel_large_multi.cu"
g_left_count, unsigned *
# 52 "tests/eigenvalues/bisect_kernel_large_multi.cu"
g_right_count, float *
# 53 "tests/eigenvalues/bisect_kernel_large_multi.cu"
g_lambda, unsigned *g_pos, float
# 54 "tests/eigenvalues/bisect_kernel_large_multi.cu"
precision) ;
# 42 "tests/eigenvalues/bisect_large.cu"
void initResultDataLargeMatrix(ResultDataLarge &result, const unsigned mat_size) {
# 45 "tests/eigenvalues/bisect_large.cu"
unsigned zero = (0);
# 46 "tests/eigenvalues/bisect_large.cu"
unsigned mat_size_f = (sizeof(float) * mat_size);
# 47 "tests/eigenvalues/bisect_large.cu"
unsigned mat_size_ui = (sizeof(unsigned) * mat_size);
# 49 "tests/eigenvalues/bisect_large.cu"
float *tempf = ((float *)malloc(mat_size_f));
# 50 "tests/eigenvalues/bisect_large.cu"
unsigned *tempui = ((unsigned *)malloc(mat_size_ui));
# 51 "tests/eigenvalues/bisect_large.cu"
for (unsigned i = (0); i < mat_size; ++i) {
# 52 "tests/eigenvalues/bisect_large.cu"
(tempf[i]) = (0.0F);
# 53 "tests/eigenvalues/bisect_large.cu"
(tempui[i]) = (0);
# 54 "tests/eigenvalues/bisect_large.cu"
}
# 57 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_num_one)), sizeof(unsigned)), "tests/eigenvalues/bisect_large.cu", 58);
# 59 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_num_one, &zero, sizeof(unsigned), cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 60);
# 64 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_num_blocks_mult)), sizeof(unsigned)), "tests/eigenvalues/bisect_large.cu", 65);
# 66 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_num_blocks_mult, &zero, sizeof(unsigned), cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 68);
# 71 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_left_one)), mat_size_f), "tests/eigenvalues/bisect_large.cu", 71);
# 72 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_right_one)), mat_size_f), "tests/eigenvalues/bisect_large.cu", 72);
# 73 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_pos_one)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 73);
# 75 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_left_mult)), mat_size_f), "tests/eigenvalues/bisect_large.cu", 75);
# 76 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_right_mult)), mat_size_f), "tests/eigenvalues/bisect_large.cu", 76);
# 77 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_left_count_mult)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 78);
# 79 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_right_count_mult)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 80);
# 82 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_left_one, tempf, mat_size_f, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 83);
# 84 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_right_one, tempf, mat_size_f, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 85);
# 86 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_pos_one, tempui, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 87);
# 89 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_left_mult, tempf, mat_size_f, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 90);
# 91 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_right_mult, tempf, mat_size_f, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 92);
# 93 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_left_count_mult, tempui, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 94);
# 95 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_right_count_mult, tempui, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 96);
# 98 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_blocks_mult)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 98);
# 99 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_blocks_mult, tempui, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 100);
# 101 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_blocks_mult_sum)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 101);
# 102 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_blocks_mult_sum, tempui, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 103);
# 105 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_lambda_mult)), mat_size_f), "tests/eigenvalues/bisect_large.cu", 105);
# 106 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_lambda_mult, tempf, mat_size_f, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 107);
# 108 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMalloc((void **)(&(result.g_pos_mult)), mat_size_ui), "tests/eigenvalues/bisect_large.cu", 108);
# 109 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(result.g_pos_mult, tempf, mat_size_ui, cudaMemcpyHostToDevice), "tests/eigenvalues/bisect_large.cu", 110);
# 111 "tests/eigenvalues/bisect_large.cu"
}
# 118 "tests/eigenvalues/bisect_large.cu"
void cleanupResultDataLargeMatrix(ResultDataLarge &result) {
# 120 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_num_one), "tests/eigenvalues/bisect_large.cu", 120);
# 121 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_num_blocks_mult), "tests/eigenvalues/bisect_large.cu", 121);
# 122 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_left_one), "tests/eigenvalues/bisect_large.cu", 122);
# 123 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_right_one), "tests/eigenvalues/bisect_large.cu", 123);
# 124 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_pos_one), "tests/eigenvalues/bisect_large.cu", 124);
# 125 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_left_mult), "tests/eigenvalues/bisect_large.cu", 125);
# 126 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_right_mult), "tests/eigenvalues/bisect_large.cu", 126);
# 127 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_left_count_mult), "tests/eigenvalues/bisect_large.cu", 127);
# 128 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_right_count_mult), "tests/eigenvalues/bisect_large.cu", 128);
# 129 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_blocks_mult), "tests/eigenvalues/bisect_large.cu", 129);
# 130 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_blocks_mult_sum), "tests/eigenvalues/bisect_large.cu", 130);
# 131 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_lambda_mult), "tests/eigenvalues/bisect_large.cu", 131);
# 132 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaFree(result.g_pos_mult), "tests/eigenvalues/bisect_large.cu", 132);
# 133 "tests/eigenvalues/bisect_large.cu"
}
# 146 "tests/eigenvalues/bisect_large.cu"
void computeEigenvaluesLargeMatrix(const InputData &input, const ResultDataLarge &result, const unsigned
# 147 "tests/eigenvalues/bisect_large.cu"
mat_size, const float precision, const float
# 148 "tests/eigenvalues/bisect_large.cu"
lg, const float ug, const unsigned
# 149 "tests/eigenvalues/bisect_large.cu"
iterations)
# 150 "tests/eigenvalues/bisect_large.cu"
{
# 151 "tests/eigenvalues/bisect_large.cu"
dim3 blocks(1, 1, 1);
# 152 "tests/eigenvalues/bisect_large.cu"
dim3 threads(256, 1, 1);
# 154 "tests/eigenvalues/bisect_large.cu"
unsigned timer_step1 = (0);
# 155 "tests/eigenvalues/bisect_large.cu"
unsigned timer_step2_one = (0);
# 156 "tests/eigenvalues/bisect_large.cu"
unsigned timer_step2_mult = (0);
# 157 "tests/eigenvalues/bisect_large.cu"
unsigned timer_total = (0);
# 158 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutCreateTimer(&timer_step1), "tests/eigenvalues/bisect_large.cu", 158);
# 159 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutCreateTimer(&timer_step2_one), "tests/eigenvalues/bisect_large.cu", 159);
# 160 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutCreateTimer(&timer_step2_mult), "tests/eigenvalues/bisect_large.cu", 160);
# 161 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutCreateTimer(&timer_total), "tests/eigenvalues/bisect_large.cu", 161);
# 163 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStartTimer(timer_total), "tests/eigenvalues/bisect_large.cu", 163);
# 166 "tests/eigenvalues/bisect_large.cu"
for (unsigned iter = (0); iter < iterations; ++iter) {
# 168 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStartTimer(timer_step1), "tests/eigenvalues/bisect_large.cu", 168);
# 169 "tests/eigenvalues/bisect_large.cu"
cudaConfigureCall(blocks, threads) ? ((void)0) : bisectKernelLarge(input.g_a, input.g_b, mat_size, lg, ug, 0, mat_size, precision, result.g_num_one, result.g_num_blocks_mult, result.g_left_one, result.g_right_one, result.g_pos_one, result.g_left_mult, result.g_right_mult, result.g_left_count_mult, result.g_right_count_mult, result.g_blocks_mult, result.g_blocks_mult_sum);
# 178 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/eigenvalues/bisect_large.cu", 178);
# 179 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStopTimer(timer_step1), "tests/eigenvalues/bisect_large.cu", 179);
# 180 "tests/eigenvalues/bisect_large.cu"
__cutilCheckMsg("Kernel launch failed.", "tests/eigenvalues/bisect_large.cu", 180);
# 184 "tests/eigenvalues/bisect_large.cu"
unsigned num_one_intervals;
# 185 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(&num_one_intervals, result.g_num_one, sizeof(unsigned), cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 187);
# 189 "tests/eigenvalues/bisect_large.cu"
dim3 grid_onei;
# 190 "tests/eigenvalues/bisect_large.cu"
(grid_onei.x) = getNumBlocksLinear(num_one_intervals, 256);
# 191 "tests/eigenvalues/bisect_large.cu"
dim3 threads_onei;
# 194 "tests/eigenvalues/bisect_large.cu"
(threads_onei.x) = (256);
# 198 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStartTimer(timer_step2_one), "tests/eigenvalues/bisect_large.cu", 198);
# 200 "tests/eigenvalues/bisect_large.cu"
cudaConfigureCall(grid_onei, threads_onei) ? ((void)0) : bisectKernelLarge_OneIntervals(input.g_a, input.g_b, mat_size, num_one_intervals, result.g_left_one, result.g_right_one, result.g_pos_one, precision);
# 206 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaThreadSynchronize(), "tests/eigenvalues/bisect_large.cu", 206);
# 207 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStopTimer(timer_step2_one), "tests/eigenvalues/bisect_large.cu", 207);
# 215 "tests/eigenvalues/bisect_large.cu"
unsigned num_blocks_mult = (0);
# 216 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(&num_blocks_mult, result.g_num_blocks_mult, sizeof(unsigned), cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 218);
# 221 "tests/eigenvalues/bisect_large.cu"
dim3 grid_mult(num_blocks_mult, 1, 1);
# 222 "tests/eigenvalues/bisect_large.cu"
dim3 threads_mult(256, 1, 1);
# 224 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStartTimer(timer_step2_mult), "tests/eigenvalues/bisect_large.cu", 224);
# 226 "tests/eigenvalues/bisect_large.cu"
cudaConfigureCall(grid_mult, threads_mult) ? ((void)0) : bisectKernelLarge_MultIntervals(input.g_a, input.g_b, mat_size, result.g_blocks_mult, result.g_blocks_mult_sum, result.g_left_mult, result.g_right_mult, result.g_left_count_mult, result.g_right_count_mult, result.g_lambda_mult, result.g_pos_mult, precision);
# 235 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStopTimer(timer_step2_mult), "tests/eigenvalues/bisect_large.cu", 235);
# 236 "tests/eigenvalues/bisect_large.cu"
__cutilCheckMsg("bisectKernelLarge_MultIntervals() FAILED.", "tests/eigenvalues/bisect_large.cu", 236);
# 237 "tests/eigenvalues/bisect_large.cu"
}
# 239 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutStopTimer(timer_total), "tests/eigenvalues/bisect_large.cu", 239);
# 242 "tests/eigenvalues/bisect_large.cu"
printf("Average time step 1: %f ms\n", cutGetTimerValue(timer_step1) / ((float)iterations));
# 244 "tests/eigenvalues/bisect_large.cu"
printf("Average time step 2, one intervals: %f ms\n", cutGetTimerValue(timer_step2_one) / ((float)iterations));
# 246 "tests/eigenvalues/bisect_large.cu"
printf("Average time step 2, mult intervals: %f ms\n", cutGetTimerValue(timer_step2_mult) / ((float)iterations));
# 249 "tests/eigenvalues/bisect_large.cu"
printf("Average time TOTAL: %f ms\n", cutGetTimerValue(timer_total) / ((float)iterations));
# 252 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutDeleteTimer(timer_step1), "tests/eigenvalues/bisect_large.cu", 252);
# 253 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutDeleteTimer(timer_step2_one), "tests/eigenvalues/bisect_large.cu", 253);
# 254 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutDeleteTimer(timer_step2_mult), "tests/eigenvalues/bisect_large.cu", 254);
# 255 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutDeleteTimer(timer_total), "tests/eigenvalues/bisect_large.cu", 255);
# 256 "tests/eigenvalues/bisect_large.cu"
}
# 267 "tests/eigenvalues/bisect_large.cu"
void processResultDataLargeMatrix(const InputData &input, const ResultDataLarge &result, const unsigned
# 268 "tests/eigenvalues/bisect_large.cu"
mat_size, const char *
# 269 "tests/eigenvalues/bisect_large.cu"
filename, const unsigned
# 270 "tests/eigenvalues/bisect_large.cu"
user_defined, char *exec_path)
# 271 "tests/eigenvalues/bisect_large.cu"
{
# 272 "tests/eigenvalues/bisect_large.cu"
const unsigned mat_size_ui = (sizeof(unsigned) * mat_size);
# 273 "tests/eigenvalues/bisect_large.cu"
const unsigned mat_size_f = (sizeof(float) * mat_size);
# 277 "tests/eigenvalues/bisect_large.cu"
float *lambda_mult = ((float *)malloc(sizeof(float) * mat_size));
# 278 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(lambda_mult, result.g_lambda_mult, sizeof(float) * mat_size, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 280);
# 281 "tests/eigenvalues/bisect_large.cu"
unsigned *pos_mult = ((unsigned *)malloc(sizeof(unsigned) * mat_size));
# 283 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(pos_mult, result.g_pos_mult, sizeof(unsigned) * mat_size, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 285);
# 287 "tests/eigenvalues/bisect_large.cu"
unsigned *blocks_mult_sum = ((unsigned *)malloc(sizeof(unsigned) * mat_size));
# 289 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(blocks_mult_sum, result.g_blocks_mult_sum, sizeof(unsigned) * mat_size, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 291);
# 293 "tests/eigenvalues/bisect_large.cu"
unsigned num_one_intervals;
# 294 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(&num_one_intervals, result.g_num_one, sizeof(unsigned), cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 296);
# 298 "tests/eigenvalues/bisect_large.cu"
unsigned sum_blocks_mult = (mat_size - num_one_intervals);
# 303 "tests/eigenvalues/bisect_large.cu"
float *left_one = ((float *)malloc(mat_size_f));
# 304 "tests/eigenvalues/bisect_large.cu"
float *right_one = ((float *)malloc(mat_size_f));
# 305 "tests/eigenvalues/bisect_large.cu"
unsigned *pos_one = ((unsigned *)malloc(mat_size_ui));
# 306 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(left_one, result.g_left_one, mat_size_f, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 307);
# 308 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(right_one, result.g_right_one, mat_size_f, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 309);
# 310 "tests/eigenvalues/bisect_large.cu"
__cudaSafeCall(cudaMemcpy(pos_one, result.g_pos_one, mat_size_ui, cudaMemcpyDeviceToHost), "tests/eigenvalues/bisect_large.cu", 311);
# 314 "tests/eigenvalues/bisect_large.cu"
float *eigenvals = ((float *)malloc(mat_size_f));
# 317 "tests/eigenvalues/bisect_large.cu"
for (unsigned i = (0); i < sum_blocks_mult; ++i) {
# 319 "tests/eigenvalues/bisect_large.cu"
(eigenvals[(pos_mult[i]) - (1)]) = (lambda_mult[i]);
# 320 "tests/eigenvalues/bisect_large.cu"
}
# 323 "tests/eigenvalues/bisect_large.cu"
unsigned index = (0);
# 324 "tests/eigenvalues/bisect_large.cu"
for (unsigned i = (0); i < num_one_intervals; (++i), (++index)) {
# 326 "tests/eigenvalues/bisect_large.cu"
(eigenvals[(pos_one[i]) - (1)]) = (left_one[i]);
# 327 "tests/eigenvalues/bisect_large.cu"
}
# 329 "tests/eigenvalues/bisect_large.cu"
if ((1) == user_defined) {
# 331 "tests/eigenvalues/bisect_large.cu"
writeTridiagSymMatlab(filename, input.a, (input.b) + 1, eigenvals, mat_size);
# 333 "tests/eigenvalues/bisect_large.cu"
} else
# 334 "tests/eigenvalues/bisect_large.cu"
{
# 338 "tests/eigenvalues/bisect_large.cu"
float *reference = (__null);
# 339 "tests/eigenvalues/bisect_large.cu"
unsigned input_data_size = (0);
# 341 "tests/eigenvalues/bisect_large.cu"
char *ref_path = cutFindFilePath("reference.dat", exec_path);
# 342 "tests/eigenvalues/bisect_large.cu"
__cutilCondition((0) != ref_path, (char *)("tests/eigenvalues/bisect_large.cu"), 342);
# 343 "tests/eigenvalues/bisect_large.cu"
__cutilCheckError(cutReadFilef(ref_path, &reference, &input_data_size), "tests/eigenvalues/bisect_large.cu", 343);
# 344 "tests/eigenvalues/bisect_large.cu"
__cutilCondition(input_data_size == mat_size, (char *)("tests/eigenvalues/bisect_large.cu"), 344);
# 348 "tests/eigenvalues/bisect_large.cu"
float tolerance = ((9.999999747e-06F) + (4.999999874e-06F));
# 350 "tests/eigenvalues/bisect_large.cu"
if ((CUTTrue) == (cutComparefe(reference, eigenvals, mat_size, tolerance))) {
# 351 "tests/eigenvalues/bisect_large.cu"
printf("\nPASSED.\n");
# 352 "tests/eigenvalues/bisect_large.cu"
} else
# 353 "tests/eigenvalues/bisect_large.cu"
{
# 354 "tests/eigenvalues/bisect_large.cu"
printf("FAILED.\n");
# 355 "tests/eigenvalues/bisect_large.cu"
}
# 357 "tests/eigenvalues/bisect_large.cu"
cutFree(ref_path);
# 358 "tests/eigenvalues/bisect_large.cu"
cutFree(reference);
# 359 "tests/eigenvalues/bisect_large.cu"
}
# 361 "tests/eigenvalues/bisect_large.cu"
freePtr(eigenvals);
# 362 "tests/eigenvalues/bisect_large.cu"
freePtr(lambda_mult);
# 363 "tests/eigenvalues/bisect_large.cu"
freePtr(pos_mult);
# 364 "tests/eigenvalues/bisect_large.cu"
freePtr(blocks_mult_sum);
# 365 "tests/eigenvalues/bisect_large.cu"
freePtr(left_one);
# 366 "tests/eigenvalues/bisect_large.cu"
freePtr(right_one);
# 367 "tests/eigenvalues/bisect_large.cu"
freePtr(pos_one);
# 368 "tests/eigenvalues/bisect_large.cu"
}
# 1 "tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
# 1 "tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c" 1 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 103 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 3
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda4.1/cuda/include/common_functions.h" 1 3
# 159 "/usr/local/cuda4.1/cuda/include/common_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_functions.h" 1 3
# 2935 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_constants.h" 1 3
# 2936 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 5550 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/crt/func_macro.h" 1 3
# 5551 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 7292 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 7577 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 7730 "/usr/local/cuda4.1/cuda/include/math_functions.h" 3
# 1 "/usr/local/cuda4.1/cuda/include/math_functions_dbl_ptx3.h" 1 3
# 7731 "/usr/local/cuda4.1/cuda/include/math_functions.h" 2 3
# 160 "/usr/local/cuda4.1/cuda/include/common_functions.h" 2 3
# 176 "/usr/local/cuda4.1/cuda/include/crt/host_runtime.h" 2 3







#pragma pack()
# 2 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_00006e32_00000000-3_bisect_large.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x000000000002b949,0x0000006801000001,0x0000000000026d21\n"
".quad 0x0000003800000000,0x0000001400030000,0x0000002100000040,0x0000000000000015\n"
".quad 0x0000000000000000,0x0000000000000000,0x69652f7374736574,0x65756c61766e6567\n"
".quad 0x7463657369622f73,0x632e656772616c5f,0x0000000000000075,0x762e0a0a0a0a0a0a\n"
".quad 0x33206e6f69737265,0x677261742e0a302e,0x30325f6d73207465,0x7365726464612e0a\n"
".quad 0x3620657a69735f73,0x656c69662e0a0a34,0x706d742f22203109,0x5f746678706d742f\n"
".quad 0x3233653630303030,0x303030303030305f,0x657369625f372d30,0x656772616c5f7463\n"
".quad 0x22692e337070632e,0x3209656c69662e0a,0x2f73747365742220,0x6c61766e65676965\n"
".quad 0x657369622f736575,0x2e6c6974755f7463,0x6c69662e0a227563,0x73752f2220330965\n"
".quad 0x2f6c61636f6c2f72,0x2f312e3461647563,0x76766e2f61647563,0x636e695f69632f6d\n"
".quad 0x0a22682e6564756c,0x203409656c69662e,0x6f6c2f7273752f22,0x616475632f6c6163\n"
".quad 0x616475632f312e34,0x6564756c636e692f,0x75665f6874616d2f,0x2e736e6f6974636e\n"
".quad 0x656c69662e0a2268,0x7273752f22203509,0x6564756c636e692f,0x352e342f2b2b632f\n"
".quad 0x0a226874616d632f,0x203609656c69662e,0x6f6c2f7273752f22,0x616475632f6c6163\n"
".quad 0x616475632f312e34,0x6564756c636e692f,0x5f6563697665642f,0x6e6f6974636e7566\n"
".quad 0x69662e0a22682e73,0x657422203709656c,0x656769652f737473,0x2f7365756c61766e\n"
".quad 0x6b5f746365736962,0x616c5f6c656e7265,0x0a2275632e656772,0x203809656c69662e\n"
".quad 0x652f737473657422,0x756c61766e656769,0x63657369622f7365,0x6c656e72656b5f74\n"
".quad 0x6f5f656772616c5f,0x0a2275632e69656e,0x203909656c69662e,0x652f737473657422\n"
".quad 0x756c61766e656769,0x63657369622f7365,0x6c656e72656b5f74,0x6d5f656772616c5f\n"
".quad 0x2275632e69746c75,0x0a0a0a0a0a0a0a0a,0x0a0a0a0a0a0a0a0a,0x0a0a0a0a0a0a0a0a\n"
".quad 0x762e0a0a0a0a0a0a,0x2e20656c62697369,0x702e2820636e7566,0x33622e206d617261\n"
".quad 0x725f636e75662032,0x2029306c61767465,0x506c696563385a5f,0x702e0a286932776f\n"
".quad 0x33622e206d617261,0x696563385a5f2032,0x705f6932776f506c,0x290a305f6d617261\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x6765722e0a3b3e35,0x2520646572702e20\n"
".quad 0x722e0a3b3e363c70,0x203233732e206765,0x0a3b3e34313c7225,0x7261702e646c0a0a\n"
".quad 0x25203233752e6d61,0x385a5f5b202c3172,0x32776f506c696563,0x5f6d617261705f69\n"
".quad 0x2e6464610a3b5d30,0x2c32722520323373,0x312d202c31722520,0x3220636f6c2e0a3b\n"
".quad 0x6e610a3120383420,0x7225203233622e64,0x202c327225202c33,0x7465730a3b317225\n"
".quad 0x3233732e71652e70,0x7225202c31702520,0x25400a3b30202c33,0x4220617262203170\n"
".quad 0x6c0a0a3b325f3042,0x2e6d617261702e64,0x3331722520323375,0x6563385a5f5b202c\n"
".quad 0x5f6932776f506c69,0x5d305f6d61726170,0x3220636f6c2e0a3b,0x76630a3120333520\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x0a3b33317225202c,0x33203320636f6c2e\n"
".quad 0x7362610a35203539,0x326625203233662e,0x2e0a3b316625202c,0x3934203420636f6c\n"
".quad 0x7465730a33203932,0x3233662e746c2e70,0x6625202c32702520,0x3830306630202c32\n"
".quad 0x2e0a3b3030303030,0x3934203420636f6c,0x6c756d0a35203033,0x336625203233662e\n"
".quad 0x30202c316625202c,0x3030303038423466,0x2e706c65730a3b30,0x2c34662520323366\n"
".quad 0x6625202c33662520,0x0a3b327025202c31,0x31203320636f6c2e,0x6f6d0a3520353837\n"
".quad 0x7225203233622e76,0x0a3b346625202c34,0x203233752e726873,0x347225202c357225\n"
".quad 0x6c2e0a3b3332202c,0x333934203420636f,0x2e646e610a332035,0x2c36722520323362\n"
".quad 0x3532202c35722520,0x20636f6c2e0a3b35,0x3320363339342034,0x71652e707465730a\n"
".quad 0x337025203233662e,0x30202c326625202c,0x3030303030303066,0x2e707465730a3b30\n"
".quad 0x25203233732e7165,0x2c367225202c3470,0x726f0a3b35353220,0x702520646572702e\n"
".quad 0x202c337025202c35,0x6c65730a3b347025,0x7225203233622e70,0x2c3035312d202c37\n"
".quad 0x25202c3632312d20,0x2e6464610a3b3270,0x2c38722520323373,0x7225202c37722520\n"
".quad 0x752e766f6d0a3b36,0x202c397225203233,0x622e6c68730a3b31,0x2c30317225203233\n"
".quad 0x7225202c39722520,0x2e706c65730a3b38,0x3131722520323362,0x317225202c31202c\n"
".quad 0x0a3b357025202c30,0x6d617261702e7473,0x75665b093233622e,0x61767465725f636e\n"
".quad 0x25202c5d302b306c,0x6f6c2e0a3b313172,0x3120343520322063,0x420a0a3b7465720a\n"
".quad 0x646c0a3a325f3042,0x752e6d617261702e,0x2c32317225203233,0x696563385a5f5b20\n"
".quad 0x705f6932776f506c,0x3b5d305f6d617261,0x617261702e74730a,0x665b093233622e6d\n"
".quad 0x767465725f636e75,0x202c5d302b306c61,0x6c2e0a3b32317225,0x203435203220636f\n"
".quad 0x7d0a3b7465720a31,0x62697369762e0a0a,0x636e75662e20656c,0x6d617261702e2820\n"
".quad 0x7566203233622e20,0x61767465725f636e,0x74535a5f2029306c,0x5066707865726635\n"
".quad 0x617261702e0a2869,0x5f203233622e206d,0x786572663574535a,0x7261705f69506670\n"
".quad 0x702e0a2c305f6d61,0x36622e206d617261,0x663574535a5f2034,0x5f69506670786572\n"
".quad 0x0a315f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20,0x65722e0a3b3e393c\n"
".quad 0x20646572702e2067,0x2e0a3b3e353c7025,0x3233732e20676572,0x3b3e32313c722520\n"
".quad 0x732e206765722e0a,0x333c6c7225203436,0x2e646c0a0a0a3b3e,0x33662e6d61726170\n"
".quad 0x5b202c3566252032,0x6572663574535a5f,0x61705f6950667078,0x0a3b5d305f6d6172\n"
".quad 0x33203320636f6c2e,0x7362610a35203539,0x366625203233662e,0x2e0a3b356625202c\n"
".quad 0x3934203420636f6c,0x7465730a33203932,0x3233662e746c2e70,0x6625202c31702520\n"
".quad 0x3830306630202c36,0x2e0a3b3030303030,0x3934203420636f6c,0x6c756d0a35203033\n"
".quad 0x376625203233662e,0x30202c356625202c,0x3030303038423466,0x2e706c65730a3b30\n"
".quad 0x2c31662520323366,0x6625202c37662520,0x0a3b317025202c35,0x31203320636f6c2e\n"
".quad 0x6f6d0a3520353837,0x7225203233622e76,0x0a3b316625202c31,0x203233752e726873\n"
".quad 0x317225202c357225,0x6c2e0a3b3332202c,0x333934203420636f,0x2e646e610a332035\n"
".quad 0x2c32722520323362,0x3532202c35722520,0x20636f6c2e0a3b35,0x3320363339342034\n"
".quad 0x71652e707465730a,0x327025203233662e,0x30202c366625202c,0x3030303030303066\n"
".quad 0x2e707465730a3b30,0x25203233732e7165,0x2c327225202c3370,0x726f0a3b35353220\n"
".quad 0x702520646572702e,0x202c327025202c34,0x6f6c2e0a3b337025,0x3633393420342063\n"
".quad 0x20347025400a3320,0x5f31424220617262,0x706c65730a0a3b32,0x367225203233622e\n"
".quad 0x202c3035312d202c,0x7025202c3632312d,0x732e6464610a3b31,0x2c31317225203233\n"
".quad 0x7225202c36722520,0x20636f6c2e0a3b32,0x3520313439342034,0x3233622e646e610a\n"
".quad 0x7225202c37722520,0x393331322d202c31,0x0a3b313430353930,0x25203233622e726f\n"
".quad 0x2c377225202c3872,0x3436393635303120,0x6f6c2e0a3b383036,0x3837373120332063\n"
".quad 0x622e766f6d0a3520,0x202c386625203233,0x6172620a3b387225,0x31424220696e752e\n"
".quad 0x3142420a0a3b335f,0x636f6c2e0a3a325f,0x2038333934203420,0x33662e6464610a35\n"
".quad 0x25202c3866252032,0x3b316625202c3166,0x3233752e766f6d0a,0x30202c3131722520\n"
".quad 0x335f3142420a0a3b,0x7261702e646c0a3a,0x25203436752e6d61,0x5a5f5b202c326c72\n"
".quad 0x7078657266357453,0x617261705f695066,0x6c2e0a3b5d315f6d,0x343934203420636f\n"
".quad 0x752e74730a332033,0x326c72255b203233,0x3b31317225202c5d,0x617261702e74730a\n"
".quad 0x665b093233662e6d,0x767465725f636e75,0x202c5d302b306c61,0x6f6c2e0a3b386625\n"
".quad 0x2031393220352063,0x7d0a3b7465720a31,0x62697369762e0a0a,0x636e75662e20656c\n"
".quad 0x6d617261702e2820,0x7566203233622e20,0x61767465725f636e,0x31335a5f2029306c\n"
".quad 0x4e657475706d6f63,0x656c6c616d536d75,0x61766e6567694572,0x50656772614c736c\n"
".quad 0x536a6a666a5f5366,0x702e0a286a5f535f,0x36622e206d617261,0x6f6331335a5f2034\n"
".quad 0x6d754e657475706d,0x4572656c6c616d53,0x736c61766e656769,0x536650656772614c\n"
".quad 0x535f536a6a666a5f,0x6d617261705f6a5f,0x7261702e0a2c305f,0x203436622e206d61\n"
".quad 0x706d6f6331335a5f,0x6d536d754e657475,0x67694572656c6c61,0x614c736c61766e65\n"
".quad 0x6a5f536650656772,0x6a5f535f536a6a66,0x315f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x7475706d6f633133,0x6c616d536d754e65,0x6e6567694572656c\n"
".quad 0x6772614c736c6176,0x6a666a5f53665065,0x705f6a5f535f536a,0x0a2c325f6d617261\n"
".quad 0x2e206d617261702e,0x31335a5f20323362,0x4e657475706d6f63,0x656c6c616d536d75\n"
".quad 0x61766e6567694572,0x50656772614c736c,0x536a6a666a5f5366,0x7261705f6a5f535f\n"
".quad 0x702e0a2c335f6d61,0x33622e206d617261,0x6f6331335a5f2032,0x6d754e657475706d\n"
".quad 0x4572656c6c616d53,0x736c61766e656769,0x536650656772614c,0x535f536a6a666a5f\n"
".quad 0x6d617261705f6a5f,0x7261702e0a2c345f,0x203233622e206d61,0x706d6f6331335a5f\n"
".quad 0x6d536d754e657475,0x67694572656c6c61,0x614c736c61766e65,0x6a5f536650656772\n"
".quad 0x6a5f535f536a6a66,0x355f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x7475706d6f633133,0x6c616d536d754e65,0x6e6567694572656c,0x6772614c736c6176\n"
".quad 0x6a666a5f53665065,0x705f6a5f535f536a,0x0a2c365f6d617261,0x2e206d617261702e\n"
".quad 0x31335a5f20343662,0x4e657475706d6f63,0x656c6c616d536d75,0x61766e6567694572\n"
".quad 0x50656772614c736c,0x536a6a666a5f5366,0x7261705f6a5f535f,0x702e0a2c375f6d61\n"
".quad 0x33622e206d617261,0x6f6331335a5f2032,0x6d754e657475706d,0x4572656c6c616d53\n"
".quad 0x736c61766e656769,0x536650656772614c,0x535f536a6a666a5f,0x6d617261705f6a5f\n"
".quad 0x2e0a7b0a290a385f,0x3233662e20676572,0x3b3e36313c662520,0x702e206765722e0a\n"
".quad 0x383c702520646572,0x206765722e0a3b3e,0x3c7225203233732e,0x65722e0a3b3e3034\n"
".quad 0x25203436732e2067,0x0a3b3e36323c6c72,0x7261702e646c0a0a,0x25203233752e6d61\n"
".quad 0x335a5f5b202c3172,0x657475706d6f6331,0x6c6c616d536d754e,0x766e656769457265\n"
".quad 0x656772614c736c61,0x6a6a666a5f536650,0x61705f6a5f535f53,0x0a3b5d325f6d6172\n"
".quad 0x2e71652e70746573,0x2c32702520323373,0x3b30202c31722520,0x203220636f6c2e0a\n"
".quad 0x25400a3120373132,0x4220617262203270,0x2e0a0a3b395f3242,0x3232203220636f6c\n"
".quad 0x2e766f6d0a312032,0x3931722520323375,0x782e64697425202c,0x3220636f6c2e0a3b\n"
".quad 0x630a312034323220,0x752e3436752e7476,0x2c356c7225203233,0x6d0a3b3931722520\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x2c39317225202c32,0x702e646c0a3b3420\n"
".quad 0x3436752e6d617261,0x202c31326c722520,0x6d6f6331335a5f5b,0x536d754e65747570\n"
".quad 0x694572656c6c616d,0x4c736c61766e6567,0x5f53665065677261,0x5f535f536a6a666a\n"
".quad 0x5f6d617261705f6a,0x636f6c2e0a3b5d36,0x3120343232203220,0x3436732e6464610a\n"
".quad 0x25202c366c722520,0x7225202c31326c72,0x2e646c0a3b32316c,0x36752e6d61726170\n"
".quad 0x2c33326c72252034,0x6f6331335a5f5b20,0x6d754e657475706d,0x4572656c6c616d53\n"
".quad 0x736c61766e656769,0x536650656772614c,0x535f536a6a666a5f,0x6d617261705f6a5f\n"
".quad 0x6f6c2e0a3b5d375f,0x2035323220322063,0x36732e6464610a31,0x202c376c72252034\n"
".quad 0x25202c33326c7225,0x646c0a3b32316c72,0x752e6d617261702e,0x2c34337225203233\n"
".quad 0x6f6331335a5f5b20,0x6d754e657475706d,0x4572656c6c616d53,0x736c61766e656769\n"
".quad 0x536650656772614c,0x535f536a6a666a5f,0x6d617261705f6a5f,0x2e646c0a3b5d345f\n"
".quad 0x33752e6d61726170,0x202c353372252032,0x6d6f6331335a5f5b,0x536d754e65747570\n"
".quad 0x694572656c6c616d,0x4c736c61766e6567,0x5f53665065677261,0x5f535f536a6a666a\n"
".quad 0x5f6d617261705f6a,0x636f6c2e0a3b5d35,0x3120313332203220,0x746c2e707465730a\n"
".quad 0x317025203233752e,0x202c34337225202c,0x6c2e0a3b35337225,0x333432203220636f\n"
".quad 0x752e766f6d0a3120,0x202c347225203233,0x3b782e6469746e25,0x3233662e766f6d0a\n"
".quad 0x30202c3531662520,0x3030303038463366,0x752e766f6d0a3b30,0x2c39337225203233\n"
".quad 0x2e766f6d0a3b3020,0x3633722520323375,0x0a3b39337225202c,0x6d617261702e646c\n"
".quad 0x337225203233752e,0x31335a5f5b202c37,0x4e657475706d6f63,0x656c6c616d536d75\n"
".quad 0x61766e6567694572,0x50656772614c736c,0x536a6a666a5f5366,0x7261705f6a5f535f\n"
".quad 0x0a0a3b5d325f6d61,0x2e0a3a325f324242,0x3132203220636f6c,0x2e7261620a312039\n"
".quad 0x0a3b3020636e7973,0x32203220636f6c2e,0x6464610a31203232,0x327225203233732e\n"
".quad 0x2c39317225202c31,0x6c0a3b3633722520,0x2e6d617261702e64,0x3333722520323375\n"
".quad 0x6331335a5f5b202c,0x754e657475706d6f,0x72656c6c616d536d,0x6c61766e65676945\n"
".quad 0x6650656772614c73,0x5f536a6a666a5f53,0x617261705f6a5f53,0x6c2e0a3b5d325f6d\n"
".quad 0x323232203220636f,0x2e707465730a3120,0x25203233752e6567,0x31327225202c3370\n"
".quad 0x0a3b33337225202c,0x6172622033702540,0x0a3b345f32424220,0x203220636f6c2e0a\n"
".quad 0x76630a3120343232,0x33752e3436752e74,0x2c33316c72252032,0x610a3b3633722520\n"
".quad 0x25203436732e6464,0x7225202c34316c72,0x316c7225202c356c,0x20636f6c2e0a3b33\n"
".quad 0x0a31203432322032,0x203436622e6c6873,0x25202c35316c7225,0x3b32202c34316c72\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38316c,0x7475706d6f633133\n"
".quad 0x6c616d536d754e65,0x6e6567694572656c,0x6772614c736c6176,0x6a666a5f53665065\n"
".quad 0x705f6a5f535f536a,0x3b5d305f6d617261,0x203220636f6c2e0a,0x64610a3120343232\n"
".quad 0x7225203436732e64,0x6c7225202c36316c,0x316c7225202c3831,0x33662e646c0a3b35\n"
".quad 0x5b202c3766252032,0x0a3b5d36316c7225,0x5b203233662e7473,0x25202c5d366c7225\n"
".quad 0x702e646c0a3b3766,0x3436752e6d617261,0x202c39316c722520,0x6d6f6331335a5f5b\n"
".quad 0x536d754e65747570,0x694572656c6c616d,0x4c736c61766e6567,0x5f53665065677261\n"
".quad 0x5f535f536a6a666a,0x5f6d617261705f6a,0x636f6c2e0a3b5d31,0x3120353232203220\n"
".quad 0x3436732e6464610a,0x202c37316c722520,0x25202c35316c7225,0x646c0a3b39316c72\n"
".quad 0x386625203233662e,0x37316c72255b202c,0x74730a3b5d342d2b,0x72255b203233662e\n"
".quad 0x386625202c5d376c,0x345f3242420a0a3b,0x3220636f6c2e0a3a,0x620a312038323220\n"
".quad 0x20636e79732e7261,0x20636f6c2e0a3b30,0x0a31203133322032,0x7262203170252140\n"
".quad 0x3b385f3242422061,0x3320636f6c2e0a0a,0x6d0a352037313220,0x25203233752e6e69\n"
".quad 0x37337225202c3872,0x730a3b347225202c,0x732e71652e707465,0x202c347025203233\n"
".quad 0x0a3b30202c387225,0x32203220636f6c2e,0x7025400a31203533,0x4242206172622034\n"
".quad 0x6f6d0a0a3b385f32,0x7225203233752e76,0x6c0a3b30202c3833,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x31335a5f5b202c34,0x4e657475706d6f63,0x656c6c616d536d75\n"
".quad 0x61766e6567694572,0x50656772614c736c,0x536a6a666a5f5366,0x7261705f6a5f535f\n"
".quad 0x6c0a3b5d365f6d61,0x2e6d617261702e64,0x326c722520343675,0x31335a5f5b202c35\n"
".quad 0x4e657475706d6f63,0x656c6c616d536d75,0x61766e6567694572,0x50656772614c736c\n"
".quad 0x536a6a666a5f5366,0x7261705f6a5f535f,0x0a0a3b5d375f6d61,0x2e0a3a375f324242\n"
".quad 0x3332203220636f6c,0x662e646c0a312036,0x202c396625203233,0x3b5d34326c72255b\n"
".quad 0x617261702e646c0a,0x6625203233662e6d,0x335a5f5b202c3431,0x657475706d6f6331\n"
".quad 0x6c6c616d536d754e,0x766e656769457265,0x656772614c736c61,0x6a6a666a5f536650\n"
".quad 0x61705f6a5f535f53,0x0a3b5d335f6d6172,0x32203220636f6c2e,0x6275730a31203633\n"
".quad 0x316625203233662e,0x202c396625202c30,0x646c0a3b34316625,0x316625203233662e\n"
".quad 0x326c72255b202c31,0x2e6c756d0a3b5d35,0x3231662520323366,0x202c31316625202c\n"
".quad 0x6c2e0a3b31316625,0x313331203620636f,0x2e7669640a332031,0x25203233662e6e72\n"
".quad 0x316625202c333166,0x3b35316625202c32,0x203220636f6c2e0a,0x75730a3120363332\n"
".quad 0x6625203233662e62,0x30316625202c3531,0x0a3b33316625202c,0x32203220636f6c2e\n"
".quad 0x7465730a31203833,0x3233662e746c2e70,0x6625202c35702520,0x30306630202c3531\n"
".quad 0x0a3b303030303030,0x3233752e706c6573,0x31202c3932722520,0x357025202c30202c\n"
".quad 0x3220636f6c2e0a3b,0x610a312038333220,0x25203233732e6464,0x327225202c393372\n"
".quad 0x3b39337225202c39,0x3436732e6464610a,0x202c35326c722520,0x34202c35326c7225\n"
".quad 0x36732e6464610a3b,0x2c34326c72252034,0x202c34326c722520,0x20636f6c2e0a3b34\n"
".quad 0x3739203533322032,0x3233732e6464610a,0x25202c3833722520,0x0a3b31202c383372\n"
".quad 0x32203220636f6c2e,0x7465730a31203533,0x3233752e746c2e70,0x7225202c36702520\n"
".quad 0x3b387225202c3833,0x726220367025400a,0x3b375f3242422061,0x3a385f3242420a0a\n"
".quad 0x203220636f6c2e0a,0x75730a3120333432,0x7225203233732e62,0x37337225202c3733\n"
".quad 0x2e0a3b347225202c,0x3132203220636f6c,0x6464610a37312037,0x337225203233732e\n"
".quad 0x202c347225202c36,0x646c0a3b36337225,0x752e6d617261702e,0x2c32337225203233\n"
".quad 0x6f6331335a5f5b20,0x6d754e657475706d,0x4572656c6c616d53,0x736c61766e656769\n"
".quad 0x536650656772614c,0x535f536a6a666a5f,0x6d617261705f6a5f,0x6f6c2e0a3b5d325f\n"
".quad 0x2037313220322063,0x6c2e707465730a31,0x7025203233752e74,0x2c36337225202c37\n"
".quad 0x400a3b3233722520,0x2061726220377025,0x620a3b325f324242,0x4220696e752e6172\n"
".quad 0x0a0a3b30315f3242,0x6d0a3a395f324242,0x25203233752e766f,0x0a3b30202c393372\n"
".quad 0x3a30315f3242420a,0x617261702e74730a,0x665b093233622e6d,0x767465725f636e75\n"
".quad 0x202c5d302b306c61,0x6c2e0a3b39337225,0x363432203220636f,0x0a3b7465720a3120\n"
".quad 0x697369762e0a0a7d,0x6e75662e20656c62,0x757333325a5f2063,0x4165646976696462\n"
".quad 0x746e496576697463,0x4574496c61767265,0x505f305366506a76,0x66526a5f32535f54\n"
".quad 0x5f34536a525f3353,0x0a285f34535f3353,0x2e206d617261702e,0x33325a5f20323362\n"
".quad 0x6469766964627573,0x4965766974634165,0x496c61767265746e,0x305366506a764574\n"
".quad 0x6a5f32535f54505f,0x536a525f33536652,0x5f34535f33535f34,0x305f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x7669646275733332,0x7669746341656469\n"
".quad 0x61767265746e4965,0x66506a764574496c,0x32535f54505f3053,0x525f335366526a5f\n"
".quad 0x535f33535f34536a,0x6d617261705f5f34,0x7261702e0a2c315f,0x203436622e206d61\n"
".quad 0x6462757333325a5f,0x7463416564697669,0x7265746e49657669,0x6a764574496c6176\n"
".quad 0x5f54505f30536650,0x335366526a5f3253,0x33535f34536a525f,0x7261705f5f34535f\n"
".quad 0x702e0a2c325f6d61,0x36622e206d617261,0x757333325a5f2034,0x4165646976696462\n"
".quad 0x746e496576697463,0x4574496c61767265,0x505f305366506a76,0x66526a5f32535f54\n"
".quad 0x5f34536a525f3353,0x705f5f34535f3353,0x0a2c335f6d617261,0x2e206d617261702e\n"
".quad 0x33325a5f20343662,0x6469766964627573,0x4965766974634165,0x496c61767265746e\n"
".quad 0x305366506a764574,0x6a5f32535f54505f,0x536a525f33536652,0x5f34535f33535f34\n"
".quad 0x345f6d617261705f,0x6d617261702e0a2c,0x5a5f203233622e20,0x7669646275733332\n"
".quad 0x7669746341656469,0x61767265746e4965,0x66506a764574496c,0x32535f54505f3053\n"
".quad 0x525f335366526a5f,0x535f33535f34536a,0x6d617261705f5f34,0x7261702e0a2c355f\n"
".quad 0x203436622e206d61,0x6462757333325a5f,0x7463416564697669,0x7265746e49657669\n"
".quad 0x6a764574496c6176,0x5f54505f30536650,0x335366526a5f3253,0x33535f34536a525f\n"
".quad 0x7261705f5f34535f,0x702e0a2c365f6d61,0x36622e206d617261,0x757333325a5f2034\n"
".quad 0x4165646976696462,0x746e496576697463,0x4574496c61767265,0x505f305366506a76\n"
".quad 0x66526a5f32535f54,0x5f34536a525f3353,0x705f5f34535f3353,0x0a2c375f6d617261\n"
".quad 0x2e206d617261702e,0x33325a5f20343662,0x6469766964627573,0x4965766974634165\n"
".quad 0x496c61767265746e,0x305366506a764574,0x6a5f32535f54505f,0x536a525f33536652\n"
".quad 0x5f34535f33535f34,0x385f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x7669646275733332,0x7669746341656469,0x61767265746e4965,0x66506a764574496c\n"
".quad 0x32535f54505f3053,0x525f335366526a5f,0x535f33535f34536a,0x6d617261705f5f34\n"
".quad 0x7261702e0a2c395f,0x203436622e206d61,0x6462757333325a5f,0x7463416564697669\n"
".quad 0x7265746e49657669,0x6a764574496c6176,0x5f54505f30536650,0x335366526a5f3253\n"
".quad 0x33535f34536a525f,0x7261705f5f34535f,0x2e0a2c30315f6d61,0x622e206d61726170\n"
".quad 0x7333325a5f203436,0x6564697669646275,0x6e49657669746341,0x74496c6176726574\n"
".quad 0x5f305366506a7645,0x526a5f32535f5450,0x34536a525f335366,0x5f5f34535f33535f\n"
".quad 0x31315f6d61726170,0x65722e0a7b0a290a,0x25203233662e2067,0x2e0a3b3e32313c66\n"
".quad 0x6572702e20676572,0x3b3e373c70252064,0x732e206765722e0a,0x34323c7225203233\n"
".quad 0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e39323c,0x6d617261702e646c\n"
".quad 0x317225203233752e,0x7333325a5f5b202c,0x6564697669646275,0x6e49657669746341\n"
".quad 0x74496c6176726574,0x5f305366506a7645,0x526a5f32535f5450,0x34536a525f335366\n"
".quad 0x5f5f34535f33535f,0x5d305f6d61726170,0x7261702e646c0a3b,0x25203233752e6d61\n"
".quad 0x325a5f5b202c3372,0x6976696462757333,0x6576697463416564,0x6c61767265746e49\n"
".quad 0x5366506a76457449,0x5f32535f54505f30,0x6a525f335366526a,0x34535f33535f3453\n"
".quad 0x5f6d617261705f5f,0x636f6c2e0a3b5d35,0x3120373635203220,0x65672e707465730a\n"
".quad 0x317025203233752e,0x25202c317225202c,0x317025400a3b3372,0x3342422061726220\n"
".quad 0x2e646c0a0a3b335f,0x33752e6d61726170,0x202c333272252032,0x62757333325a5f5b\n"
".quad 0x6341656469766964,0x65746e4965766974,0x764574496c617672,0x54505f305366506a\n"
".quad 0x5366526a5f32535f,0x535f34536a525f33,0x61705f5f34535f33,0x0a3b5d305f6d6172\n"
".quad 0x35203220636f6c2e,0x6c756d0a31203936,0x33752e656469772e,0x2c31316c72252032\n"
".quad 0x34202c3332722520,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37316c72\n"
".quad 0x696462757333325a,0x6974634165646976,0x767265746e496576,0x506a764574496c61\n"
".quad 0x535f54505f305366,0x5f335366526a5f32,0x5f33535f34536a52,0x617261705f5f3453\n"
".quad 0x6c2e0a3b5d315f6d,0x393635203220636f,0x732e6464610a3120,0x32316c7225203436\n"
".quad 0x2c37316c7225202c,0x0a3b31316c722520,0x25203233662e646c,0x6c72255b202c3366\n"
".quad 0x2e646c0a3b5d3231,0x36752e6d61726170,0x2c31326c72252034,0x757333325a5f5b20\n"
".quad 0x4165646976696462,0x746e496576697463,0x4574496c61767265,0x505f305366506a76\n"
".quad 0x66526a5f32535f54,0x5f34536a525f3353,0x705f5f34535f3353,0x3b5d365f6d617261\n"
".quad 0x203220636f6c2e0a,0x74730a3120393635,0x72255b203233662e,0x6625202c5d31326c\n"
".quad 0x61702e646c0a3b33,0x203436752e6d6172,0x5b202c38316c7225,0x6462757333325a5f\n"
".quad 0x7463416564697669,0x7265746e49657669,0x6a764574496c6176,0x5f54505f30536650\n"
".quad 0x335366526a5f3253,0x33535f34536a525f,0x7261705f5f34535f,0x2e0a3b5d325f6d61\n"
".quad 0x3735203220636f6c,0x2e6464610a312030,0x316c722520343673,0x38316c7225202c33\n"
".quad 0x3b31316c7225202c,0x203233662e646c0a,0x72255b202c346625,0x646c0a3b5d33316c\n"
".quad 0x752e6d617261702e,0x32326c7225203436,0x7333325a5f5b202c,0x6564697669646275\n"
".quad 0x6e49657669746341,0x74496c6176726574,0x5f305366506a7645,0x526a5f32535f5450\n"
".quad 0x34536a525f335366,0x5f5f34535f33535f,0x5d375f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312030373520,0x255b203233662e74,0x25202c5d32326c72,0x636f6c2e0a3b3466\n"
".quad 0x3120313735203220,0x6469772e6c756d0a,0x7225203233752e65,0x327225202c34316c\n"
".quad 0x646c0a3b32202c33,0x752e6d617261702e,0x39316c7225203436,0x7333325a5f5b202c\n"
".quad 0x6564697669646275,0x6e49657669746341,0x74496c6176726574,0x5f305366506a7645\n"
".quad 0x526a5f32535f5450,0x34536a525f335366,0x5f5f34535f33535f,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x610a312031373520,0x25203436732e6464,0x7225202c35316c72\n"
".quad 0x6c7225202c39316c,0x752e646c0a3b3431,0x202c387225203631,0x3b5d35316c72255b\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c33326c,0x7669646275733332\n"
".quad 0x7669746341656469,0x61767265746e4965,0x66506a764574496c,0x32535f54505f3053\n"
".quad 0x525f335366526a5f,0x535f33535f34536a,0x6d617261705f5f34,0x6f6c2e0a3b5d385f\n"
".quad 0x2031373520322063,0x3233752e74730a31,0x5d33326c72255b20,0x6c0a3b387225202c\n"
".quad 0x2e6d617261702e64,0x326c722520343675,0x33325a5f5b202c30,0x6469766964627573\n"
".quad 0x4965766974634165,0x496c61767265746e,0x305366506a764574,0x6a5f32535f54505f\n"
".quad 0x536a525f33536652,0x5f34535f33535f34,0x345f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203237352032,0x203436732e646461,0x25202c36316c7225,0x7225202c30326c72\n"
".quad 0x2e646c0a3b34316c,0x2c32722520363175,0x5d36316c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c35326c72,0x696462757333325a,0x6974634165646976\n"
".quad 0x767265746e496576,0x506a764574496c61,0x535f54505f305366,0x5f335366526a5f32\n"
".quad 0x5f33535f34536a52,0x617261705f5f3453,0x6c2e0a3b5d395f6d,0x323735203220636f\n"
".quad 0x33752e74730a3120,0x35326c72255b2032,0x0a3b327225202c5d,0x35203220636f6c2e\n"
".quad 0x2e646c0a31203537,0x2c31662520323366,0x5d32326c72255b20,0x3233662e646c0a3b\n"
".quad 0x255b202c32662520,0x730a3b5d31326c72,0x2e75656e2e707465,0x2c32702520323366\n"
".quad 0x6625202c32662520,0x20327025400a3b31,0x5f33424220617262,0x702e646c0a0a3b35\n"
".quad 0x3436752e6d617261,0x202c34326c722520,0x62757333325a5f5b,0x6341656469766964\n"
".quad 0x65746e4965766974,0x764574496c617672,0x54505f305366506a,0x5366526a5f32535f\n"
".quad 0x535f34536a525f33,0x61705f5f34535f33,0x0a3b5d385f6d6172,0x35203220636f6c2e\n"
".quad 0x2e646c0a31203038,0x3531722520323375,0x34326c72255b202c,0x732e6275730a3b5d\n"
".quad 0x2c37317225203233,0x7225202c32722520,0x707465730a3b3531,0x203233752e74672e\n"
".quad 0x317225202c337025,0x25400a3b31202c37,0x4220617262203370,0x420a0a3b345f3342\n"
".quad 0x6c2e0a3a335f3342,0x373835203220636f,0x0a3b7465720a3220,0x0a3a345f3342420a\n"
".quad 0x203233752e766f6d,0x3b30202c38317225,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c37326c,0x7669646275733332,0x7669746341656469,0x61767265746e4965\n"
".quad 0x66506a764574496c,0x32535f54505f3053,0x525f335366526a5f,0x535f33535f34536a\n"
".quad 0x6d617261705f5f34,0x6c2e0a3b5d31315f,0x333835203220636f,0x33752e74730a3120\n"
".quad 0x37326c72255b2032,0x3b38317225202c5d,0x203220636f6c2e0a,0x65720a3220373835\n"
".quad 0x5f3342420a0a3b74,0x20636f6c2e0a3a35,0x0a31203737352032,0x2e746c2e70746573\n"
".quad 0x2c34702520323366,0x6630202c32662520,0x3030303030303030,0x662e706c65730a3b\n"
".quad 0x202c356625203233,0x3030303846426630,0x46336630202c3030,0x202c303030303038\n"
".quad 0x6f6c2e0a3b347025,0x2037373520322063,0x6c2e707465730a31,0x7025203233662e74\n"
".quad 0x202c316625202c35,0x3030303030306630,0x706c65730a3b3030,0x366625203233662e\n"
".quad 0x303846426630202c,0x6630202c30303030,0x3030303030384633,0x2e0a3b357025202c\n"
".quad 0x3735203220636f6c,0x707465730a312037,0x203233662e71652e,0x356625202c367025\n"
".quad 0x730a3b366625202c,0x25203233662e6275,0x2c316625202c3766,0x6d660a3b32662520\n"
".quad 0x3233662e6e722e61,0x6625202c38662520,0x3046336630202c37,0x25202c3030303030\n"
".quad 0x2e6464610a3b3266,0x2c39662520323366,0x6625202c32662520,0x662e6c756d0a3b31\n"
".quad 0x2c30316625203233,0x6630202c39662520,0x3030303030304633,0x662e706c65730a3b\n"
".quad 0x2c31316625203233,0x6625202c38662520,0x3b367025202c3031,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c36326c,0x7669646275733332,0x7669746341656469\n"
".quad 0x61767265746e4965,0x66506a764574496c,0x32535f54505f3053,0x525f335366526a5f\n"
".quad 0x535f33535f34536a,0x6d617261705f5f34,0x6c2e0a3b5d30315f,0x373735203220636f\n"
".quad 0x33662e74730a3120,0x36326c72255b2032,0x3b31316625202c5d,0x3233752e766f6d0a\n"
".quad 0x30202c3132722520,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c38326c72\n"
".quad 0x696462757333325a,0x6974634165646976,0x767265746e496576,0x506a764574496c61\n"
".quad 0x535f54505f305366,0x5f335366526a5f32,0x5f33535f34536a52,0x617261705f5f3453\n"
".quad 0x2e0a3b5d31315f6d,0x3735203220636f6c,0x752e74730a312038,0x326c72255b203233\n"
".quad 0x31327225202c5d38,0x3220636f6c2e0a3b,0x720a322037383520,0x2e0a0a7d0a3b7465\n"
".quad 0x20656c6269736976,0x5a5f20636e75662e,0x6574616572633332,0x4373656369646e49\n"
".quad 0x6f69746361706d6f,0x5f5450764574496e,0x617261702e0a286a,0x5f203436622e206d\n"
".quad 0x746165726333325a,0x73656369646e4965,0x69746361706d6f43,0x5450764574496e6f\n"
".quad 0x6d617261705f6a5f,0x7261702e0a2c305f,0x203233622e206d61,0x6165726333325a5f\n"
".quad 0x656369646e496574,0x746361706d6f4373,0x50764574496e6f69,0x617261705f6a5f54\n"
".quad 0x0a7b0a290a315f6d,0x31732e206765722e,0x3e373c7372252036,0x2e206765722e0a3b\n"
".quad 0x3c70252064657270,0x6765722e0a3b3e37,0x7225203233732e20,0x722e0a3b3e35343c\n"
".quad 0x203436732e206765,0x3b3e32313c6c7225,0x61702e646c0a0a0a,0x203233752e6d6172\n"
".quad 0x5a5f5b202c317225,0x6574616572633332,0x4373656369646e49,0x6f69746361706d6f\n"
".quad 0x5f5450764574496e,0x5f6d617261705f6a,0x636f6c2e0a3b5d31,0x3120303433203220\n"
".quad 0x3233752e766f6d0a,0x7425202c32722520,0x6c2e0a3b782e6469,0x333433203220636f\n"
".quad 0x752e7268730a3120,0x2c38337225203233,0x3b31202c31722520,0x71652e707465730a\n"
".quad 0x317025203233732e,0x202c38337225202c,0x20636f6c2e0a3b30,0x0a31203334332032\n"
".quad 0x6172622031702540,0x0a3b365f34424220,0x203220636f6c2e0a,0x6f6d0a3120303433\n"
".quad 0x7225203233752e76,0x64697425202c3733,0x2e6c68730a3b782e,0x3731722520323362\n"
".quad 0x202c37337225202c,0x752e766f6d0a3b31,0x2c34347225203233,0x636f6c2e0a3b3120\n"
".quad 0x3120393433203220,0x203233622e726f0a,0x317225202c347225,0x6c2e0a3b31202c37\n"
".quad 0x303533203220636f,0x732e6464610a3120,0x202c357225203233,0x3b32202c37317225\n"
".quad 0x3a325f3442420a0a,0x203220636f6c2e0a,0x61620a3120353433,0x3020636e79732e72\n"
".quad 0x3220636f6c2e0a3b,0x730a312037343320,0x752e65672e707465,0x202c327025203233\n"
".quad 0x337225202c327225,0x20327025400a3b38,0x5f34424220617262,0x2e64616d0a0a3b34\n"
".quad 0x25203233732e6f6c,0x347225202c383172,0x202c347225202c34,0x2e64616d0a3b312d\n"
".quad 0x25203233732e6f6c,0x347225202c393172,0x202c357225202c34,0x636f6c2e0a3b312d\n"
".quad 0x3120323533203220,0x6469772e6c756d0a,0x7225203233752e65,0x39317225202c326c\n"
".quad 0x2e646c0a3b32202c,0x36752e6d61726170,0x2c31316c72252034,0x726333325a5f5b20\n"
".quad 0x69646e4965746165,0x61706d6f43736563,0x4574496e6f697463,0x61705f6a5f545076\n"
".quad 0x0a3b5d305f6d6172,0x33203220636f6c2e,0x6464610a31203235,0x6c7225203436732e\n"
".quad 0x31316c7225202c33,0x0a3b326c7225202c,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x2c38317225202c34,0x2e6464610a3b3220,0x356c722520343673,0x2c31316c7225202c\n"
".quad 0x6c0a3b346c722520,0x7225203631752e64,0x6c72255b202c3173,0x752e646c0a3b5d35\n"
".quad 0x2c32737225203631,0x3b5d336c72255b20,0x3631732e6464610a,0x25202c3373722520\n"
".quad 0x737225202c317372,0x20636f6c2e0a3b32,0x0a31203235332032,0x5b203631752e7473\n"
".quad 0x25202c5d336c7225,0x42420a0a3b337372,0x6f6c2e0a3a345f34,0x2036353320322063\n"
".quad 0x33622e6c68730a31,0x202c343472252032,0x3b31202c34347225,0x203220636f6c2e0a\n"
".quad 0x730a373120333433,0x25203233732e7268,0x337225202c383372,0x6c2e0a3b31202c38\n"
".quad 0x333433203220636f,0x2e707465730a3120,0x25203233732e7467,0x38337225202c3370\n"
".quad 0x7025400a3b30202c,0x4242206172622033,0x6f6d0a0a3b325f34,0x7225203233752e76\n"
".quad 0x34347225202c3334,0x6e752e6172620a3b,0x3b375f3442422069,0x3a365f3442420a0a\n"
".quad 0x3233752e766f6d0a,0x31202c3334722520,0x375f3442420a0a3b,0x33752e766f6d0a3a\n"
".quad 0x202c323472252032,0x646c0a3b33347225,0x752e6d617261702e,0x2c33337225203233\n"
".quad 0x726333325a5f5b20,0x69646e4965746165,0x61706d6f43736563,0x4574496e6f697463\n"
".quad 0x61705f6a5f545076,0x0a3b5d315f6d6172,0x33203220636f6c2e,0x7465730a31203036\n"
".quad 0x3233752e746c2e70,0x7225202c34702520,0x400a3b33202c3333,0x2061726220347025\n"
".quad 0x0a3b32315f344242,0x203220636f6c2e0a,0x6f6d0a3120303433,0x7225203233752e76\n"
".quad 0x64697425202c3633,0x636f6c2e0a3b782e,0x3120373633203220,0x3233732e6464610a\n"
".quad 0x25202c3131722520,0x0a3b31202c363372,0x203233752e766f6d,0x3b32202c39337225\n"
".quad 0x3a395f3442420a0a,0x3233752e766f6d0a,0x25202c3331722520,0x6f6c2e0a3b323472\n"
".quad 0x2032363320322063,0x33752e7268730a31,0x202c343172252032,0x3b31202c33317225\n"
".quad 0x203220636f6c2e0a,0x61620a3120333633,0x3020636e79732e72,0x33732e6464610a3b\n"
".quad 0x202c353272252032,0x312d202c39337225,0x3220636f6c2e0a3b,0x730a312035363320\n"
".quad 0x752e65672e707465,0x202c357025203233,0x327225202c327225,0x20357025400a3b35\n"
".quad 0x5f34424220617262,0x64616d0a0a3b3131,0x203233732e6f6c2e,0x7225202c36327225\n"
".quad 0x31317225202c3431,0x68730a3b312d202c,0x7225203233752e72,0x33317225202c3732\n"
".quad 0x6f6c2e0a3b32202c,0x2038363320322063,0x33732e6464610a31,0x202c383272252032\n"
".quad 0x7225202c36327225,0x636f6c2e0a3b3732,0x3120303733203220,0x6469772e6c756d0a\n"
".quad 0x7225203233752e65,0x38327225202c366c,0x2e646c0a3b32202c,0x36752e6d61726170\n"
".quad 0x2c30316c72252034,0x726333325a5f5b20,0x69646e4965746165,0x61706d6f43736563\n"
".quad 0x4574496e6f697463,0x61705f6a5f545076,0x0a3b5d305f6d6172,0x33203220636f6c2e\n"
".quad 0x6464610a31203037,0x6c7225203436732e,0x30316c7225202c37,0x0a3b366c7225202c\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x2c36327225202c38,0x2e6464610a3b3220\n"
".quad 0x396c722520343673,0x2c30316c7225202c,0x6c0a3b386c722520,0x7225203631752e64\n"
".quad 0x6c72255b202c3473,0x752e646c0a3b5d39,0x2c35737225203631,0x3b5d376c72255b20\n"
".quad 0x3631732e6464610a,0x25202c3673722520,0x737225202c347372,0x20636f6c2e0a3b35\n"
".quad 0x0a31203037332032,0x5b203631752e7473,0x25202c5d376c7225,0x42420a0a3b367372\n"
".quad 0x6c2e0a3a31315f34,0x303633203220636f,0x2e6c68730a303520,0x3933722520323362\n"
".quad 0x202c39337225202c,0x61702e646c0a3b31,0x203233752e6d6172,0x5f5b202c32337225\n"
".quad 0x746165726333325a,0x73656369646e4965,0x69746361706d6f43,0x5450764574496e6f\n"
".quad 0x6d617261705f6a5f,0x6f6c2e0a3b5d315f,0x2030363320322063,0x6c2e707465730a31\n"
".quad 0x7025203233752e74,0x2c39337225202c36,0x6d0a3b3233722520,0x25203233752e766f\n"
".quad 0x317225202c323472,0x20636f6c2e0a3b34,0x0a31203036332032,0x6172622036702540\n"
".quad 0x0a3b395f34424220,0x3a32315f3442420a,0x203220636f6c2e0a,0x61620a3120353733\n"
".quad 0x3020636e79732e72,0x3220636f6c2e0a3b,0x720a322037373320,0x2e0a0a7d0a3b7465\n"
".quad 0x20656c6269736976,0x5a5f20636e75662e,0x6361706d6f633631,0x61767265746e4974\n"
".quad 0x665076457449736c,0x32535f54505f3053,0x5f32536a6a66665f,0x7261702e0a286a6a\n"
".quad 0x203436622e206d61,0x706d6f6336315a5f,0x7265746e49746361,0x76457449736c6176\n"
".quad 0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32,0x702e0a2c305f6d61\n"
".quad 0x36622e206d617261,0x6f6336315a5f2034,0x746e49746361706d,0x7449736c61767265\n"
".quad 0x505f305366507645,0x6a66665f32535f54,0x705f6a6a5f32536a,0x0a2c315f6d617261\n"
".quad 0x2e206d617261702e,0x36315a5f20343662,0x49746361706d6f63,0x736c61767265746e\n"
".quad 0x3053665076457449,0x665f32535f54505f,0x6a6a5f32536a6a66,0x325f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x6361706d6f633631,0x61767265746e4974\n"
".quad 0x665076457449736c,0x32535f54505f3053,0x5f32536a6a66665f,0x6d617261705f6a6a\n"
".quad 0x7261702e0a2c335f,0x203233622e206d61,0x706d6f6336315a5f,0x7265746e49746361\n"
".quad 0x76457449736c6176,0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32\n"
".quad 0x702e0a2c345f6d61,0x33622e206d617261,0x6f6336315a5f2032,0x746e49746361706d\n"
".quad 0x7449736c61767265,0x505f305366507645,0x6a66665f32535f54,0x705f6a6a5f32536a\n"
".quad 0x0a2c355f6d617261,0x2e206d617261702e,0x36315a5f20323362,0x49746361706d6f63\n"
".quad 0x736c61767265746e,0x3053665076457449,0x665f32535f54505f,0x6a6a5f32536a6a66\n"
".quad 0x365f6d617261705f,0x6d617261702e0a2c,0x5a5f203233622e20,0x6361706d6f633631\n"
".quad 0x61767265746e4974,0x665076457449736c,0x32535f54505f3053,0x5f32536a6a66665f\n"
".quad 0x6d617261705f6a6a,0x7261702e0a2c375f,0x203436622e206d61,0x706d6f6336315a5f\n"
".quad 0x7265746e49746361,0x76457449736c6176,0x5f54505f30536650,0x536a6a66665f3253\n"
".quad 0x7261705f6a6a5f32,0x702e0a2c385f6d61,0x33622e206d617261,0x6f6336315a5f2032\n"
".quad 0x746e49746361706d,0x7449736c61767265,0x505f305366507645,0x6a66665f32535f54\n"
".quad 0x705f6a6a5f32536a,0x0a2c395f6d617261,0x2e206d617261702e,0x36315a5f20323362\n"
".quad 0x49746361706d6f63,0x736c61767265746e,0x3053665076457449,0x665f32535f54505f\n"
".quad 0x6a6a5f32536a6a66,0x315f6d617261705f,0x722e0a7b0a290a30,0x203233662e206765\n"
".quad 0x2e0a3b3e353c6625,0x6572702e20676572,0x3b3e343c70252064,0x732e206765722e0a\n"
".quad 0x38313c7225203233,0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e39313c\n"
".quad 0x6d617261702e646c,0x337225203233752e,0x6336315a5f5b202c,0x6e49746361706d6f\n"
".quad 0x49736c6176726574,0x5f30536650764574,0x66665f32535f5450,0x5f6a6a5f32536a6a\n"
".quad 0x5d395f6d61726170,0x7261702e646c0a3b,0x25203233752e6d61,0x315a5f5b202c3572\n"
".quad 0x746361706d6f6336,0x6c61767265746e49,0x5366507645744973,0x5f32535f54505f30\n"
".quad 0x6a5f32536a6a6666,0x5f6d617261705f6a,0x6f6c2e0a3b5d3031,0x2037303420322063\n"
".quad 0x33752e766f6d0a31,0x25202c3472252032,0x2e0a3b782e646974,0x3134203220636f6c\n"
".quad 0x707465730a312031,0x203233752e746c2e,0x347225202c317025,0x730a3b337225202c\n"
".quad 0x732e71652e707465,0x202c327025203233,0x0a3b31202c357225,0x646572702e646e61\n"
".quad 0x7025202c33702520,0x0a3b327025202c31,0x34203220636f6c2e,0x7025400a31203131\n"
".quad 0x4242206172622033,0x6c2e0a0a3b325f35,0x303234203220636f,0x0a3b7465720a3220\n"
".quad 0x0a3a325f3542420a,0x34203220636f6c2e,0x766f6d0a31203730,0x317225203233752e\n"
".quad 0x2e64697425202c37,0x20636f6c2e0a3b78,0x0a31203331342032,0x656469772e6c756d\n"
".quad 0x6c7225203233752e,0x2c37317225202c36,0x702e646c0a3b3220,0x3436752e6d617261\n"
".quad 0x202c38316c722520,0x6d6f6336315a5f5b,0x65746e4974636170,0x457449736c617672\n"
".quad 0x54505f3053665076,0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d385f6d6172\n"
".quad 0x34203220636f6c2e,0x6464610a31203331,0x6c7225203436732e,0x38316c7225202c37\n"
".quad 0x0a3b366c7225202c,0x25203631752e646c,0x6c72255b202c3672,0x702e646c0a3b5d37\n"
".quad 0x3233752e6d617261,0x5b202c3531722520,0x706d6f6336315a5f,0x7265746e49746361\n"
".quad 0x76457449736c6176,0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32\n"
".quad 0x2e0a3b5d395f6d61,0x3134203220636f6c,0x2e6464610a312033,0x2c38722520323373\n"
".quad 0x7225202c36722520,0x636f6c2e0a3b3531,0x3120353134203220,0x6469772e6c756d0a\n"
".quad 0x7225203233752e65,0x2c387225202c386c,0x702e646c0a3b3420,0x3436752e6d617261\n"
".quad 0x202c34316c722520,0x6d6f6336315a5f5b,0x65746e4974636170,0x457449736c617672\n"
".quad 0x54505f3053665076,0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d305f6d6172\n"
".quad 0x34203220636f6c2e,0x6464610a31203531,0x6c7225203436732e,0x34316c7225202c39\n"
".quad 0x0a3b386c7225202c,0x6d617261702e646c,0x336625203233662e,0x6336315a5f5b202c\n"
".quad 0x6e49746361706d6f,0x49736c6176726574,0x5f30536650764574,0x66665f32535f5450\n"
".quad 0x5f6a6a5f32536a6a,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x730a312035313420\n"
".quad 0x255b203233662e74,0x6625202c5d396c72,0x61702e646c0a3b33,0x203436752e6d6172\n"
".quad 0x5b202c35316c7225,0x706d6f6336315a5f,0x7265746e49746361,0x76457449736c6176\n"
".quad 0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32,0x2e0a3b5d315f6d61\n"
".quad 0x3134203220636f6c,0x2e6464610a312036,0x316c722520343673,0x35316c7225202c30\n"
".quad 0x0a3b386c7225202c,0x6d617261702e646c,0x346625203233662e,0x6336315a5f5b202c\n"
".quad 0x6e49746361706d6f,0x49736c6176726574,0x5f30536650764574,0x66665f32535f5450\n"
".quad 0x5f6a6a5f32536a6a,0x5d355f6d61726170,0x3220636f6c2e0a3b,0x730a312036313420\n"
".quad 0x255b203233662e74,0x25202c5d30316c72,0x636f6c2e0a3b3466,0x3120373134203220\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x387225202c31316c,0x2e646c0a3b32202c\n"
".quad 0x36752e6d61726170,0x2c36316c72252034,0x6f6336315a5f5b20,0x746e49746361706d\n"
".quad 0x7449736c61767265,0x505f305366507645,0x6a66665f32535f54,0x705f6a6a5f32536a\n"
".quad 0x3b5d325f6d617261,0x203220636f6c2e0a,0x64610a3120373134,0x7225203436732e64\n"
".quad 0x6c7225202c32316c,0x316c7225202c3631,0x61702e646c0a3b31,0x203233752e6d6172\n"
".quad 0x5f5b202c33317225,0x61706d6f6336315a,0x767265746e497463,0x5076457449736c61\n"
".quad 0x535f54505f305366,0x32536a6a66665f32,0x617261705f6a6a5f,0x6c2e0a3b5d365f6d\n"
".quad 0x373134203220636f,0x31752e74730a3120,0x32316c72255b2036,0x3b33317225202c5d\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37316c,0x6361706d6f633631\n"
".quad 0x61767265746e4974,0x665076457449736c,0x32535f54505f3053,0x5f32536a6a66665f\n"
".quad 0x6d617261705f6a6a,0x6f6c2e0a3b5d335f,0x2038313420322063,0x36732e6464610a31\n"
".quad 0x2c33316c72252034,0x202c37316c722520,0x6c0a3b31316c7225,0x2e6d617261702e64\n"
".quad 0x3431722520323375,0x6336315a5f5b202c,0x6e49746361706d6f,0x49736c6176726574\n"
".quad 0x5f30536650764574,0x66665f32535f5450,0x5f6a6a5f32536a6a,0x5d375f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x730a312038313420,0x255b203631752e74,0x25202c5d33316c72\n"
".quad 0x6f6c2e0a3b343172,0x2030323420322063,0x7d0a3b7465720a32,0x62697369762e0a0a\n"
".quad 0x636e75662e20656c,0x69727731315a5f20,0x6d656d476f546574,0x5f5366506a6a6a6a\n"
".quad 0x30535f535f536a50,0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053\n"
".quad 0x7261702e0a286a5f,0x203233622e206d61,0x7469727731315a5f,0x6a6d656d476f5465\n"
".quad 0x505f5366506a6a6a,0x5f30535f535f536a,0x505f535f535f3053,0x535f30535f315374\n"
".quad 0x5f31535f31535f30,0x5f6d617261705f6a,0x617261702e0a2c30,0x5f203233622e206d\n"
".quad 0x657469727731315a,0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53\n"
".quad 0x74505f535f535f30,0x30535f30535f3153,0x6a5f31535f31535f,0x315f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233622e20,0x5465746972773131,0x6a6a6a6d656d476f\n"
".quad 0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31\n"
".quad 0x5f6a5f31535f3153,0x2c325f6d61726170,0x206d617261702e0a,0x315a5f203233622e\n"
".quad 0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53\n"
".quad 0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31,0x0a2c335f6d617261\n"
".quad 0x2e206d617261702e,0x31315a5f20343662,0x476f546574697277,0x506a6a6a6a6d656d\n"
".quad 0x535f536a505f5366,0x535f30535f30535f,0x5f315374505f535f,0x31535f30535f3053\n"
".quad 0x61705f6a5f31535f,0x2e0a2c345f6d6172,0x622e206d61726170,0x7731315a5f203436\n"
".quad 0x6d476f5465746972,0x66506a6a6a6a6d65,0x5f535f536a505f53,0x5f535f30535f3053\n"
".quad 0x535f315374505f53,0x5f31535f30535f30,0x7261705f6a5f3153,0x702e0a2c355f6d61\n"
".quad 0x36622e206d617261,0x727731315a5f2034,0x656d476f54657469,0x5366506a6a6a6a6d\n"
".quad 0x535f535f536a505f,0x535f535f30535f30,0x30535f315374505f,0x535f31535f30535f\n"
".quad 0x617261705f6a5f31,0x61702e0a2c365f6d,0x3436622e206d6172,0x69727731315a5f20\n"
".quad 0x6d656d476f546574,0x5f5366506a6a6a6a,0x30535f535f536a50,0x5f535f535f30535f\n"
".quad 0x5f30535f31537450,0x31535f31535f3053,0x6d617261705f6a5f,0x7261702e0a2c375f\n"
".quad 0x203436622e206d61,0x7469727731315a5f,0x6a6d656d476f5465,0x505f5366506a6a6a\n"
".quad 0x5f30535f535f536a,0x505f535f535f3053,0x535f30535f315374,0x5f31535f31535f30\n"
".quad 0x5f6d617261705f6a,0x617261702e0a2c38,0x5f203436622e206d,0x657469727731315a\n"
".quad 0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30\n"
".quad 0x30535f30535f3153,0x6a5f31535f31535f,0x395f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x5465746972773131,0x6a6a6a6d656d476f,0x536a505f5366506a\n"
".quad 0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31,0x5f6a5f31535f3153\n"
".quad 0x30315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x5465746972773131\n"
".quad 0x6a6a6a6d656d476f,0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f\n"
".quad 0x5f30535f30535f31,0x5f6a5f31535f3153,0x31315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x5465746972773131,0x6a6a6a6d656d476f,0x536a505f5366506a\n"
".quad 0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31,0x5f6a5f31535f3153\n"
".quad 0x32315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x5465746972773131\n"
".quad 0x6a6a6a6d656d476f,0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f\n"
".quad 0x5f30535f30535f31,0x5f6a5f31535f3153,0x33315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x5465746972773131,0x6a6a6a6d656d476f,0x536a505f5366506a\n"
".quad 0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31,0x5f6a5f31535f3153\n"
".quad 0x34315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x5465746972773131\n"
".quad 0x6a6a6a6d656d476f,0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f\n"
".quad 0x5f30535f30535f31,0x5f6a5f31535f3153,0x35315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x5465746972773131,0x6a6a6a6d656d476f,0x536a505f5366506a\n"
".quad 0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31,0x5f6a5f31535f3153\n"
".quad 0x36315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x5465746972773131\n"
".quad 0x6a6a6a6d656d476f,0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f\n"
".quad 0x5f30535f30535f31,0x5f6a5f31535f3153,0x37315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x5465746972773131,0x6a6a6a6d656d476f,0x536a505f5366506a\n"
".quad 0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31,0x5f6a5f31535f3153\n"
".quad 0x38315f6d61726170,0x6d617261702e0a2c,0x5a5f203233622e20,0x5465746972773131\n"
".quad 0x6a6a6a6d656d476f,0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f\n"
".quad 0x5f30535f30535f31,0x5f6a5f31535f3153,0x39315f6d61726170,0x65722e0a7b0a290a\n"
".quad 0x25203233662e2067,0x722e0a3b3e373c66,0x646572702e206765,0x0a3b3e363c702520\n"
".quad 0x33732e206765722e,0x3e35363c72252032,0x2e206765722e0a3b,0x3c6c722520343673\n"
".quad 0x6c0a0a0a3b3e3938,0x2e6d617261702e64,0x2c31722520323375,0x727731315a5f5b20\n"
".quad 0x656d476f54657469,0x5366506a6a6a6a6d,0x535f535f536a505f,0x535f535f30535f30\n"
".quad 0x30535f315374505f,0x535f31535f30535f,0x617261705f6a5f31,0x646c0a3b5d305f6d\n"
".quad 0x752e6d617261702e,0x2c386c7225203436,0x727731315a5f5b20,0x656d476f54657469\n"
".quad 0x5366506a6a6a6a6d,0x535f535f536a505f,0x535f535f30535f30,0x30535f315374505f\n"
".quad 0x535f31535f30535f,0x617261705f6a5f31,0x6c0a3b5d31315f6d,0x2e6d617261702e64\n"
".quad 0x396c722520343675,0x7731315a5f5b202c,0x6d476f5465746972,0x66506a6a6a6a6d65\n"
".quad 0x5f535f536a505f53,0x5f535f30535f3053,0x535f315374505f53,0x5f31535f30535f30\n"
".quad 0x7261705f6a5f3153,0x0a3b5d32315f6d61,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3131,0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650\n"
".quad 0x5f30535f30535f53,0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31\n"
".quad 0x5d34315f6d617261,0x7261702e646c0a3b,0x25203233752e6d61,0x315a5f5b202c3572\n"
".quad 0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53\n"
".quad 0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31,0x5d39315f6d617261\n"
".quad 0x3720636f6c2e0a3b,0x730a312034323520,0x752e746c2e707465,0x202c317025203233\n"
".quad 0x357225202c317225,0x3720636f6c2e0a3b,0x630a312036323520,0x752e3436752e7476\n"
".quad 0x36316c7225203233,0x6d0a3b317225202c,0x2e656469772e6c75,0x326c722520323375\n"
".quad 0x202c317225202c32,0x732e6464610a3b34,0x33326c7225203436,0x202c386c7225202c\n"
".quad 0x6c0a3b32326c7225,0x6625203233662e64,0x326c72255b202c31,0x636f6c2e0a3b5d33\n"
".quad 0x3120373235203720,0x3436732e6464610a,0x202c37316c722520,0x7225202c396c7225\n"
".quad 0x6f6c2e0a3b32326c,0x2039323520372063,0x69772e6c756d0a31,0x25203233752e6564\n"
".quad 0x7225202c34326c72,0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c38316c\n"
".quad 0x326c7225202c3131,0x20636f6c2e0a3b34,0x0a31203432352037,0x6172622031702540\n"
".quad 0x0a3b325f36424220,0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3335\n"
".quad 0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53\n"
".quad 0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31,0x3b5d305f6d617261\n"
".quad 0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3436,0x6f54657469727731\n"
".quad 0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53,0x315374505f535f53\n"
".quad 0x535f30535f30535f,0x705f6a5f31535f31,0x5d39315f6d617261,0x3720636f6c2e0a3b\n"
".quad 0x730a312033333520,0x25203233732e6275,0x33357225202c3772,0x0a3b34367225202c\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x2c377225202c3532,0x702e646c0a3b3420\n"
".quad 0x3436752e6d617261,0x202c39366c722520,0x69727731315a5f5b,0x6d656d476f546574\n"
".quad 0x5f5366506a6a6a6a,0x30535f535f536a50,0x5f535f535f30535f,0x5f30535f31537450\n"
".quad 0x31535f31535f3053,0x6d617261705f6a5f,0x6f6c2e0a3b5d375f,0x2033333520372063\n"
".quad 0x36732e6464610a31,0x2c36326c72252034,0x202c39366c722520,0x730a3b35326c7225\n"
".quad 0x255b203233662e74,0x25202c5d36326c72,0x702e646c0a3b3166,0x3436752e6d617261\n"
".quad 0x202c31376c722520,0x69727731315a5f5b,0x6d656d476f546574,0x5f5366506a6a6a6a\n"
".quad 0x30535f535f536a50,0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053\n"
".quad 0x6d617261705f6a5f,0x6f6c2e0a3b5d385f,0x2034333520372063,0x36732e6464610a31\n"
".quad 0x2c37326c72252034,0x202c31376c722520,0x6c0a3b35326c7225,0x6625203233662e64\n"
".quad 0x316c72255b202c33,0x662e74730a3b5d37,0x326c72255b203233,0x3b336625202c5d37\n"
".quad 0x203720636f6c2e0a,0x68730a3120353335,0x7225203436622e6c,0x6c7225202c38326c\n"
".quad 0x6c0a3b31202c3631,0x2e6d617261702e64,0x376c722520343675,0x31315a5f5b202c39\n"
".quad 0x476f546574697277,0x506a6a6a6a6d656d,0x535f536a505f5366,0x535f30535f30535f\n"
".quad 0x5f315374505f535f,0x31535f30535f3053,0x61705f6a5f31535f,0x3b5d33315f6d6172\n"
".quad 0x203720636f6c2e0a,0x64610a3120353335,0x7225203436732e64,0x6c7225202c39326c\n"
".quad 0x326c7225202c3937,0x61702e646c0a3b38,0x203436752e6d6172,0x5b202c33376c7225\n"
".quad 0x7469727731315a5f,0x6a6d656d476f5465,0x505f5366506a6a6a,0x5f30535f535f536a\n"
".quad 0x505f535f535f3053,0x535f30535f315374,0x5f31535f31535f30,0x5f6d617261705f6a\n"
".quad 0x636f6c2e0a3b5d39,0x3120353335203720,0x3436732e6464610a,0x202c30336c722520\n"
".quad 0x25202c33376c7225,0x646c0a3b35326c72,0x317225203631752e,0x326c72255b202c31\n"
".quad 0x752e74730a3b5d39,0x336c72255b203233,0x31317225202c5d30,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c35376c72,0x657469727731315a,0x6a6a6d656d476f54\n"
".quad 0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30,0x30535f30535f3153\n"
".quad 0x6a5f31535f31535f,0x315f6d617261705f,0x636f6c2e0a3b5d30,0x3120363335203720\n"
".quad 0x3436732e6464610a,0x202c31336c722520,0x25202c35376c7225,0x646c0a3b35326c72\n"
".quad 0x317225203631752e,0x316c72255b202c34,0x752e74730a3b5d38,0x336c72255b203233\n"
".quad 0x34317225202c5d31,0x6e752e6172620a3b,0x3b335f3642422069,0x3a325f3642420a0a\n"
".quad 0x203720636f6c2e0a,0x68730a3120363235,0x7225203436622e6c,0x6c7225202c32336c\n"
".quad 0x6c0a3b32202c3631,0x2e6d617261702e64,0x366c722520343675,0x31315a5f5b202c33\n"
".quad 0x476f546574697277,0x506a6a6a6a6d656d,0x535f536a505f5366,0x535f30535f30535f\n"
".quad 0x5f315374505f535f,0x31535f30535f3053,0x61705f6a5f31535f,0x0a3b5d345f6d6172\n"
".quad 0x35203720636f6c2e,0x6464610a31203632,0x6c7225203436732e,0x366c7225202c3333\n"
".quad 0x32336c7225202c33,0x3233662e74730a3b,0x5d33336c72255b20,0x6c0a3b316625202c\n"
".quad 0x2e6d617261702e64,0x366c722520343675,0x31315a5f5b202c35,0x476f546574697277\n"
".quad 0x506a6a6a6a6d656d,0x535f536a505f5366,0x535f30535f30535f,0x5f315374505f535f\n"
".quad 0x31535f30535f3053,0x61705f6a5f31535f,0x0a3b5d355f6d6172,0x35203720636f6c2e\n"
".quad 0x6464610a31203732,0x6c7225203436732e,0x366c7225202c3433,0x32336c7225202c35\n"
".quad 0x3233662e646c0a3b,0x255b202c34662520,0x730a3b5d37316c72,0x255b203233662e74\n"
".quad 0x25202c5d34336c72,0x702e646c0a3b3466,0x3436752e6d617261,0x202c37366c722520\n"
".quad 0x69727731315a5f5b,0x6d656d476f546574,0x5f5366506a6a6a6a,0x30535f535f536a50\n"
".quad 0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053,0x6d617261705f6a5f\n"
".quad 0x6f6c2e0a3b5d365f,0x2039323520372063,0x36732e6464610a31,0x2c35336c72252034\n"
".quad 0x202c37366c722520,0x6c0a3b32336c7225,0x7225203631752e64,0x6c72255b202c3032\n"
".quad 0x2e74730a3b5d3831,0x6c72255b20323375,0x327225202c5d3533,0x5f3642420a0a3b30\n"
".quad 0x61702e646c0a3a33,0x203233752e6d6172,0x5f5b202c38357225,0x657469727731315a\n"
".quad 0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30\n"
".quad 0x30535f30535f3153,0x6a5f31535f31535f,0x315f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203233752e6d6172,0x5f5b202c39357225,0x657469727731315a,0x6a6a6d656d476f54\n"
".quad 0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30,0x30535f30535f3153\n"
".quad 0x6a5f31535f31535f,0x325f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203933352037\n"
".quad 0x2e65672e70746573,0x2c32702520323375,0x25202c3835722520,0x7025400a3b393572\n"
".quad 0x4242206172622032,0x646c0a0a3b375f36,0x752e6d617261702e,0x2c37357225203233\n"
".quad 0x727731315a5f5b20,0x656d476f54657469,0x5366506a6a6a6a6d,0x535f535f536a505f\n"
".quad 0x535f535f30535f30,0x30535f315374505f,0x535f31535f30535f,0x617261705f6a5f31\n"
".quad 0x646c0a3b5d315f6d,0x752e6d617261702e,0x2c33367225203233,0x727731315a5f5b20\n"
".quad 0x656d476f54657469,0x5366506a6a6a6a6d,0x535f535f536a505f,0x535f535f30535f30\n"
".quad 0x30535f315374505f,0x535f31535f30535f,0x617261705f6a5f31,0x2e0a3b5d39315f6d\n"
".quad 0x3435203720636f6c,0x707465730a312031,0x203233752e746c2e,0x357225202c337025\n"
".quad 0x3b33367225202c37,0x203720636f6c2e0a,0x76630a3120333435,0x33752e3436752e74\n"
".quad 0x2c39316c72252032,0x6d0a3b3735722520,0x2e656469772e6c75,0x336c722520323375\n"
".quad 0x2c37357225202c36,0x702e646c0a3b3420,0x3436752e6d617261,0x202c36376c722520\n"
".quad 0x69727731315a5f5b,0x6d656d476f546574,0x5f5366506a6a6a6a,0x30535f535f536a50\n"
".quad 0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053,0x6d617261705f6a5f\n"
".quad 0x6c2e0a3b5d31315f,0x333435203720636f,0x732e6464610a3120,0x37336c7225203436\n"
".quad 0x2c36376c7225202c,0x0a3b36336c722520,0x25203233662e646c,0x6c72255b202c3266\n"
".quad 0x2e646c0a3b5d3733,0x36752e6d61726170,0x2c37376c72252034,0x727731315a5f5b20\n"
".quad 0x656d476f54657469,0x5366506a6a6a6a6d,0x535f535f536a505f,0x535f535f30535f30\n"
".quad 0x30535f315374505f,0x535f31535f30535f,0x617261705f6a5f31,0x2e0a3b5d32315f6d\n"
".quad 0x3435203720636f6c,0x2e6464610a312034,0x326c722520343673,0x37376c7225202c30\n"
".quad 0x3b36336c7225202c,0x203720636f6c2e0a,0x756d0a3120363435,0x752e656469772e6c\n"
".quad 0x38336c7225203233,0x202c37357225202c,0x61702e646c0a3b32,0x203436752e6d6172\n"
".quad 0x5b202c30386c7225,0x7469727731315a5f,0x6a6d656d476f5465,0x505f5366506a6a6a\n"
".quad 0x5f30535f535f536a,0x505f535f535f3053,0x535f30535f315374,0x5f31535f31535f30\n"
".quad 0x5f6d617261705f6a,0x6f6c2e0a3b5d3431,0x2036343520372063,0x36732e6464610a31\n"
".quad 0x2c31326c72252034,0x202c30386c722520,0x2e0a3b38336c7225,0x3435203720636f6c\n"
".quad 0x337025400a312031,0x3642422061726220,0x2e646c0a0a3b365f,0x33752e6d61726170\n"
".quad 0x202c363572252032,0x69727731315a5f5b,0x6d656d476f546574,0x5f5366506a6a6a6a\n"
".quad 0x30535f535f536a50,0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053\n"
".quad 0x6d617261705f6a5f,0x2e646c0a3b5d315f,0x33752e6d61726170,0x202c323672252032\n"
".quad 0x69727731315a5f5b,0x6d656d476f546574,0x5f5366506a6a6a6a,0x30535f535f536a50\n"
".quad 0x5f535f535f30535f,0x5f30535f31537450,0x31535f31535f3053,0x6d617261705f6a5f\n"
".quad 0x6c2e0a3b5d39315f,0x303535203720636f,0x732e6275730a3120,0x2c34327225203233\n"
".quad 0x25202c3635722520,0x6c756d0a3b323672,0x33752e656469772e,0x2c39336c72252032\n"
".quad 0x34202c3432722520,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c38366c72\n"
".quad 0x657469727731315a,0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53\n"
".quad 0x74505f535f535f30,0x30535f30535f3153,0x6a5f31535f31535f,0x375f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203035352037,0x203436732e646461,0x25202c30346c7225\n"
".quad 0x7225202c38366c72,0x2e74730a3b39336c,0x6c72255b20323366,0x326625202c5d3034\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c30376c72,0x657469727731315a\n"
".quad 0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30\n"
".quad 0x30535f30535f3153,0x6a5f31535f31535f,0x385f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203135352037,0x203436732e646461,0x25202c31346c7225,0x7225202c30376c72\n"
".quad 0x2e646c0a3b39336c,0x2c35662520323366,0x5d30326c72255b20,0x3233662e74730a3b\n"
".quad 0x5d31346c72255b20,0x2e0a3b356625202c,0x3535203720636f6c,0x2e6c68730a312032\n"
".quad 0x346c722520343662,0x39316c7225202c32,0x2e646c0a3b31202c,0x36752e6d61726170\n"
".quad 0x2c38376c72252034,0x727731315a5f5b20,0x656d476f54657469,0x5366506a6a6a6a6d\n"
".quad 0x535f535f536a505f,0x535f535f30535f30,0x30535f315374505f,0x535f31535f30535f\n"
".quad 0x617261705f6a5f31,0x2e0a3b5d33315f6d,0x3535203720636f6c,0x2e6464610a312032\n"
".quad 0x346c722520343673,0x38376c7225202c33,0x3b32346c7225202c,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c32376c,0x5465746972773131,0x6a6a6a6d656d476f\n"
".quad 0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31\n"
".quad 0x5f6a5f31535f3153,0x5d395f6d61726170,0x3720636f6c2e0a3b,0x610a312032353520\n"
".quad 0x25203436732e6464,0x7225202c34346c72,0x6c7225202c32376c,0x752e646c0a3b3933\n"
".quad 0x2c38327225203631,0x5d33346c72255b20,0x3233752e74730a3b,0x5d34346c72255b20\n"
".quad 0x0a3b38327225202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3437\n"
".quad 0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53\n"
".quad 0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31,0x5d30315f6d617261\n"
".quad 0x3720636f6c2e0a3b,0x610a312033353520,0x25203436732e6464,0x7225202c35346c72\n"
".quad 0x6c7225202c34376c,0x752e646c0a3b3933,0x2c31337225203631,0x5d31326c72255b20\n"
".quad 0x3233752e74730a3b,0x5d35346c72255b20,0x0a3b31337225202c,0x20696e752e617262\n"
".quad 0x0a0a3b375f364242,0x2e0a3a365f364242,0x3435203720636f6c,0x2e6c68730a312033\n"
".quad 0x346c722520343662,0x39316c7225202c36,0x2e646c0a3b32202c,0x36752e6d61726170\n"
".quad 0x2c32366c72252034,0x727731315a5f5b20,0x656d476f54657469,0x5366506a6a6a6a6d\n"
".quad 0x535f535f536a505f,0x535f535f30535f30,0x30535f315374505f,0x535f31535f30535f\n"
".quad 0x617261705f6a5f31,0x6c2e0a3b5d345f6d,0x333435203720636f,0x732e6464610a3120\n"
".quad 0x37346c7225203436,0x2c32366c7225202c,0x0a3b36346c722520,0x5b203233662e7473\n"
".quad 0x202c5d37346c7225,0x2e646c0a3b326625,0x36752e6d61726170,0x2c34366c72252034\n"
".quad 0x727731315a5f5b20,0x656d476f54657469,0x5366506a6a6a6a6d,0x535f535f536a505f\n"
".quad 0x535f535f30535f30,0x30535f315374505f,0x535f31535f30535f,0x617261705f6a5f31\n"
".quad 0x6c2e0a3b5d355f6d,0x343435203720636f,0x732e6464610a3120,0x38346c7225203436\n"
".quad 0x2c34366c7225202c,0x0a3b36346c722520,0x25203233662e646c,0x6c72255b202c3666\n"
".quad 0x2e74730a3b5d3032,0x6c72255b20323366,0x366625202c5d3834,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c36366c72,0x657469727731315a,0x6a6a6d656d476f54\n"
".quad 0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30,0x30535f30535f3153\n"
".quad 0x6a5f31535f31535f,0x365f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203634352037\n"
".quad 0x203436732e646461,0x25202c39346c7225,0x7225202c36366c72,0x2e646c0a3b36346c\n"
".quad 0x3733722520363175,0x31326c72255b202c,0x33752e74730a3b5d,0x39346c72255b2032\n"
".quad 0x3b37337225202c5d,0x3a375f3642420a0a,0x617261702e646c0a,0x7225203233752e6d\n"
".quad 0x315a5f5b202c3235,0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650\n"
".quad 0x5f30535f30535f53,0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31\n"
".quad 0x3b5d305f6d617261,0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3136\n"
".quad 0x6f54657469727731,0x6a6a6a6a6d656d47,0x5f536a505f536650,0x5f30535f30535f53\n"
".quad 0x315374505f535f53,0x535f30535f30535f,0x705f6a5f31535f31,0x3b5d335f6d617261\n"
".quad 0x203720636f6c2e0a,0x65730a3120303635,0x33752e74672e7074,0x25202c3470252032\n"
".quad 0x367225202c323572,0x20347025400a3b31,0x5f36424220617262,0x636f6c2e0a0a3b39\n"
".quad 0x3120313635203720,0x3436622e6c68730a,0x202c30356c722520,0x31202c36316c7225\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c36386c72,0x657469727731315a\n"
".quad 0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30\n"
".quad 0x30535f30535f3153,0x6a5f31535f31535f,0x315f6d617261705f,0x636f6c2e0a3b5d37\n"
".quad 0x3120313635203720,0x3436732e6464610a,0x202c31356c722520,0x25202c36386c7225\n"
".quad 0x68730a3b30356c72,0x7225203436622e6c,0x6c7225202c32356c,0x6c0a3b32202c3631\n"
".quad 0x2e6d617261702e64,0x386c722520343675,0x31315a5f5b202c32,0x476f546574697277\n"
".quad 0x506a6a6a6a6d656d,0x535f536a505f5366,0x535f30535f30535f,0x5f315374505f535f\n"
".quad 0x31535f30535f3053,0x61705f6a5f31535f,0x3b5d35315f6d6172,0x203720636f6c2e0a\n"
".quad 0x64610a3120313635,0x7225203436732e64,0x6c7225202c33356c,0x356c7225202c3238\n"
".quad 0x31752e646c0a3b32,0x202c303472252036,0x3b5d31356c72255b,0x203233752e74730a\n"
".quad 0x2c5d33356c72255b,0x6c0a3b3034722520,0x2e6d617261702e64,0x386c722520343675\n"
".quad 0x31315a5f5b202c38,0x476f546574697277,0x506a6a6a6a6d656d,0x535f536a505f5366\n"
".quad 0x535f30535f30535f,0x5f315374505f535f,0x31535f30535f3053,0x61705f6a5f31535f\n"
".quad 0x3b5d38315f6d6172,0x203720636f6c2e0a,0x64610a3120323635,0x7225203436732e64\n"
".quad 0x6c7225202c34356c,0x356c7225202c3838,0x61702e646c0a3b30,0x203436752e6d6172\n"
".quad 0x5b202c34386c7225,0x7469727731315a5f,0x6a6d656d476f5465,0x505f5366506a6a6a\n"
".quad 0x5f30535f535f536a,0x505f535f535f3053,0x535f30535f315374,0x5f31535f31535f30\n"
".quad 0x5f6d617261705f6a,0x6f6c2e0a3b5d3631,0x2032363520372063,0x36732e6464610a31\n"
".quad 0x2c35356c72252034,0x202c34386c722520,0x6c0a3b32356c7225,0x7225203631752e64\n"
".quad 0x6c72255b202c3334,0x2e74730a3b5d3435,0x6c72255b20323375,0x347225202c5d3535\n"
".quad 0x5f3642420a0a3b33,0x61702e646c0a3a39,0x203233752e6d6172,0x5f5b202c35357225\n"
".quad 0x657469727731315a,0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53\n"
".quad 0x74505f535f535f30,0x30535f30535f3153,0x6a5f31535f31535f,0x315f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203233752e6d6172,0x5f5b202c30367225,0x657469727731315a\n"
".quad 0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30\n"
".quad 0x30535f30535f3153,0x6a5f31535f31535f,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203436352037,0x2e74672e70746573,0x2c35702520323375,0x25202c3535722520\n"
".quad 0x7025400a3b303672,0x4242206172622035,0x6c0a0a3b31315f36,0x2e6d617261702e64\n"
".quad 0x3435722520323375,0x7731315a5f5b202c,0x6d476f5465746972,0x66506a6a6a6a6d65\n"
".quad 0x5f535f536a505f53,0x5f535f30535f3053,0x535f315374505f53,0x5f31535f30535f30\n"
".quad 0x7261705f6a5f3153,0x2e0a3b5d315f6d61,0x3635203720636f6c,0x2e6c756d0a312035\n"
".quad 0x3233752e65646977,0x202c36356c722520,0x3b32202c34357225,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c35386c,0x5465746972773131,0x6a6a6a6d656d476f\n"
".quad 0x536a505f5366506a,0x30535f30535f535f,0x5374505f535f535f,0x5f30535f30535f31\n"
".quad 0x5f6a5f31535f3153,0x37315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203536352037\n"
".quad 0x203436732e646461,0x25202c37356c7225,0x7225202c35386c72,0x6c756d0a3b36356c\n"
".quad 0x33752e656469772e,0x2c38356c72252032,0x34202c3435722520,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c31386c72,0x657469727731315a,0x6a6a6d656d476f54\n"
".quad 0x6a505f5366506a6a,0x535f30535f535f53,0x74505f535f535f30,0x30535f30535f3153\n"
".quad 0x6a5f31535f31535f,0x315f6d617261705f,0x636f6c2e0a3b5d35,0x3120353635203720\n"
".quad 0x3436732e6464610a,0x202c39356c722520,0x25202c31386c7225,0x646c0a3b38356c72\n"
".quad 0x347225203631752e,0x356c72255b202c36,0x752e74730a3b5d37,0x356c72255b203233\n"
".quad 0x36347225202c5d39,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37386c72\n"
".quad 0x657469727731315a,0x6a6a6d656d476f54,0x6a505f5366506a6a,0x535f30535f535f53\n"
".quad 0x74505f535f535f30,0x30535f30535f3153,0x6a5f31535f31535f,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d38,0x3120363635203720,0x3436732e6464610a,0x202c30366c722520\n"
".quad 0x25202c37386c7225,0x646c0a3b36356c72,0x752e6d617261702e,0x33386c7225203436\n"
".quad 0x7731315a5f5b202c,0x6d476f5465746972,0x66506a6a6a6a6d65,0x5f535f536a505f53\n"
".quad 0x5f535f30535f3053,0x535f315374505f53,0x5f31535f30535f30,0x7261705f6a5f3153\n"
".quad 0x0a3b5d36315f6d61,0x35203720636f6c2e,0x6464610a31203636,0x6c7225203436732e\n"
".quad 0x386c7225202c3136,0x38356c7225202c33,0x3631752e646c0a3b,0x5b202c3934722520\n"
".quad 0x0a3b5d30366c7225,0x5b203233752e7473,0x202c5d31366c7225,0x420a0a3b39347225\n"
".quad 0x2e0a3a31315f3642,0x3635203720636f6c,0x3b7465720a322038,0x7369762e0a0a7d0a\n"
".quad 0x75662e20656c6269,0x6339315a5f20636e,0x7453746361706d6f,0x6e6946736d616572\n"
".quad 0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31\n"
".quad 0x535f32535f325366,0x5f535f535f535f32,0x0a286a6a6a6a5f53,0x2e206d617261702e\n"
".quad 0x39315a5f20323362,0x53746361706d6f63,0x6946736d61657274,0x6a526a6a6a6c616e\n"
".quad 0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153,0x5f32535f32536652\n"
".quad 0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x2c305f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203233622e,0x746361706d6f6339,0x46736d6165727453,0x526a6a6a6c616e69\n"
".quad 0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f,0x32535f325366526a\n"
".quad 0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x315f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946\n"
".quad 0x505f305366506a52,0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a\n"
".quad 0x535f535f32535f32,0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x617261702e0a2c32\n"
".quad 0x5f203436622e206d,0x61706d6f6339315a,0x6d61657274537463,0x6a6a6c616e694673\n"
".quad 0x5f305366506a526a,0x5f31535f31537450,0x31535f31535f3153,0x5f325366526a6a5f\n"
".quad 0x5f535f32535f3253,0x6a6a5f535f535f53,0x6d617261705f6a6a,0x7261702e0a2c335f\n"
".quad 0x203436622e206d61,0x706d6f6339315a5f,0x6165727453746361,0x6a6c616e6946736d\n"
".quad 0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f,0x325366526a6a5f31\n"
".quad 0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a,0x61702e0a2c345f6d\n"
".quad 0x3436622e206d6172,0x6d6f6339315a5f20,0x6572745374636170,0x6c616e6946736d61\n"
".quad 0x5366506a526a6a6a,0x535f315374505f30,0x5f31535f31535f31,0x5366526a6a5f3153\n"
".quad 0x5f32535f32535f32,0x5f535f535f535f53,0x7261705f6a6a6a6a,0x702e0a2c355f6d61\n"
".quad 0x36622e206d617261,0x6f6339315a5f2034,0x727453746361706d,0x616e6946736d6165\n"
".quad 0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f\n"
".quad 0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f,0x2e0a2c365f6d6172\n"
".quad 0x622e206d61726170,0x6339315a5f203436,0x7453746361706d6f,0x6e6946736d616572\n"
".quad 0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31\n"
".quad 0x535f32535f325366,0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x0a2c375f6d617261\n"
".quad 0x2e206d617261702e,0x39315a5f20343662,0x53746361706d6f63,0x6946736d61657274\n"
".quad 0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153\n"
".quad 0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x2c385f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x395f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x6361706d6f633931,0x736d616572745374\n"
".quad 0x6a6a6a6c616e6946,0x505f305366506a52,0x535f31535f315374,0x5f31535f31535f31\n"
".quad 0x535f325366526a6a,0x535f535f32535f32,0x6a6a6a5f535f535f,0x5f6d617261705f6a\n"
".quad 0x7261702e0a2c3031,0x203436622e206d61,0x706d6f6339315a5f,0x6165727453746361\n"
".quad 0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f\n"
".quad 0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a\n"
".quad 0x702e0a2c31315f6d,0x33622e206d617261,0x6f6339315a5f2032,0x727453746361706d\n"
".quad 0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153\n"
".quad 0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f\n"
".quad 0x0a2c32315f6d6172,0x2e206d617261702e,0x39315a5f20323362,0x53746361706d6f63\n"
".quad 0x6946736d61657274,0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31\n"
".quad 0x6a6a5f31535f3153,0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f\n"
".quad 0x33315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x6361706d6f633931\n"
".quad 0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52,0x535f31535f315374\n"
".quad 0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32,0x6a6a6a5f535f535f\n"
".quad 0x5f6d617261705f6a,0x7261702e0a2c3431,0x203436622e206d61,0x706d6f6339315a5f\n"
".quad 0x6165727453746361,0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f\n"
".quad 0x535f31535f31535f,0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f\n"
".quad 0x617261705f6a6a6a,0x702e0a2c35315f6d,0x36622e206d617261,0x6f6339315a5f2034\n"
".quad 0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053\n"
".quad 0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f\n"
".quad 0x61705f6a6a6a6a5f,0x0a2c36315f6d6172,0x2e206d617261702e,0x39315a5f20343662\n"
".quad 0x53746361706d6f63,0x6946736d61657274,0x6a526a6a6a6c616e,0x5374505f30536650\n"
".quad 0x5f31535f31535f31,0x6a6a5f31535f3153,0x5f32535f32536652,0x535f535f535f3253\n"
".quad 0x5f6a6a6a6a5f535f,0x37315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52\n"
".quad 0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32\n"
".quad 0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x7261702e0a2c3831,0x203436622e206d61\n"
".quad 0x706d6f6339315a5f,0x6165727453746361,0x6a6c616e6946736d,0x305366506a526a6a\n"
".quad 0x31535f315374505f,0x535f31535f31535f,0x325366526a6a5f31,0x535f32535f32535f\n"
".quad 0x6a5f535f535f535f,0x617261705f6a6a6a,0x702e0a2c39315f6d,0x36622e206d617261\n"
".quad 0x6f6339315a5f2034,0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c\n"
".quad 0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253\n"
".quad 0x535f535f535f535f,0x61705f6a6a6a6a5f,0x0a2c30325f6d6172,0x2e206d617261702e\n"
".quad 0x39315a5f20343662,0x53746361706d6f63,0x6946736d61657274,0x6a526a6a6a6c616e\n"
".quad 0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153,0x5f32535f32536652\n"
".quad 0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x31325f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946\n"
".quad 0x505f305366506a52,0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a\n"
".quad 0x535f535f32535f32,0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x7261702e0a2c3232\n"
".quad 0x203233622e206d61,0x706d6f6339315a5f,0x6165727453746361,0x6a6c616e6946736d\n"
".quad 0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f,0x325366526a6a5f31\n"
".quad 0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a,0x702e0a2c33325f6d\n"
".quad 0x33622e206d617261,0x6f6339315a5f2032,0x727453746361706d,0x616e6946736d6165\n"
".quad 0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f\n"
".quad 0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f,0x0a2c34325f6d6172\n"
".quad 0x2e206d617261702e,0x39315a5f20323362,0x53746361706d6f63,0x6946736d61657274\n"
".quad 0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153\n"
".quad 0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x35325f6d61726170\n"
".quad 0x65722e0a7b0a290a,0x25203233662e2067,0x722e0a3b3e393c66,0x646572702e206765\n"
".quad 0x0a3b3e383c702520,0x33732e206765722e,0x3e30383c72252032,0x2e206765722e0a3b\n"
".quad 0x3c6c722520343673,0x0a0a0a3b3e303031,0x6d617261702e646c,0x317225203233752e\n"
".quad 0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572,0x506a526a6a6a6c61\n"
".quad 0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31,0x535f32535f325366\n"
".quad 0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x3b5d315f6d617261,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x315a5f5b202c3531,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x325f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c326c7225,0x61706d6f6339315a\n"
".quad 0x6d61657274537463,0x6a6a6c616e694673,0x5f305366506a526a,0x5f31535f31537450\n"
".quad 0x31535f31535f3153,0x5f325366526a6a5f,0x5f535f32535f3253,0x6a6a5f535f535f53\n"
".quad 0x6d617261705f6a6a,0x2e646c0a3b5d345f,0x36752e6d61726170,0x202c336c72252034\n"
".quad 0x6d6f6339315a5f5b,0x6572745374636170,0x6c616e6946736d61,0x5366506a526a6a6a\n"
".quad 0x535f315374505f30,0x5f31535f31535f31,0x5366526a6a5f3153,0x5f32535f32535f32\n"
".quad 0x5f535f535f535f53,0x7261705f6a6a6a6a,0x6c0a3b5d355f6d61,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x39315a5f5b202c30,0x53746361706d6f63,0x6946736d61657274\n"
".quad 0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153\n"
".quad 0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x34315f6d61726170\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c31316c7225,0x706d6f6339315a5f\n"
".quad 0x6165727453746361,0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f\n"
".quad 0x535f31535f31535f,0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f\n"
".quad 0x617261705f6a6a6a,0x2e0a3b5d35315f6d,0x3935203720636f6c,0x702e646c0a312031\n"
".quad 0x3233752e6d617261,0x202c38316c722520,0x6d6f6339315a5f5b,0x6572745374636170\n"
".quad 0x6c616e6946736d61,0x5366506a526a6a6a,0x535f315374505f30,0x5f31535f31535f31\n"
".quad 0x5366526a6a5f3153,0x5f32535f32535f32,0x5f535f535f535f53,0x7261705f6a6a6a6a\n"
".quad 0x730a3b5d305f6d61,0x25203436622e6c68,0x7225202c34326c72,0x0a3b32202c38316c\n"
".quad 0x203436732e646461,0x25202c35326c7225,0x6c7225202c326c72,0x662e646c0a3b3432\n"
".quad 0x202c316625203233,0x3b5d35326c72255b,0x203233662e74730a,0x2c5d30316c72255b\n"
".quad 0x6c2e0a3b31662520,0x323935203720636f,0x732e6464610a3120,0x36326c7225203436\n"
".quad 0x202c336c7225202c,0x6c0a3b34326c7225,0x6625203233662e64,0x326c72255b202c32\n"
".quad 0x662e74730a3b5d36,0x316c72255b203233,0x3b326625202c5d31,0x203720636f6c2e0a\n"
".quad 0x65730a3120343935,0x33752e746c2e7074,0x25202c3170252032,0x35317225202c3172\n"
".quad 0x672e707465730a3b,0x7025203233752e65,0x202c317225202c33,0x25400a3b35317225\n"
".quad 0x4220617262203370,0x6c0a0a3b325f3742,0x2e6d617261702e64,0x3836722520323375\n"
".quad 0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572,0x506a526a6a6a6c61\n"
".quad 0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31,0x535f32535f325366\n"
".quad 0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x3b5d315f6d617261,0x203720636f6c2e0a\n"
".quad 0x756d0a3120363935,0x752e656469772e6c,0x37326c7225203233,0x202c38367225202c\n"
".quad 0x61702e646c0a3b34,0x203436752e6d6172,0x5b202c37366c7225,0x706d6f6339315a5f\n"
".quad 0x6165727453746361,0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f\n"
".quad 0x535f31535f31535f,0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f\n"
".quad 0x617261705f6a6a6a,0x6c2e0a3b5d345f6d,0x363935203720636f,0x732e6464610a3120\n"
".quad 0x38326c7225203436,0x2c37366c7225202c,0x0a3b37326c722520,0x25203233662e646c\n"
".quad 0x6c72255b202c3366,0x2e646c0a3b5d3832,0x36752e6d61726170,0x2c37386c72252034\n"
".quad 0x6f6339315a5f5b20,0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c\n"
".quad 0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253\n"
".quad 0x535f535f535f535f,0x61705f6a6a6a6a5f,0x3b5d36315f6d6172,0x203720636f6c2e0a\n"
".quad 0x74730a3120363935,0x72255b203233662e,0x6625202c5d37386c,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x5b202c30376c7225,0x706d6f6339315a5f,0x6165727453746361\n"
".quad 0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f\n"
".quad 0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a\n"
".quad 0x6c2e0a3b5d355f6d,0x373935203720636f,0x732e6464610a3120,0x39326c7225203436\n"
".quad 0x2c30376c7225202c,0x0a3b37326c722520,0x25203233662e646c,0x6c72255b202c3466\n"
".quad 0x2e646c0a3b5d3932,0x36752e6d61726170,0x2c39386c72252034,0x6f6339315a5f5b20\n"
".quad 0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053\n"
".quad 0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f\n"
".quad 0x61705f6a6a6a6a5f,0x3b5d37315f6d6172,0x203720636f6c2e0a,0x74730a3120373935\n"
".quad 0x72255b203233662e,0x6625202c5d39386c,0x5f3742420a0a3b34,0x20636f6c2e0a3a32\n"
".quad 0x0a31203030362037,0x636e79732e726162,0x702e646c0a3b3020,0x3233752e6d617261\n"
".quad 0x5b202c3936722520,0x706d6f6339315a5f,0x6165727453746361,0x6a6c616e6946736d\n"
".quad 0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f,0x325366526a6a5f31\n"
".quad 0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a,0x2e0a3b5d32315f6d\n"
".quad 0x3036203720636f6c,0x707465730a312039,0x203233732e71652e,0x367225202c347025\n"
".quad 0x25400a3b31202c39,0x4220617262203470,0x2e0a0a3b345f3742,0x3935203720636f6c\n"
".quad 0x702e646c0a312031,0x3233752e6d617261,0x202c37396c722520,0x6d6f6339315a5f5b\n"
".quad 0x6572745374636170,0x6c616e6946736d61,0x5366506a526a6a6a,0x535f315374505f30\n"
".quad 0x5f31535f31535f31,0x5366526a6a5f3153,0x5f32535f32535f32,0x5f535f535f535f53\n"
".quad 0x7261705f6a6a6a6a,0x2e0a3b5d305f6d61,0x3036203720636f6c,0x2e6c68730a312039\n"
".quad 0x336c722520343662,0x37396c7225202c30,0x2e646c0a3b31202c,0x36752e6d61726170\n"
".quad 0x2c38376c72252034,0x6f6339315a5f5b20,0x727453746361706d,0x616e6946736d6165\n"
".quad 0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f\n"
".quad 0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f,0x0a3b5d395f6d6172\n"
".quad 0x36203720636f6c2e,0x6464610a31203930,0x6c7225203436732e,0x376c7225202c3133\n"
".quad 0x30336c7225202c38,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c33366c72\n"
".quad 0x61706d6f6339315a,0x6d61657274537463,0x6a6a6c616e694673,0x5f305366506a526a\n"
".quad 0x5f31535f31537450,0x31535f31535f3153,0x5f325366526a6a5f,0x5f535f32535f3253\n"
".quad 0x6a6a5f535f535f53,0x6d617261705f6a6a,0x6f6c2e0a3b5d335f,0x2039303620372063\n"
".quad 0x3233752e646c0a31,0x5b202c3432722520,0x0a3b5d33366c7225,0x25203631752e646c\n"
".quad 0x72255b202c363272,0x64610a3b5d31336c,0x7225203233732e64,0x36327225202c3837\n"
".quad 0x0a3b34327225202c,0x20696e752e617262,0x0a0a3b355f374242,0x2e0a3a345f374242\n"
".quad 0x3935203720636f6c,0x702e646c0a312031,0x3233752e6d617261,0x202c36396c722520\n"
".quad 0x6d6f6339315a5f5b,0x6572745374636170,0x6c616e6946736d61,0x5366506a526a6a6a\n"
".quad 0x535f315374505f30,0x5f31535f31535f31,0x5366526a6a5f3153,0x5f32535f32535f32\n"
".quad 0x5f535f535f535f53,0x7261705f6a6a6a6a,0x2e0a3b5d305f6d61,0x3036203720636f6c\n"
".quad 0x2e6c68730a312039,0x336c722520343662,0x36396c7225202c32,0x2e646c0a3b31202c\n"
".quad 0x36752e6d61726170,0x2c36376c72252034,0x6f6339315a5f5b20,0x727453746361706d\n"
".quad 0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153\n"
".quad 0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f\n"
".quad 0x0a3b5d385f6d6172,0x36203720636f6c2e,0x6464610a31203930,0x6c7225203436732e\n"
".quad 0x376c7225202c3333,0x32336c7225202c36,0x3631752e646c0a3b,0x5b202c3837722520\n"
".quad 0x0a3b5d33336c7225,0x0a3a355f3742420a,0x6d617261702e646c,0x377225203233752e\n"
".quad 0x39315a5f5b202c32,0x53746361706d6f63,0x6946736d61657274,0x6a526a6a6a6c616e\n"
".quad 0x5374505f30536650,0x5f31535f31535f31,0x6a6a5f31535f3153,0x5f32535f32536652\n"
".quad 0x535f535f535f3253,0x5f6a6a6a6a5f535f,0x32325f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203131362037,0x2e71652e70746573,0x2c32702520323373,0x30202c3237722520\n"
".quad 0x6220327025400a3b,0x375f374242206172,0x20636f6c2e0a0a3b,0x0a31203139352037\n"
".quad 0x6d617261702e646c,0x6c7225203233752e,0x315a5f5b202c3539,0x746361706d6f6339\n"
".quad 0x46736d6165727453,0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153\n"
".quad 0x6a5f31535f31535f,0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53\n"
".quad 0x305f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203231362037,0x203436622e6c6873\n"
".quad 0x25202c34336c7225,0x3b31202c35396c72,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c32386c,0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946\n"
".quad 0x505f305366506a52,0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a\n"
".quad 0x535f535f32535f32,0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x6f6c2e0a3b5d3031\n"
".quad 0x2032313620372063,0x36732e6464610a31,0x2c35336c72252034,0x202c32386c722520\n"
".quad 0x6c0a3b34336c7225,0x7225203631752e64,0x6c72255b202c3932,0x6464610a3b5d3533\n"
".quad 0x337225203233732e,0x2c39327225202c31,0x2e7476630a3b3120,0x203233752e343675\n"
".quad 0x25202c38396c7225,0x6172620a3b313372,0x37424220696e752e,0x3742420a0a3b385f\n"
".quad 0x2e766f6d0a3a375f,0x396c722520343675,0x420a0a3b31202c38,0x6c2e0a3a385f3742\n"
".quad 0x353136203720636f,0x20317025400a3120,0x5f37424220617262,0x766f6d0a0a3b3031\n"
".quad 0x6c7225203436752e,0x6d0a3b31202c3939,0x25203233752e766f,0x0a3b30202c393772\n"
".quad 0x20696e752e617262,0x0a3b36315f374242,0x3a30315f3742420a,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x315a5f5b202c3037,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d33,0x3120363136203720,0x71652e707465730a,0x357025203233732e\n"
".quad 0x202c30377225202c,0x61702e646c0a3b31,0x203233752e6d6172,0x5f5b202c37367225\n"
".quad 0x61706d6f6339315a,0x6d61657274537463,0x6a6a6c616e694673,0x5f305366506a526a\n"
".quad 0x5f31535f31537450,0x31535f31535f3153,0x5f325366526a6a5f,0x5f535f32535f3253\n"
".quad 0x6a6a5f535f535f53,0x6d617261705f6a6a,0x6f6c2e0a3b5d315f,0x2036313620372063\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x367225202c31326c,0x20357025400a3b37\n"
".quad 0x5f37424220617262,0x6c68730a0a3b3231,0x6c7225203436622e,0x326c7225202c3833\n"
".quad 0x646c0a3b31202c31,0x752e6d617261702e,0x37376c7225203436,0x6339315a5f5b202c\n"
".quad 0x7453746361706d6f,0x6e6946736d616572,0x506a526a6a6a6c61,0x315374505f305366\n"
".quad 0x535f31535f31535f,0x526a6a5f31535f31,0x535f32535f325366,0x5f535f535f535f32\n"
".quad 0x705f6a6a6a6a5f53,0x3b5d395f6d617261,0x203720636f6c2e0a,0x64610a3120363136\n"
".quad 0x7225203436732e64,0x6c7225202c39336c,0x336c7225202c3737,0x61702e646c0a3b38\n"
".quad 0x203436752e6d6172,0x5b202c34366c7225,0x706d6f6339315a5f,0x6165727453746361\n"
".quad 0x6a6c616e6946736d,0x305366506a526a6a,0x31535f315374505f,0x535f31535f31535f\n"
".quad 0x325366526a6a5f31,0x535f32535f32535f,0x6a5f535f535f535f,0x617261705f6a6a6a\n"
".quad 0x6c2e0a3b5d335f6d,0x363136203720636f,0x33752e646c0a3120,0x202c333372252032\n"
".quad 0x3b5d34366c72255b,0x203631752e646c0a,0x255b202c35337225,0x610a3b5d39336c72\n"
".quad 0x25203233732e6464,0x337225202c393772,0x3b33337225202c35,0x696e752e6172620a\n"
".quad 0x3b33315f37424220,0x32315f3742420a0a,0x3720636f6c2e0a3a,0x730a312036313620\n"
".quad 0x25203436622e6c68,0x7225202c30346c72,0x0a3b31202c31326c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3537,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x385f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203631362037,0x203436732e646461,0x25202c31346c7225\n"
".quad 0x7225202c35376c72,0x2e646c0a3b30346c,0x3937722520363175,0x31346c72255b202c\n"
".quad 0x5f3742420a0a3b5d,0x702e646c0a3a3331,0x3233752e6d617261,0x5b202c3637722520\n"
".quad 0x706d6f6339315a5f,0x6165727453746361,0x6a6c616e6946736d,0x305366506a526a6a\n"
".quad 0x31535f315374505f,0x535f31535f31535f,0x325366526a6a5f31,0x535f32535f32535f\n"
".quad 0x6a5f535f535f535f,0x617261705f6a6a6a,0x2e0a3b5d34325f6d,0x3136203720636f6c\n"
".quad 0x707465730a312038,0x203233732e71652e,0x377225202c367025,0x25400a3b30202c36\n"
".quad 0x4220617262203670,0x0a0a3b35315f3742,0x36203720636f6c2e,0x6c68730a31203931\n"
".quad 0x6c7225203436622e,0x326c7225202c3234,0x646c0a3b31202c31,0x752e6d617261702e\n"
".quad 0x31386c7225203436,0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572\n"
".quad 0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31\n"
".quad 0x535f32535f325366,0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x5d30315f6d617261\n"
".quad 0x3720636f6c2e0a3b,0x610a312039313620,0x25203436732e6464,0x7225202c33346c72\n"
".quad 0x6c7225202c31386c,0x752e646c0a3b3234,0x2c38337225203631,0x5d33346c72255b20\n"
".quad 0x33732e6464610a3b,0x202c303472252032,0x3b31202c38337225,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x30347225202c3939,0x6e752e6172620a3b,0x36315f3742422069\n"
".quad 0x315f3742420a0a3b,0x752e766f6d0a3a35,0x39396c7225203436,0x42420a0a3b31202c\n"
".quad 0x6c2e0a3a36315f37,0x333236203720636f,0x732e7261620a3120,0x2e0a3b3020636e79\n"
".quad 0x3236203720636f6c,0x2e6c756d0a312036,0x3233752e65646977,0x202c35346c722520\n"
".quad 0x3b34202c38377225,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c36366c\n"
".quad 0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52\n"
".quad 0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32\n"
".quad 0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x636f6c2e0a3b5d34,0x3120363236203720\n"
".quad 0x3436732e6464610a,0x202c36346c722520,0x25202c36366c7225,0x646c0a3b35346c72\n"
".quad 0x752e6d617261702e,0x35386c7225203436,0x6339315a5f5b202c,0x7453746361706d6f\n"
".quad 0x6e6946736d616572,0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f\n"
".quad 0x526a6a5f31535f31,0x535f32535f325366,0x5f535f535f535f32,0x705f6a6a6a6a5f53\n"
".quad 0x5d34315f6d617261,0x3720636f6c2e0a3b,0x6c0a312036323620,0x6625203233662e64\n"
".quad 0x386c72255b202c35,0x662e74730a3b5d35,0x346c72255b203233,0x3b356625202c5d36\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c39366c,0x6361706d6f633931\n"
".quad 0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52,0x535f31535f315374\n"
".quad 0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32,0x6a6a6a5f535f535f\n"
".quad 0x5f6d617261705f6a,0x636f6c2e0a3b5d35,0x3120373236203720,0x3436732e6464610a\n"
".quad 0x202c37346c722520,0x25202c39366c7225,0x646c0a3b35346c72,0x752e6d617261702e\n"
".quad 0x36386c7225203436,0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572\n"
".quad 0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31\n"
".quad 0x535f32535f325366,0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x5d35315f6d617261\n"
".quad 0x3720636f6c2e0a3b,0x6c0a312037323620,0x6625203233662e64,0x386c72255b202c36\n"
".quad 0x662e74730a3b5d36,0x346c72255b203233,0x3b366625202c5d37,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c31396c,0x6361706d6f633931,0x736d616572745374\n"
".quad 0x6a6a6a6c616e6946,0x505f305366506a52,0x535f31535f315374,0x5f31535f31535f31\n"
".quad 0x535f325366526a6a,0x535f535f32535f32,0x6a6a6a5f535f535f,0x5f6d617261705f6a\n"
".quad 0x6f6c2e0a3b5d3831,0x2038323620372063,0x3233752e646c0a31,0x5b202c3534722520\n"
".quad 0x0a3b5d31396c7225,0x656469772e6c756d,0x6c7225203233752e,0x38377225202c3834\n"
".quad 0x2e646c0a3b32202c,0x36752e6d61726170,0x2c32376c72252034,0x6f6339315a5f5b20\n"
".quad 0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053\n"
".quad 0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f\n"
".quad 0x61705f6a6a6a6a5f,0x0a3b5d365f6d6172,0x36203720636f6c2e,0x6464610a31203832\n"
".quad 0x6c7225203436732e,0x376c7225202c3934,0x38346c7225202c32,0x3631752e74730a3b\n"
".quad 0x5d39346c72255b20,0x0a3b35347225202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3239,0x746361706d6f6339,0x46736d6165727453,0x526a6a6a6c616e69\n"
".quad 0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f,0x32535f325366526a\n"
".quad 0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d39\n"
".quad 0x3120393236203720,0x203233752e646c0a,0x255b202c38347225,0x6c0a3b5d32396c72\n"
".quad 0x2e6d617261702e64,0x376c722520343675,0x39315a5f5b202c34,0x53746361706d6f63\n"
".quad 0x6946736d61657274,0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31\n"
".quad 0x6a6a5f31535f3153,0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f\n"
".quad 0x5d375f6d61726170,0x3720636f6c2e0a3b,0x610a312039323620,0x25203436732e6464\n"
".quad 0x7225202c30356c72,0x6c7225202c34376c,0x752e74730a3b3834,0x356c72255b203631\n"
".quad 0x38347225202c5d30,0x3720636f6c2e0a3b,0x400a312030333620,0x2061726220327025\n"
".quad 0x0a3b38315f374242,0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3137\n"
".quad 0x746361706d6f6339,0x46736d6165727453,0x526a6a6a6c616e69,0x74505f305366506a\n"
".quad 0x31535f31535f3153,0x6a5f31535f31535f,0x32535f325366526a,0x5f535f535f32535f\n"
".quad 0x6a6a6a6a5f535f53,0x325f6d617261705f,0x2e6464610a3b5d32,0x3135722520323373\n"
".quad 0x202c31377225202c,0x2e0a3b3533353536,0x3336203720636f6c,0x2e6c68730a312031\n"
".quad 0x356c722520343662,0x38396c7225202c31,0x2e646c0a3b31202c,0x36752e6d61726170\n"
".quad 0x2c30386c72252034,0x6f6339315a5f5b20,0x727453746361706d,0x616e6946736d6165\n"
".quad 0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f\n"
".quad 0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f,0x3b5d30315f6d6172\n"
".quad 0x203720636f6c2e0a,0x64610a3120313336,0x7225203436732e64,0x6c7225202c32356c\n"
".quad 0x356c7225202c3038,0x31752e74730a3b31,0x32356c72255b2036,0x3b31357225202c5d\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34386c,0x6361706d6f633931\n"
".quad 0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52,0x535f31535f315374\n"
".quad 0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32,0x6a6a6a5f535f535f\n"
".quad 0x5f6d617261705f6a,0x6f6c2e0a3b5d3131,0x2032333620372063,0x36732e6464610a31\n"
".quad 0x2c33356c72252034,0x202c34386c722520,0x6c0a3b31356c7225,0x2e6d617261702e64\n"
".quad 0x3337722520323375,0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572\n"
".quad 0x506a526a6a6a6c61,0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31\n"
".quad 0x535f32535f325366,0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x5d33325f6d617261\n"
".quad 0x3720636f6c2e0a3b,0x730a312032333620,0x255b203631752e74,0x25202c5d33356c72\n"
".quad 0x42420a0a3b333772,0x6c2e0a3a38315f37,0x353336203720636f,0x31702521400a3120\n"
".quad 0x3742422061726220,0x6c2e0a0a3b31325f,0x383336203720636f,0x772e6c756d0a3120\n"
".quad 0x203233752e656469,0x25202c34356c7225,0x0a3b34202c393772,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3536,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203833362037,0x203436732e646461,0x25202c35356c7225\n"
".quad 0x7225202c35366c72,0x2e646c0a3b34356c,0x36752e6d61726170,0x2c38386c72252034\n"
".quad 0x6f6339315a5f5b20,0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c\n"
".quad 0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253\n"
".quad 0x535f535f535f535f,0x61705f6a6a6a6a5f,0x3b5d36315f6d6172,0x203720636f6c2e0a\n"
".quad 0x646c0a3120383336,0x376625203233662e,0x38386c72255b202c,0x33662e74730a3b5d\n"
".quad 0x35356c72255b2032,0x0a3b376625202c5d,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3836,0x746361706d6f6339,0x46736d6165727453,0x526a6a6a6c616e69\n"
".quad 0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f,0x32535f325366526a\n"
".quad 0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x355f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203933362037,0x203436732e646461,0x25202c36356c7225,0x7225202c38366c72\n"
".quad 0x2e646c0a3b34356c,0x36752e6d61726170,0x2c30396c72252034,0x6f6339315a5f5b20\n"
".quad 0x727453746361706d,0x616e6946736d6165,0x66506a526a6a6a6c,0x5f315374505f3053\n"
".quad 0x31535f31535f3153,0x66526a6a5f31535f,0x32535f32535f3253,0x535f535f535f535f\n"
".quad 0x61705f6a6a6a6a5f,0x3b5d37315f6d6172,0x203720636f6c2e0a,0x646c0a3120393336\n"
".quad 0x386625203233662e,0x30396c72255b202c,0x33662e74730a3b5d,0x36356c72255b2032\n"
".quad 0x0a3b386625202c5d,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3339\n"
".quad 0x746361706d6f6339,0x46736d6165727453,0x526a6a6a6c616e69,0x74505f305366506a\n"
".quad 0x31535f31535f3153,0x6a5f31535f31535f,0x32535f325366526a,0x5f535f535f32535f\n"
".quad 0x6a6a6a6a5f535f53,0x325f6d617261705f,0x636f6c2e0a3b5d30,0x3120303436203720\n"
".quad 0x203233752e646c0a,0x255b202c38357225,0x6d0a3b5d33396c72,0x2e656469772e6c75\n"
".quad 0x356c722520323375,0x2c39377225202c37,0x702e646c0a3b3220,0x3436752e6d617261\n"
".quad 0x202c31376c722520,0x6d6f6339315a5f5b,0x6572745374636170,0x6c616e6946736d61\n"
".quad 0x5366506a526a6a6a,0x535f315374505f30,0x5f31535f31535f31,0x5366526a6a5f3153\n"
".quad 0x5f32535f32535f32,0x5f535f535f535f53,0x7261705f6a6a6a6a,0x2e0a3b5d365f6d61\n"
".quad 0x3436203720636f6c,0x2e6464610a312030,0x356c722520343673,0x31376c7225202c38\n"
".quad 0x3b37356c7225202c,0x203631752e74730a,0x2c5d38356c72255b,0x6c0a3b3835722520\n"
".quad 0x2e6d617261702e64,0x396c722520343675,0x39315a5f5b202c34,0x53746361706d6f63\n"
".quad 0x6946736d61657274,0x6a526a6a6a6c616e,0x5374505f30536650,0x5f31535f31535f31\n"
".quad 0x6a6a5f31535f3153,0x5f32535f32536652,0x535f535f535f3253,0x5f6a6a6a6a5f535f\n"
".quad 0x31325f6d61726170,0x20636f6c2e0a3b5d,0x0a31203134362037,0x25203233752e646c\n"
".quad 0x72255b202c313672,0x646c0a3b5d34396c,0x752e6d617261702e,0x33376c7225203436\n"
".quad 0x6339315a5f5b202c,0x7453746361706d6f,0x6e6946736d616572,0x506a526a6a6a6c61\n"
".quad 0x315374505f305366,0x535f31535f31535f,0x526a6a5f31535f31,0x535f32535f325366\n"
".quad 0x5f535f535f535f32,0x705f6a6a6a6a5f53,0x3b5d375f6d617261,0x203720636f6c2e0a\n"
".quad 0x64610a3120313436,0x7225203436732e64,0x6c7225202c39356c,0x356c7225202c3337\n"
".quad 0x31752e74730a3b37,0x39356c72255b2036,0x3b31367225202c5d,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x315a5f5b202c3537,0x746361706d6f6339,0x46736d6165727453\n"
".quad 0x526a6a6a6c616e69,0x74505f305366506a,0x31535f31535f3153,0x6a5f31535f31535f\n"
".quad 0x32535f325366526a,0x5f535f535f32535f,0x6a6a6a6a5f535f53,0x325f6d617261705f\n"
".quad 0x636f6c2e0a3b5d34,0x3120323436203720,0x71652e707465730a,0x377025203233732e\n"
".quad 0x202c35377225202c,0x20377025400a3b30,0x5f37424220617262,0x2e646c0a0a3b3132\n"
".quad 0x33752e6d61726170,0x202c343772252032,0x6d6f6339315a5f5b,0x6572745374636170\n"
".quad 0x6c616e6946736d61,0x5366506a526a6a6a,0x535f315374505f30,0x5f31535f31535f31\n"
".quad 0x5366526a6a5f3153,0x5f32535f32535f32,0x5f535f535f535f53,0x7261705f6a6a6a6a\n"
".quad 0x0a3b5d34325f6d61,0x203233732e646461,0x7225202c34367225,0x33353536202c3437\n"
".quad 0x20636f6c2e0a3b35,0x0a31203334362037,0x203436622e6c6873,0x25202c30366c7225\n"
".quad 0x3b31202c39396c72,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c39376c\n"
".quad 0x6361706d6f633931,0x736d616572745374,0x6a6a6a6c616e6946,0x505f305366506a52\n"
".quad 0x535f31535f315374,0x5f31535f31535f31,0x535f325366526a6a,0x535f535f32535f32\n"
".quad 0x6a6a6a5f535f535f,0x5f6d617261705f6a,0x6f6c2e0a3b5d3031,0x2033343620372063\n"
".quad 0x36732e6464610a31,0x2c31366c72252034,0x202c39376c722520,0x730a3b30366c7225\n"
".quad 0x255b203631752e74,0x25202c5d31366c72,0x2e646c0a3b343672,0x36752e6d61726170\n"
".quad 0x2c33386c72252034,0x6f6339315a5f5b20,0x727453746361706d,0x616e6946736d6165\n"
".quad 0x66506a526a6a6a6c,0x5f315374505f3053,0x31535f31535f3153,0x66526a6a5f31535f\n"
".quad 0x32535f32535f3253,0x535f535f535f535f,0x61705f6a6a6a6a5f,0x3b5d31315f6d6172\n"
".quad 0x203720636f6c2e0a,0x64610a3120343436,0x7225203436732e64,0x6c7225202c32366c\n"
".quad 0x366c7225202c3338,0x61702e646c0a3b30,0x203233752e6d6172,0x5f5b202c37377225\n"
".quad 0x61706d6f6339315a,0x6d61657274537463,0x6a6a6c616e694673,0x5f305366506a526a\n"
".quad 0x5f31535f31537450,0x31535f31535f3153,0x5f325366526a6a5f,0x5f535f32535f3253\n"
".quad 0x6a6a5f535f535f53,0x6d617261705f6a6a,0x6c2e0a3b5d35325f,0x343436203720636f\n"
".quad 0x31752e74730a3120,0x32366c72255b2036,0x3b37377225202c5d,0x31325f3742420a0a\n"
".quad 0x3720636f6c2e0a3a,0x720a322038343620,0x2e0a0a7d0a3b7465,0x20656c6269736976\n"
".quad 0x5a5f20636e75662e,0x6f436e6163733932,0x6f6c42746361706d,0x7472617453736b63\n"
".quad 0x6a73736572646441,0x0a285f5374506a6a,0x2e206d617261702e,0x39325a5f20323362\n"
".quad 0x706d6f436e616373,0x6b636f6c42746361,0x6441747261745373,0x6a6a6a7373657264\n"
".quad 0x7261705f5f537450,0x702e0a2c305f6d61,0x33622e206d617261,0x637339325a5f2032\n"
".quad 0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174,0x74506a6a6a737365\n"
".quad 0x6d617261705f5f53,0x7261702e0a2c315f,0x203233622e206d61,0x6e61637339325a5f\n"
".quad 0x42746361706d6f43,0x617453736b636f6c,0x7365726464417472,0x5f5374506a6a6a73\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x6f436e6163733932\n"
".quad 0x6f6c42746361706d,0x7472617453736b63,0x6a73736572646441,0x705f5f5374506a6a\n"
".quad 0x0a2c335f6d617261,0x2e206d617261702e,0x39325a5f20343662,0x706d6f436e616373\n"
".quad 0x6b636f6c42746361,0x6441747261745373,0x6a6a6a7373657264,0x7261705f5f537450\n"
".quad 0x7b0a290a345f6d61,0x732e206765722e0a,0x393c737225203631,0x206765722e0a3b3e\n"
".quad 0x702520646572702e,0x65722e0a3b3e383c,0x25203233732e2067,0x2e0a3b3e32353c72\n"
".quad 0x3436732e20676572,0x3e31323c6c722520,0x702e646c0a0a0a3b,0x3233752e6d617261\n"
".quad 0x5f5b202c31722520,0x436e61637339325a,0x6c42746361706d6f,0x72617453736b636f\n"
".quad 0x7373657264644174,0x5f5f5374506a6a6a,0x5d305f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203233752e6d61,0x325a5f5b202c3272,0x6d6f436e61637339,0x636f6c4274636170\n"
".quad 0x417472617453736b,0x6a6a737365726464,0x61705f5f5374506a,0x0a3b5d315f6d6172\n"
".quad 0x6d617261702e646c,0x337225203233752e,0x7339325a5f5b202c,0x61706d6f436e6163\n"
".quad 0x736b636f6c427463,0x6464417472617453,0x506a6a6a73736572,0x617261705f5f5374\n"
".quad 0x646c0a3b5d325f6d,0x752e6d617261702e,0x2c316c7225203436,0x637339325a5f5b20\n"
".quad 0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174,0x74506a6a6a737365\n"
".quad 0x6d617261705f5f53,0x2e646c0a3b5d335f,0x36752e6d61726170,0x202c326c72252034\n"
".quad 0x61637339325a5f5b,0x746361706d6f436e,0x7453736b636f6c42,0x6572646441747261\n"
".quad 0x5374506a6a6a7373,0x5f6d617261705f5f,0x636f6c2e0a3b5d34,0x3120333636203720\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x2c317225202c336c,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x202c326c7225202c,0x64610a3b336c7225,0x7225203436732e64\n"
".quad 0x316c7225202c356c,0x0a3b336c7225202c,0x25203631752e646c,0x72255b202c317372\n"
".quad 0x2e74730a3b5d346c,0x6c72255b20363175,0x31737225202c5d35,0x3720636f6c2e0a3b\n"
".quad 0x730a312034363620,0x752e65672e707465,0x202c317025203233,0x337225202c327225\n"
".quad 0x6220317025400a3b,0x325f384242206172,0x61702e646c0a0a3b,0x203233752e6d6172\n"
".quad 0x5f5b202c31347225,0x436e61637339325a,0x6c42746361706d6f,0x72617453736b636f\n"
".quad 0x7373657264644174,0x5f5f5374506a6a6a,0x5d315f6d61726170,0x3720636f6c2e0a3b\n"
".quad 0x6d0a312035363620,0x2e656469772e6c75,0x366c722520323375,0x202c31347225202c\n"
".quad 0x61702e646c0a3b32,0x203436752e6d6172,0x5b202c30326c7225,0x6e61637339325a5f\n"
".quad 0x42746361706d6f43,0x617453736b636f6c,0x7365726464417472,0x5f5374506a6a6a73\n"
".quad 0x345f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203536362037,0x203436732e646461\n"
".quad 0x7225202c376c7225,0x6c7225202c30326c,0x61702e646c0a3b36,0x203436752e6d6172\n"
".quad 0x5b202c39316c7225,0x6e61637339325a5f,0x42746361706d6f43,0x617453736b636f6c\n"
".quad 0x7365726464417472,0x5f5374506a6a6a73,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203536362037,0x203436732e646461,0x7225202c386c7225,0x6c7225202c39316c\n"
".quad 0x31752e646c0a3b36,0x202c327372252036,0x0a3b5d376c72255b,0x5b203631752e7473\n"
".quad 0x25202c5d386c7225,0x42420a0a3b327372,0x6f6c2e0a3a325f38,0x2038363620372063\n"
".quad 0x79732e7261620a31,0x646c0a3b3020636e,0x752e6d617261702e,0x2c34347225203233\n"
".quad 0x637339325a5f5b20,0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174\n"
".quad 0x74506a6a6a737365,0x6d617261705f5f53,0x6f6c2e0a3b5d325f,0x2038373620372063\n"
".quad 0x33752e7268730a31,0x202c353472252032,0x3b31202c34347225,0x71652e707465730a\n"
".quad 0x327025203233732e,0x202c35347225202c,0x20636f6c2e0a3b30,0x0a31203837362037\n"
".quad 0x6172622032702540,0x0a3b385f38424220,0x617261702e646c0a,0x7225203233752e6d\n"
".quad 0x325a5f5b202c3034,0x6d6f436e61637339,0x636f6c4274636170,0x417472617453736b\n"
".quad 0x6a6a737365726464,0x61705f5f5374506a,0x0a3b5d305f6d6172,0x203233622e6c6873\n"
".quad 0x7225202c32327225,0x6d0a3b31202c3034,0x25203233752e766f,0x0a3b31202c313572\n"
".quad 0x36203720636f6c2e,0x2e726f0a31203438,0x2c35722520323362,0x31202c3232722520\n"
".quad 0x3720636f6c2e0a3b,0x610a312035383620,0x25203233732e6464,0x32327225202c3672\n"
".quad 0x42420a0a3b32202c,0x6f6c2e0a3a345f38,0x2030383620372063,0x79732e7261620a31\n"
".quad 0x646c0a3b3020636e,0x752e6d617261702e,0x2c39337225203233,0x637339325a5f5b20\n"
".quad 0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174,0x74506a6a6a737365\n"
".quad 0x6d617261705f5f53,0x6f6c2e0a3b5d305f,0x2032383620372063,0x6c2e707465730a31\n"
".quad 0x7025203233752e65,0x2c35347225202c33,0x400a3b3933722520,0x2061726220337025\n"
".quad 0x0a0a3b365f384242,0x732e6f6c2e64616d,0x2c33327225203233,0x25202c3135722520\n"
".quad 0x0a3b312d202c3572,0x732e6f6c2e64616d,0x2c34327225203233,0x25202c3135722520\n"
".quad 0x0a3b312d202c3672,0x36203720636f6c2e,0x6c756d0a31203638,0x33752e656469772e\n"
".quad 0x202c396c72252032,0x3b32202c34327225,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c38316c,0x6f436e6163733932,0x6f6c42746361706d,0x7472617453736b63\n"
".quad 0x6a73736572646441,0x705f5f5374506a6a,0x3b5d335f6d617261,0x203720636f6c2e0a\n"
".quad 0x64610a3120363836,0x7225203436732e64,0x6c7225202c30316c,0x396c7225202c3831\n"
".quad 0x69772e6c756d0a3b,0x25203233752e6564,0x7225202c31316c72,0x610a3b32202c3332\n"
".quad 0x25203436732e6464,0x7225202c32316c72,0x6c7225202c38316c,0x752e646c0a3b3131\n"
".quad 0x2c33737225203631,0x5d32316c72255b20,0x3631752e646c0a3b,0x5b202c3473722520\n"
".quad 0x0a3b5d30316c7225,0x203631732e646461,0x7225202c35737225,0x34737225202c3373\n"
".quad 0x3720636f6c2e0a3b,0x730a312036383620,0x255b203631752e74,0x25202c5d30316c72\n"
".quad 0x42420a0a3b357372,0x6f6c2e0a3a365f38,0x2039383620372063,0x33622e6c68730a31\n"
".quad 0x202c313572252032,0x3b31202c31357225,0x203720636f6c2e0a,0x730a373120383736\n"
".quad 0x25203233732e7268,0x347225202c353472,0x6c2e0a3b31202c35,0x383736203720636f\n"
".quad 0x2e707465730a3120,0x25203233732e7467,0x35347225202c3470,0x7025400a3b30202c\n"
".quad 0x4242206172622034,0x6f6d0a0a3b345f38,0x7225203233752e76,0x31357225202c3035\n"
".quad 0x6e752e6172620a3b,0x3b395f3842422069,0x3a385f3842420a0a,0x3233752e766f6d0a\n"
".quad 0x31202c3035722520,0x395f3842420a0a3b,0x33752e766f6d0a3a,0x202c393472252032\n"
".quad 0x646c0a3b30357225,0x752e6d617261702e,0x2c33347225203233,0x637339325a5f5b20\n"
".quad 0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174,0x74506a6a6a737365\n"
".quad 0x6d617261705f5f53,0x6f6c2e0a3b5d325f,0x2033393620372063,0x6c2e707465730a31\n"
".quad 0x7025203233752e74,0x2c33347225202c35,0x357025400a3b3320,0x3842422061726220\n"
".quad 0x646c0a0a3b34315f,0x752e6d617261702e,0x2c38337225203233,0x637339325a5f5b20\n"
".quad 0x6361706d6f436e61,0x53736b636f6c4274,0x7264644174726174,0x74506a6a6a737365\n"
".quad 0x6d617261705f5f53,0x6f6c2e0a3b5d305f,0x2031303720372063,0x33732e6464610a31\n"
".quad 0x202c323172252032,0x3b31202c38337225,0x3233752e766f6d0a,0x32202c3634722520\n"
".quad 0x315f3842420a0a3b,0x752e766f6d0a3a31,0x2c34317225203233,0x2e0a3b3934722520\n"
".quad 0x3936203720636f6c,0x2e7268730a312035,0x3531722520323375,0x202c34317225202c\n"
".quad 0x20636f6c2e0a3b31,0x0a31203639362037,0x636e79732e726162,0x2e6464610a3b3020\n"
".quad 0x3033722520323373,0x202c36347225202c,0x702e646c0a3b312d,0x3233752e6d617261\n"
".quad 0x5b202c3733722520,0x6e61637339325a5f,0x42746361706d6f43,0x617453736b636f6c\n"
".quad 0x7365726464417472,0x5f5374506a6a6a73,0x305f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203939362037,0x2e656c2e70746573,0x2c36702520323375,0x25202c3033722520\n"
".quad 0x7025400a3b373372,0x4242206172622036,0x6d0a0a3b33315f38,0x33732e6f6c2e6461\n"
".quad 0x202c313372252032,0x7225202c35317225,0x0a3b312d202c3231,0x203233752e726873\n"
".quad 0x7225202c32337225,0x2e0a3b32202c3431,0x3037203720636f6c,0x2e6464610a312032\n"
".quad 0x3333722520323373,0x202c31337225202c,0x6c2e0a3b32337225,0x333037203720636f\n"
".quad 0x772e6c756d0a3120,0x203233752e656469,0x25202c33316c7225,0x0a3b32202c333372\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x325a5f5b202c3731,0x6d6f436e61637339\n"
".quad 0x636f6c4274636170,0x417472617453736b,0x6a6a737365726464,0x61705f5f5374506a\n"
".quad 0x0a3b5d335f6d6172,0x37203720636f6c2e,0x6464610a31203330,0x6c7225203436732e\n"
".quad 0x316c7225202c3431,0x33316c7225202c37,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x7225202c35316c72,0x610a3b32202c3133,0x25203436732e6464,0x7225202c36316c72\n"
".quad 0x6c7225202c37316c,0x752e646c0a3b3531,0x2c36737225203631,0x5d36316c72255b20\n"
".quad 0x3631752e646c0a3b,0x5b202c3773722520,0x0a3b5d34316c7225,0x203631732e646461\n"
".quad 0x7225202c38737225,0x37737225202c3673,0x3720636f6c2e0a3b,0x730a312033303720\n"
".quad 0x255b203631752e74,0x25202c5d34316c72,0x42420a0a3b387372,0x6c2e0a3a33315f38\n"
".quad 0x333936203720636f,0x2e6c68730a303520,0x3634722520323362,0x202c36347225202c\n"
".quad 0x61702e646c0a3b31,0x203233752e6d6172,0x5f5b202c32347225,0x436e61637339325a\n"
".quad 0x6c42746361706d6f,0x72617453736b636f,0x7373657264644174,0x5f5f5374506a6a6a\n"
".quad 0x5d325f6d61726170,0x3720636f6c2e0a3b,0x730a312033393620,0x752e746c2e707465\n"
".quad 0x202c377025203233,0x7225202c36347225,0x2e766f6d0a3b3234,0x3934722520323375\n"
".quad 0x0a3b35317225202c,0x36203720636f6c2e,0x7025400a31203339,0x4242206172622037\n"
".quad 0x420a0a3b31315f38,0x2e0a3a34315f3842,0x3037203720636f6c,0x3b7465720a322037\n"
".quad 0x7369762e0a0a7d0a,0x75662e20656c6269,0x7333315a5f20636e,0x6c426d75536e6163\n"
".quad 0x6a6a6a6a736b636f,0x702e0a285f537450,0x33622e206d617261,0x637333315a5f2032\n"
".quad 0x6f6c426d75536e61,0x506a6a6a6a736b63,0x617261705f5f5374,0x61702e0a2c305f6d\n"
".quad 0x3233622e206d6172,0x61637333315a5f20,0x636f6c426d75536e,0x74506a6a6a6a736b\n"
".quad 0x6d617261705f5f53,0x7261702e0a2c315f,0x203233622e206d61,0x6e61637333315a5f\n"
".quad 0x6b636f6c426d7553,0x5374506a6a6a6a73,0x5f6d617261705f5f,0x617261702e0a2c32\n"
".quad 0x5f203233622e206d,0x536e61637333315a,0x736b636f6c426d75,0x5f5374506a6a6a6a\n"
".quad 0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x75536e6163733331\n"
".quad 0x6a736b636f6c426d,0x5f5f5374506a6a6a,0x2c345f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x6d75536e61637333,0x6a6a736b636f6c42,0x705f5f5374506a6a\n"
".quad 0x290a355f6d617261,0x206765722e0a7b0a,0x737225203631732e,0x65722e0a3b3e393c\n"
".quad 0x20646572702e2067,0x2e0a3b3e383c7025,0x3233732e20676572,0x3b3e33353c722520\n"
".quad 0x732e206765722e0a,0x323c6c7225203436,0x646c0a0a0a3b3e31,0x752e6d617261702e\n"
".quad 0x202c337225203233,0x61637333315a5f5b,0x636f6c426d75536e,0x74506a6a6a6a736b\n"
".quad 0x6d617261705f5f53,0x6f6c2e0a3b5d335f,0x2034323720372063,0x33752e7268730a31\n"
".quad 0x202c363472252032,0x0a3b31202c337225,0x2e71652e70746573,0x2c31702520323373\n"
".quad 0x30202c3634722520,0x3720636f6c2e0a3b,0x400a312034323720,0x2061726220317025\n"
".quad 0x0a0a3b365f394242,0x6d617261702e646c,0x347225203233752e,0x33315a5f5b202c33\n"
".quad 0x426d75536e616373,0x6a6a6a736b636f6c,0x61705f5f5374506a,0x0a3b5d305f6d6172\n"
".quad 0x203233622e6c6873,0x7225202c39317225,0x6d0a3b31202c3334,0x25203233752e766f\n"
".quad 0x0a3b31202c323572,0x37203720636f6c2e,0x2e726f0a31203033,0x2c35722520323362\n"
".quad 0x31202c3931722520,0x3720636f6c2e0a3b,0x610a312031333720,0x25203233732e6464\n"
".quad 0x39317225202c3672,0x42420a0a3b32202c,0x6f6c2e0a3a325f39,0x2036323720372063\n"
".quad 0x79732e7261620a31,0x646c0a3b3020636e,0x752e6d617261702e,0x2c32347225203233\n"
".quad 0x637333315a5f5b20,0x6f6c426d75536e61,0x506a6a6a6a736b63,0x617261705f5f5374\n"
".quad 0x6c2e0a3b5d305f6d,0x383237203720636f,0x2e707465730a3120,0x25203233752e656c\n"
".quad 0x36347225202c3270,0x0a3b32347225202c,0x6172622032702540,0x0a3b345f39424220\n"
".quad 0x2e6f6c2e64616d0a,0x3032722520323373,0x202c32357225202c,0x3b312d202c357225\n"
".quad 0x2e6f6c2e64616d0a,0x3132722520323373,0x202c32357225202c,0x3b312d202c367225\n"
".quad 0x203720636f6c2e0a,0x756d0a3120333337,0x752e656469772e6c,0x2c336c7225203233\n"
".quad 0x32202c3032722520,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c39316c72\n"
".quad 0x536e61637333315a,0x736b636f6c426d75,0x5f5374506a6a6a6a,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203333372037,0x203436732e646461,0x7225202c346c7225\n"
".quad 0x6c7225202c39316c,0x772e6c756d0a3b33,0x203233752e656469,0x7225202c356c7225\n"
".quad 0x610a3b32202c3132,0x25203436732e6464,0x6c7225202c366c72,0x356c7225202c3931\n"
".quad 0x3631752e646c0a3b,0x5b202c3173722520,0x6c0a3b5d366c7225,0x7225203631752e64\n"
".quad 0x6c72255b202c3273,0x2e6464610a3b5d34,0x3373722520363173,0x202c31737225202c\n"
".quad 0x6c2e0a3b32737225,0x333337203720636f,0x31752e74730a3120,0x5d366c72255b2036\n"
".quad 0x0a3b33737225202c,0x0a3a345f3942420a,0x203233622e6c6873,0x7225202c32357225\n"
".quad 0x2e0a3b31202c3235,0x3237203720636f6c,0x7268730a37312034,0x347225203233732e\n"
".quad 0x2c36347225202c36,0x636f6c2e0a3b3120,0x3120343237203720,0x74672e707465730a\n"
".quad 0x337025203233732e,0x202c36347225202c,0x20337025400a3b30,0x5f39424220617262\n"
".quad 0x2e766f6d0a0a3b32,0x3135722520323375,0x0a3b32357225202c,0x20696e752e617262\n"
".quad 0x0a0a3b375f394242,0x6d0a3a365f394242,0x25203233752e766f,0x0a3b31202c313572\n"
".quad 0x0a3a375f3942420a,0x203233752e766f6d,0x7225202c30357225,0x702e646c0a3b3135\n"
".quad 0x3233752e6d617261,0x5b202c3534722520,0x6e61637333315a5f,0x6b636f6c426d7553\n"
".quad 0x5374506a6a6a6a73,0x5f6d617261705f5f,0x2e6464610a3b5d33,0x3231722520323373\n"
".quad 0x202c35347225202c,0x636f6c2e0a3b312d,0x3120313437203720,0x746c2e707465730a\n"
".quad 0x347025203233752e,0x202c32317225202c,0x20347025400a3b33,0x5f39424220617262\n"
".quad 0x2e646c0a0a3b3231,0x33752e6d61726170,0x202c313472252032,0x61637333315a5f5b\n"
".quad 0x636f6c426d75536e,0x74506a6a6a6a736b,0x6d617261705f5f53,0x6f6c2e0a3b5d305f\n"
".quad 0x2038343720372063,0x33732e6464610a31,0x202c333172252032,0x3b31202c31347225\n"
".quad 0x3233752e766f6d0a,0x32202c3734722520,0x395f3942420a0a3b,0x33752e766f6d0a3a\n"
".quad 0x202c353172252032,0x6c2e0a3b30357225,0x333437203720636f,0x752e7268730a3120\n"
".quad 0x2c36317225203233,0x31202c3531722520,0x3720636f6c2e0a3b,0x620a312034343720\n"
".quad 0x20636e79732e7261,0x732e6464610a3b30,0x2c37327225203233,0x2d202c3734722520\n"
".quad 0x61702e646c0a3b31,0x203233752e6d6172,0x5f5b202c30347225,0x536e61637333315a\n"
".quad 0x736b636f6c426d75,0x5f5374506a6a6a6a,0x305f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203634372037,0x2e656c2e70746573,0x2c35702520323375,0x25202c3732722520\n"
".quad 0x7025400a3b303472,0x4242206172622035,0x6d0a0a3b31315f39,0x33732e6f6c2e6461\n"
".quad 0x202c383272252032,0x7225202c36317225,0x0a3b312d202c3331,0x203233752e726873\n"
".quad 0x7225202c39327225,0x2e0a3b32202c3531,0x3437203720636f6c,0x2e6464610a312039\n"
".quad 0x3033722520323373,0x202c38327225202c,0x6c2e0a3b39327225,0x313537203720636f\n"
".quad 0x772e6c756d0a3120,0x203233752e656469,0x7225202c376c7225,0x6c0a3b32202c3832\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x33315a5f5b202c38,0x426d75536e616373\n"
".quad 0x6a6a6a736b636f6c,0x61705f5f5374506a,0x0a3b5d345f6d6172,0x37203720636f6c2e\n"
".quad 0x6464610a31203135,0x6c7225203436732e,0x38316c7225202c38,0x0a3b376c7225202c\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x2c30337225202c39,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x38316c7225202c30,0x0a3b396c7225202c,0x25203631752e646c\n"
".quad 0x72255b202c347372,0x646c0a3b5d30316c,0x737225203631752e,0x386c72255b202c35\n"
".quad 0x732e6464610a3b5d,0x2c36737225203631,0x25202c3473722520,0x6f6c2e0a3b357372\n"
".quad 0x2031353720372063,0x3631752e74730a31,0x5d30316c72255b20,0x0a3b36737225202c\n"
".quad 0x3a31315f3942420a,0x203720636f6c2e0a,0x730a373520313437,0x25203233622e6c68\n"
".quad 0x347225202c373472,0x6c2e0a3b31202c37,0x313437203720636f,0x2e707465730a3120\n"
".quad 0x25203233752e746c,0x37347225202c3670,0x0a3b32317225202c,0x203233752e766f6d\n"
".quad 0x7225202c30357225,0x636f6c2e0a3b3631,0x3120313437203720,0x726220367025400a\n"
".quad 0x3b395f3942422061,0x32315f3942420a0a,0x3720636f6c2e0a3a,0x620a312035353720\n"
".quad 0x20636e79732e7261,0x61702e646c0a3b30,0x203233752e6d6172,0x5f5b202c39337225\n"
".quad 0x536e61637333315a,0x736b636f6c426d75,0x5f5374506a6a6a6a,0x305f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203735372037,0x2e71652e70746573,0x2c37702520323373\n"
".quad 0x30202c3933722520,0x6220377025400a3b,0x315f394242206172,0x636f6c2e0a0a3b34\n"
".quad 0x3220373637203720,0x420a0a3b7465720a,0x2e0a3a34315f3942,0x3637203720636f6c\n"
".quad 0x2e6c756d0a312032,0x3233752e65646977,0x202c31316c722520,0x3b32202c32317225\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c30326c,0x75536e6163733331\n"
".quad 0x6a736b636f6c426d,0x5f5f5374506a6a6a,0x5d355f6d61726170,0x3720636f6c2e0a3b\n"
".quad 0x610a312032363720,0x25203436732e6464,0x7225202c32316c72,0x6c7225202c30326c\n"
".quad 0x702e646c0a3b3131,0x3233752e6d617261,0x5b202c3434722520,0x6e61637333315a5f\n"
".quad 0x6b636f6c426d7553,0x5374506a6a6a6a73,0x5f6d617261705f5f,0x2e6464610a3b5d32\n"
".quad 0x3433722520323373,0x202c34347225202c,0x636f6c2e0a3b312d,0x3120323637203720\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x337225202c33316c,0x64610a3b32202c34\n"
".quad 0x7225203436732e64,0x6c7225202c34316c,0x316c7225202c3032,0x31752e646c0a3b33\n"
".quad 0x202c377372252036,0x3b5d32316c72255b,0x203631752e74730a,0x2c5d34316c72255b\n"
".quad 0x6c0a3b3773722520,0x2e6d617261702e64,0x316c722520343675,0x33315a5f5b202c37\n"
".quad 0x426d75536e616373,0x6a6a6a736b636f6c,0x61705f5f5374506a,0x0a3b5d345f6d6172\n"
".quad 0x37203720636f6c2e,0x6464610a31203436,0x6c7225203436732e,0x316c7225202c3531\n"
".quad 0x31316c7225202c37,0x36732e6464610a3b,0x2c36316c72252034,0x202c37316c722520\n"
".quad 0x6c0a3b33316c7225,0x7225203631752e64,0x6c72255b202c3873,0x2e74730a3b5d3531\n"
".quad 0x6c72255b20363175,0x737225202c5d3631,0x20636f6c2e0a3b38,0x0a32203736372037\n"
".quad 0x0a0a7d0a3b746572,0x656c62697369762e,0x5f20636e75662e20,0x496e61637331315a\n"
".quad 0x6a6a6c616974696e,0x5f535f5374506a6a,0x7261702e0a285f53,0x203233622e206d61\n"
".quad 0x6e61637331315a5f,0x6a6c616974696e49,0x535f5374506a6a6a,0x617261705f5f535f\n"
".quad 0x61702e0a2c305f6d,0x3233622e206d6172,0x61637331315a5f20,0x6c616974696e496e\n"
".quad 0x5f5374506a6a6a6a,0x7261705f5f535f53,0x702e0a2c315f6d61,0x33622e206d617261\n"
".quad 0x637331315a5f2032,0x616974696e496e61,0x5374506a6a6a6a6c,0x61705f5f535f535f\n"
".quad 0x2e0a2c325f6d6172,0x622e206d61726170,0x7331315a5f203233,0x6974696e496e6163\n"
".quad 0x74506a6a6a6a6c61,0x705f5f535f535f53,0x0a2c335f6d617261,0x2e206d617261702e\n"
".quad 0x31315a5f20343662,0x74696e496e616373,0x506a6a6a6a6c6169,0x5f5f535f535f5374\n"
".quad 0x2c345f6d61726170,0x206d617261702e0a,0x315a5f203436622e,0x696e496e61637331\n"
".quad 0x6a6a6a6a6c616974,0x5f535f535f537450,0x355f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6e496e6163733131,0x6a6a6a6c61697469,0x535f535f5374506a\n"
".quad 0x5f6d617261705f5f,0x617261702e0a2c36,0x5f203436622e206d,0x496e61637331315a\n"
".quad 0x6a6a6c616974696e,0x5f535f5374506a6a,0x6d617261705f5f53,0x2e0a7b0a290a375f\n"
".quad 0x3631732e20676572,0x3e30323c73722520,0x2e206765722e0a3b,0x3c70252064657270\n"
".quad 0x65722e0a3b3e3231,0x25203233732e2067,0x2e0a3b3e35363c72,0x3436732e20676572\n"
".quad 0x3e31333c6c722520,0x702e646c0a0a0a3b,0x3233752e6d617261,0x5f5b202c32722520\n"
".quad 0x496e61637331315a,0x6a6a6c616974696e,0x5f535f5374506a6a,0x6d617261705f5f53\n"
".quad 0x6f6c2e0a3b5d335f,0x2031393720372063,0x33752e7268730a31,0x202c383572252032\n"
".quad 0x0a3b31202c327225,0x2e71652e70746573,0x2c32702520323373,0x30202c3835722520\n"
".quad 0x3720636f6c2e0a3b,0x400a312031393720,0x2061726220327025,0x3b34315f30314242\n"
".quad 0x7261702e646c0a0a,0x25203233752e6d61,0x5a5f5b202c353572,0x6e496e6163733131\n"
".quad 0x6a6a6a6c61697469,0x535f535f5374506a,0x5f6d617261705f5f,0x2e6c68730a3b5d30\n"
".quad 0x3831722520323362,0x202c35357225202c,0x752e766f6d0a3b31,0x2c34367225203233\n"
".quad 0x636f6c2e0a3b3120,0x3120373937203720,0x203233622e726f0a,0x317225202c347225\n"
".quad 0x6c2e0a3b31202c38,0x383937203720636f,0x732e6464610a3120,0x202c357225203233\n"
".quad 0x3b32202c38317225,0x325f303142420a0a,0x3720636f6c2e0a3a,0x620a312033393720\n"
".quad 0x20636e79732e7261,0x61702e646c0a3b30,0x203233752e6d6172,0x5f5b202c34357225\n"
".quad 0x496e61637331315a,0x6a6a6c616974696e,0x5f535f5374506a6a,0x6d617261705f5f53\n"
".quad 0x6f6c2e0a3b5d305f,0x2035393720372063,0x6c2e707465730a31,0x7025203233752e65\n"
".quad 0x2c38357225202c33,0x400a3b3435722520,0x2061726220337025,0x3b32315f30314242\n"
".quad 0x6f6c2e64616d0a0a,0x317225203233732e,0x2c34367225202c39,0x312d202c35722520\n"
".quad 0x3720636f6c2e0a3b,0x630a312030303820,0x752e3436752e7476,0x2c356c7225203233\n"
".quad 0x6d0a3b3931722520,0x2e656469772e6c75,0x316c722520323375,0x2c39317225202c31\n"
".quad 0x702e646c0a3b3220,0x3436752e6d617261,0x202c36326c722520,0x61637331315a5f5b\n"
".quad 0x6c616974696e496e,0x5f5374506a6a6a6a,0x7261705f5f535f53,0x2e0a3b5d345f6d61\n"
".quad 0x3038203720636f6c,0x2e6464610a312030,0x316c722520343673,0x36326c7225202c32\n"
".quad 0x3b31316c7225202c,0x2e6f6c2e64616d0a,0x3032722520323373,0x202c34367225202c\n"
".quad 0x3b312d202c347225,0x203720636f6c2e0a,0x76630a3120303038,0x33752e3436752e74\n"
".quad 0x202c366c72252032,0x756d0a3b30327225,0x752e656469772e6c,0x33316c7225203233\n"
".quad 0x202c30327225202c,0x732e6464610a3b32,0x34316c7225203436,0x2c36326c7225202c\n"
".quad 0x0a3b33316c722520,0x25203631752e646c,0x72255b202c317372,0x646c0a3b5d34316c\n"
".quad 0x737225203631752e,0x316c72255b202c32,0x2e6464610a3b5d32,0x3373722520363173\n"
".quad 0x202c31737225202c,0x6c2e0a3b32737225,0x303038203720636f,0x31752e74730a3120\n"
".quad 0x32316c72255b2036,0x3b33737225202c5d,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c38326c,0x6e496e6163733131,0x6a6a6a6c61697469,0x535f535f5374506a\n"
".quad 0x5f6d617261705f5f,0x636f6c2e0a3b5d35,0x3120313038203720,0x3436732e6464610a\n"
".quad 0x202c35316c722520,0x25202c38326c7225,0x64610a3b31316c72,0x7225203436732e64\n"
".quad 0x6c7225202c36316c,0x316c7225202c3832,0x31752e646c0a3b33,0x202c347372252036\n"
".quad 0x3b5d36316c72255b,0x203631752e646c0a,0x255b202c35737225,0x610a3b5d35316c72\n"
".quad 0x25203631732e6464,0x737225202c367372,0x3b35737225202c34,0x203720636f6c2e0a\n"
".quad 0x74730a3120313038,0x72255b203631752e,0x7225202c5d35316c,0x702e646c0a3b3673\n"
".quad 0x3436752e6d617261,0x202c30336c722520,0x61637331315a5f5b,0x6c616974696e496e\n"
".quad 0x5f5374506a6a6a6a,0x7261705f5f535f53,0x2e0a3b5d375f6d61,0x3038203720636f6c\n"
".quad 0x2e6464610a312039,0x376c722520343673,0x2c30336c7225202c,0x0a3b33316c722520\n"
".quad 0x25203631752e646c,0x72255b202c377372,0x7465730a3b5d376c,0x3631732e71652e70\n"
".quad 0x7225202c31702520,0x2e0a3b31202c3773,0x3138203720636f6c,0x2e6464610a312034\n"
".quad 0x386c722520343673,0x2c30336c7225202c,0x0a3b31316c722520,0x38203720636f6c2e\n"
".quad 0x7465730a31203930,0x3631732e656e2e70,0x7225202c34702520,0x400a3b31202c3773\n"
".quad 0x2061726220347025,0x0a3b355f30314242,0x203631752e646c0a,0x255b202c38737225\n"
".quad 0x65730a3b5d386c72,0x31732e71652e7074,0x25202c3570252036,0x0a3b31202c387372\n"
".quad 0x38203720636f6c2e,0x7025400a31203930,0x4242206172622035,0x0a0a3b32315f3031\n"
".quad 0x0a3a355f30314242,0x38203720636f6c2e,0x7025400a31203231,0x4242206172622031\n"
".quad 0x0a0a3b31315f3031,0x38203720636f6c2e,0x2e646c0a31203631,0x3973722520363175\n"
".quad 0x5d386c72255b202c,0x652e707465730a3b,0x7025203631732e71,0x2c39737225202c36\n"
".quad 0x636f6c2e0a3b3120,0x3120363138203720,0x726220367025400a,0x315f303142422061\n"
".quad 0x636f6c2e0a0a3b30,0x3120323238203720,0x3436622e6c68730a,0x202c37316c722520\n"
".quad 0x3b31202c356c7225,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c39326c\n"
".quad 0x6e496e6163733131,0x6a6a6a6c61697469,0x535f535f5374506a,0x5f6d617261705f5f\n"
".quad 0x636f6c2e0a3b5d36,0x3120323238203720,0x3436732e6464610a,0x25202c396c722520\n"
".quad 0x7225202c39326c72,0x6c68730a3b37316c,0x6c7225203436622e,0x366c7225202c3831\n"
".quad 0x6464610a3b31202c,0x6c7225203436732e,0x326c7225202c3031,0x38316c7225202c39\n"
".quad 0x3631752e646c0a3b,0x5b202c3033722520,0x6c0a3b5d396c7225,0x7225203631752e64\n"
".quad 0x6c72255b202c3233,0x6464610a3b5d3031,0x387225203233732e,0x202c32337225202c\n"
".quad 0x6c2e0a3b30337225,0x333238203720636f,0x2e707465730a3120,0x25203233752e7467\n"
".quad 0x2c387225202c3770,0x25400a3b36353220,0x4220617262203770,0x0a0a3b395f303142\n"
".quad 0x38203720636f6c2e,0x2e74730a31203133,0x6c72255b20363175,0x3b387225202c5d39\n"
".quad 0x3631752e766f6d0a,0x202c303173722520,0x20636f6c2e0a3b30,0x0a31203233382037\n"
".quad 0x5b203631752e7473,0x202c5d30316c7225,0x620a3b3031737225,0x4220696e752e6172\n"
".quad 0x0a3b32315f303142,0x3a395f303142420a,0x3631752e766f6d0a,0x202c313173722520\n"
".quad 0x20636f6c2e0a3b31,0x0a31203632382037,0x5b203631752e7473,0x25202c5d376c7225\n"
".quad 0x6c2e0a3b31317372,0x373238203720636f,0x31752e74730a3120,0x5d386c72255b2036\n"
".quad 0x3b3131737225202c,0x696e752e6172620a,0x32315f3031424220,0x5f303142420a0a3b\n"
".quad 0x2e766f6d0a3a3031,0x3173722520363175,0x6c2e0a3b31202c32,0x383138203720636f\n"
".quad 0x31752e74730a3120,0x5d376c72255b2036,0x3b3231737225202c,0x696e752e6172620a\n"
".quad 0x32315f3031424220,0x5f303142420a0a3b,0x2e766f6d0a3a3131,0x3173722520363175\n"
".quad 0x6c2e0a3b31202c33,0x343138203720636f,0x31752e74730a3120,0x5d386c72255b2036\n"
".quad 0x3b3331737225202c,0x315f303142420a0a,0x20636f6c2e0a3a32,0x0a31203933382037\n"
".quad 0x203233622e6c6873,0x7225202c34367225,0x2e0a3b31202c3436,0x3937203720636f6c\n"
".quad 0x7268730a37312031,0x357225203233732e,0x2c38357225202c38,0x636f6c2e0a3b3120\n"
".quad 0x3120313937203720,0x74672e707465730a,0x387025203233732e,0x202c38357225202c\n"
".quad 0x20387025400a3b30,0x3031424220617262,0x766f6d0a0a3b325f,0x367225203233752e\n"
".quad 0x3b34367225202c33,0x696e752e6172620a,0x35315f3031424220,0x5f303142420a0a3b\n"
".quad 0x2e766f6d0a3a3431,0x3336722520323375,0x42420a0a3b31202c,0x6d0a3a35315f3031\n"
".quad 0x25203233752e766f,0x367225202c323672,0x61702e646c0a3b33,0x203233752e6d6172\n"
".quad 0x5f5b202c37357225,0x496e61637331315a,0x6a6a6c616974696e,0x5f535f5374506a6a\n"
".quad 0x6d617261705f5f53,0x6f6c2e0a3b5d335f,0x2035343820372063,0x6c2e707465730a31\n"
".quad 0x7025203233752e74,0x2c37357225202c39,0x397025400a3b3320,0x3142422061726220\n"
".quad 0x6c0a0a3b30325f30,0x2e6d617261702e64,0x3335722520323375,0x7331315a5f5b202c\n"
".quad 0x6974696e496e6163,0x74506a6a6a6a6c61,0x705f5f535f535f53,0x3b5d305f6d617261\n"
".quad 0x203720636f6c2e0a,0x64610a3120333538,0x7225203233732e64,0x33357225202c3231\n"
".quad 0x766f6d0a3b31202c,0x357225203233752e,0x420a0a3b32202c39,0x0a3a37315f303142\n"
".quad 0x203233752e766f6d,0x7225202c34317225,0x636f6c2e0a3b3236,0x3120373438203720\n"
".quad 0x3233752e7268730a,0x25202c3531722520,0x0a3b31202c343172,0x38203720636f6c2e\n"
".quad 0x7261620a31203834,0x3b3020636e79732e,0x3233732e6464610a,0x25202c3234722520\n"
".quad 0x3b312d202c393572,0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3235\n"
".quad 0x696e496e61637331,0x6a6a6a6a6c616974,0x5f535f535f537450,0x305f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203135382037,0x2e656c2e70746573,0x3031702520323375\n"
".quad 0x202c32347225202c,0x25400a3b32357225,0x2061726220303170,0x3b39315f30314242\n"
".quad 0x6f6c2e64616d0a0a,0x347225203233732e,0x2c35317225202c33,0x2d202c3231722520\n"
".quad 0x752e7268730a3b31,0x2c34347225203233,0x32202c3431722520,0x3720636f6c2e0a3b\n"
".quad 0x610a312034353820,0x25203233732e6464,0x347225202c353472,0x3b34347225202c33\n"
".quad 0x203720636f6c2e0a,0x756d0a3120363538,0x752e656469772e6c,0x39316c7225203233\n"
".quad 0x202c35347225202c,0x61702e646c0a3b32,0x203436752e6d6172,0x5b202c35326c7225\n"
".quad 0x6e61637331315a5f,0x6a6c616974696e49,0x535f5374506a6a6a,0x617261705f5f535f\n"
".quad 0x6c2e0a3b5d345f6d,0x363538203720636f,0x732e6464610a3120,0x30326c7225203436\n"
".quad 0x2c35326c7225202c,0x0a3b39316c722520,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x33347225202c3132,0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3232\n"
".quad 0x31326c7225202c35,0x3631752e646c0a3b,0x202c343173722520,0x3b5d32326c72255b\n"
".quad 0x203631752e646c0a,0x5b202c3531737225,0x0a3b5d30326c7225,0x203631732e646461\n"
".quad 0x25202c3631737225,0x7225202c34317372,0x6f6c2e0a3b353173,0x2036353820372063\n"
".quad 0x3631752e74730a31,0x5d30326c72255b20,0x3b3631737225202c,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c37326c,0x6e496e6163733131,0x6a6a6a6c61697469\n"
".quad 0x535f535f5374506a,0x5f6d617261705f5f,0x636f6c2e0a3b5d35,0x3120373538203720\n"
".quad 0x3436732e6464610a,0x202c33326c722520,0x25202c37326c7225,0x64610a3b39316c72\n"
".quad 0x7225203436732e64,0x6c7225202c34326c,0x326c7225202c3732,0x31752e646c0a3b31\n"
".quad 0x2c37317372252036,0x5d34326c72255b20,0x3631752e646c0a3b,0x202c383173722520\n"
".quad 0x3b5d33326c72255b,0x3631732e6464610a,0x202c393173722520,0x25202c3731737225\n"
".quad 0x6c2e0a3b38317372,0x373538203720636f,0x31752e74730a3120,0x33326c72255b2036\n"
".quad 0x3931737225202c5d,0x5f303142420a0a3b,0x636f6c2e0a3a3931,0x3520353438203720\n"
".quad 0x33622e6c68730a30,0x202c393572252032,0x3b31202c39357225,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x315a5f5b202c3635,0x696e496e61637331,0x6a6a6a6a6c616974\n"
".quad 0x5f535f535f537450,0x335f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203534382037\n"
".quad 0x2e746c2e70746573,0x3131702520323375,0x202c39357225202c,0x6f6d0a3b36357225\n"
".quad 0x7225203233752e76,0x35317225202c3236,0x3720636f6c2e0a3b,0x400a312035343820\n"
".quad 0x6172622031317025,0x37315f3031424220,0x5f303142420a0a3b,0x636f6c2e0a3a3032\n"
".quad 0x3220313638203720,0x0a7d0a3b7465720a,0x6c62697369762e0a,0x20636e75662e2065\n"
".quad 0x726f747337325a5f,0x74706d456e6f4e65,0x61767265746e4979,0x6a656772614c736c\n"
".quad 0x5374505f5366506a,0x7474746666665f30,0x31535f30536a5266,0x617261702e0a285f\n"
".quad 0x5f203233622e206d,0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49\n"
".quad 0x6a6a656772614c73,0x305374505f536650,0x667474746666665f,0x5f31535f30536a52\n"
".quad 0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203233622e20,0x4e65726f74733732\n"
".quad 0x497974706d456e6f,0x736c61767265746e,0x506a6a656772614c,0x5f305374505f5366\n"
".quad 0x5266747474666666,0x5f5f31535f30536a,0x2c315f6d61726170,0x206d617261702e0a\n"
".quad 0x325a5f203436622e,0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574\n"
".quad 0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053\n"
".quad 0x0a2c325f6d617261,0x2e206d617261702e,0x37325a5f20343662,0x6e6f4e65726f7473\n"
".quad 0x746e497974706d45,0x614c736c61767265,0x5366506a6a656772,0x66665f305374505f\n"
".quad 0x536a526674747466,0x61705f5f31535f30,0x2e0a2c335f6d6172,0x622e206d61726170\n"
".quad 0x7337325a5f203436,0x456e6f4e65726f74,0x65746e497974706d,0x72614c736c617672\n"
".quad 0x5f5366506a6a6567,0x6666665f30537450,0x30536a5266747474,0x7261705f5f31535f\n"
".quad 0x702e0a2c345f6d61,0x36622e206d617261,0x747337325a5f2034,0x6d456e6f4e65726f\n"
".quad 0x7265746e49797470,0x6772614c736c6176,0x505f5366506a6a65,0x746666665f305374\n"
".quad 0x5f30536a52667474,0x617261705f5f3153,0x61702e0a2c355f6d,0x3233622e206d6172\n"
".quad 0x6f747337325a5f20,0x706d456e6f4e6572,0x767265746e497974,0x656772614c736c61\n"
".quad 0x74505f5366506a6a,0x74746666665f3053,0x535f30536a526674,0x6d617261705f5f31\n"
".quad 0x7261702e0a2c365f,0x203233622e206d61,0x726f747337325a5f,0x74706d456e6f4e65\n"
".quad 0x61767265746e4979,0x6a656772614c736c,0x5374505f5366506a,0x7474746666665f30\n"
".quad 0x31535f30536a5266,0x5f6d617261705f5f,0x617261702e0a2c37,0x5f203233622e206d\n"
".quad 0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a656772614c73\n"
".quad 0x305374505f536650,0x667474746666665f,0x5f31535f30536a52,0x385f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233622e20,0x4e65726f74733732,0x497974706d456e6f\n"
".quad 0x736c61767265746e,0x506a6a656772614c,0x5f305374505f5366,0x5266747474666666\n"
".quad 0x5f5f31535f30536a,0x2c395f6d61726170,0x206d617261702e0a,0x325a5f203233622e\n"
".quad 0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261\n"
".quad 0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053,0x2c30315f6d617261\n"
".quad 0x206d617261702e0a,0x325a5f203233622e,0x6f4e65726f747337,0x6e497974706d456e\n"
".quad 0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666\n"
".quad 0x705f5f31535f3053,0x2c31315f6d617261,0x206d617261702e0a,0x325a5f203233622e\n"
".quad 0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261\n"
".quad 0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053,0x2c32315f6d617261\n"
".quad 0x206d617261702e0a,0x325a5f203436622e,0x6f4e65726f747337,0x6e497974706d456e\n"
".quad 0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666\n"
".quad 0x705f5f31535f3053,0x2c33315f6d617261,0x206d617261702e0a,0x325a5f203436622e\n"
".quad 0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261\n"
".quad 0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053,0x2c34315f6d617261\n"
".quad 0x206d617261702e0a,0x325a5f203436622e,0x6f4e65726f747337,0x6e497974706d456e\n"
".quad 0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666\n"
".quad 0x705f5f31535f3053,0x0a35315f6d617261,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x722e0a3b3e32363c,0x203436662e206765,0x3b3e33313c646625,0x732e206765722e0a\n"
".quad 0x313c737225203631,0x6765722e0a3b3e34,0x2520646572702e20,0x2e0a3b3e37313c70\n"
".quad 0x3233732e20676572,0x3b3e38323c722520,0x732e206765722e0a,0x323c6c7225203436\n"
".quad 0x646c0a0a0a3b3e34,0x752e6d617261702e,0x2c386c7225203436,0x747337325a5f5b20\n"
".quad 0x6d456e6f4e65726f,0x7265746e49797470,0x6772614c736c6176,0x505f5366506a6a65\n"
".quad 0x746666665f305374,0x5f30536a52667474,0x617261705f5f3153,0x646c0a3b5d325f6d\n"
".quad 0x752e6d617261702e,0x2c396c7225203436,0x747337325a5f5b20,0x6d456e6f4e65726f\n"
".quad 0x7265746e49797470,0x6772614c736c6176,0x505f5366506a6a65,0x746666665f305374\n"
".quad 0x5f30536a52667474,0x617261705f5f3153,0x646c0a3b5d335f6d,0x752e6d617261702e\n"
".quad 0x30316c7225203436,0x7337325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d\n"
".quad 0x72614c736c617672,0x5f5366506a6a6567,0x6666665f30537450,0x30536a5266747474\n"
".quad 0x7261705f5f31535f,0x6c0a3b5d345f6d61,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x37325a5f5b202c31,0x6e6f4e65726f7473,0x746e497974706d45,0x614c736c61767265\n"
".quad 0x5366506a6a656772,0x66665f305374505f,0x536a526674747466,0x61705f5f31535f30\n"
".quad 0x0a3b5d355f6d6172,0x6d617261702e646c,0x737225203631752e,0x37325a5f5b202c31\n"
".quad 0x6e6f4e65726f7473,0x746e497974706d45,0x614c736c61767265,0x5366506a6a656772\n"
".quad 0x66665f305374505f,0x536a526674747466,0x61705f5f31535f30,0x0a3b5d395f6d6172\n"
".quad 0x6d617261702e646c,0x737225203631752e,0x37325a5f5b202c32,0x6e6f4e65726f7473\n"
".quad 0x746e497974706d45,0x614c736c61767265,0x5366506a6a656772,0x66665f305374505f\n"
".quad 0x536a526674747466,0x61705f5f31535f30,0x3b5d30315f6d6172,0x617261702e646c0a\n"
".quad 0x7225203631752e6d,0x325a5f5b202c3373,0x6f4e65726f747337,0x6e497974706d456e\n"
".quad 0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666\n"
".quad 0x705f5f31535f3053,0x5d31315f6d617261,0x6e2e707465730a3b,0x7025203631732e65\n"
".quad 0x2c32737225202c31,0x730a3b3373722520,0x732e656e2e707465,0x202c327025203631\n"
".quad 0x7225202c31737225,0x2e646e610a3b3273,0x3370252064657270,0x25202c317025202c\n"
".quad 0x636f6c2e0a3b3270,0x3120333031203220,0x617261702e646c0a,0x7225203233752e6d\n"
".quad 0x5a5f5b202c32316c,0x4e65726f74733732,0x497974706d456e6f,0x736c61767265746e\n"
".quad 0x506a6a656772614c,0x5f305374505f5366,0x5266747474666666,0x5f5f31535f30536a\n"
".quad 0x5d305f6d61726170,0x36622e6c68730a3b,0x2c33316c72252034,0x202c32316c722520\n"
".quad 0x732e6464610a3b31,0x2c346c7225203436,0x202c30316c722520,0x2e0a3b33316c7225\n"
".quad 0x3031203220636f6c,0x2e6464610a312034,0x356c722520343673,0x2c31316c7225202c\n"
".quad 0x0a3b33316c722520,0x31203220636f6c2e,0x6c68730a31203132,0x6c7225203436622e\n"
".quad 0x316c7225202c3431,0x64610a3b32202c32,0x7225203436732e64,0x386c7225202c366c\n"
".quad 0x3b34316c7225202c,0x203220636f6c2e0a,0x64610a3120323231,0x7225203436732e64\n"
".quad 0x396c7225202c376c,0x3b34316c7225202c,0x203720636f6c2e0a,0x25400a3120343838\n"
".quad 0x4220617262203370,0x0a0a3b385f313142,0x203233752e766f6d,0x0a3b30202c317225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x325a5f5b202c3232,0x6f4e65726f747337\n"
".quad 0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53\n"
".quad 0x6a52667474746666,0x705f5f31535f3053,0x5d35315f6d617261,0x3720636f6c2e0a3b\n"
".quad 0x730a312038393820,0x255b203233752e74,0x25202c5d32326c72,0x636f6c2e0a3b3172\n"
".quad 0x3120393938203720,0x3233752e766f6d0a,0x7425202c33722520,0x756d0a3b782e6469\n"
".quad 0x752e656469772e6c,0x35316c7225203233,0x32202c337225202c,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c31326c72,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x315f6d617261705f,0x636f6c2e0a3b5d34,0x3120393938203720\n"
".quad 0x3436732e6464610a,0x202c36316c722520,0x25202c31326c7225,0x6f6d0a3b35316c72\n"
".quad 0x7225203631752e76,0x2e0a3b30202c3473,0x3938203720636f6c,0x752e74730a312039\n"
".quad 0x316c72255b203631,0x34737225202c5d36,0x7261702e646c0a3b,0x25203631752e6d61\n"
".quad 0x5a5f5b202c387372,0x4e65726f74733732,0x497974706d456e6f,0x736c61767265746e\n"
".quad 0x506a6a656772614c,0x5f305374505f5366,0x5266747474666666,0x5f5f31535f30536a\n"
".quad 0x5d395f6d61726170,0x7261702e646c0a3b,0x25203631752e6d61,0x5f5b202c32317372\n"
".quad 0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a656772614c73\n"
".quad 0x305374505f536650,0x667474746666665f,0x5f31535f30536a52,0x315f6d617261705f\n"
".quad 0x707465730a3b5d30,0x203631732e71652e,0x737225202c347025,0x3231737225202c38\n"
".quad 0x3720636f6c2e0a3b,0x400a312032303920,0x2061726220347025,0x0a3b355f31314242\n"
".quad 0x617261702e646c0a,0x7225203631752e6d,0x325a5f5b202c3673,0x6f4e65726f747337\n"
".quad 0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261,0x665f305374505f53\n"
".quad 0x6a52667474746666,0x705f5f31535f3053,0x3b5d395f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120333031,0x72255b203631752e,0x737225202c5d346c,0x61702e646c0a3b36\n"
".quad 0x203631752e6d6172,0x5f5b202c39737225,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x315f6d617261705f,0x636f6c2e0a3b5d30,0x3120343031203220\n"
".quad 0x203631752e74730a,0x202c5d356c72255b,0x646c0a3b39737225,0x662e6d617261702e\n"
".quad 0x2c36346625203233,0x747337325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470\n"
".quad 0x6772614c736c6176,0x505f5366506a6a65,0x746666665f305374,0x5f30536a52667474\n"
".quad 0x617261705f5f3153,0x646c0a3b5d365f6d,0x662e6d617261702e,0x2c35356625203233\n"
".quad 0x747337325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470,0x6772614c736c6176\n"
".quad 0x505f5366506a6a65,0x746666665f305374,0x5f30536a52667474,0x617261705f5f3153\n"
".quad 0x6c2e0a3b5d375f6d,0x373031203220636f,0x662e6275730a3120,0x202c356625203233\n"
".quad 0x6625202c35356625,0x636f6c2e0a3b3634,0x3520353933203320,0x3233662e7362610a\n"
".quad 0x6625202c38662520,0x20636f6c2e0a3b35,0x0a35203539332033,0x203233662e736261\n"
".quad 0x356625202c396625,0x662e7362610a3b35,0x2c30316625203233,0x2e0a3b3634662520\n"
".quad 0x3334203320636f6c,0x2e78616d0a352035,0x3131662520323366,0x202c30316625202c\n"
".quad 0x2e646c0a3b396625,0x33662e6d61726170,0x202c313666252032,0x6f747337325a5f5b\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x656772614c736c61,0x74505f5366506a6a\n"
".quad 0x74746666665f3053,0x535f30536a526674,0x6d617261705f5f31,0x6c2e0a3b5d32315f\n"
".quad 0x383031203220636f,0x662e6c756d0a3120,0x2c32316625203233,0x25202c3131662520\n"
".quad 0x6f6c2e0a3b313666,0x2039303120322063,0x36662e7476630a31,0x6625203233662e34\n"
".quad 0x3b386625202c3164,0x3436662e7476630a,0x646625203233662e,0x3b32316625202c32\n"
".quad 0x3436662e766f6d0a,0x30202c3364662520,0x3834343536383364,0x3745324432333934\n"
".quad 0x20636f6c2e0a3b32,0x0a35203436342033,0x203436662e78616d,0x6625202c34646625\n"
".quad 0x32646625202c3364,0x3220636f6c2e0a3b,0x730a312039303120,0x2e7574672e707465\n"
".quad 0x2c35702520343666,0x25202c3164662520,0x7025400a3b346466,0x4242206172622035\n"
".quad 0x6c0a0a3b345f3131,0x2e6d617261702e64,0x3534662520323366,0x7337325a5f5b202c\n"
".quad 0x456e6f4e65726f74,0x65746e497974706d,0x72614c736c617672,0x5f5366506a6a6567\n"
".quad 0x6666665f30537450,0x30536a5266747474,0x7261705f5f31535f,0x2e0a3b5d365f6d61\n"
".quad 0x3131203220636f6c,0x707465730a312032,0x203233662e746c2e,0x346625202c367025\n"
".quad 0x3030306630202c35,0x730a3b3030303030,0x203233662e706c65,0x6630202c33316625\n"
".quad 0x3030303030384642,0x303846336630202c,0x7025202c30303030,0x61702e646c0a3b36\n"
".quad 0x203233662e6d6172,0x5f5b202c34356625,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x375f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203231312032\n"
".quad 0x2e746c2e70746573,0x2c37702520323366,0x30202c3435662520,0x3030303030303066\n"
".quad 0x2e706c65730a3b30,0x3431662520323366,0x303846426630202c,0x6630202c30303030\n"
".quad 0x3030303030384633,0x2e0a3b377025202c,0x3131203220636f6c,0x707465730a312032\n"
".quad 0x203233662e71652e,0x316625202c387025,0x3b34316625202c33,0x2e6e722e616d660a\n"
".quad 0x3531662520323366,0x30202c356625202c,0x3030303030463366,0x3b35346625202c30\n"
".quad 0x3233662e6464610a,0x25202c3631662520,0x356625202c353466,0x662e6c756d0a3b34\n"
".quad 0x2c37316625203233,0x30202c3631662520,0x3030303030463366,0x2e706c65730a3b30\n"
".quad 0x3831662520323366,0x202c35316625202c,0x7025202c37316625,0x20636f6c2e0a3b38\n"
".quad 0x0a31203531312032,0x5b203233662e7473,0x25202c5d366c7225,0x6f6c2e0a3b383166\n"
".quad 0x2036313120322063,0x3233662e74730a31,0x2c5d376c72255b20,0x2e0a3b3831662520\n"
".quad 0x3139203720636f6c,0x3b7465720a322031,0x345f313142420a0a,0x7261702e646c0a3a\n"
".quad 0x25203233662e6d61,0x5a5f5b202c313466,0x4e65726f74733732,0x497974706d456e6f\n"
".quad 0x736c61767265746e,0x506a6a656772614c,0x5f305374505f5366,0x5266747474666666\n"
".quad 0x5f5f31535f30536a,0x5d365f6d61726170,0x3220636f6c2e0a3b,0x730a312031323120\n"
".quad 0x255b203233662e74,0x6625202c5d366c72,0x702e646c0a3b3134,0x3233662e6d617261\n"
".quad 0x5b202c3734662520,0x726f747337325a5f,0x74706d456e6f4e65,0x61767265746e4979\n"
".quad 0x6a656772614c736c,0x5374505f5366506a,0x7474746666665f30,0x31535f30536a5266\n"
".quad 0x5f6d617261705f5f,0x636f6c2e0a3b5d37,0x3120323231203220,0x203233662e74730a\n"
".quad 0x202c5d376c72255b,0x6c2e0a3b37346625,0x313139203720636f,0x0a3b7465720a3220\n"
".quad 0x3a355f313142420a,0x617261702e646c0a,0x7225203631752e6d,0x5a5f5b202c303173\n"
".quad 0x4e65726f74733732,0x497974706d456e6f,0x736c61767265746e,0x506a6a656772614c\n"
".quad 0x5f305374505f5366,0x5266747474666666,0x5f5f31535f30536a,0x30315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203330312032,0x5b203631752e7473,0x25202c5d346c7225\n"
".quad 0x646c0a3b30317372,0x752e6d617261702e,0x3331737225203631,0x7337325a5f5b202c\n"
".quad 0x456e6f4e65726f74,0x65746e497974706d,0x72614c736c617672,0x5f5366506a6a6567\n"
".quad 0x6666665f30537450,0x30536a5266747474,0x7261705f5f31535f,0x0a3b5d31315f6d61\n"
".quad 0x31203220636f6c2e,0x2e74730a31203430,0x6c72255b20363175,0x31737225202c5d35\n"
".quad 0x61702e646c0a3b33,0x203233662e6d6172,0x5f5b202c33356625,0x65726f747337325a\n"
".quad 0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650\n"
".quad 0x667474746666665f,0x5f31535f30536a52,0x375f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203233662e6d6172,0x5f5b202c38356625,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x385f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203730312032\n"
".quad 0x203233662e627573,0x356625202c366625,0x3b33356625202c38,0x203320636f6c2e0a\n"
".quad 0x62610a3520353933,0x6625203233662e73,0x3b366625202c3931,0x203320636f6c2e0a\n"
".quad 0x62610a3520353933,0x6625203233662e73,0x38356625202c3032,0x33662e7362610a3b\n"
".quad 0x202c313266252032,0x6c2e0a3b33356625,0x353334203320636f,0x662e78616d0a3520\n"
".quad 0x2c32326625203233,0x25202c3132662520,0x2e646c0a3b303266,0x33662e6d61726170\n"
".quad 0x202c303666252032,0x6f747337325a5f5b,0x706d456e6f4e6572,0x767265746e497974\n"
".quad 0x656772614c736c61,0x74505f5366506a6a,0x74746666665f3053,0x535f30536a526674\n"
".quad 0x6d617261705f5f31,0x6c2e0a3b5d32315f,0x383031203220636f,0x662e6c756d0a3120\n"
".quad 0x2c33326625203233,0x25202c3232662520,0x6f6c2e0a3b303666,0x2039303120322063\n"
".quad 0x36662e7476630a31,0x6625203233662e34,0x39316625202c3564,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x33326625202c3664,0x36662e766f6d0a3b,0x202c376466252034\n"
".quad 0x3434353638336430,0x4532443233393438,0x636f6c2e0a3b3237,0x3520343634203320\n"
".quad 0x3436662e78616d0a,0x25202c3864662520,0x646625202c376466,0x20636f6c2e0a3b36\n"
".quad 0x0a31203930312032,0x7574672e70746573,0x397025203436662e,0x202c35646625202c\n"
".quad 0x25400a3b38646625,0x4220617262203970,0x0a0a3b375f313142,0x6d617261702e646c\n"
".quad 0x356625203233662e,0x37325a5f5b202c32,0x6e6f4e65726f7473,0x746e497974706d45\n"
".quad 0x614c736c61767265,0x5366506a6a656772,0x66665f305374505f,0x536a526674747466\n"
".quad 0x61705f5f31535f30,0x0a3b5d375f6d6172,0x31203220636f6c2e,0x7465730a31203231\n"
".quad 0x3233662e746c2e70,0x25202c3031702520,0x306630202c323566,0x3b30303030303030\n"
".quad 0x33662e706c65730a,0x202c343266252032,0x3030303846426630,0x46336630202c3030\n"
".quad 0x202c303030303038,0x646c0a3b30317025,0x662e6d617261702e,0x2c37356625203233\n"
".quad 0x747337325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470,0x6772614c736c6176\n"
".quad 0x505f5366506a6a65,0x746666665f305374,0x5f30536a52667474,0x617261705f5f3153\n"
".quad 0x6c2e0a3b5d385f6d,0x323131203220636f,0x2e707465730a3120,0x25203233662e746c\n"
".quad 0x356625202c313170,0x3030306630202c37,0x730a3b3030303030,0x203233662e706c65\n"
".quad 0x6630202c35326625,0x3030303030384642,0x303846336630202c,0x7025202c30303030\n"
".quad 0x636f6c2e0a3b3131,0x3120323131203220,0x71652e707465730a,0x317025203233662e\n"
".quad 0x2c34326625202c32,0x660a3b3532662520,0x33662e6e722e616d,0x202c363266252032\n"
".quad 0x336630202c366625,0x2c30303030303046,0x610a3b3235662520,0x25203233662e6464\n"
".quad 0x356625202c373266,0x3b37356625202c32,0x3233662e6c756d0a,0x25202c3832662520\n"
".quad 0x336630202c373266,0x3b30303030303046,0x33662e706c65730a,0x202c393266252032\n"
".quad 0x6625202c36326625,0x32317025202c3832,0x3220636f6c2e0a3b,0x730a312035313120\n"
".quad 0x255b203233662e74,0x6625202c5d366c72,0x636f6c2e0a3b3932,0x3120363131203220\n"
".quad 0x203233662e74730a,0x202c5d376c72255b,0x6c2e0a3b39326625,0x313139203720636f\n"
".quad 0x0a3b7465720a3220,0x3a375f313142420a,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x325a5f5b202c3834,0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574\n"
".quad 0x66506a6a65677261,0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053\n"
".quad 0x3b5d375f6d617261,0x203220636f6c2e0a,0x74730a3120313231,0x72255b203233662e\n"
".quad 0x346625202c5d366c,0x61702e646c0a3b38,0x203233662e6d6172,0x5f5b202c36356625\n"
".quad 0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a656772614c73\n"
".quad 0x305374505f536650,0x667474746666665f,0x5f31535f30536a52,0x385f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203232312032,0x5b203233662e7473,0x25202c5d376c7225\n"
".quad 0x6f6c2e0a3b363566,0x2031313920372063,0x0a0a3b7465720a32,0x0a3a385f31314242\n"
".quad 0x6d617261702e646c,0x737225203631752e,0x37325a5f5b202c37,0x6e6f4e65726f7473\n"
".quad 0x746e497974706d45,0x614c736c61767265,0x5366506a6a656772,0x66665f305374505f\n"
".quad 0x536a526674747466,0x61705f5f31535f30,0x0a3b5d395f6d6172,0x31203220636f6c2e\n"
".quad 0x2e74730a31203330,0x6c72255b20363175,0x37737225202c5d34,0x7261702e646c0a3b\n"
".quad 0x25203631752e6d61,0x5f5b202c31317372,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x315f6d617261705f,0x636f6c2e0a3b5d30,0x3120343031203220\n"
".quad 0x203631752e74730a,0x202c5d356c72255b,0x6c0a3b3131737225,0x2e6d617261702e64\n"
".quad 0x3434662520323366,0x7337325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d\n"
".quad 0x72614c736c617672,0x5f5366506a6a6567,0x6666665f30537450,0x30536a5266747474\n"
".quad 0x7261705f5f31535f,0x6c0a3b5d365f6d61,0x2e6d617261702e64,0x3135662520323366\n"
".quad 0x7337325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x72614c736c617672\n"
".quad 0x5f5366506a6a6567,0x6666665f30537450,0x30536a5266747474,0x7261705f5f31535f\n"
".quad 0x2e0a3b5d375f6d61,0x3031203220636f6c,0x2e6275730a312037,0x2c37662520323366\n"
".quad 0x25202c3135662520,0x6f6c2e0a3b343466,0x2035393320332063,0x33662e7362610a35\n"
".quad 0x202c303366252032,0x6f6c2e0a3b376625,0x2035393320332063,0x33662e7362610a35\n"
".quad 0x202c313366252032,0x62610a3b31356625,0x6625203233662e73,0x34346625202c3233\n"
".quad 0x3320636f6c2e0a3b,0x6d0a352035333420,0x25203233662e7861,0x336625202c333366\n"
".quad 0x3b31336625202c32,0x617261702e646c0a,0x6625203233662e6d,0x325a5f5b202c3935\n"
".quad 0x6f4e65726f747337,0x6e497974706d456e,0x4c736c6176726574,0x66506a6a65677261\n"
".quad 0x665f305374505f53,0x6a52667474746666,0x705f5f31535f3053,0x5d32315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312038303120,0x25203233662e6c75,0x336625202c343366\n"
".quad 0x3b39356625202c33,0x203220636f6c2e0a,0x76630a3120393031,0x33662e3436662e74\n"
".quad 0x202c396466252032,0x76630a3b30336625,0x33662e3436662e74,0x2c30316466252032\n"
".quad 0x6d0a3b3433662520,0x25203436662e766f,0x6430202c31316466,0x3438343435363833\n"
".quad 0x3237453244323339,0x3320636f6c2e0a3b,0x6d0a352034363420,0x25203436662e7861\n"
".quad 0x6625202c32316466,0x646625202c313164,0x636f6c2e0a3b3031,0x3120393031203220\n"
".quad 0x74672e707465730a,0x7025203436662e75,0x39646625202c3331,0x3b3231646625202c\n"
".quad 0x622033317025400a,0x5f31314242206172,0x2e646c0a0a3b3031,0x33662e6d61726170\n"
".quad 0x202c333466252032,0x6f747337325a5f5b,0x706d456e6f4e6572,0x767265746e497974\n"
".quad 0x656772614c736c61,0x74505f5366506a6a,0x74746666665f3053,0x535f30536a526674\n"
".quad 0x6d617261705f5f31,0x6f6c2e0a3b5d365f,0x2032313120322063,0x6c2e707465730a31\n"
".quad 0x7025203233662e74,0x33346625202c3431,0x303030306630202c,0x65730a3b30303030\n"
".quad 0x25203233662e706c,0x426630202c353366,0x2c30303030303846,0x3030384633663020\n"
".quad 0x317025202c303030,0x61702e646c0a3b34,0x203233662e6d6172,0x5f5b202c30356625\n"
".quad 0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a656772614c73\n"
".quad 0x305374505f536650,0x667474746666665f,0x5f31535f30536a52,0x375f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203231312032,0x2e746c2e70746573,0x3531702520323366\n"
".quad 0x202c30356625202c,0x3030303030306630,0x706c65730a3b3030,0x336625203233662e\n"
".quad 0x3846426630202c36,0x30202c3030303030,0x3030303038463366,0x3b35317025202c30\n"
".quad 0x203220636f6c2e0a,0x65730a3120323131,0x33662e71652e7074,0x202c363170252032\n"
".quad 0x6625202c35336625,0x2e616d660a3b3633,0x25203233662e6e72,0x376625202c373366\n"
".quad 0x303046336630202c,0x6625202c30303030,0x2e6464610a3b3334,0x3833662520323366\n"
".quad 0x202c33346625202c,0x756d0a3b30356625,0x6625203233662e6c,0x38336625202c3933\n"
".quad 0x303046336630202c,0x65730a3b30303030,0x25203233662e706c,0x336625202c303466\n"
".quad 0x2c39336625202c37,0x2e0a3b3631702520,0x3131203220636f6c,0x662e74730a312035\n"
".quad 0x366c72255b203233,0x3b30346625202c5d,0x203220636f6c2e0a,0x74730a3120363131\n"
".quad 0x72255b203233662e,0x346625202c5d376c,0x752e6172620a3b30,0x5f3131424220696e\n"
".quad 0x3142420a0a3b3131,0x646c0a3a30315f31,0x662e6d617261702e,0x2c32346625203233\n"
".quad 0x747337325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470,0x6772614c736c6176\n"
".quad 0x505f5366506a6a65,0x746666665f305374,0x5f30536a52667474,0x617261705f5f3153\n"
".quad 0x6c2e0a3b5d365f6d,0x313231203220636f,0x33662e74730a3120,0x5d366c72255b2032\n"
".quad 0x0a3b32346625202c,0x6d617261702e646c,0x346625203233662e,0x37325a5f5b202c39\n"
".quad 0x6e6f4e65726f7473,0x746e497974706d45,0x614c736c61767265,0x5366506a6a656772\n"
".quad 0x66665f305374505f,0x536a526674747466,0x61705f5f31535f30,0x0a3b5d375f6d6172\n"
".quad 0x31203220636f6c2e,0x2e74730a31203232,0x6c72255b20323366,0x39346625202c5d37\n"
".quad 0x5f313142420a0a3b,0x2e766f6d0a3a3131,0x3332722520323375,0x2e646c0a3b31202c\n"
".quad 0x36752e6d61726170,0x2c33326c72252034,0x747337325a5f5b20,0x6d456e6f4e65726f\n"
".quad 0x7265746e49797470,0x6772614c736c6176,0x505f5366506a6a65,0x746666665f305374\n"
".quad 0x5f30536a52667474,0x617261705f5f3153,0x2e0a3b5d35315f6d,0x3838203720636f6c\n"
".quad 0x752e74730a312039,0x326c72255b203233,0x33327225202c5d33,0x3720636f6c2e0a3b\n"
".quad 0x6d0a312030393820,0x25203233752e766f,0x697425202c353272,0x6c756d0a3b782e64\n"
".quad 0x33752e656469772e,0x2c37316c72252032,0x32202c3532722520,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c30326c72,0x65726f747337325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a656772614c73,0x305374505f536650,0x667474746666665f\n"
".quad 0x5f31535f30536a52,0x315f6d617261705f,0x636f6c2e0a3b5d34,0x3120303938203720\n"
".quad 0x3436732e6464610a,0x202c38316c722520,0x25202c30326c7225,0x6f6d0a3b37316c72\n"
".quad 0x7225203631752e76,0x2e0a3b31202c3573,0x3938203720636f6c,0x752e74730a312030\n"
".quad 0x316c72255b203631,0x35737225202c5d38,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c39316c72,0x65726f747337325a,0x7974706d456e6f4e,0x6c61767265746e49\n"
".quad 0x6a6a656772614c73,0x305374505f536650,0x667474746666665f,0x5f31535f30536a52\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d33,0x3120313938203720,0x203233752e74730a\n"
".quad 0x2c5d39316c72255b,0x2e0a3b3332722520,0x3139203720636f6c,0x3b7465720a322031\n"
".quad 0x7369762e0a0a7d0a,0x75662e20656c6269,0x7333315a5f20636e,0x65746e4965726f74\n"
".quad 0x457474496c617672,0x505f305366506a76,0x66665f32535f3054,0x0a28665f33535f54\n"
".quad 0x2e206d617261702e,0x33315a5f20323362,0x746e4965726f7473,0x7474496c61767265\n"
".quad 0x5f305366506a7645,0x665f32535f305450,0x5f665f33535f5466,0x2c305f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x6e4965726f747333,0x74496c6176726574\n"
".quad 0x305366506a764574,0x5f32535f3054505f,0x665f33535f546666,0x315f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x4965726f74733331,0x496c61767265746e\n"
".quad 0x5366506a76457474,0x32535f3054505f30,0x5f33535f5466665f,0x5f6d617261705f66\n"
".quad 0x617261702e0a2c32,0x5f203436622e206d,0x65726f747333315a,0x6c61767265746e49\n"
".quad 0x66506a7645747449,0x535f3054505f3053,0x33535f5466665f32,0x6d617261705f665f\n"
".quad 0x7261702e0a2c335f,0x203436622e206d61,0x726f747333315a5f,0x61767265746e4965\n"
".quad 0x506a76457474496c,0x5f3054505f305366,0x535f5466665f3253,0x617261705f665f33\n"
".quad 0x61702e0a2c345f6d,0x3233622e206d6172,0x6f747333315a5f20,0x767265746e496572\n"
".quad 0x6a76457474496c61,0x3054505f30536650,0x5f5466665f32535f,0x7261705f665f3353\n"
".quad 0x702e0a2c355f6d61,0x33622e206d617261,0x747333315a5f2032,0x7265746e4965726f\n"
".quad 0x76457474496c6176,0x54505f305366506a,0x5466665f32535f30,0x61705f665f33535f\n"
".quad 0x2e0a2c365f6d6172,0x622e206d61726170,0x7333315a5f203233,0x65746e4965726f74\n"
".quad 0x457474496c617672,0x505f305366506a76,0x66665f32535f3054,0x705f665f33535f54\n"
".quad 0x0a2c375f6d617261,0x2e206d617261702e,0x33315a5f20323362,0x746e4965726f7473\n"
".quad 0x7474496c61767265,0x5f305366506a7645,0x665f32535f305450,0x5f665f33535f5466\n"
".quad 0x2c385f6d61726170,0x206d617261702e0a,0x315a5f203233622e,0x6e4965726f747333\n"
".quad 0x74496c6176726574,0x305366506a764574,0x5f32535f3054505f,0x665f33535f546666\n"
".quad 0x395f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067,0x2e0a3b3e30323c66\n"
".quad 0x3436662e20676572,0x3b3e353c64662520,0x732e206765722e0a,0x333c737225203631\n"
".quad 0x206765722e0a3b3e,0x702520646572702e,0x65722e0a3b3e353c,0x25203233732e2067\n"
".quad 0x722e0a3b3e373c72,0x203436732e206765,0x3b3e32313c6c7225,0x61702e646c0a0a0a\n"
".quad 0x203436752e6d6172,0x5f5b202c336c7225,0x65726f747333315a,0x6c61767265746e49\n"
".quad 0x66506a7645747449,0x535f3054505f3053,0x33535f5466665f32,0x6d617261705f665f\n"
".quad 0x2e646c0a3b5d315f,0x36752e6d61726170,0x202c346c72252034,0x6f747333315a5f5b\n"
".quad 0x767265746e496572,0x6a76457474496c61,0x3054505f30536650,0x5f5466665f32535f\n"
".quad 0x7261705f665f3353,0x6c0a3b5d325f6d61,0x2e6d617261702e64,0x356c722520343675\n"
".quad 0x7333315a5f5b202c,0x65746e4965726f74,0x457474496c617672,0x505f305366506a76\n"
".quad 0x66665f32535f3054,0x705f665f33535f54,0x3b5d335f6d617261,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x315a5f5b202c366c,0x6e4965726f747333,0x74496c6176726574\n"
".quad 0x305366506a764574,0x5f32535f3054505f,0x665f33535f546666,0x345f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203233662e6d6172,0x5a5f5b202c316625,0x4965726f74733331\n"
".quad 0x496c61767265746e,0x5366506a76457474,0x32535f3054505f30,0x5f33535f5466665f\n"
".quad 0x5f6d617261705f66,0x702e646c0a3b5d35,0x3233662e6d617261,0x5f5b202c32662520\n"
".quad 0x65726f747333315a,0x6c61767265746e49,0x66506a7645747449,0x535f3054505f3053\n"
".quad 0x33535f5466665f32,0x6d617261705f665f,0x2e646c0a3b5d365f,0x31752e6d61726170\n"
".quad 0x202c317372252036,0x6f747333315a5f5b,0x767265746e496572,0x6a76457474496c61\n"
".quad 0x3054505f30536650,0x5f5466665f32535f,0x7261705f665f3353,0x6c0a3b5d375f6d61\n"
".quad 0x2e6d617261702e64,0x3273722520363175,0x7333315a5f5b202c,0x65746e4965726f74\n"
".quad 0x457474496c617672,0x505f305366506a76,0x66665f32535f3054,0x705f665f33535f54\n"
".quad 0x3b5d385f6d617261,0x617261702e646c0a,0x6625203233662e6d,0x33315a5f5b202c34\n"
".quad 0x746e4965726f7473,0x7474496c61767265,0x5f305366506a7645,0x665f32535f305450\n"
".quad 0x5f665f33535f5466,0x5d395f6d61726170,0x3220636f6c2e0a3b,0x6c0a312033303120\n"
".quad 0x2e6d617261702e64,0x376c722520323375,0x7333315a5f5b202c,0x65746e4965726f74\n"
".quad 0x457474496c617672,0x505f305366506a76,0x66665f32535f3054,0x705f665f33535f54\n"
".quad 0x3b5d305f6d617261,0x3436622e6c68730a,0x25202c386c722520,0x0a3b31202c376c72\n"
".quad 0x203436732e646461,0x7225202c396c7225,0x386c7225202c356c,0x3631752e74730a3b\n"
".quad 0x2c5d396c72255b20,0x2e0a3b3173722520,0x3031203220636f6c,0x2e6464610a312034\n"
".quad 0x316c722520343673,0x2c366c7225202c30,0x730a3b386c722520,0x255b203631752e74\n"
".quad 0x25202c5d30316c72,0x6f6c2e0a3b327372,0x2037303120322063,0x33662e6275730a31\n"
".quad 0x25202c3366252032,0x3b316625202c3266,0x203320636f6c2e0a,0x62610a3520353933\n"
".quad 0x6625203233662e73,0x0a3b336625202c35,0x33203320636f6c2e,0x7362610a35203539\n"
".quad 0x366625203233662e,0x610a3b326625202c,0x25203233662e7362,0x3b316625202c3766\n"
".quad 0x203320636f6c2e0a,0x616d0a3520353334,0x6625203233662e78,0x202c376625202c38\n"
".quad 0x6f6c2e0a3b366625,0x2038303120322063,0x33662e6c756d0a31,0x25202c3966252032\n"
".quad 0x3b346625202c3866,0x203220636f6c2e0a,0x76630a3120393031,0x33662e3436662e74\n"
".quad 0x202c316466252032,0x7476630a3b356625,0x3233662e3436662e,0x25202c3264662520\n"
".quad 0x2e766f6d0a3b3966,0x3364662520343666,0x353638336430202c,0x4432333934383434\n"
".quad 0x6c2e0a3b32374532,0x343634203320636f,0x662e78616d0a3520,0x2c34646625203436\n"
".quad 0x25202c3364662520,0x6f6c2e0a3b326466,0x2039303120322063,0x672e707465730a31\n"
".quad 0x25203436662e7574,0x31646625202c3170,0x0a3b34646625202c,0x31203220636f6c2e\n"
".quad 0x6c68730a31203132,0x6c7225203436622e,0x376c7225202c3131,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x2c336c7225202c31,0x0a3b31316c722520,0x31203220636f6c2e\n"
".quad 0x6464610a31203232,0x6c7225203436732e,0x2c346c7225202c32,0x0a3b31316c722520\n"
".quad 0x31203220636f6c2e,0x7025400a31203930,0x4242206172622031,0x6c0a0a3b325f3231\n"
".quad 0x2e6d617261702e64,0x3731662520323366,0x7333315a5f5b202c,0x65746e4965726f74\n"
".quad 0x457474496c617672,0x505f305366506a76,0x66665f32535f3054,0x705f665f33535f54\n"
".quad 0x3b5d355f6d617261,0x203220636f6c2e0a,0x65730a3120323131,0x33662e746c2e7074\n"
".quad 0x25202c3270252032,0x306630202c373166,0x3b30303030303030,0x33662e706c65730a\n"
".quad 0x202c303166252032,0x3030303846426630,0x46336630202c3030,0x202c303030303038\n"
".quad 0x2e646c0a3b327025,0x33662e6d61726170,0x202c393166252032,0x6f747333315a5f5b\n"
".quad 0x767265746e496572,0x6a76457474496c61,0x3054505f30536650,0x5f5466665f32535f\n"
".quad 0x7261705f665f3353,0x2e0a3b5d365f6d61,0x3131203220636f6c,0x707465730a312032\n"
".quad 0x203233662e746c2e,0x316625202c337025,0x3030306630202c39,0x730a3b3030303030\n"
".quad 0x203233662e706c65,0x6630202c31316625,0x3030303030384642,0x303846336630202c\n"
".quad 0x7025202c30303030,0x20636f6c2e0a3b33,0x0a31203231312032,0x2e71652e70746573\n"
".quad 0x2c34702520323366,0x25202c3031662520,0x616d660a3b313166,0x203233662e6e722e\n"
".quad 0x6625202c32316625,0x3046336630202c33,0x25202c3030303030,0x6464610a3b373166\n"
".quad 0x316625203233662e,0x2c37316625202c33,0x6d0a3b3931662520,0x25203233662e6c75\n"
".quad 0x316625202c343166,0x3046336630202c33,0x730a3b3030303030,0x203233662e706c65\n"
".quad 0x6625202c35316625,0x34316625202c3231,0x2e0a3b347025202c,0x3131203220636f6c\n"
".quad 0x662e74730a312035,0x316c72255b203233,0x3b35316625202c5d,0x203220636f6c2e0a\n"
".quad 0x74730a3120363131,0x72255b203233662e,0x316625202c5d326c,0x20636f6c2e0a3b35\n"
".quad 0x0a32203432312032,0x42420a0a3b746572,0x646c0a3a325f3231,0x662e6d617261702e\n"
".quad 0x2c36316625203233,0x747333315a5f5b20,0x7265746e4965726f,0x76457474496c6176\n"
".quad 0x54505f305366506a,0x5466665f32535f30,0x61705f665f33535f,0x0a3b5d355f6d6172\n"
".quad 0x31203220636f6c2e,0x2e74730a31203132,0x6c72255b20323366,0x36316625202c5d31\n"
".quad 0x7261702e646c0a3b,0x25203233662e6d61,0x5a5f5b202c383166,0x4965726f74733331\n"
".quad 0x496c61767265746e,0x5366506a76457474,0x32535f3054505f30,0x5f33535f5466665f\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d36,0x3120323231203220,0x203233662e74730a\n"
".quad 0x202c5d326c72255b,0x6c2e0a3b38316625,0x343231203220636f,0x0a3b7465720a3220\n"
".quad 0x697369762e0a0a7d,0x6e75662e20656c62,0x757333325a5f2063,0x4165646976696462\n"
".quad 0x746e496576697463,0x456a496c61767265,0x505f305366506a76,0x66526a5f32535f54\n"
".quad 0x5f34536a525f3353,0x0a285f34535f3353,0x2e206d617261702e,0x33325a5f20323362\n"
".quad 0x6469766964627573,0x4965766974634165,0x496c61767265746e,0x305366506a76456a\n"
".quad 0x6a5f32535f54505f,0x536a525f33536652,0x5f34535f33535f34,0x305f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x7669646275733332,0x7669746341656469\n"
".quad 0x61767265746e4965,0x66506a76456a496c,0x32535f54505f3053,0x525f335366526a5f\n"
".quad 0x535f33535f34536a,0x6d617261705f5f34,0x7261702e0a2c315f,0x203436622e206d61\n"
".quad 0x6462757333325a5f,0x7463416564697669,0x7265746e49657669,0x6a76456a496c6176\n"
".quad 0x5f54505f30536650,0x335366526a5f3253,0x33535f34536a525f,0x7261705f5f34535f\n"
".quad 0x702e0a2c325f6d61,0x36622e206d617261,0x757333325a5f2034,0x4165646976696462\n"
".quad 0x746e496576697463,0x456a496c61767265,0x505f305366506a76,0x66526a5f32535f54\n"
".quad 0x5f34536a525f3353,0x705f5f34535f3353,0x0a2c335f6d617261,0x2e206d617261702e\n"
".quad 0x33325a5f20343662,0x6469766964627573,0x4965766974634165,0x496c61767265746e\n"
".quad 0x305366506a76456a,0x6a5f32535f54505f,0x536a525f33536652,0x5f34535f33535f34\n"
".quad 0x345f6d617261705f,0x6d617261702e0a2c,0x5a5f203233622e20,0x7669646275733332\n"
".quad 0x7669746341656469,0x61767265746e4965,0x66506a76456a496c,0x32535f54505f3053\n"
".quad 0x525f335366526a5f,0x535f33535f34536a,0x6d617261705f5f34,0x7261702e0a2c355f\n"
".quad 0x203436622e206d61,0x6462757333325a5f,0x7463416564697669,0x7265746e49657669\n"
".quad 0x6a76456a496c6176,0x5f54505f30536650,0x335366526a5f3253,0x33535f34536a525f\n"
".quad 0x7261705f5f34535f,0x702e0a2c365f6d61,0x36622e206d617261,0x757333325a5f2034\n"
".quad 0x4165646976696462,0x746e496576697463,0x456a496c61767265,0x505f305366506a76\n"
".quad 0x66526a5f32535f54,0x5f34536a525f3353,0x705f5f34535f3353,0x0a2c375f6d617261\n"
".quad 0x2e206d617261702e,0x33325a5f20343662,0x6469766964627573,0x4965766974634165\n"
".quad 0x496c61767265746e,0x305366506a76456a,0x6a5f32535f54505f,0x536a525f33536652\n"
".quad 0x5f34535f33535f34,0x385f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x7669646275733332,0x7669746341656469,0x61767265746e4965,0x66506a76456a496c\n"
".quad 0x32535f54505f3053,0x525f335366526a5f,0x535f33535f34536a,0x6d617261705f5f34\n"
".quad 0x7261702e0a2c395f,0x203436622e206d61,0x6462757333325a5f,0x7463416564697669\n"
".quad 0x7265746e49657669,0x6a76456a496c6176,0x5f54505f30536650,0x335366526a5f3253\n"
".quad 0x33535f34536a525f,0x7261705f5f34535f,0x2e0a2c30315f6d61,0x622e206d61726170\n"
".quad 0x7333325a5f203436,0x6564697669646275,0x6e49657669746341,0x6a496c6176726574\n"
".quad 0x5f305366506a7645,0x526a5f32535f5450,0x34536a525f335366,0x5f5f34535f33535f\n"
".quad 0x31315f6d61726170,0x65722e0a7b0a290a,0x25203233662e2067,0x2e0a3b3e32313c66\n"
".quad 0x6572702e20676572,0x3b3e373c70252064,0x732e206765722e0a,0x34323c7225203233\n"
".quad 0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e38323c,0x6d617261702e646c\n"
".quad 0x317225203233752e,0x7333325a5f5b202c,0x6564697669646275,0x6e49657669746341\n"
".quad 0x6a496c6176726574,0x5f305366506a7645,0x526a5f32535f5450,0x34536a525f335366\n"
".quad 0x5f5f34535f33535f,0x5d305f6d61726170,0x7261702e646c0a3b,0x25203233752e6d61\n"
".quad 0x325a5f5b202c3372,0x6976696462757333,0x6576697463416564,0x6c61767265746e49\n"
".quad 0x5366506a76456a49,0x5f32535f54505f30,0x6a525f335366526a,0x34535f33535f3453\n"
".quad 0x5f6d617261705f5f,0x636f6c2e0a3b5d35,0x3120373635203220,0x65672e707465730a\n"
".quad 0x317025203233752e,0x25202c317225202c,0x317025400a3b3372,0x3142422061726220\n"
".quad 0x646c0a0a3b335f33,0x752e6d617261702e,0x2c33327225203233,0x757333325a5f5b20\n"
".quad 0x4165646976696462,0x746e496576697463,0x456a496c61767265,0x505f305366506a76\n"
".quad 0x66526a5f32535f54,0x5f34536a525f3353,0x705f5f34535f3353,0x3b5d305f6d617261\n"
".quad 0x203220636f6c2e0a,0x756d0a3120393635,0x752e656469772e6c,0x31316c7225203233\n"
".quad 0x202c33327225202c,0x61702e646c0a3b34,0x203436752e6d6172,0x5b202c36316c7225\n"
".quad 0x6462757333325a5f,0x7463416564697669,0x7265746e49657669,0x6a76456a496c6176\n"
".quad 0x5f54505f30536650,0x335366526a5f3253,0x33535f34536a525f,0x7261705f5f34535f\n"
".quad 0x2e0a3b5d315f6d61,0x3635203220636f6c,0x2e6464610a312039,0x316c722520343673\n"
".quad 0x36316c7225202c32,0x3b31316c7225202c,0x203233662e646c0a,0x72255b202c336625\n"
".quad 0x646c0a3b5d32316c,0x752e6d617261702e,0x30326c7225203436,0x7333325a5f5b202c\n"
".quad 0x6564697669646275,0x6e49657669746341,0x6a496c6176726574,0x5f305366506a7645\n"
".quad 0x526a5f32535f5450,0x34536a525f335366,0x5f5f34535f33535f,0x5d365f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x730a312039363520,0x255b203233662e74,0x25202c5d30326c72\n"
".quad 0x702e646c0a3b3366,0x3436752e6d617261,0x202c37316c722520,0x62757333325a5f5b\n"
".quad 0x6341656469766964,0x65746e4965766974,0x76456a496c617672,0x54505f305366506a\n"
".quad 0x5366526a5f32535f,0x535f34536a525f33,0x61705f5f34535f33,0x0a3b5d325f6d6172\n"
".quad 0x35203220636f6c2e,0x6464610a31203037,0x6c7225203436732e,0x316c7225202c3331\n"
".quad 0x31316c7225202c37,0x3233662e646c0a3b,0x255b202c34662520,0x6c0a3b5d33316c72\n"
".quad 0x2e6d617261702e64,0x326c722520343675,0x33325a5f5b202c31,0x6469766964627573\n"
".quad 0x4965766974634165,0x496c61767265746e,0x305366506a76456a,0x6a5f32535f54505f\n"
".quad 0x536a525f33536652,0x5f34535f33535f34,0x375f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203037352032,0x5b203233662e7473,0x202c5d31326c7225,0x2e646c0a3b346625\n"
".quad 0x36752e6d61726170,0x2c38316c72252034,0x757333325a5f5b20,0x4165646976696462\n"
".quad 0x746e496576697463,0x456a496c61767265,0x505f305366506a76,0x66526a5f32535f54\n"
".quad 0x5f34536a525f3353,0x705f5f34535f3353,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x64610a3120313735,0x7225203436732e64,0x6c7225202c34316c,0x316c7225202c3831\n"
".quad 0x33752e646c0a3b31,0x5b202c3872252032,0x0a3b5d34316c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x325a5f5b202c3232,0x6976696462757333,0x6576697463416564\n"
".quad 0x6c61767265746e49,0x5366506a76456a49,0x5f32535f54505f30,0x6a525f335366526a\n"
".quad 0x34535f33535f3453,0x5f6d617261705f5f,0x636f6c2e0a3b5d38,0x3120313735203220\n"
".quad 0x203233752e74730a,0x2c5d32326c72255b,0x646c0a3b38722520,0x752e6d617261702e\n"
".quad 0x39316c7225203436,0x7333325a5f5b202c,0x6564697669646275,0x6e49657669746341\n"
".quad 0x6a496c6176726574,0x5f305366506a7645,0x526a5f32535f5450,0x34536a525f335366\n"
".quad 0x5f5f34535f33535f,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x610a312032373520\n"
".quad 0x25203436732e6464,0x7225202c35316c72,0x6c7225202c39316c,0x752e646c0a3b3131\n"
".quad 0x202c327225203233,0x3b5d35316c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c34326c,0x7669646275733332,0x7669746341656469,0x61767265746e4965\n"
".quad 0x66506a76456a496c,0x32535f54505f3053,0x525f335366526a5f,0x535f33535f34536a\n"
".quad 0x6d617261705f5f34,0x6f6c2e0a3b5d395f,0x2032373520322063,0x3233752e74730a31\n"
".quad 0x5d34326c72255b20,0x2e0a3b327225202c,0x3735203220636f6c,0x662e646c0a312035\n"
".quad 0x202c316625203233,0x3b5d31326c72255b,0x203233662e646c0a,0x72255b202c326625\n"
".quad 0x65730a3b5d30326c,0x662e75656e2e7074,0x202c327025203233,0x316625202c326625\n"
".quad 0x6220327025400a3b,0x5f33314242206172,0x702e646c0a0a3b35,0x3436752e6d617261\n"
".quad 0x202c33326c722520,0x62757333325a5f5b,0x6341656469766964,0x65746e4965766974\n"
".quad 0x76456a496c617672,0x54505f305366506a,0x5366526a5f32535f,0x535f34536a525f33\n"
".quad 0x61705f5f34535f33,0x0a3b5d385f6d6172,0x35203220636f6c2e,0x2e646c0a31203038\n"
".quad 0x3531722520323375,0x33326c72255b202c,0x732e6275730a3b5d,0x2c37317225203233\n"
".quad 0x7225202c32722520,0x707465730a3b3531,0x203233752e74672e,0x317225202c337025\n"
".quad 0x25400a3b31202c37,0x4220617262203370,0x0a0a3b345f333142,0x0a3a335f33314242\n"
".quad 0x35203220636f6c2e,0x7465720a32203738,0x5f333142420a0a3b,0x752e766f6d0a3a34\n"
".quad 0x2c38317225203233,0x702e646c0a3b3020,0x3436752e6d617261,0x202c36326c722520\n"
".quad 0x62757333325a5f5b,0x6341656469766964,0x65746e4965766974,0x76456a496c617672\n"
".quad 0x54505f305366506a,0x5366526a5f32535f,0x535f34536a525f33,0x61705f5f34535f33\n"
".quad 0x3b5d31315f6d6172,0x203220636f6c2e0a,0x74730a3120333835,0x72255b203233752e\n"
".quad 0x7225202c5d36326c,0x636f6c2e0a3b3831,0x3220373835203220,0x420a0a3b7465720a\n"
".quad 0x2e0a3a355f333142,0x3735203220636f6c,0x707465730a312037,0x203233662e746c2e\n"
".quad 0x326625202c347025,0x303030306630202c,0x65730a3b30303030,0x25203233662e706c\n"
".quad 0x46426630202c3566,0x202c303030303038,0x3030303846336630,0x3b347025202c3030\n"
".quad 0x203220636f6c2e0a,0x65730a3120373735,0x33662e746c2e7074,0x25202c3570252032\n"
".quad 0x30306630202c3166,0x0a3b303030303030,0x3233662e706c6573,0x6630202c36662520\n"
".quad 0x3030303030384642,0x303846336630202c,0x7025202c30303030,0x20636f6c2e0a3b35\n"
".quad 0x0a31203737352032,0x2e71652e70746573,0x2c36702520323366,0x6625202c35662520\n"
".quad 0x662e6275730a3b36,0x202c376625203233,0x326625202c316625,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x30202c376625202c,0x3030303030463366,0x0a3b326625202c30\n"
".quad 0x203233662e646461,0x326625202c396625,0x6d0a3b316625202c,0x25203233662e6c75\n"
".quad 0x396625202c303166,0x303046336630202c,0x65730a3b30303030,0x25203233662e706c\n"
".quad 0x386625202c313166,0x202c30316625202c,0x2e646c0a3b367025,0x36752e6d61726170\n"
".quad 0x2c35326c72252034,0x757333325a5f5b20,0x4165646976696462,0x746e496576697463\n"
".quad 0x456a496c61767265,0x505f305366506a76,0x66526a5f32535f54,0x5f34536a525f3353\n"
".quad 0x705f5f34535f3353,0x5d30315f6d617261,0x3220636f6c2e0a3b,0x730a312037373520\n"
".quad 0x255b203233662e74,0x25202c5d35326c72,0x766f6d0a3b313166,0x327225203233752e\n"
".quad 0x646c0a3b30202c31,0x752e6d617261702e,0x37326c7225203436,0x7333325a5f5b202c\n"
".quad 0x6564697669646275,0x6e49657669746341,0x6a496c6176726574,0x5f305366506a7645\n"
".quad 0x526a5f32535f5450,0x34536a525f335366,0x5f5f34535f33535f,0x31315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203837352032,0x5b203233752e7473,0x202c5d37326c7225\n"
".quad 0x6c2e0a3b31327225,0x373835203220636f,0x0a3b7465720a3220,0x697369762e0a0a7d\n"
".quad 0x6e75662e20656c62,0x747332325a5f2063,0x6d456e6f4e65726f,0x7265746e49797470\n"
".quad 0x456a6a49736c6176,0x5f305366506a6a76,0x665f32535f305450,0x535f33535f546666\n"
".quad 0x5f32536a52665f33,0x61702e0a285f3453,0x3233622e206d6172,0x6f747332325a5f20\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a\n"
".quad 0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34\n"
".quad 0x7261702e0a2c305f,0x203233622e206d61,0x726f747332325a5f,0x74706d456e6f4e65\n"
".quad 0x61767265746e4979,0x6a76456a6a49736c,0x54505f305366506a,0x6666665f32535f30\n"
".quad 0x5f33535f33535f54,0x34535f32536a5266,0x5f6d617261705f5f,0x617261702e0a2c31\n"
".quad 0x5f203436622e206d,0x65726f747332325a,0x7974706d456e6f4e,0x6c61767265746e49\n"
".quad 0x6a6a76456a6a4973,0x3054505f30536650,0x546666665f32535f,0x665f33535f33535f\n"
".quad 0x5f34535f32536a52,0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x4e65726f74733232,0x497974706d456e6f,0x736c61767265746e,0x506a6a76456a6a49\n"
".quad 0x5f3054505f305366,0x5f546666665f3253,0x52665f33535f3353,0x5f5f34535f32536a\n"
".quad 0x2c335f6d61726170,0x206d617261702e0a,0x325a5f203436622e,0x6f4e65726f747332\n"
".quad 0x6e497974706d456e,0x49736c6176726574,0x66506a6a76456a6a,0x535f3054505f3053\n"
".quad 0x535f546666665f32,0x6a52665f33535f33,0x705f5f34535f3253,0x0a2c345f6d617261\n"
".quad 0x2e206d617261702e,0x32325a5f20343662,0x6e6f4e65726f7473,0x746e497974706d45\n"
".quad 0x6a49736c61767265,0x5366506a6a76456a,0x32535f3054505f30,0x33535f546666665f\n"
".quad 0x536a52665f33535f,0x61705f5f34535f32,0x2e0a2c355f6d6172,0x622e206d61726170\n"
".quad 0x7332325a5f203233,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x702e0a2c365f6d61,0x33622e206d617261,0x747332325a5f2032\n"
".quad 0x6d456e6f4e65726f,0x7265746e49797470,0x456a6a49736c6176,0x5f305366506a6a76\n"
".quad 0x665f32535f305450,0x535f33535f546666,0x5f32536a52665f33,0x617261705f5f3453\n"
".quad 0x61702e0a2c375f6d,0x3233622e206d6172,0x6f747332325a5f20,0x706d456e6f4e6572\n"
".quad 0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a,0x66665f32535f3054\n"
".quad 0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34,0x7261702e0a2c385f\n"
".quad 0x203233622e206d61,0x726f747332325a5f,0x74706d456e6f4e65,0x61767265746e4979\n"
".quad 0x6a76456a6a49736c,0x54505f305366506a,0x6666665f32535f30,0x5f33535f33535f54\n"
".quad 0x34535f32536a5266,0x5f6d617261705f5f,0x617261702e0a2c39,0x5f203233622e206d\n"
".quad 0x65726f747332325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a76456a6a4973\n"
".quad 0x3054505f30536650,0x546666665f32535f,0x665f33535f33535f,0x5f34535f32536a52\n"
".quad 0x315f6d617261705f,0x617261702e0a2c30,0x5f203233622e206d,0x65726f747332325a\n"
".quad 0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a76456a6a4973,0x3054505f30536650\n"
".quad 0x546666665f32535f,0x665f33535f33535f,0x5f34535f32536a52,0x315f6d617261705f\n"
".quad 0x617261702e0a2c31,0x5f203233622e206d,0x65726f747332325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a76456a6a4973,0x3054505f30536650,0x546666665f32535f\n"
".quad 0x665f33535f33535f,0x5f34535f32536a52,0x315f6d617261705f,0x617261702e0a2c32\n"
".quad 0x5f203436622e206d,0x65726f747332325a,0x7974706d456e6f4e,0x6c61767265746e49\n"
".quad 0x6a6a76456a6a4973,0x3054505f30536650,0x546666665f32535f,0x665f33535f33535f\n"
".quad 0x5f34535f32536a52,0x315f6d617261705f,0x617261702e0a2c33,0x5f203436622e206d\n"
".quad 0x65726f747332325a,0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a76456a6a4973\n"
".quad 0x3054505f30536650,0x546666665f32535f,0x665f33535f33535f,0x5f34535f32536a52\n"
".quad 0x315f6d617261705f,0x617261702e0a2c34,0x5f203436622e206d,0x65726f747332325a\n"
".quad 0x7974706d456e6f4e,0x6c61767265746e49,0x6a6a76456a6a4973,0x3054505f30536650\n"
".quad 0x546666665f32535f,0x665f33535f33535f,0x5f34535f32536a52,0x315f6d617261705f\n"
".quad 0x722e0a7b0a290a35,0x203233662e206765,0x0a3b3e32363c6625,0x36662e206765722e\n"
".quad 0x33313c6466252034,0x206765722e0a3b3e,0x702520646572702e,0x722e0a3b3e37313c\n"
".quad 0x203233732e206765,0x0a3b3e39333c7225,0x36732e206765722e,0x33323c6c72252034\n"
".quad 0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x202c386c72252034,0x6f747332325a5f5b\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a\n"
".quad 0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34\n"
".quad 0x2e646c0a3b5d325f,0x36752e6d61726170,0x202c396c72252034,0x6f747332325a5f5b\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a\n"
".quad 0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34\n"
".quad 0x2e646c0a3b5d335f,0x36752e6d61726170,0x2c30316c72252034,0x747332325a5f5b20\n"
".quad 0x6d456e6f4e65726f,0x7265746e49797470,0x456a6a49736c6176,0x5f305366506a6a76\n"
".quad 0x665f32535f305450,0x535f33535f546666,0x5f32536a52665f33,0x617261705f5f3453\n"
".quad 0x646c0a3b5d345f6d,0x752e6d617261702e,0x31316c7225203436,0x7332325a5f5b202c\n"
".quad 0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672,0x305366506a6a7645\n"
".quad 0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353,0x7261705f5f34535f\n"
".quad 0x6c0a3b5d355f6d61,0x2e6d617261702e64,0x2c31722520323375,0x747332325a5f5b20\n"
".quad 0x6d456e6f4e65726f,0x7265746e49797470,0x456a6a49736c6176,0x5f305366506a6a76\n"
".quad 0x665f32535f305450,0x535f33535f546666,0x5f32536a52665f33,0x617261705f5f3453\n"
".quad 0x646c0a3b5d395f6d,0x752e6d617261702e,0x202c327225203233,0x6f747332325a5f5b\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a\n"
".quad 0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34\n"
".quad 0x646c0a3b5d30315f,0x752e6d617261702e,0x202c337225203233,0x6f747332325a5f5b\n"
".quad 0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a\n"
".quad 0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34\n"
".quad 0x6c2e0a3b5d31315f,0x313932203220636f,0x2e707465730a3120,0x25203233732e656e\n"
".quad 0x2c327225202c3170,0x65730a3b33722520,0x33732e656e2e7074,0x25202c3270252032\n"
".quad 0x3b327225202c3172,0x6572702e646e610a,0x25202c3370252064,0x3b327025202c3170\n"
".quad 0x203220636f6c2e0a,0x646c0a3120333031,0x752e6d617261702e,0x32316c7225203233\n"
".quad 0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x730a3b5d305f6d61,0x25203436622e6c68,0x7225202c33316c72\n"
".quad 0x0a3b32202c32316c,0x203436732e646461,0x7225202c346c7225,0x6c7225202c30316c\n"
".quad 0x636f6c2e0a3b3331,0x3120343031203220,0x3436732e6464610a,0x25202c356c722520\n"
".quad 0x7225202c31316c72,0x6f6c2e0a3b33316c,0x2031323120322063,0x36732e6464610a31\n"
".quad 0x202c366c72252034,0x7225202c386c7225,0x6f6c2e0a3b33316c,0x2032323120322063\n"
".quad 0x36732e6464610a31,0x202c376c72252034,0x7225202c396c7225,0x6f6c2e0a3b33316c\n"
".quad 0x2031393220322063,0x6220337025400a31,0x5f34314242206172,0x2e766f6d0a0a3b38\n"
".quad 0x2c34722520323375,0x702e646c0a3b3020,0x3436752e6d617261,0x202c31326c722520\n"
".quad 0x6f747332325a5f5b,0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61\n"
".quad 0x505f305366506a6a,0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f\n"
".quad 0x6d617261705f5f34,0x6c2e0a3b5d35315f,0x383033203220636f,0x33752e74730a3120\n"
".quad 0x31326c72255b2032,0x0a3b347225202c5d,0x33203220636f6c2e,0x766f6d0a31203930\n"
".quad 0x367225203233752e,0x782e64697425202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x7225202c34316c72,0x646c0a3b34202c36,0x752e6d617261702e,0x30326c7225203436\n"
".quad 0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x0a3b5d34315f6d61,0x33203220636f6c2e,0x6464610a31203930\n"
".quad 0x6c7225203436732e,0x326c7225202c3531,0x34316c7225202c30,0x3233752e74730a3b\n"
".quad 0x5d35316c72255b20,0x6c0a3b347225202c,0x2e6d617261702e64,0x3333722520323375\n"
".quad 0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x6c0a3b5d395f6d61,0x2e6d617261702e64,0x3733722520323375\n"
".quad 0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x0a3b5d30315f6d61,0x33203220636f6c2e,0x7465730a31203231\n"
".quad 0x3233732e71652e70,0x7225202c34702520,0x37337225202c3333,0x6220347025400a3b\n"
".quad 0x5f34314242206172,0x702e646c0a0a3b35,0x3233752e6d617261,0x5b202c3133722520\n"
".quad 0x726f747332325a5f,0x74706d456e6f4e65,0x61767265746e4979,0x6a76456a6a49736c\n"
".quad 0x54505f305366506a,0x6666665f32535f30,0x5f33535f33535f54,0x34535f32536a5266\n"
".quad 0x5f6d617261705f5f,0x636f6c2e0a3b5d39,0x3120333031203220,0x203233752e74730a\n"
".quad 0x202c5d346c72255b,0x646c0a3b31337225,0x752e6d617261702e,0x2c34337225203233\n"
".quad 0x747332325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470,0x456a6a49736c6176\n"
".quad 0x5f305366506a6a76,0x665f32535f305450,0x535f33535f546666,0x5f32536a52665f33\n"
".quad 0x617261705f5f3453,0x2e0a3b5d30315f6d,0x3031203220636f6c,0x752e74730a312034\n"
".quad 0x356c72255b203233,0x3b34337225202c5d,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x325a5f5b202c3634,0x6f4e65726f747332,0x6e497974706d456e,0x49736c6176726574\n"
".quad 0x66506a6a76456a6a,0x535f3054505f3053,0x535f546666665f32,0x6a52665f33535f33\n"
".quad 0x705f5f34535f3253,0x3b5d365f6d617261,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x325a5f5b202c3535,0x6f4e65726f747332,0x6e497974706d456e,0x49736c6176726574\n"
".quad 0x66506a6a76456a6a,0x535f3054505f3053,0x535f546666665f32,0x6a52665f33535f33\n"
".quad 0x705f5f34535f3253,0x3b5d375f6d617261,0x203220636f6c2e0a,0x75730a3120373031\n"
".quad 0x6625203233662e62,0x2c35356625202c35,0x2e0a3b3634662520,0x3933203320636f6c\n"
".quad 0x2e7362610a352035,0x2c38662520323366,0x6c2e0a3b35662520,0x353933203320636f\n"
".quad 0x662e7362610a3520,0x202c396625203233,0x62610a3b35356625,0x6625203233662e73\n"
".quad 0x36346625202c3031,0x3320636f6c2e0a3b,0x6d0a352035333420,0x25203233662e7861\n"
".quad 0x316625202c313166,0x0a3b396625202c30,0x6d617261702e646c,0x366625203233662e\n"
".quad 0x32325a5f5b202c31,0x6e6f4e65726f7473,0x746e497974706d45,0x6a49736c61767265\n"
".quad 0x5366506a6a76456a,0x32535f3054505f30,0x33535f546666665f,0x536a52665f33535f\n"
".quad 0x61705f5f34535f32,0x3b5d32315f6d6172,0x203220636f6c2e0a,0x756d0a3120383031\n"
".quad 0x6625203233662e6c,0x31316625202c3231,0x0a3b31366625202c,0x31203220636f6c2e\n"
".quad 0x7476630a31203930,0x3233662e3436662e,0x25202c3164662520,0x2e7476630a3b3866\n"
".quad 0x203233662e343666,0x6625202c32646625,0x2e766f6d0a3b3231,0x3364662520343666\n"
".quad 0x353638336430202c,0x4432333934383434,0x6c2e0a3b32374532,0x343634203320636f\n"
".quad 0x662e78616d0a3520,0x2c34646625203436,0x25202c3364662520,0x6f6c2e0a3b326466\n"
".quad 0x2039303120322063,0x672e707465730a31,0x25203436662e7574,0x31646625202c3570\n"
".quad 0x0a3b34646625202c,0x6172622035702540,0x3b345f3431424220,0x7261702e646c0a0a\n"
".quad 0x25203233662e6d61,0x5a5f5b202c353466,0x4e65726f74733232,0x497974706d456e6f\n"
".quad 0x736c61767265746e,0x506a6a76456a6a49,0x5f3054505f305366,0x5f546666665f3253\n"
".quad 0x52665f33535f3353,0x5f5f34535f32536a,0x5d365f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312032313120,0x662e746c2e707465,0x202c367025203233,0x6630202c35346625\n"
".quad 0x3030303030303030,0x662e706c65730a3b,0x2c33316625203233,0x3030384642663020\n"
".quad 0x336630202c303030,0x2c30303030303846,0x646c0a3b36702520,0x662e6d617261702e\n"
".quad 0x2c34356625203233,0x747332325a5f5b20,0x6d456e6f4e65726f,0x7265746e49797470\n"
".quad 0x456a6a49736c6176,0x5f305366506a6a76,0x665f32535f305450,0x535f33535f546666\n"
".quad 0x5f32536a52665f33,0x617261705f5f3453,0x6c2e0a3b5d375f6d,0x323131203220636f\n"
".quad 0x2e707465730a3120,0x25203233662e746c,0x34356625202c3770,0x303030306630202c\n"
".quad 0x65730a3b30303030,0x25203233662e706c,0x426630202c343166,0x2c30303030303846\n"
".quad 0x3030384633663020,0x377025202c303030,0x3220636f6c2e0a3b,0x730a312032313120\n"
".quad 0x662e71652e707465,0x202c387025203233,0x6625202c33316625,0x2e616d660a3b3431\n"
".quad 0x25203233662e6e72,0x356625202c353166,0x303046336630202c,0x6625202c30303030\n"
".quad 0x2e6464610a3b3534,0x3631662520323366,0x202c35346625202c,0x756d0a3b34356625\n"
".quad 0x6625203233662e6c,0x36316625202c3731,0x303046336630202c,0x65730a3b30303030\n"
".quad 0x25203233662e706c,0x316625202c383166,0x2c37316625202c35,0x6c2e0a3b38702520\n"
".quad 0x353131203220636f,0x33662e74730a3120,0x5d366c72255b2032,0x0a3b38316625202c\n"
".quad 0x31203220636f6c2e,0x2e74730a31203631,0x6c72255b20323366,0x38316625202c5d37\n"
".quad 0x3220636f6c2e0a3b,0x720a322032323320,0x3142420a0a3b7465,0x2e646c0a3a345f34\n"
".quad 0x33662e6d61726170,0x202c313466252032,0x6f747332325a5f5b,0x706d456e6f4e6572\n"
".quad 0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a,0x66665f32535f3054\n"
".quad 0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34,0x6f6c2e0a3b5d365f\n"
".quad 0x2031323120322063,0x3233662e74730a31,0x2c5d366c72255b20,0x6c0a3b3134662520\n"
".quad 0x2e6d617261702e64,0x3734662520323366,0x7332325a5f5b202c,0x456e6f4e65726f74\n"
".quad 0x65746e497974706d,0x6a6a49736c617672,0x305366506a6a7645,0x5f32535f3054505f\n"
".quad 0x5f33535f54666666,0x32536a52665f3353,0x7261705f5f34535f,0x2e0a3b5d375f6d61\n"
".quad 0x3231203220636f6c,0x662e74730a312032,0x376c72255b203233,0x3b37346625202c5d\n"
".quad 0x203220636f6c2e0a,0x65720a3220323233,0x343142420a0a3b74,0x702e646c0a3a355f\n"
".quad 0x3233752e6d617261,0x5b202c3533722520,0x726f747332325a5f,0x74706d456e6f4e65\n"
".quad 0x61767265746e4979,0x6a76456a6a49736c,0x54505f305366506a,0x6666665f32535f30\n"
".quad 0x5f33535f33535f54,0x34535f32536a5266,0x5f6d617261705f5f,0x6f6c2e0a3b5d3031\n"
".quad 0x2033303120322063,0x3233752e74730a31,0x2c5d346c72255b20,0x6c0a3b3533722520\n"
".quad 0x2e6d617261702e64,0x3833722520323375,0x7332325a5f5b202c,0x456e6f4e65726f74\n"
".quad 0x65746e497974706d,0x6a6a49736c617672,0x305366506a6a7645,0x5f32535f3054505f\n"
".quad 0x5f33535f54666666,0x32536a52665f3353,0x7261705f5f34535f,0x0a3b5d31315f6d61\n"
".quad 0x31203220636f6c2e,0x2e74730a31203430,0x6c72255b20323375,0x38337225202c5d35\n"
".quad 0x7261702e646c0a3b,0x25203233662e6d61,0x5a5f5b202c333566,0x4e65726f74733232\n"
".quad 0x497974706d456e6f,0x736c61767265746e,0x506a6a76456a6a49,0x5f3054505f305366\n"
".quad 0x5f546666665f3253,0x52665f33535f3353,0x5f5f34535f32536a,0x5d375f6d61726170\n"
".quad 0x7261702e646c0a3b,0x25203233662e6d61,0x5a5f5b202c383566,0x4e65726f74733232\n"
".quad 0x497974706d456e6f,0x736c61767265746e,0x506a6a76456a6a49,0x5f3054505f305366\n"
".quad 0x5f546666665f3253,0x52665f33535f3353,0x5f5f34535f32536a,0x5d385f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x730a312037303120,0x25203233662e6275,0x38356625202c3666\n"
".quad 0x0a3b33356625202c,0x33203320636f6c2e,0x7362610a35203539,0x316625203233662e\n"
".quad 0x0a3b366625202c39,0x33203320636f6c2e,0x7362610a35203539,0x326625203233662e\n"
".quad 0x3b38356625202c30,0x3233662e7362610a,0x25202c3132662520,0x6f6c2e0a3b333566\n"
".quad 0x2035333420332063,0x33662e78616d0a35,0x202c323266252032,0x6625202c31326625\n"
".quad 0x702e646c0a3b3032,0x3233662e6d617261,0x5b202c3036662520,0x726f747332325a5f\n"
".quad 0x74706d456e6f4e65,0x61767265746e4979,0x6a76456a6a49736c,0x54505f305366506a\n"
".quad 0x6666665f32535f30,0x5f33535f33535f54,0x34535f32536a5266,0x5f6d617261705f5f\n"
".quad 0x6f6c2e0a3b5d3231,0x2038303120322063,0x33662e6c756d0a31,0x202c333266252032\n"
".quad 0x6625202c32326625,0x636f6c2e0a3b3036,0x3120393031203220,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x3b39316625202c35,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3b33326625202c36,0x3436662e766f6d0a,0x30202c3764662520,0x3834343536383364\n"
".quad 0x3745324432333934,0x20636f6c2e0a3b32,0x0a35203436342033,0x203436662e78616d\n"
".quad 0x6625202c38646625,0x36646625202c3764,0x3220636f6c2e0a3b,0x730a312039303120\n"
".quad 0x2e7574672e707465,0x2c39702520343666,0x25202c3564662520,0x7025400a3b386466\n"
".quad 0x4242206172622039,0x6c0a0a3b375f3431,0x2e6d617261702e64,0x3235662520323366\n"
".quad 0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d,0x6a6a49736c617672\n"
".quad 0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666,0x32536a52665f3353\n"
".quad 0x7261705f5f34535f,0x2e0a3b5d375f6d61,0x3131203220636f6c,0x707465730a312032\n"
".quad 0x203233662e746c2e,0x6625202c30317025,0x30306630202c3235,0x0a3b303030303030\n"
".quad 0x3233662e706c6573,0x30202c3432662520,0x3030303038464266,0x3846336630202c30\n"
".quad 0x25202c3030303030,0x2e646c0a3b303170,0x33662e6d61726170,0x202c373566252032\n"
".quad 0x6f747332325a5f5b,0x706d456e6f4e6572,0x767265746e497974,0x76456a6a49736c61\n"
".quad 0x505f305366506a6a,0x66665f32535f3054,0x33535f33535f5466,0x535f32536a52665f\n"
".quad 0x6d617261705f5f34,0x6f6c2e0a3b5d385f,0x2032313120322063,0x6c2e707465730a31\n"
".quad 0x7025203233662e74,0x37356625202c3131,0x303030306630202c,0x65730a3b30303030\n"
".quad 0x25203233662e706c,0x426630202c353266,0x2c30303030303846,0x3030384633663020\n"
".quad 0x317025202c303030,0x20636f6c2e0a3b31,0x0a31203231312032,0x2e71652e70746573\n"
".quad 0x3231702520323366,0x202c34326625202c,0x6d660a3b35326625,0x3233662e6e722e61\n"
".quad 0x25202c3632662520,0x46336630202c3666,0x202c303030303030,0x64610a3b32356625\n"
".quad 0x6625203233662e64,0x32356625202c3732,0x0a3b37356625202c,0x203233662e6c756d\n"
".quad 0x6625202c38326625,0x46336630202c3732,0x0a3b303030303030,0x3233662e706c6573\n"
".quad 0x25202c3932662520,0x326625202c363266,0x3b32317025202c38,0x203220636f6c2e0a\n"
".quad 0x74730a3120353131,0x72255b203233662e,0x326625202c5d366c,0x20636f6c2e0a3b39\n"
".quad 0x0a31203631312032,0x5b203233662e7473,0x25202c5d376c7225,0x6f6c2e0a3b393266\n"
".quad 0x2032323320322063,0x0a0a3b7465720a32,0x0a3a375f34314242,0x6d617261702e646c\n"
".quad 0x346625203233662e,0x32325a5f5b202c38,0x6e6f4e65726f7473,0x746e497974706d45\n"
".quad 0x6a49736c61767265,0x5366506a6a76456a,0x32535f3054505f30,0x33535f546666665f\n"
".quad 0x536a52665f33535f,0x61705f5f34535f32,0x0a3b5d375f6d6172,0x31203220636f6c2e\n"
".quad 0x2e74730a31203132,0x6c72255b20323366,0x38346625202c5d36,0x7261702e646c0a3b\n"
".quad 0x25203233662e6d61,0x5a5f5b202c363566,0x4e65726f74733232,0x497974706d456e6f\n"
".quad 0x736c61767265746e,0x506a6a76456a6a49,0x5f3054505f305366,0x5f546666665f3253\n"
".quad 0x52665f33535f3353,0x5f5f34535f32536a,0x5d385f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312032323120,0x255b203233662e74,0x6625202c5d376c72,0x636f6c2e0a3b3635\n"
".quad 0x3220323233203220,0x420a0a3b7465720a,0x6c0a3a385f343142,0x2e6d617261702e64\n"
".quad 0x3233722520323375,0x7332325a5f5b202c,0x456e6f4e65726f74,0x65746e497974706d\n"
".quad 0x6a6a49736c617672,0x305366506a6a7645,0x5f32535f3054505f,0x5f33535f54666666\n"
".quad 0x32536a52665f3353,0x7261705f5f34535f,0x2e0a3b5d395f6d61,0x3031203220636f6c\n"
".quad 0x752e74730a312033,0x346c72255b203233,0x3b32337225202c5d,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x325a5f5b202c3633,0x6f4e65726f747332,0x6e497974706d456e\n"
".quad 0x49736c6176726574,0x66506a6a76456a6a,0x535f3054505f3053,0x535f546666665f32\n"
".quad 0x6a52665f33535f33,0x705f5f34535f3253,0x5d30315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x730a312034303120,0x255b203233752e74,0x7225202c5d356c72,0x702e646c0a3b3633\n"
".quad 0x3233662e6d617261,0x5b202c3434662520,0x726f747332325a5f,0x74706d456e6f4e65\n"
".quad 0x61767265746e4979,0x6a76456a6a49736c,0x54505f305366506a,0x6666665f32535f30\n"
".quad 0x5f33535f33535f54,0x34535f32536a5266,0x5f6d617261705f5f,0x702e646c0a3b5d36\n"
".quad 0x3233662e6d617261,0x5b202c3135662520,0x726f747332325a5f,0x74706d456e6f4e65\n"
".quad 0x61767265746e4979,0x6a76456a6a49736c,0x54505f305366506a,0x6666665f32535f30\n"
".quad 0x5f33535f33535f54,0x34535f32536a5266,0x5f6d617261705f5f,0x636f6c2e0a3b5d37\n"
".quad 0x3120373031203220,0x3233662e6275730a,0x6625202c37662520,0x34346625202c3135\n"
".quad 0x3320636f6c2e0a3b,0x610a352035393320,0x25203233662e7362,0x376625202c303366\n"
".quad 0x3320636f6c2e0a3b,0x610a352035393320,0x25203233662e7362,0x356625202c313366\n"
".quad 0x662e7362610a3b31,0x2c32336625203233,0x2e0a3b3434662520,0x3334203320636f6c\n"
".quad 0x2e78616d0a352035,0x3333662520323366,0x202c32336625202c,0x646c0a3b31336625\n"
".quad 0x662e6d617261702e,0x2c39356625203233,0x747332325a5f5b20,0x6d456e6f4e65726f\n"
".quad 0x7265746e49797470,0x456a6a49736c6176,0x5f305366506a6a76,0x665f32535f305450\n"
".quad 0x535f33535f546666,0x5f32536a52665f33,0x617261705f5f3453,0x2e0a3b5d32315f6d\n"
".quad 0x3031203220636f6c,0x2e6c756d0a312038,0x3433662520323366,0x202c33336625202c\n"
".quad 0x6c2e0a3b39356625,0x393031203220636f,0x662e7476630a3120,0x25203233662e3436\n"
".quad 0x336625202c396466,0x662e7476630a3b30,0x25203233662e3436,0x6625202c30316466\n"
".quad 0x2e766f6d0a3b3433,0x3164662520343666,0x3638336430202c31,0x3233393438343435\n"
".quad 0x2e0a3b3237453244,0x3634203320636f6c,0x2e78616d0a352034,0x3164662520343666\n"
".quad 0x3131646625202c32,0x3b3031646625202c,0x203220636f6c2e0a,0x65730a3120393031\n"
".quad 0x662e7574672e7074,0x2c33317025203436,0x25202c3964662520,0x25400a3b32316466\n"
".quad 0x2061726220333170,0x3b30315f34314242,0x7261702e646c0a0a,0x25203233662e6d61\n"
".quad 0x5a5f5b202c333466,0x4e65726f74733232,0x497974706d456e6f,0x736c61767265746e\n"
".quad 0x506a6a76456a6a49,0x5f3054505f305366,0x5f546666665f3253,0x52665f33535f3353\n"
".quad 0x5f5f34535f32536a,0x5d365f6d61726170,0x3220636f6c2e0a3b,0x730a312032313120\n"
".quad 0x662e746c2e707465,0x2c34317025203233,0x30202c3334662520,0x3030303030303066\n"
".quad 0x2e706c65730a3b30,0x3533662520323366,0x303846426630202c,0x6630202c30303030\n"
".quad 0x3030303030384633,0x0a3b34317025202c,0x6d617261702e646c,0x356625203233662e\n"
".quad 0x32325a5f5b202c30,0x6e6f4e65726f7473,0x746e497974706d45,0x6a49736c61767265\n"
".quad 0x5366506a6a76456a,0x32535f3054505f30,0x33535f546666665f,0x536a52665f33535f\n"
".quad 0x61705f5f34535f32,0x0a3b5d375f6d6172,0x31203220636f6c2e,0x7465730a31203231\n"
".quad 0x3233662e746c2e70,0x25202c3531702520,0x306630202c303566,0x3b30303030303030\n"
".quad 0x33662e706c65730a,0x202c363366252032,0x3030303846426630,0x46336630202c3030\n"
".quad 0x202c303030303038,0x6c2e0a3b35317025,0x323131203220636f,0x2e707465730a3120\n"
".quad 0x25203233662e7165,0x336625202c363170,0x3b36336625202c35,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x30202c376625202c,0x3030303030463366,0x3b33346625202c30\n"
".quad 0x3233662e6464610a,0x25202c3833662520,0x356625202c333466,0x662e6c756d0a3b30\n"
".quad 0x2c39336625203233,0x30202c3833662520,0x3030303030463366,0x2e706c65730a3b30\n"
".quad 0x3034662520323366,0x202c37336625202c,0x7025202c39336625,0x636f6c2e0a3b3631\n"
".quad 0x3120353131203220,0x203233662e74730a,0x202c5d366c72255b,0x6c2e0a3b30346625\n"
".quad 0x363131203220636f,0x33662e74730a3120,0x5d376c72255b2032,0x0a3b30346625202c\n"
".quad 0x20696e752e617262,0x3b31315f34314242,0x315f343142420a0a,0x61702e646c0a3a30\n"
".quad 0x203233662e6d6172,0x5f5b202c32346625,0x65726f747332325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a76456a6a4973,0x3054505f30536650,0x546666665f32535f\n"
".quad 0x665f33535f33535f,0x5f34535f32536a52,0x365f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203132312032,0x5b203233662e7473,0x25202c5d366c7225,0x2e646c0a3b323466\n"
".quad 0x33662e6d61726170,0x202c393466252032,0x6f747332325a5f5b,0x706d456e6f4e6572\n"
".quad 0x767265746e497974,0x76456a6a49736c61,0x505f305366506a6a,0x66665f32535f3054\n"
".quad 0x33535f33535f5466,0x535f32536a52665f,0x6d617261705f5f34,0x6f6c2e0a3b5d375f\n"
".quad 0x2032323120322063,0x3233662e74730a31,0x2c5d376c72255b20,0x0a0a3b3934662520\n"
".quad 0x3a31315f34314242,0x3233752e766f6d0a,0x31202c3632722520,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32326c72,0x65726f747332325a,0x7974706d456e6f4e\n"
".quad 0x6c61767265746e49,0x6a6a76456a6a4973,0x3054505f30536650,0x546666665f32535f\n"
".quad 0x665f33535f33535f,0x5f34535f32536a52,0x315f6d617261705f,0x636f6c2e0a3b5d35\n"
".quad 0x3120393932203220,0x203233752e74730a,0x2c5d32326c72255b,0x2e0a3b3632722520\n"
".quad 0x3033203220636f6c,0x2e766f6d0a312030,0x3832722520323375,0x782e64697425202c\n"
".quad 0x69772e6c756d0a3b,0x25203233752e6564,0x7225202c36316c72,0x6c0a3b34202c3832\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x32325a5f5b202c39,0x6e6f4e65726f7473\n"
".quad 0x746e497974706d45,0x6a49736c61767265,0x5366506a6a76456a,0x32535f3054505f30\n"
".quad 0x33535f546666665f,0x536a52665f33535f,0x61705f5f34535f32,0x3b5d34315f6d6172\n"
".quad 0x203220636f6c2e0a,0x64610a3120303033,0x7225203436732e64,0x6c7225202c37316c\n"
".quad 0x316c7225202c3931,0x33752e74730a3b36,0x37316c72255b2032,0x3b36327225202c5d\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38316c,0x4e65726f74733232\n"
".quad 0x497974706d456e6f,0x736c61767265746e,0x506a6a76456a6a49,0x5f3054505f305366\n"
".quad 0x5f546666665f3253,0x52665f33535f3353,0x5f5f34535f32536a,0x33315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203130332032,0x5b203233752e7473,0x202c5d38316c7225\n"
".quad 0x6c2e0a3b36327225,0x323233203220636f,0x0a3b7465720a3220,0x697369762e0a0a7d\n"
".quad 0x6e75662e20656c62,0x747333315a5f2063,0x7265746e4965726f,0x76456a6a496c6176\n"
".quad 0x54505f305366506a,0x5466665f32535f30,0x2e0a28665f33535f,0x622e206d61726170\n"
".quad 0x7333315a5f203233,0x65746e4965726f74,0x456a6a496c617672,0x505f305366506a76\n"
".quad 0x66665f32535f3054,0x705f665f33535f54,0x0a2c305f6d617261,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x746e4965726f7473,0x6a6a496c61767265,0x5f305366506a7645\n"
".quad 0x665f32535f305450,0x5f665f33535f5466,0x2c315f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x6e4965726f747333,0x6a496c6176726574,0x305366506a76456a\n"
".quad 0x5f32535f3054505f,0x665f33535f546666,0x325f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x4965726f74733331,0x496c61767265746e,0x5366506a76456a6a\n"
".quad 0x32535f3054505f30,0x5f33535f5466665f,0x5f6d617261705f66,0x617261702e0a2c33\n"
".quad 0x5f203436622e206d,0x65726f747333315a,0x6c61767265746e49,0x66506a76456a6a49\n"
".quad 0x535f3054505f3053,0x33535f5466665f32,0x6d617261705f665f,0x7261702e0a2c345f\n"
".quad 0x203233622e206d61,0x726f747333315a5f,0x61767265746e4965,0x506a76456a6a496c\n"
".quad 0x5f3054505f305366,0x535f5466665f3253,0x617261705f665f33,0x61702e0a2c355f6d\n"
".quad 0x3233622e206d6172,0x6f747333315a5f20,0x767265746e496572,0x6a76456a6a496c61\n"
".quad 0x3054505f30536650,0x5f5466665f32535f,0x7261705f665f3353,0x702e0a2c365f6d61\n"
".quad 0x33622e206d617261,0x747333315a5f2032,0x7265746e4965726f,0x76456a6a496c6176\n"
".quad 0x54505f305366506a,0x5466665f32535f30,0x61705f665f33535f,0x2e0a2c375f6d6172\n"
".quad 0x622e206d61726170,0x7333315a5f203233,0x65746e4965726f74,0x456a6a496c617672\n"
".quad 0x505f305366506a76,0x66665f32535f3054,0x705f665f33535f54,0x0a2c385f6d617261\n"
".quad 0x2e206d617261702e,0x33315a5f20323362,0x746e4965726f7473,0x6a6a496c61767265\n"
".quad 0x5f305366506a7645,0x665f32535f305450,0x5f665f33535f5466,0x0a395f6d61726170\n"
".quad 0x6765722e0a7b0a29,0x6625203233662e20,0x722e0a3b3e30323c,0x203436662e206765\n"
".quad 0x0a3b3e353c646625,0x72702e206765722e,0x3e353c7025206465,0x2e206765722e0a3b\n"
".quad 0x393c722520323373,0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e31313c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x33315a5f5b202c33,0x746e4965726f7473\n"
".quad 0x6a6a496c61767265,0x5f305366506a7645,0x665f32535f305450,0x5f665f33535f5466\n"
".quad 0x5d315f6d61726170,0x7261702e646c0a3b,0x25203436752e6d61,0x5a5f5b202c346c72\n"
".quad 0x4965726f74733331,0x496c61767265746e,0x5366506a76456a6a,0x32535f3054505f30\n"
".quad 0x5f33535f5466665f,0x5f6d617261705f66,0x702e646c0a3b5d32,0x3436752e6d617261\n"
".quad 0x5b202c356c722520,0x726f747333315a5f,0x61767265746e4965,0x506a76456a6a496c\n"
".quad 0x5f3054505f305366,0x535f5466665f3253,0x617261705f665f33,0x646c0a3b5d335f6d\n"
".quad 0x752e6d617261702e,0x2c366c7225203436,0x747333315a5f5b20,0x7265746e4965726f\n"
".quad 0x76456a6a496c6176,0x54505f305366506a,0x5466665f32535f30,0x61705f665f33535f\n"
".quad 0x0a3b5d345f6d6172,0x6d617261702e646c,0x316625203233662e,0x7333315a5f5b202c\n"
".quad 0x65746e4965726f74,0x456a6a496c617672,0x505f305366506a76,0x66665f32535f3054\n"
".quad 0x705f665f33535f54,0x3b5d355f6d617261,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x33315a5f5b202c32,0x746e4965726f7473,0x6a6a496c61767265,0x5f305366506a7645\n"
".quad 0x665f32535f305450,0x5f665f33535f5466,0x5d365f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203233752e6d61,0x315a5f5b202c3172,0x6e4965726f747333,0x6a496c6176726574\n"
".quad 0x305366506a76456a,0x5f32535f3054505f,0x665f33535f546666,0x375f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203233752e6d6172,0x5a5f5b202c327225,0x4965726f74733331\n"
".quad 0x496c61767265746e,0x5366506a76456a6a,0x32535f3054505f30,0x5f33535f5466665f\n"
".quad 0x5f6d617261705f66,0x702e646c0a3b5d38,0x3233662e6d617261,0x5f5b202c34662520\n"
".quad 0x65726f747333315a,0x6c61767265746e49,0x66506a76456a6a49,0x535f3054505f3053\n"
".quad 0x33535f5466665f32,0x6d617261705f665f,0x6f6c2e0a3b5d395f,0x2033303120322063\n"
".quad 0x7261702e646c0a31,0x25203233752e6d61,0x5a5f5b202c376c72,0x4965726f74733331\n"
".quad 0x496c61767265746e,0x5366506a76456a6a,0x32535f3054505f30,0x5f33535f5466665f\n"
".quad 0x5f6d617261705f66,0x2e6c68730a3b5d30,0x386c722520343662,0x202c376c7225202c\n"
".quad 0x732e6464610a3b32,0x2c396c7225203436,0x25202c356c722520,0x2e74730a3b386c72\n"
".quad 0x6c72255b20323375,0x3b317225202c5d39,0x203220636f6c2e0a,0x64610a3120343031\n"
".quad 0x7225203436732e64,0x6c7225202c30316c,0x3b386c7225202c36,0x203233752e74730a\n"
".quad 0x2c5d30316c72255b,0x6c2e0a3b32722520,0x373031203220636f,0x662e6275730a3120\n"
".quad 0x202c336625203233,0x316625202c326625,0x3320636f6c2e0a3b,0x610a352035393320\n"
".quad 0x25203233662e7362,0x3b336625202c3566,0x203320636f6c2e0a,0x62610a3520353933\n"
".quad 0x6625203233662e73,0x0a3b326625202c36,0x203233662e736261,0x316625202c376625\n"
".quad 0x3320636f6c2e0a3b,0x6d0a352035333420,0x25203233662e7861,0x2c376625202c3866\n"
".quad 0x6c2e0a3b36662520,0x383031203220636f,0x662e6c756d0a3120,0x202c396625203233\n"
".quad 0x346625202c386625,0x3220636f6c2e0a3b,0x630a312039303120,0x662e3436662e7476\n"
".quad 0x2c31646625203233,0x76630a3b35662520,0x33662e3436662e74,0x202c326466252032\n"
".quad 0x766f6d0a3b396625,0x646625203436662e,0x3638336430202c33,0x3233393438343435\n"
".quad 0x2e0a3b3237453244,0x3634203320636f6c,0x2e78616d0a352034,0x3464662520343666\n"
".quad 0x202c33646625202c,0x6c2e0a3b32646625,0x393031203220636f,0x2e707465730a3120\n"
".quad 0x203436662e757467,0x646625202c317025,0x3b34646625202c31,0x203220636f6c2e0a\n"
".quad 0x64610a3120313231,0x7225203436732e64,0x336c7225202c316c,0x0a3b386c7225202c\n"
".quad 0x31203220636f6c2e,0x6464610a31203232,0x6c7225203436732e,0x2c346c7225202c32\n"
".quad 0x2e0a3b386c722520,0x3031203220636f6c,0x317025400a312039,0x3142422061726220\n"
".quad 0x646c0a0a3b325f35,0x662e6d617261702e,0x2c37316625203233,0x747333315a5f5b20\n"
".quad 0x7265746e4965726f,0x76456a6a496c6176,0x54505f305366506a,0x5466665f32535f30\n"
".quad 0x61705f665f33535f,0x0a3b5d355f6d6172,0x31203220636f6c2e,0x7465730a31203231\n"
".quad 0x3233662e746c2e70,0x6625202c32702520,0x30306630202c3731,0x0a3b303030303030\n"
".quad 0x3233662e706c6573,0x30202c3031662520,0x3030303038464266,0x3846336630202c30\n"
".quad 0x25202c3030303030,0x702e646c0a3b3270,0x3233662e6d617261,0x5b202c3931662520\n"
".quad 0x726f747333315a5f,0x61767265746e4965,0x506a76456a6a496c,0x5f3054505f305366\n"
".quad 0x535f5466665f3253,0x617261705f665f33,0x6c2e0a3b5d365f6d,0x323131203220636f\n"
".quad 0x2e707465730a3120,0x25203233662e746c,0x39316625202c3370,0x303030306630202c\n"
".quad 0x65730a3b30303030,0x25203233662e706c,0x426630202c313166,0x2c30303030303846\n"
".quad 0x3030384633663020,0x337025202c303030,0x3220636f6c2e0a3b,0x730a312032313120\n"
".quad 0x662e71652e707465,0x202c347025203233,0x6625202c30316625,0x2e616d660a3b3131\n"
".quad 0x25203233662e6e72,0x336625202c323166,0x303046336630202c,0x6625202c30303030\n"
".quad 0x2e6464610a3b3731,0x3331662520323366,0x202c37316625202c,0x756d0a3b39316625\n"
".quad 0x6625203233662e6c,0x33316625202c3431,0x303046336630202c,0x65730a3b30303030\n"
".quad 0x25203233662e706c,0x316625202c353166,0x2c34316625202c32,0x6c2e0a3b34702520\n"
".quad 0x353131203220636f,0x33662e74730a3120,0x5d316c72255b2032,0x0a3b35316625202c\n"
".quad 0x31203220636f6c2e,0x2e74730a31203631,0x6c72255b20323366,0x35316625202c5d32\n"
".quad 0x3220636f6c2e0a3b,0x720a322034323120,0x3142420a0a3b7465,0x2e646c0a3a325f35\n"
".quad 0x33662e6d61726170,0x202c363166252032,0x6f747333315a5f5b,0x767265746e496572\n"
".quad 0x6a76456a6a496c61,0x3054505f30536650,0x5f5466665f32535f,0x7261705f665f3353\n"
".quad 0x2e0a3b5d355f6d61,0x3231203220636f6c,0x662e74730a312031,0x316c72255b203233\n"
".quad 0x3b36316625202c5d,0x617261702e646c0a,0x6625203233662e6d,0x315a5f5b202c3831\n"
".quad 0x6e4965726f747333,0x6a496c6176726574,0x305366506a76456a,0x5f32535f3054505f\n"
".quad 0x665f33535f546666,0x365f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203232312032\n"
".quad 0x5b203233662e7473,0x25202c5d326c7225,0x6f6c2e0a3b383166,0x2034323120322063\n"
".quad 0x7d0a3b7465720a32,0x62697369762e0a0a,0x636e75662e20656c,0x6f747332325a5f20\n"
".quad 0x767265746e496572,0x7265766e6f436c61,0x76456a6a49646567,0x5f54505f30536650\n"
".quad 0x5f335366525f3253,0x535f3054525f3353,0x5f32535f35535f35,0x0a285f36536a6a52\n"
".quad 0x2e206d617261702e,0x32325a5f20343662,0x746e4965726f7473,0x6e6f436c61767265\n"
".quad 0x6a49646567726576,0x5f3053665076456a,0x66525f32535f5450,0x54525f33535f3353\n"
".quad 0x5f35535f35535f30,0x36536a6a525f3253,0x5f6d617261705f5f,0x617261702e0a2c30\n"
".quad 0x5f203436622e206d,0x65726f747332325a,0x6c61767265746e49,0x65677265766e6f43\n"
".quad 0x665076456a6a4964,0x32535f54505f3053,0x33535f335366525f,0x5f35535f3054525f\n"
".quad 0x6a525f32535f3553,0x7261705f5f36536a,0x702e0a2c315f6d61,0x36622e206d617261\n"
".quad 0x747332325a5f2034,0x7265746e4965726f,0x65766e6f436c6176,0x456a6a4964656772\n"
".quad 0x54505f3053665076,0x335366525f32535f,0x5f3054525f33535f,0x32535f35535f3553\n"
".quad 0x5f5f36536a6a525f,0x2c325f6d61726170,0x206d617261702e0a,0x325a5f203436622e\n"
".quad 0x6e4965726f747332,0x6f436c6176726574,0x496465677265766e,0x3053665076456a6a\n"
".quad 0x525f32535f54505f,0x525f33535f335366,0x35535f35535f3054,0x536a6a525f32535f\n"
".quad 0x6d617261705f5f36,0x7261702e0a2c335f,0x203436622e206d61,0x726f747332325a5f\n"
".quad 0x61767265746e4965,0x677265766e6f436c,0x5076456a6a496465,0x535f54505f305366\n"
".quad 0x535f335366525f32,0x35535f3054525f33,0x525f32535f35535f,0x61705f5f36536a6a\n"
".quad 0x2e0a2c345f6d6172,0x622e206d61726170,0x7332325a5f203436,0x65746e4965726f74\n"
".quad 0x766e6f436c617672,0x6a6a496465677265,0x505f305366507645,0x5366525f32535f54\n"
".quad 0x3054525f33535f33,0x535f35535f35535f,0x5f36536a6a525f32,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x4965726f74733232,0x436c61767265746e\n"
".quad 0x6465677265766e6f,0x53665076456a6a49,0x5f32535f54505f30,0x5f33535f33536652\n"
".quad 0x535f35535f305452,0x6a6a525f32535f35,0x617261705f5f3653,0x61702e0a2c365f6d\n"
".quad 0x3436622e206d6172,0x6f747332325a5f20,0x767265746e496572,0x7265766e6f436c61\n"
".quad 0x76456a6a49646567,0x5f54505f30536650,0x5f335366525f3253,0x535f3054525f3353\n"
".quad 0x5f32535f35535f35,0x705f5f36536a6a52,0x0a2c375f6d617261,0x2e206d617261702e\n"
".quad 0x32325a5f20343662,0x746e4965726f7473,0x6e6f436c61767265,0x6a49646567726576\n"
".quad 0x5f3053665076456a,0x66525f32535f5450,0x54525f33535f3353,0x5f35535f35535f30\n"
".quad 0x36536a6a525f3253,0x5f6d617261705f5f,0x617261702e0a2c38,0x5f203436622e206d\n"
".quad 0x65726f747332325a,0x6c61767265746e49,0x65677265766e6f43,0x665076456a6a4964\n"
".quad 0x32535f54505f3053,0x33535f335366525f,0x5f35535f3054525f,0x6a525f32535f3553\n"
".quad 0x7261705f5f36536a,0x702e0a2c395f6d61,0x36622e206d617261,0x747332325a5f2034\n"
".quad 0x7265746e4965726f,0x65766e6f436c6176,0x456a6a4964656772,0x54505f3053665076\n"
".quad 0x335366525f32535f,0x5f3054525f33535f,0x32535f35535f3553,0x5f5f36536a6a525f\n"
".quad 0x30315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x4965726f74733232\n"
".quad 0x436c61767265746e,0x6465677265766e6f,0x53665076456a6a49,0x5f32535f54505f30\n"
".quad 0x5f33535f33536652,0x535f35535f305452,0x6a6a525f32535f35,0x617261705f5f3653\n"
".quad 0x702e0a2c31315f6d,0x33622e206d617261,0x747332325a5f2032,0x7265746e4965726f\n"
".quad 0x65766e6f436c6176,0x456a6a4964656772,0x54505f3053665076,0x335366525f32535f\n"
".quad 0x5f3054525f33535f,0x32535f35535f3553,0x5f5f36536a6a525f,0x32315f6d61726170\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x4965726f74733232,0x436c61767265746e\n"
".quad 0x6465677265766e6f,0x53665076456a6a49,0x5f32535f54505f30,0x5f33535f33536652\n"
".quad 0x535f35535f305452,0x6a6a525f32535f35,0x617261705f5f3653,0x7b0a290a33315f6d\n"
".quad 0x662e206765722e0a,0x3e363c6625203233,0x2e206765722e0a3b,0x3c70252064657270\n"
".quad 0x6765722e0a3b3e32,0x7225203233732e20,0x722e0a3b3e39333c,0x203436732e206765\n"
".quad 0x3b3e32333c6c7225,0x61702e646c0a0a0a,0x203436752e6d6172,0x5b202c34316c7225\n"
".quad 0x726f747332325a5f,0x61767265746e4965,0x677265766e6f436c,0x5076456a6a496465\n"
".quad 0x535f54505f305366,0x535f335366525f32,0x35535f3054525f33,0x525f32535f35535f\n"
".quad 0x61705f5f36536a6a,0x0a3b5d305f6d6172,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x325a5f5b202c3531,0x6e4965726f747332,0x6f436c6176726574,0x496465677265766e\n"
".quad 0x3053665076456a6a,0x525f32535f54505f,0x525f33535f335366,0x35535f35535f3054\n"
".quad 0x536a6a525f32535f,0x6d617261705f5f36,0x2e646c0a3b5d315f,0x36752e6d61726170\n"
".quad 0x2c36316c72252034,0x747332325a5f5b20,0x7265746e4965726f,0x65766e6f436c6176\n"
".quad 0x456a6a4964656772,0x54505f3053665076,0x335366525f32535f,0x5f3054525f33535f\n"
".quad 0x32535f35535f3553,0x5f5f36536a6a525f,0x5d325f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c37316c72,0x65726f747332325a,0x6c61767265746e49\n"
".quad 0x65677265766e6f43,0x665076456a6a4964,0x32535f54505f3053,0x33535f335366525f\n"
".quad 0x5f35535f3054525f,0x6a525f32535f3553,0x7261705f5f36536a,0x6c0a3b5d335f6d61\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x7332325a5f5b202c,0x65746e4965726f74\n"
".quad 0x766e6f436c617672,0x6a6a496465677265,0x505f305366507645,0x5366525f32535f54\n"
".quad 0x3054525f33535f33,0x535f35535f35535f,0x5f36536a6a525f32,0x375f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c366c7225,0x65726f747332325a\n"
".quad 0x6c61767265746e49,0x65677265766e6f43,0x665076456a6a4964,0x32535f54505f3053\n"
".quad 0x33535f335366525f,0x5f35535f3054525f,0x6a525f32535f3553,0x7261705f5f36536a\n"
".quad 0x6c0a3b5d395f6d61,0x2e6d617261702e64,0x316c722520343675,0x32325a5f5b202c38\n"
".quad 0x746e4965726f7473,0x6e6f436c61767265,0x6a49646567726576,0x5f3053665076456a\n"
".quad 0x66525f32535f5450,0x54525f33535f3353,0x5f35535f35535f30,0x36536a6a525f3253\n"
".quad 0x5f6d617261705f5f,0x6f6c2e0a3b5d3031,0x2032303520322063,0x33752e766f6d0a31\n"
".quad 0x25202c3372252032,0x2e0a3b782e646974,0x3035203220636f6c,0x752e646c0a312033\n"
".quad 0x202c317225203233,0x0a3b5d346c72255b,0x25203233752e646c,0x6c72255b202c3572\n"
".quad 0x2e6275730a3b5d36,0x2c32722520323373,0x7225202c35722520,0x20636f6c2e0a3b31\n"
".quad 0x0a31203630352032,0x2e71652e70746573,0x2c31702520323373,0x3b31202c32722520\n"
".quad 0x203220636f6c2e0a,0x756d0a3120393035,0x752e656469772e6c,0x39316c7225203233\n"
".quad 0x34202c337225202c,0x36732e6464610a3b,0x202c396c72252034,0x25202c34316c7225\n"
".quad 0x6c2e0a3b39316c72,0x303135203220636f,0x732e6464610a3120,0x30316c7225203436\n"
".quad 0x2c35316c7225202c,0x0a3b39316c722520,0x35203220636f6c2e,0x6464610a31203131\n"
".quad 0x6c7225203436732e,0x316c7225202c3131,0x39316c7225202c36,0x3220636f6c2e0a3b\n"
".quad 0x610a312032313520,0x25203436732e6464,0x7225202c32316c72,0x6c7225202c37316c\n"
".quad 0x636f6c2e0a3b3931,0x3120363135203220,0x3436732e6464610a,0x202c33316c722520\n"
".quad 0x25202c38316c7225,0x6c2e0a3b39316c72,0x363035203220636f,0x20317025400a3120\n"
".quad 0x3631424220617262,0x6f6c2e0a0a3b325f,0x2031323520322063,0x33752e7268730a31\n"
".quad 0x25202c3772252032,0x6d0a3b31202c3272,0x25203233752e766f,0x2e0a3b31202c3872\n"
".quad 0x3235203220636f6c,0x2e6464610a312031,0x2c39722520323373,0x7225202c31722520\n"
".quad 0x61702e646c0a3b37,0x203436752e6d6172,0x5b202c37326c7225,0x726f747332325a5f\n"
".quad 0x61767265746e4965,0x677265766e6f436c,0x5076456a6a496465,0x535f54505f305366\n"
".quad 0x535f335366525f32,0x35535f3054525f33,0x525f32535f35535f,0x61705f5f36536a6a\n"
".quad 0x0a3b5d385f6d6172,0x35203220636f6c2e,0x2e74730a31203132,0x6c72255b20323375\n"
".quad 0x397225202c5d3732,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c30326c72\n"
".quad 0x65726f747332325a,0x6c61767265746e49,0x65677265766e6f43,0x665076456a6a4964\n"
".quad 0x32535f54505f3053,0x33535f335366525f,0x5f35535f3054525f,0x6a525f32535f3553\n"
".quad 0x7261705f5f36536a,0x2e0a3b5d345f6d61,0x3235203220636f6c,0x662e646c0a312034\n"
".quad 0x202c316625203233,0x3b5d30326c72255b,0x203233662e74730a,0x202c5d396c72255b\n"
".quad 0x2e646c0a3b316625,0x36752e6d61726170,0x2c33326c72252034,0x747332325a5f5b20\n"
".quad 0x7265746e4965726f,0x65766e6f436c6176,0x456a6a4964656772,0x54505f3053665076\n"
".quad 0x335366525f32535f,0x5f3054525f33535f,0x32535f35535f3553,0x5f5f36536a6a525f\n"
".quad 0x5d365f6d61726170,0x3220636f6c2e0a3b,0x6c0a312035323520,0x6625203233662e64\n"
".quad 0x326c72255b202c32,0x662e74730a3b5d33,0x316c72255b203233,0x3b326625202c5d30\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c35326c,0x4965726f74733232\n"
".quad 0x436c61767265746e,0x6465677265766e6f,0x53665076456a6a49,0x5f32535f54505f30\n"
".quad 0x5f33535f33536652,0x535f35535f305452,0x6a6a525f32535f35,0x617261705f5f3653\n"
".quad 0x6c2e0a3b5d375f6d,0x363235203220636f,0x33752e646c0a3120,0x202c353172252032\n"
".quad 0x3b5d35326c72255b,0x203233752e74730a,0x2c5d31316c72255b,0x2e0a3b3531722520\n"
".quad 0x3235203220636f6c,0x752e646c0a312037,0x2c38317225203233,0x5d37326c72255b20\n"
".quad 0x3233752e74730a3b,0x5d32316c72255b20,0x0a3b38317225202c,0x35203220636f6c2e\n"
".quad 0x2e646c0a31203932,0x2c33662520323366,0x5d30326c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32326c72,0x65726f747332325a,0x6c61767265746e49\n"
".quad 0x65677265766e6f43,0x665076456a6a4964,0x32535f54505f3053,0x33535f335366525f\n"
".quad 0x5f35535f3054525f,0x6a525f32535f3553,0x7261705f5f36536a,0x2e0a3b5d355f6d61\n"
".quad 0x3235203220636f6c,0x662e74730a312039,0x326c72255b203233,0x3b336625202c5d32\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c30336c,0x4965726f74733232\n"
".quad 0x436c61767265746e,0x6465677265766e6f,0x53665076456a6a49,0x5f32535f54505f30\n"
".quad 0x5f33535f33536652,0x535f35535f305452,0x6a6a525f32535f35,0x617261705f5f3653\n"
".quad 0x2e0a3b5d33315f6d,0x3335203220636f6c,0x752e74730a312032,0x336c72255b203233\n"
".quad 0x3b387225202c5d30,0x203220636f6c2e0a,0x74730a3120333335,0x72255b203233752e\n"
".quad 0x7225202c5d33316c,0x61702e646c0a3b38,0x203436752e6d6172,0x5b202c39326c7225\n"
".quad 0x726f747332325a5f,0x61767265746e4965,0x677265766e6f436c,0x5076456a6a496465\n"
".quad 0x535f54505f305366,0x535f335366525f32,0x35535f3054525f33,0x525f32535f35535f\n"
".quad 0x61705f5f36536a6a,0x3b5d31315f6d6172,0x203220636f6c2e0a,0x74730a3120343335\n"
".quad 0x72255b203233752e,0x7225202c5d39326c,0x20636f6c2e0a3b38,0x0a32203633352032\n"
".quad 0x42420a0a3b746572,0x646c0a3a325f3631,0x752e6d617261702e,0x31326c7225203436\n"
".quad 0x7332325a5f5b202c,0x65746e4965726f74,0x766e6f436c617672,0x6a6a496465677265\n"
".quad 0x505f305366507645,0x5366525f32535f54,0x3054525f33535f33,0x535f35535f35535f\n"
".quad 0x5f36536a6a525f32,0x345f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203930352032\n"
".quad 0x25203233662e646c,0x6c72255b202c3466,0x2e74730a3b5d3132,0x6c72255b20323366\n"
".quad 0x3b346625202c5d39,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34326c\n"
".quad 0x4965726f74733232,0x436c61767265746e,0x6465677265766e6f,0x53665076456a6a49\n"
".quad 0x5f32535f54505f30,0x5f33535f33536652,0x535f35535f305452,0x6a6a525f32535f35\n"
".quad 0x617261705f5f3653,0x6c2e0a3b5d365f6d,0x303135203220636f,0x33662e646c0a3120\n"
".quad 0x5b202c3566252032,0x0a3b5d34326c7225,0x5b203233662e7473,0x202c5d30316c7225\n"
".quad 0x2e646c0a3b356625,0x36752e6d61726170,0x2c36326c72252034,0x747332325a5f5b20\n"
".quad 0x7265746e4965726f,0x65766e6f436c6176,0x456a6a4964656772,0x54505f3053665076\n"
".quad 0x335366525f32535f,0x5f3054525f33535f,0x32535f35535f3553,0x5f5f36536a6a525f\n"
".quad 0x5d375f6d61726170,0x3220636f6c2e0a3b,0x6c0a312031313520,0x7225203233752e64\n"
".quad 0x6c72255b202c3033,0x2e74730a3b5d3632,0x6c72255b20323375,0x337225202c5d3131\n"
".quad 0x61702e646c0a3b30,0x203436752e6d6172,0x5b202c38326c7225,0x726f747332325a5f\n"
".quad 0x61767265746e4965,0x677265766e6f436c,0x5076456a6a496465,0x535f54505f305366\n"
".quad 0x535f335366525f32,0x35535f3054525f33,0x525f32535f35535f,0x61705f5f36536a6a\n"
".quad 0x0a3b5d395f6d6172,0x35203220636f6c2e,0x2e646c0a31203231,0x3333722520323375\n"
".quad 0x38326c72255b202c,0x33752e74730a3b5d,0x32316c72255b2032,0x3b33337225202c5d\n"
".quad 0x3233752e766f6d0a,0x30202c3633722520,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c31336c72,0x65726f747332325a,0x6c61767265746e49,0x65677265766e6f43\n"
".quad 0x665076456a6a4964,0x32535f54505f3053,0x33535f335366525f,0x5f35535f3054525f\n"
".quad 0x6a525f32535f3553,0x7261705f5f36536a,0x0a3b5d33315f6d61,0x35203220636f6c2e\n"
".quad 0x2e74730a31203531,0x6c72255b20323375,0x337225202c5d3133,0x20636f6c2e0a3b36\n"
".quad 0x0a31203631352032,0x5b203233752e7473,0x202c5d33316c7225,0x6c2e0a3b36337225\n"
".quad 0x363335203220636f,0x0a3b7465720a3220,0x697369762e0a0a7d,0x6e75662e20656c62\n"
".quad 0x726333325a5f2063,0x69646e4965746165,0x61706d6f43736563,0x456a496e6f697463\n"
".quad 0x2e0a286a5f545076,0x622e206d61726170,0x6333325a5f203436,0x646e496574616572\n"
".quad 0x706d6f4373656369,0x6a496e6f69746361,0x705f6a5f54507645,0x0a2c305f6d617261\n"
".quad 0x2e206d617261702e,0x33325a5f20323362,0x6e49657461657263,0x6d6f437365636964\n"
".quad 0x496e6f6974636170,0x5f6a5f545076456a,0x0a315f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x2520646572702e20,0x722e0a3b3e373c70,0x203233732e206765,0x0a3b3e31353c7225\n"
".quad 0x36732e206765722e,0x32313c6c72252034,0x2e646c0a0a0a3b3e,0x33752e6d61726170\n"
".quad 0x5b202c3172252032,0x6165726333325a5f,0x656369646e496574,0x746361706d6f4373\n"
".quad 0x5076456a496e6f69,0x617261705f6a5f54,0x6c2e0a3b5d315f6d,0x303433203220636f\n"
".quad 0x752e766f6d0a3120,0x202c327225203233,0x0a3b782e64697425,0x33203220636f6c2e\n"
".quad 0x7268730a31203334,0x347225203233752e,0x202c317225202c34,0x2e707465730a3b31\n"
".quad 0x25203233732e7165,0x34347225202c3170,0x6f6c2e0a3b30202c,0x2033343320322063\n"
".quad 0x6220317025400a31,0x5f37314242206172,0x636f6c2e0a0a3b36,0x3120303433203220\n"
".quad 0x3233752e766f6d0a,0x25202c3334722520,0x730a3b782e646974,0x25203233622e6c68\n"
".quad 0x347225202c373172,0x6f6d0a3b31202c33,0x7225203233752e76,0x2e0a3b31202c3035\n"
".quad 0x3433203220636f6c,0x622e726f0a312039,0x202c347225203233,0x3b31202c37317225\n"
".quad 0x203220636f6c2e0a,0x64610a3120303533,0x7225203233732e64,0x2c37317225202c35\n"
".quad 0x3142420a0a3b3220,0x6f6c2e0a3a325f37,0x2035343320322063,0x79732e7261620a31\n"
".quad 0x6c2e0a3b3020636e,0x373433203220636f,0x2e707465730a3120,0x25203233752e6567\n"
".quad 0x2c327225202c3270,0x400a3b3434722520,0x2061726220327025,0x0a3b345f37314242\n"
".quad 0x2e6f6c2e64616d0a,0x3831722520323373,0x202c30357225202c,0x3b312d202c347225\n"
".quad 0x2e6f6c2e64616d0a,0x3931722520323373,0x202c30357225202c,0x3b312d202c357225\n"
".quad 0x203220636f6c2e0a,0x756d0a3120323533,0x752e656469772e6c,0x2c326c7225203233\n"
".quad 0x34202c3931722520,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c31316c72\n"
".quad 0x746165726333325a,0x73656369646e4965,0x69746361706d6f43,0x545076456a496e6f\n"
".quad 0x6d617261705f6a5f,0x6f6c2e0a3b5d305f,0x2032353320322063,0x36732e6464610a31\n"
".quad 0x202c336c72252034,0x25202c31316c7225,0x6c756d0a3b326c72,0x33752e656469772e\n"
".quad 0x202c346c72252032,0x3b34202c38317225,0x3436732e6464610a,0x25202c356c722520\n"
".quad 0x7225202c31316c72,0x752e646c0a3b346c,0x2c30327225203233,0x3b5d356c72255b20\n"
".quad 0x203233752e646c0a,0x255b202c32327225,0x64610a3b5d336c72,0x7225203233732e64\n"
".quad 0x30327225202c3432,0x0a3b32327225202c,0x5b203233752e7473,0x25202c5d336c7225\n"
".quad 0x42420a0a3b343272,0x6c2e0a3a345f3731,0x363533203220636f,0x622e6c68730a3120\n"
".quad 0x2c30357225203233,0x31202c3035722520,0x3220636f6c2e0a3b,0x0a37312033343320\n"
".quad 0x203233732e726873,0x7225202c34347225,0x2e0a3b31202c3434,0x3433203220636f6c\n"
".quad 0x707465730a312033,0x203233732e74672e,0x347225202c337025,0x25400a3b30202c34\n"
".quad 0x4220617262203370,0x0a0a3b325f373142,0x203233752e766f6d,0x7225202c39347225\n"
".quad 0x2e6172620a3b3035,0x3731424220696e75,0x3142420a0a3b375f,0x766f6d0a3a365f37\n"
".quad 0x347225203233752e,0x420a0a3b31202c39,0x6d0a3a375f373142,0x25203233752e766f\n"
".quad 0x347225202c383472,0x61702e646c0a3b39,0x203233752e6d6172,0x5f5b202c39337225\n"
".quad 0x746165726333325a,0x73656369646e4965,0x69746361706d6f43,0x545076456a496e6f\n"
".quad 0x6d617261705f6a5f,0x6f6c2e0a3b5d315f,0x2030363320322063,0x6c2e707465730a31\n"
".quad 0x7025203233752e74,0x2c39337225202c34,0x347025400a3b3320,0x3142422061726220\n"
".quad 0x2e0a0a3b32315f37,0x3433203220636f6c,0x2e766f6d0a312030,0x3234722520323375\n"
".quad 0x782e64697425202c,0x3220636f6c2e0a3b,0x610a312037363320,0x25203233732e6464\n"
".quad 0x347225202c313172,0x6f6d0a3b31202c32,0x7225203233752e76,0x0a0a3b32202c3534\n"
".quad 0x0a3a395f37314242,0x203233752e766f6d,0x7225202c33317225,0x636f6c2e0a3b3834\n"
".quad 0x3120323633203220,0x3233752e7268730a,0x25202c3431722520,0x0a3b31202c333172\n"
".quad 0x33203220636f6c2e,0x7261620a31203336,0x3b3020636e79732e,0x3233732e6464610a\n"
".quad 0x25202c3832722520,0x3b312d202c353472,0x203220636f6c2e0a,0x65730a3120353633\n"
".quad 0x33752e65672e7074,0x25202c3570252032,0x38327225202c3272,0x6220357025400a3b\n"
".quad 0x5f37314242206172,0x64616d0a0a3b3131,0x203233732e6f6c2e,0x7225202c39327225\n"
".quad 0x31317225202c3431,0x68730a3b312d202c,0x7225203233752e72,0x33317225202c3033\n"
".quad 0x6f6c2e0a3b32202c,0x2038363320322063,0x33732e6464610a31,0x202c313372252032\n"
".quad 0x7225202c39327225,0x636f6c2e0a3b3033,0x3120303733203220,0x6469772e6c756d0a\n"
".quad 0x7225203233752e65,0x31337225202c366c,0x2e646c0a3b34202c,0x36752e6d61726170\n"
".quad 0x2c30316c72252034,0x726333325a5f5b20,0x69646e4965746165,0x61706d6f43736563\n"
".quad 0x456a496e6f697463,0x61705f6a5f545076,0x0a3b5d305f6d6172,0x33203220636f6c2e\n"
".quad 0x6464610a31203037,0x6c7225203436732e,0x30316c7225202c37,0x0a3b366c7225202c\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x2c39327225202c38,0x2e6464610a3b3420\n"
".quad 0x396c722520343673,0x2c30316c7225202c,0x6c0a3b386c722520,0x7225203233752e64\n"
".quad 0x6c72255b202c3233,0x752e646c0a3b5d39,0x2c34337225203233,0x3b5d376c72255b20\n"
".quad 0x3233732e6464610a,0x25202c3633722520,0x337225202c323372,0x33752e74730a3b34\n"
".quad 0x5d376c72255b2032,0x0a3b36337225202c,0x31315f373142420a,0x3220636f6c2e0a3a\n"
".quad 0x0a30352030363320,0x203233622e6c6873,0x7225202c35347225,0x6c0a3b31202c3534\n"
".quad 0x2e6d617261702e64,0x3833722520323375,0x6333325a5f5b202c,0x646e496574616572\n"
".quad 0x706d6f4373656369,0x6a496e6f69746361,0x705f6a5f54507645,0x3b5d315f6d617261\n"
".quad 0x203220636f6c2e0a,0x65730a3120303633,0x33752e746c2e7074,0x25202c3670252032\n"
".quad 0x337225202c353472,0x752e766f6d0a3b38,0x2c38347225203233,0x2e0a3b3431722520\n"
".quad 0x3633203220636f6c,0x367025400a312030,0x3142422061726220,0x42420a0a3b395f37\n"
".quad 0x2e0a3a32315f3731,0x3733203220636f6c,0x2e7261620a312035,0x0a3b3020636e7973\n"
".quad 0x33203220636f6c2e,0x7465720a32203737,0x69762e0a0a7d0a3b,0x662e20656c626973\n"
".quad 0x36315a5f20636e75,0x49746361706d6f63,0x736c61767265746e,0x3053665076456a49\n"
".quad 0x665f32535f54505f,0x6a6a5f32536a6a66,0x6d617261702e0a28,0x5a5f203436622e20\n"
".quad 0x6361706d6f633631,0x61767265746e4974,0x665076456a49736c,0x32535f54505f3053\n"
".quad 0x5f32536a6a66665f,0x6d617261705f6a6a,0x7261702e0a2c305f,0x203436622e206d61\n"
".quad 0x706d6f6336315a5f,0x7265746e49746361,0x76456a49736c6176,0x5f54505f30536650\n"
".quad 0x536a6a66665f3253,0x7261705f6a6a5f32,0x702e0a2c315f6d61,0x36622e206d617261\n"
".quad 0x6f6336315a5f2034,0x746e49746361706d,0x6a49736c61767265,0x505f305366507645\n"
".quad 0x6a66665f32535f54,0x705f6a6a5f32536a,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x36315a5f20343662,0x49746361706d6f63,0x736c61767265746e,0x3053665076456a49\n"
".quad 0x665f32535f54505f,0x6a6a5f32536a6a66,0x335f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x6361706d6f633631,0x61767265746e4974,0x665076456a49736c\n"
".quad 0x32535f54505f3053,0x5f32536a6a66665f,0x6d617261705f6a6a,0x7261702e0a2c345f\n"
".quad 0x203233622e206d61,0x706d6f6336315a5f,0x7265746e49746361,0x76456a49736c6176\n"
".quad 0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32,0x702e0a2c355f6d61\n"
".quad 0x33622e206d617261,0x6f6336315a5f2032,0x746e49746361706d,0x6a49736c61767265\n"
".quad 0x505f305366507645,0x6a66665f32535f54,0x705f6a6a5f32536a,0x0a2c365f6d617261\n"
".quad 0x2e206d617261702e,0x36315a5f20323362,0x49746361706d6f63,0x736c61767265746e\n"
".quad 0x3053665076456a49,0x665f32535f54505f,0x6a6a5f32536a6a66,0x375f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x6361706d6f633631,0x61767265746e4974\n"
".quad 0x665076456a49736c,0x32535f54505f3053,0x5f32536a6a66665f,0x6d617261705f6a6a\n"
".quad 0x7261702e0a2c385f,0x203233622e206d61,0x706d6f6336315a5f,0x7265746e49746361\n"
".quad 0x76456a49736c6176,0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32\n"
".quad 0x702e0a2c395f6d61,0x33622e206d617261,0x6f6336315a5f2032,0x746e49746361706d\n"
".quad 0x6a49736c61767265,0x505f305366507645,0x6a66665f32535f54,0x705f6a6a5f32536a\n"
".quad 0x0a30315f6d617261,0x6765722e0a7b0a29,0x6625203233662e20,0x65722e0a3b3e353c\n"
".quad 0x20646572702e2067,0x2e0a3b3e343c7025,0x3233732e20676572,0x3b3e38313c722520\n"
".quad 0x732e206765722e0a,0x313c6c7225203436,0x646c0a0a0a3b3e38,0x752e6d617261702e\n"
".quad 0x202c337225203233,0x6d6f6336315a5f5b,0x65746e4974636170,0x456a49736c617672\n"
".quad 0x54505f3053665076,0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d395f6d6172\n"
".quad 0x6d617261702e646c,0x357225203233752e,0x6336315a5f5b202c,0x6e49746361706d6f\n"
".quad 0x49736c6176726574,0x5f3053665076456a,0x66665f32535f5450,0x5f6a6a5f32536a6a\n"
".quad 0x30315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203730342032,0x203233752e766f6d\n"
".quad 0x697425202c347225,0x6f6c2e0a3b782e64,0x2031313420322063,0x6c2e707465730a31\n"
".quad 0x7025203233752e74,0x202c347225202c31,0x7465730a3b337225,0x3233732e71652e70\n"
".quad 0x7225202c32702520,0x6e610a3b31202c35,0x2520646572702e64,0x2c317025202c3370\n"
".quad 0x6c2e0a3b32702520,0x313134203220636f,0x20337025400a3120,0x3831424220617262\n"
".quad 0x6f6c2e0a0a3b325f,0x2030323420322063,0x0a0a3b7465720a32,0x0a3a325f38314242\n"
".quad 0x34203220636f6c2e,0x766f6d0a31203730,0x317225203233752e,0x2e64697425202c37\n"
".quad 0x20636f6c2e0a3b78,0x0a31203331342032,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x2c37317225202c36,0x702e646c0a3b3420,0x3436752e6d617261,0x202c37316c722520\n"
".quad 0x6d6f6336315a5f5b,0x65746e4974636170,0x456a49736c617672,0x54505f3053665076\n"
".quad 0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d385f6d6172,0x34203220636f6c2e\n"
".quad 0x6464610a31203331,0x6c7225203436732e,0x37316c7225202c37,0x0a3b366c7225202c\n"
".quad 0x25203233752e646c,0x6c72255b202c3672,0x702e646c0a3b5d37,0x3233752e6d617261\n"
".quad 0x5b202c3531722520,0x706d6f6336315a5f,0x7265746e49746361,0x76456a49736c6176\n"
".quad 0x5f54505f30536650,0x536a6a66665f3253,0x7261705f6a6a5f32,0x2e0a3b5d395f6d61\n"
".quad 0x3134203220636f6c,0x2e6464610a312033,0x2c38722520323373,0x7225202c36722520\n"
".quad 0x636f6c2e0a3b3531,0x3120353134203220,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x2c387225202c386c,0x702e646c0a3b3420,0x3436752e6d617261,0x202c33316c722520\n"
".quad 0x6d6f6336315a5f5b,0x65746e4974636170,0x456a49736c617672,0x54505f3053665076\n"
".quad 0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d305f6d6172,0x34203220636f6c2e\n"
".quad 0x6464610a31203531,0x6c7225203436732e,0x33316c7225202c39,0x0a3b386c7225202c\n"
".quad 0x6d617261702e646c,0x336625203233662e,0x6336315a5f5b202c,0x6e49746361706d6f\n"
".quad 0x49736c6176726574,0x5f3053665076456a,0x66665f32535f5450,0x5f6a6a5f32536a6a\n"
".quad 0x5d345f6d61726170,0x3220636f6c2e0a3b,0x730a312035313420,0x255b203233662e74\n"
".quad 0x6625202c5d396c72,0x61702e646c0a3b33,0x203436752e6d6172,0x5b202c34316c7225\n"
".quad 0x706d6f6336315a5f,0x7265746e49746361,0x76456a49736c6176,0x5f54505f30536650\n"
".quad 0x536a6a66665f3253,0x7261705f6a6a5f32,0x2e0a3b5d315f6d61,0x3134203220636f6c\n"
".quad 0x2e6464610a312036,0x316c722520343673,0x34316c7225202c30,0x0a3b386c7225202c\n"
".quad 0x6d617261702e646c,0x346625203233662e,0x6336315a5f5b202c,0x6e49746361706d6f\n"
".quad 0x49736c6176726574,0x5f3053665076456a,0x66665f32535f5450,0x5f6a6a5f32536a6a\n"
".quad 0x5d355f6d61726170,0x3220636f6c2e0a3b,0x730a312036313420,0x255b203233662e74\n"
".quad 0x25202c5d30316c72,0x702e646c0a3b3466,0x3436752e6d617261,0x202c35316c722520\n"
".quad 0x6d6f6336315a5f5b,0x65746e4974636170,0x456a49736c617672,0x54505f3053665076\n"
".quad 0x6a6a66665f32535f,0x61705f6a6a5f3253,0x0a3b5d325f6d6172,0x34203220636f6c2e\n"
".quad 0x6464610a31203731,0x6c7225203436732e,0x316c7225202c3131,0x3b386c7225202c35\n"
".quad 0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3331,0x746361706d6f6336\n"
".quad 0x6c61767265746e49,0x53665076456a4973,0x5f32535f54505f30,0x6a5f32536a6a6666\n"
".quad 0x5f6d617261705f6a,0x636f6c2e0a3b5d36,0x3120373134203220,0x203233752e74730a\n"
".quad 0x2c5d31316c72255b,0x6c0a3b3331722520,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x36315a5f5b202c36,0x49746361706d6f63,0x736c61767265746e,0x3053665076456a49\n"
".quad 0x665f32535f54505f,0x6a6a5f32536a6a66,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203831342032,0x203436732e646461,0x25202c32316c7225,0x7225202c36316c72\n"
".quad 0x702e646c0a3b386c,0x3233752e6d617261,0x5b202c3431722520,0x706d6f6336315a5f\n"
".quad 0x7265746e49746361,0x76456a49736c6176,0x5f54505f30536650,0x536a6a66665f3253\n"
".quad 0x7261705f6a6a5f32,0x2e0a3b5d375f6d61,0x3134203220636f6c,0x752e74730a312038\n"
".quad 0x316c72255b203233,0x34317225202c5d32,0x3220636f6c2e0a3b,0x720a322030323420\n"
".quad 0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x7463657369623731,0x614c6c656e72654b\n"
".quad 0x6a5f536650656772,0x536a50666a6a6666,0x30535f535f535f30,0x5f30535f535f535f\n"
".quad 0x30535f30535f3053,0x617261702e0a285f,0x5f203436752e206d,0x636573696237315a\n"
".quad 0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053\n"
".quad 0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30,0x7261702e0a2c305f\n"
".quad 0x203436752e206d61,0x6573696237315a5f,0x6c656e72654b7463,0x536650656772614c\n"
".quad 0x50666a6a66666a5f,0x5f535f535f30536a,0x535f535f535f3053,0x5f30535f30535f30\n"
".quad 0x617261705f5f3053,0x61702e0a2c315f6d,0x3233752e206d6172,0x73696237315a5f20\n"
".quad 0x656e72654b746365,0x6650656772614c6c,0x666a6a66666a5f53,0x535f535f30536a50\n"
".quad 0x5f535f535f30535f,0x30535f30535f3053,0x7261705f5f30535f,0x702e0a2c325f6d61\n"
".quad 0x33662e206d617261,0x696237315a5f2032,0x6e72654b74636573,0x50656772614c6c65\n"
".quad 0x6a6a66666a5f5366,0x5f535f30536a5066,0x535f535f30535f53,0x535f30535f30535f\n"
".quad 0x61705f5f30535f30,0x2e0a2c335f6d6172,0x662e206d61726170,0x6237315a5f203233\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a\n"
".quad 0x5f535f30535f535f,0x5f30535f30535f53,0x705f5f30535f3053,0x0a2c345f6d617261\n"
".quad 0x2e206d617261702e,0x37315a5f20323375,0x654b746365736962,0x6772614c6c656e72\n"
".quad 0x66666a5f53665065,0x5f30536a50666a6a,0x535f30535f535f53,0x30535f30535f535f\n"
".quad 0x5f5f30535f30535f,0x2c355f6d61726170,0x206d617261702e0a,0x315a5f203233752e\n"
".quad 0x4b74636573696237,0x72614c6c656e7265,0x666a5f5366506567,0x30536a50666a6a66\n"
".quad 0x5f30535f535f535f,0x535f30535f535f53,0x5f30535f30535f30,0x365f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233662e20,0x7463657369623731,0x614c6c656e72654b\n"
".quad 0x6a5f536650656772,0x536a50666a6a6666,0x30535f535f535f30,0x5f30535f535f535f\n"
".quad 0x30535f30535f3053,0x5f6d617261705f5f,0x617261702e0a2c37,0x5f203436752e206d\n"
".quad 0x636573696237315a,0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a\n"
".quad 0x535f535f535f3053,0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30\n"
".quad 0x7261702e0a2c385f,0x203436752e206d61,0x6573696237315a5f,0x6c656e72654b7463\n"
".quad 0x536650656772614c,0x50666a6a66666a5f,0x5f535f535f30536a,0x535f535f535f3053\n"
".quad 0x5f30535f30535f30,0x617261705f5f3053,0x61702e0a2c395f6d,0x3436752e206d6172\n"
".quad 0x73696237315a5f20,0x656e72654b746365,0x6650656772614c6c,0x666a6a66666a5f53\n"
".quad 0x535f535f30536a50,0x5f535f535f30535f,0x30535f30535f3053,0x7261705f5f30535f\n"
".quad 0x2e0a2c30315f6d61,0x752e206d61726170,0x6237315a5f203436,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a,0x5f535f30535f535f\n"
".quad 0x5f30535f30535f53,0x705f5f30535f3053,0x2c31315f6d617261,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x4b74636573696237,0x72614c6c656e7265,0x666a5f5366506567\n"
".quad 0x30536a50666a6a66,0x5f30535f535f535f,0x535f30535f535f53,0x5f30535f30535f30\n"
".quad 0x315f6d617261705f,0x617261702e0a2c32,0x5f203436752e206d,0x636573696237315a\n"
".quad 0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053\n"
".quad 0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30,0x61702e0a2c33315f\n"
".quad 0x3436752e206d6172,0x73696237315a5f20,0x656e72654b746365,0x6650656772614c6c\n"
".quad 0x666a6a66666a5f53,0x535f535f30536a50,0x5f535f535f30535f,0x30535f30535f3053\n"
".quad 0x7261705f5f30535f,0x2e0a2c34315f6d61,0x752e206d61726170,0x6237315a5f203436\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a\n"
".quad 0x5f535f30535f535f,0x5f30535f30535f53,0x705f5f30535f3053,0x2c35315f6d617261\n"
".quad 0x206d617261702e0a,0x315a5f203436752e,0x4b74636573696237,0x72614c6c656e7265\n"
".quad 0x666a5f5366506567,0x30536a50666a6a66,0x5f30535f535f535f,0x535f30535f535f53\n"
".quad 0x5f30535f30535f30,0x315f6d617261705f,0x617261702e0a2c36,0x5f203436752e206d\n"
".quad 0x636573696237315a,0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a\n"
".quad 0x535f535f535f3053,0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30\n"
".quad 0x61702e0a2c37315f,0x3436752e206d6172,0x73696237315a5f20,0x656e72654b746365\n"
".quad 0x6650656772614c6c,0x666a6a66666a5f53,0x535f535f30536a50,0x5f535f535f30535f\n"
".quad 0x30535f30535f3053,0x7261705f5f30535f,0x0a290a38315f6d61,0x2e206765722e0a7b\n"
".quad 0x313c662520323366,0x65722e0a3b3e3831,0x25203436662e2067,0x0a3b3e33313c6466\n"
".quad 0x31732e206765722e,0x35373c7372252036,0x206765722e0a3b3e,0x702520646572702e\n"
".quad 0x722e0a3b3e39393c,0x203233732e206765,0x3b3e3738353c7225,0x732e206765722e0a\n"
".quad 0x343c6c7225203436,0x2e090a0a3b3e3833,0x2e20646572616873,0x2034206e67696c61\n"
".quad 0x75635f5f2038622e,0x6c61636f6c5f6164,0x3239315f7261765f,0x6f6e5f33335f3839\n"
".quad 0x5f74736e6f635f6e,0x325b7466656c5f73,0x090a0a3b5d323530,0x206465726168732e\n"
".quad 0x34206e67696c612e,0x635f5f2038622e20,0x61636f6c5f616475,0x39315f7261765f6c\n"
".quad 0x6e5f33335f393932,0x74736e6f635f6e6f,0x74686769725f735f,0x0a3b5d323530325b\n"
".quad 0x65726168732e090a,0x6e67696c612e2064,0x5f2038622e203220,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x32345f3330333931,0x6e6f635f6e6f6e5f,0x66656c5f735f7473\n"
".quad 0x5b746e756f635f74,0x0a0a3b5d36323031,0x6465726168732e09,0x206e67696c612e20\n"
".quad 0x5f5f2038622e2032,0x636f6c5f61647563,0x315f7261765f6c61,0x5f32345f34303339\n"
".quad 0x736e6f635f6e6f6e,0x686769725f735f74,0x5b746e756f635f74,0x0a0a3b5d36323031\n"
".quad 0x6465726168732e09,0x206e67696c612e20,0x5f5f2038622e2032,0x636f6c5f61647563\n"
".quad 0x315f7261765f6c61,0x5f32345f37303339,0x736e6f635f6e6f6e,0x706d6f635f735f74\n"
".quad 0x6c5f6e6f69746361,0x363230315b747369,0x68732e090a0a3b5d,0x6c612e2064657261\n"
".quad 0x752e2034206e6769,0x6475635f5f203233,0x5f6c61636f6c5f61,0x313339315f726176\n"
".quad 0x6e6f6e5f30345f32,0x635f74736e6f635f,0x735f746361706d6f,0x68635f646e6f6365\n"
".quad 0x2e090a0a3b6b6e75,0x2e20646572616873,0x2034206e67696c61,0x635f5f203233752e\n"
".quad 0x61636f6c5f616475,0x39315f7261765f6c,0x6e5f30345f343133,0x74736e6f635f6e6f\n"
".quad 0x7268745f6c6c615f,0x6e6f635f73646165,0x0a3b646567726576,0x65726168732e090a\n"
".quad 0x6e67696c612e2064,0x203233752e203420,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f37313339315f,0x6f635f6e6f6e5f30,0x5f6d756e5f74736e,0x5f73646165726874\n"
".quad 0x0a3b657669746361,0x65726168732e090a,0x6e67696c612e2064,0x203233752e203420\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f30323339315f,0x6f635f6e6f6e5f30\n"
".quad 0x5f6d756e5f74736e,0x5f73646165726874,0x69746361706d6f63,0x732e090a0a3b6e6f\n"
".quad 0x612e206465726168,0x2e2032206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61\n"
".quad 0x393439315f726176,0x6e6f6e5f32345f33,0x735f74736e6f635f,0x706c65685f6c635f\n"
".quad 0x5d363230315b7265,0x6168732e090a0a3b,0x696c612e20646572,0x33752e2034206e67\n"
".quad 0x616475635f5f2032,0x765f6c61636f6c5f,0x37373539315f7261,0x5f6e6f6e5f30345f\n"
".quad 0x756e5f74736e6f63,0x736b636f6c625f6d,0x0a0a3b746c756d5f,0x6465726168732e09\n"
".quad 0x206e67696c612e20,0x5f203233752e2034,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x30345f3837353931,0x6e6f635f6e6f6e5f,0x6d5f6d756e5f7473,0x2e090a0a3b746c75\n"
".quad 0x2e20646572616873,0x2034206e67696c61,0x635f5f203233752e,0x61636f6c5f616475\n"
".quad 0x39315f7261765f6c,0x6e5f30345f393735,0x74736e6f635f6e6f,0x5f74657366666f5f\n"
".quad 0x6d616c5f746c756d,0x6c2e0a0a3b616462,0x363531203720636f,0x752e766f6d0a3120\n"
".quad 0x202c347225203233,0x0a3b782e64697425,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x2c347225202c3533,0x2e766f6d0a3b3220,0x336c722520343675,0x6475635f5f202c36\n"
".quad 0x5f6c61636f6c5f61,0x303339315f726176,0x6e6f6e5f32345f37,0x735f74736e6f635f\n"
".quad 0x746361706d6f635f,0x7473696c5f6e6f69,0x36732e6464610a3b,0x2c37336c72252034\n"
".quad 0x202c36336c722520,0x6d0a3b35336c7225,0x25203631752e766f,0x3b30202c33377372\n"
".quad 0x203720636f6c2e0a,0x74730a3120323032,0x2e6465726168732e,0x6c72255b20363175\n"
".quad 0x737225202c5d3733,0x2e6c756d0a3b3337,0x3233752e65646977,0x202c38336c722520\n"
".quad 0x0a3b34202c347225,0x203436752e766f6d,0x5f202c39336c7225,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x33335f3839323931,0x6e6f635f6e6f6e5f,0x66656c5f735f7473\n"
".quad 0x732e6464610a3b74,0x30346c7225203436,0x2c39336c7225202c,0x0a3b38336c722520\n"
".quad 0x203233752e766f6d,0x30202c3634357225,0x3720636f6c2e0a3b,0x730a312033303220\n"
".quad 0x6465726168732e74,0x72255b203233752e,0x7225202c5d30346c,0x766f6d0a3b363435\n"
".quad 0x6c7225203436752e,0x75635f5f202c3134,0x6c61636f6c5f6164,0x3239315f7261765f\n"
".quad 0x6f6e5f33335f3939,0x5f74736e6f635f6e,0x3b74686769725f73,0x3436732e6464610a\n"
".quad 0x202c32346c722520,0x25202c31346c7225,0x6c2e0a3b38336c72,0x343032203720636f\n"
".quad 0x68732e74730a3120,0x3233752e64657261,0x5d32346c72255b20,0x3b3634357225202c\n"
".quad 0x3436752e766f6d0a,0x202c33346c722520,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f33303339315f,0x6f635f6e6f6e5f32,0x656c5f735f74736e,0x746e756f635f7466\n"
".quad 0x36732e6464610a3b,0x2c34346c72252034,0x202c33346c722520,0x2e0a3b35336c7225\n"
".quad 0x3032203720636f6c,0x732e74730a312035,0x31752e6465726168,0x34346c72255b2036\n"
".quad 0x3337737225202c5d,0x36752e766f6d0a3b,0x2c35346c72252034,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f34303339315f72,0x635f6e6f6e5f3234,0x725f735f74736e6f\n"
".quad 0x756f635f74686769,0x2e6464610a3b746e,0x346c722520343673,0x35346c7225202c36\n"
".quad 0x3b35336c7225202c,0x203720636f6c2e0a,0x74730a3120363032,0x2e6465726168732e\n"
".quad 0x6c72255b20363175,0x737225202c5d3634,0x636f6c2e0a3b3337,0x3120383032203720\n"
".quad 0x6e79732e7261620a,0x6f6c2e0a3b302063,0x2036353120372063,0x33752e766f6d0a31\n"
".quad 0x2c33343572252032,0x3b782e6469742520,0x203720636f6c2e0a,0x65730a3120313132\n"
".quad 0x33732e656e2e7074,0x25202c3570252032,0x3b30202c33343572,0x726220357025400a\n"
".quad 0x325f393142422061,0x61702e646c0a0a3b,0x203233662e6d6172,0x5f5b202c32396625\n"
".quad 0x636573696237315a,0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a\n"
".quad 0x535f535f535f3053,0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30\n"
".quad 0x6f6c2e0a3b5d335f,0x2033313220372063,0x6168732e74730a31,0x203233662e646572\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f38393239315f72,0x635f6e6f6e5f3333\n"
".quad 0x6c5f735f74736e6f,0x6625202c5d746665,0x702e646c0a3b3239,0x3233662e6d617261\n"
".quad 0x5b202c3339662520,0x6573696237315a5f,0x6c656e72654b7463,0x536650656772614c\n"
".quad 0x50666a6a66666a5f,0x5f535f535f30536a,0x535f535f535f3053,0x5f30535f30535f30\n"
".quad 0x617261705f5f3053,0x6c2e0a3b5d345f6d,0x343132203720636f,0x68732e74730a3120\n"
".quad 0x3233662e64657261,0x616475635f5f5b20,0x765f6c61636f6c5f,0x39393239315f7261\n"
".quad 0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x202c5d7468676972,0x646c0a3b33396625\n"
".quad 0x752e6d617261702e,0x3532357225203233,0x6237315a5f5b202c,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a,0x5f535f30535f535f\n"
".quad 0x5f30535f30535f53,0x705f5f30535f3053,0x3b5d355f6d617261,0x203720636f6c2e0a\n"
".quad 0x74730a3120353132,0x2e6465726168732e,0x635f5f5b20363175,0x61636f6c5f616475\n"
".quad 0x39315f7261765f6c,0x6e5f32345f333033,0x74736e6f635f6e6f,0x5f7466656c5f735f\n"
".quad 0x202c5d746e756f63,0x6c0a3b3532357225,0x2e6d617261702e64,0x3235722520323375\n"
".quad 0x37315a5f5b202c36,0x654b746365736962,0x6772614c6c656e72,0x66666a5f53665065\n"
".quad 0x5f30536a50666a6a,0x535f30535f535f53,0x30535f30535f535f,0x5f5f30535f30535f\n"
".quad 0x5d365f6d61726170,0x3720636f6c2e0a3b,0x730a312036313220,0x6465726168732e74\n"
".quad 0x5f5f5b203631752e,0x636f6c5f61647563,0x315f7261765f6c61,0x5f32345f34303339\n"
".quad 0x736e6f635f6e6f6e,0x686769725f735f74,0x5d746e756f635f74,0x3b3632357225202c\n"
".quad 0x3233752e766f6d0a,0x202c353131722520,0x20636f6c2e0a3b30,0x0a31203831322037\n"
".quad 0x65726168732e7473,0x5f5b203233752e64,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x30345f3231333931,0x6e6f635f6e6f6e5f,0x61706d6f635f7473,0x6e6f6365735f7463\n"
".quad 0x5d6b6e7568635f64,0x3b3531317225202c,0x3233752e766f6d0a,0x202c363131722520\n"
".quad 0x20636f6c2e0a3b31,0x0a31203931322037,0x65726168732e7473,0x5f5b203233752e64\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3731333931,0x6e6f635f6e6f6e5f\n"
".quad 0x745f6d756e5f7473,0x615f736461657268,0x202c5d6576697463,0x2e0a3b3631317225\n"
".quad 0x3232203720636f6c,0x732e74730a312031,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x323339315f726176,0x6e6f6e5f30345f30,0x6e5f74736e6f635f\n"
".quad 0x61657268745f6d75,0x61706d6f635f7364,0x202c5d6e6f697463,0x2e0a3b3631317225\n"
".quad 0x3232203720636f6c,0x732e74730a312033,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x313339315f726176,0x6e6f6e5f30345f34,0x615f74736e6f635f\n"
".quad 0x61657268745f6c6c,0x65766e6f635f7364,0x25202c5d64656772,0x420a0a3b36313172\n"
".quad 0x2e0a3a325f393142,0x3232203720636f6c,0x2e7261620a312036,0x0a3b3020636e7973\n"
".quad 0x203233662e766f6d,0x30202c3431316625,0x3030303030303066,0x662e766f6d0a3b30\n"
".quad 0x2c37396625203233,0x0a3b343131662520,0x203233752e766f6d,0x25202c3534357225\n"
".quad 0x6f6d0a3b36343572,0x6625203233662e76,0x316625202c313131,0x2e766f6d0a3b3431\n"
".quad 0x3435722520323375,0x3634357225202c34,0x5f393142420a0a3b,0x662e766f6d0a3a33\n"
".quad 0x3531316625203233,0x3b3431316625202c,0x3233662e766f6d0a,0x202c323131662520\n"
".quad 0x2e0a3b3131316625,0x3332203720636f6c,0x732e646c0a312032,0x33752e6465726168\n"
".quad 0x2c31323172252032,0x616475635f5f5b20,0x765f6c61636f6c5f,0x37313339315f7261\n"
".quad 0x5f6e6f6e5f30345f,0x756e5f74736e6f63,0x6461657268745f6d,0x6576697463615f73\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203736352032,0x2e746c2e70746573,0x2c36702520323375\n"
".quad 0x7225202c34722520,0x7025400a3b313231,0x4242206172622036,0x72620a3b345f3931\n"
".quad 0x424220696e752e61,0x420a0a3b385f3931,0x6d0a3a345f393142,0x2e656469772e6c75\n"
".quad 0x346c722520323375,0x202c347225202c37,0x752e766f6d0a3b34,0x38346c7225203436\n"
".quad 0x616475635f5f202c,0x765f6c61636f6c5f,0x38393239315f7261,0x5f6e6f6e5f33335f\n"
".quad 0x5f735f74736e6f63,0x64610a3b7466656c,0x7225203436732e64,0x6c7225202c39346c\n"
".quad 0x346c7225202c3834,0x752e766f6d0a3b37,0x30356c7225203436,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x39393239315f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63\n"
".quad 0x610a3b7468676972,0x25203436732e6464,0x7225202c31356c72,0x6c7225202c30356c\n"
".quad 0x2e6c756d0a3b3734,0x3233752e65646977,0x202c32356c722520,0x0a3b32202c347225\n"
".quad 0x203436732e646461,0x25202c34356c7225,0x7225202c33346c72,0x6464610a3b32356c\n"
".quad 0x6c7225203436732e,0x346c7225202c3635,0x32356c7225202c35,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312030373520,0x6465726168732e64,0x396625203233662e,0x356c72255b202c37\n"
".quad 0x636f6c2e0a3b5d31,0x3120393635203220,0x726168732e646c0a,0x25203233662e6465\n"
".quad 0x255b202c35313166,0x2e0a3b5d39346c72,0x3735203220636f6c,0x707465730a312035\n"
".quad 0x3233662e75656e2e,0x6625202c37702520,0x396625202c353131,0x20636f6c2e0a3b37\n"
".quad 0x0a31203237352032,0x65726168732e646c,0x7225203631752e64,0x72255b202c353435\n"
".quad 0x6c2e0a3b5d36356c,0x313735203220636f,0x68732e646c0a3120,0x3631752e64657261\n"
".quad 0x202c363435722520,0x3b5d34356c72255b,0x203220636f6c2e0a,0x25400a3120353735\n"
".quad 0x4220617262203770,0x0a0a3b375f393142,0x35203220636f6c2e,0x6275730a31203038\n"
".quad 0x317225203233732e,0x34357225202c3732,0x3634357225202c35,0x672e707465730a3b\n"
".quad 0x7025203233752e74,0x3732317225202c38,0x7025400a3b31202c,0x4242206172622038\n"
".quad 0x72620a3b365f3931,0x424220696e752e61,0x420a0a3b385f3931,0x6d0a3a365f393142\n"
".quad 0x25203233752e766f,0x3b30202c38323172,0x203220636f6c2e0a,0x74730a3120333835\n"
".quad 0x2e6465726168732e,0x635f5f5b20323375,0x61636f6c5f616475,0x39315f7261765f6c\n"
".quad 0x6e5f30345f343133,0x74736e6f635f6e6f,0x7268745f6c6c615f,0x6e6f635f73646165\n"
".quad 0x2c5d646567726576,0x0a3b383231722520,0x20696e752e617262,0x0a3b385f39314242\n"
".quad 0x3a375f393142420a,0x203220636f6c2e0a,0x65730a3120373735,0x33662e746c2e7074\n"
".quad 0x25202c3970252032,0x6630202c35313166,0x3030303030303030,0x662e706c65730a3b\n"
".quad 0x2c34336625203233,0x3030384642663020,0x336630202c303030,0x2c30303030303846\n"
".quad 0x6c2e0a3b39702520,0x373735203220636f,0x2e707465730a3120,0x25203233662e746c\n"
".quad 0x396625202c303170,0x3030306630202c37,0x730a3b3030303030,0x203233662e706c65\n"
".quad 0x6630202c35336625,0x3030303030384642,0x303846336630202c,0x7025202c30303030\n"
".quad 0x636f6c2e0a3b3031,0x3120373735203220,0x71652e707465730a,0x317025203233662e\n"
".quad 0x2c34336625202c31,0x730a3b3533662520,0x25203233662e6275,0x396625202c363366\n"
".quad 0x3531316625202c37,0x6e722e616d660a3b,0x336625203233662e,0x2c36336625202c37\n"
".quad 0x3030304633663020,0x316625202c303030,0x2e6464610a3b3531,0x3833662520323366\n"
".quad 0x2c3531316625202c,0x6d0a3b3739662520,0x25203233662e6c75,0x336625202c393366\n"
".quad 0x3046336630202c38,0x730a3b3030303030,0x203233662e706c65,0x25202c3231316625\n"
".quad 0x336625202c373366,0x3b31317025202c39,0x3233752e766f6d0a,0x202c393231722520\n"
".quad 0x20636f6c2e0a3b30,0x0a31203837352032,0x65726168732e7473,0x5f5b203233752e64\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3431333931,0x6e6f635f6e6f6e5f\n"
".quad 0x745f6c6c615f7473,0x635f736461657268,0x6465677265766e6f,0x3932317225202c5d\n"
".quad 0x5f393142420a0a3b,0x662e766f6d0a3a38,0x3431316625203233,0x3b3531316625202c\n"
".quad 0x3233662e766f6d0a,0x202c313131662520,0x2e0a3b3231316625,0x3332203720636f6c\n"
".quad 0x2e7261620a312037,0x0a3b3020636e7973,0x32203720636f6c2e,0x2e646c0a31203034\n"
".quad 0x752e646572616873,0x3033317225203233,0x6475635f5f5b202c,0x5f6c61636f6c5f61\n"
".quad 0x313339315f726176,0x6e6f6e5f30345f34,0x615f74736e6f635f,0x61657268745f6c6c\n"
".quad 0x65766e6f635f7364,0x730a3b5d64656772,0x732e71652e707465,0x2c32317025203233\n"
".quad 0x202c303331722520,0x32317025400a3b31,0x3142422061726220,0x2e0a0a3b34355f39\n"
".quad 0x3432203720636f6c,0x732e646c0a312039,0x33752e6465726168,0x202c323172252032\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f37313339315f72,0x635f6e6f6e5f3034\n"
".quad 0x6d756e5f74736e6f,0x736461657268745f,0x5d6576697463615f,0x3220636f6c2e0a3b\n"
".quad 0x620a312039313220,0x20636e79732e7261,0x61702e646c0a3b30,0x203233752e6d6172\n"
".quad 0x5b202c3432357225,0x6573696237315a5f,0x6c656e72654b7463,0x536650656772614c\n"
".quad 0x50666a6a66666a5f,0x5f535f535f30536a,0x535f535f535f3053,0x5f30535f30535f30\n"
".quad 0x617261705f5f3053,0x65730a3b5d325f6d,0x33732e71652e7074,0x202c333170252032\n"
".quad 0x30202c3432357225,0x3220636f6c2e0a3b,0x400a312037313220,0x6172622033317025\n"
".quad 0x38315f3931424220,0x20636f6c2e0a0a3b,0x0a31203133322032,0x2e746c2e70746573\n"
".quad 0x2c31702520323375,0x7225202c34722520,0x2e766f6d0a3b3231,0x3839662520323366\n"
".quad 0x303846336630202c,0x6f6d0a3b30303030,0x7225203233752e76,0x0a3b30202c303535\n"
".quad 0x203233752e766f6d,0x25202c3734357225,0x646c0a3b30353572,0x752e6d617261702e\n"
".quad 0x3834357225203233,0x6237315a5f5b202c,0x72654b7463657369,0x656772614c6c656e\n"
".quad 0x6a66666a5f536650,0x535f30536a50666a,0x5f535f30535f535f,0x5f30535f30535f53\n"
".quad 0x705f5f30535f3053,0x3b5d325f6d617261,0x315f393142420a0a,0x20636f6c2e0a3a31\n"
".quad 0x0a31203232322032,0x203233732e646461,0x25202c3533317225,0x34357225202c3472\n"
".quad 0x61702e646c0a3b37,0x203233752e6d6172,0x5b202c3332357225,0x6573696237315a5f\n"
".quad 0x6c656e72654b7463,0x536650656772614c,0x50666a6a66666a5f,0x5f535f535f30536a\n"
".quad 0x535f535f535f3053,0x5f30535f30535f30,0x617261705f5f3053,0x6c2e0a3b5d325f6d\n"
".quad 0x323232203220636f,0x2e707465730a3120,0x25203233752e6567,0x317225202c343170\n"
".quad 0x32357225202c3533,0x34317025400a3b33,0x3142422061726220,0x2e0a0a3b33315f39\n"
".quad 0x3232203220636f6c,0x2e7476630a312034,0x203233752e343675,0x25202c37356c7225\n"
".quad 0x6c2e0a3b37343572,0x323032203720636f,0x752e7476630a3120,0x25203233752e3436\n"
".quad 0x7225202c38356c72,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3231346c7225\n"
".quad 0x73696237315a5f5b,0x656e72654b746365,0x6650656772614c6c,0x666a6a66666a5f53\n"
".quad 0x535f535f30536a50,0x5f535f535f30535f,0x30535f30535f3053,0x7261705f5f30535f\n"
".quad 0x630a3b5d305f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x2c39356c72252034\n"
".quad 0x3b3231346c722520,0x3436732e6464610a,0x202c30366c722520,0x25202c38356c7225\n"
".quad 0x6c2e0a3b37356c72,0x343232203220636f,0x622e6c68730a3120,0x31366c7225203436\n"
".quad 0x2c30366c7225202c,0x2e6464610a3b3220,0x366c722520343673,0x39356c7225202c32\n"
".quad 0x3b31366c7225202c,0x6469772e6c756d0a,0x7225203233752e65,0x347225202c33366c\n"
".quad 0x766f6d0a3b34202c,0x6c7225203436752e,0x75635f5f202c3436,0x6c61636f6c5f6164\n"
".quad 0x3239315f7261765f,0x6f6e5f33335f3839,0x5f74736e6f635f6e,0x0a3b7466656c5f73\n"
".quad 0x203436732e646461,0x25202c35366c7225,0x7225202c34366c72,0x6f6c2e0a3b33366c\n"
".quad 0x2034323220322063,0x6f6c672e646c0a31,0x203233662e6c6162,0x255b202c31346625\n"
".quad 0x730a3b5d32366c72,0x6465726168732e74,0x72255b203233662e,0x6625202c5d35366c\n"
".quad 0x702e646c0a3b3134,0x3436752e6d617261,0x2c3331346c722520,0x696237315a5f5b20\n"
".quad 0x6e72654b74636573,0x50656772614c6c65,0x6a6a66666a5f5366,0x5f535f30536a5066\n"
".quad 0x535f535f30535f53,0x535f30535f30535f,0x61705f5f30535f30,0x0a3b5d315f6d6172\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x36366c7225203436,0x3331346c7225202c\n"
".quad 0x36752e766f6d0a3b,0x2c37366c72252034,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f39393239315f72,0x635f6e6f6e5f3333,0x725f735f74736e6f,0x64610a3b74686769\n"
".quad 0x7225203436732e64,0x6c7225202c38366c,0x366c7225202c3736,0x20636f6c2e0a3b33\n"
".quad 0x0a31203532322032,0x203436732e646461,0x25202c39366c7225,0x7225202c31366c72\n"
".quad 0x2e646c0a3b36366c,0x662e6c61626f6c67,0x2c32346625203233,0x2b39366c72255b20\n"
".quad 0x2e74730a3b5d342d,0x662e646572616873,0x366c72255b203233,0x32346625202c5d38\n"
".quad 0x5f393142420a0a3b,0x636f6c2e0a3a3331,0x3120383232203220,0x6e79732e7261620a\n"
".quad 0x6f6c2e0a3b302063,0x2031333220322063,0x2031702521400a31,0x3931424220617262\n"
".quad 0x6c2e0a0a3b37315f,0x333432203220636f,0x752e766f6d0a3120,0x3134317225203233\n"
".quad 0x2e6469746e25202c,0x20636f6c2e0a3b78,0x0a35203731322033,0x203233752e6e696d\n"
".quad 0x7225202c36317225,0x317225202c383435,0x707465730a3b3134,0x203233732e71652e\n"
".quad 0x7225202c35317025,0x2e0a3b30202c3631,0x3332203220636f6c,0x317025400a312035\n"
".quad 0x4242206172622035,0x0a0a3b37315f3931,0x203233752e766f6d,0x30202c3934357225\n"
".quad 0x36752e766f6d0a3b,0x3433346c72252034,0x3b39336c7225202c,0x3436752e766f6d0a\n"
".quad 0x2c3533346c722520,0x0a3b31346c722520,0x36315f393142420a,0x36752e766f6d0a3a\n"
".quad 0x2c35316c72252034,0x3b3533346c722520,0x3436752e766f6d0a,0x202c34316c722520\n"
".quad 0x0a3b3433346c7225,0x32203220636f6c2e,0x2e646c0a31203633,0x662e646572616873\n"
".quad 0x2c33346625203233,0x5d34316c72255b20,0x33662e6275730a3b,0x202c343466252032\n"
".quad 0x6625202c33346625,0x2e646c0a3b313131,0x662e646572616873,0x2c35346625203233\n"
".quad 0x5d35316c72255b20,0x33662e6c756d0a3b,0x202c363466252032,0x6625202c35346625\n"
".quad 0x636f6c2e0a3b3534,0x2031313331203620,0x6e722e7669640a33,0x346625203233662e\n"
".quad 0x2c36346625202c37,0x2e0a3b3839662520,0x3332203220636f6c,0x2e6275730a312036\n"
".quad 0x3839662520323366,0x202c34346625202c,0x6c2e0a3b37346625,0x383332203220636f\n"
".quad 0x2e707465730a3120,0x25203233662e746c,0x396625202c363170,0x3030306630202c38\n"
".quad 0x730a3b3030303030,0x203233752e706c65,0x31202c3534317225,0x317025202c30202c\n"
".quad 0x20636f6c2e0a3b36,0x0a31203833322032,0x203233732e646461,0x25202c3035357225\n"
".quad 0x7225202c35343172,0x6464610a3b303535,0x6c7225203436732e,0x316c7225202c3631\n"
".quad 0x64610a3b34202c35,0x7225203436732e64,0x6c7225202c37316c,0x2e0a3b34202c3431\n"
".quad 0x3332203220636f6c,0x6464610a37392035,0x357225203233732e,0x34357225202c3934\n"
".quad 0x6c2e0a3b31202c39,0x353332203220636f,0x2e707465730a3120,0x25203233752e746c\n"
".quad 0x357225202c373170,0x36317225202c3934,0x36752e766f6d0a3b,0x3433346c72252034\n"
".quad 0x3b37316c7225202c,0x3436752e766f6d0a,0x2c3533346c722520,0x0a3b36316c722520\n"
".quad 0x7262203731702540,0x315f393142422061,0x393142420a0a3b36,0x6f6c2e0a3a37315f\n"
".quad 0x2033343220322063,0x33752e766f6d0a31,0x2c36343172252032,0x782e6469746e2520\n"
".quad 0x33732e6275730a3b,0x2c38343572252032,0x202c383435722520,0x2e0a3b3634317225\n"
".quad 0x3132203220636f6c,0x6464610a37312037,0x357225203233732e,0x34317225202c3734\n"
".quad 0x3734357225202c36,0x7261702e646c0a3b,0x25203233752e6d61,0x5f5b202c32323572\n"
".quad 0x636573696237315a,0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a\n"
".quad 0x535f535f535f3053,0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30\n"
".quad 0x6f6c2e0a3b5d325f,0x2037313220322063,0x6c2e707465730a31,0x7025203233752e74\n"
".quad 0x3734357225202c32,0x3b3232357225202c,0x203220636f6c2e0a,0x61620a3120393132\n"
".quad 0x3020636e79732e72,0x6220327025400a3b,0x5f39314242206172,0x2e6172620a3b3131\n"
".quad 0x3931424220696e75,0x42420a0a3b39315f,0x6d0a3a38315f3931,0x25203233752e766f\n"
".quad 0x3b30202c30353572,0x315f393142420a0a,0x20636f6c2e0a3a39,0x0a31203537322037\n"
".quad 0x65726168732e646c,0x7225203233752e64,0x5f5f5b202c383431,0x636f6c5f61647563\n"
".quad 0x315f7261765f6c61,0x5f30345f37313339,0x736e6f635f6e6f6e,0x68745f6d756e5f74\n"
".quad 0x63615f7364616572,0x730a3b5d65766974,0x752e746c2e707465,0x2c38317025203233\n"
".quad 0x7225202c34722520,0x7025400a3b383431,0x4220617262203831,0x0a3b30325f393142\n"
".quad 0x20696e752e617262,0x3b34335f39314242,0x325f393142420a0a,0x20636f6c2e0a3a30\n"
".quad 0x0a31203737322037,0x75656e2e70746573,0x317025203233662e,0x3431316625202c39\n"
".quad 0x0a3b37396625202c,0x7262203931702540,0x325f393142422061,0x2e6c756d0a0a3b32\n"
".quad 0x3233752e65646977,0x202c32376c722520,0x0a3b34202c347225,0x203436752e766f6d\n"
".quad 0x5f202c33376c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x33335f3839323931\n"
".quad 0x6e6f635f6e6f6e5f,0x66656c5f735f7473,0x732e6464610a3b74,0x34376c7225203436\n"
".quad 0x2c33376c7225202c,0x0a3b32376c722520,0x32203720636f6c2e,0x2e74730a31203439\n"
".quad 0x662e646572616873,0x376c72255b203233,0x31316625202c5d34,0x752e766f6d0a3b34\n"
".quad 0x35376c7225203436,0x616475635f5f202c,0x765f6c61636f6c5f,0x39393239315f7261\n"
".quad 0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x610a3b7468676972,0x25203436732e6464\n"
".quad 0x7225202c36376c72,0x6c7225202c35376c,0x636f6c2e0a3b3237,0x3120353932203720\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x202c5d36376c7225,0x6d0a3b3431316625\n"
".quad 0x2e656469772e6c75,0x376c722520323375,0x202c347225202c37,0x732e6464610a3b32\n"
".quad 0x39376c7225203436,0x2c33346c7225202c,0x0a3b37376c722520,0x32203720636f6c2e\n"
".quad 0x2e74730a31203639,0x752e646572616873,0x376c72255b203631,0x34357225202c5d39\n"
".quad 0x732e6464610a3b36,0x31386c7225203436,0x2c35346c7225202c,0x0a3b37376c722520\n"
".quad 0x32203720636f6c2e,0x2e74730a31203739,0x752e646572616873,0x386c72255b203631\n"
".quad 0x34357225202c5d31,0x752e766f6d0a3b35,0x3434357225203233,0x6172620a3b30202c\n"
".quad 0x31424220696e752e,0x420a0a3b34335f39,0x0a3a32325f393142,0x32203720636f6c2e\n"
".quad 0x7476630a31203038,0x3233752e3631752e,0x25202c3173722520,0x76630a3b36343572\n"
".quad 0x33752e3631752e74,0x202c327372252032,0x630a3b3035357225,0x752e3631752e7476\n"
".quad 0x2c33737225203233,0x0a3b353435722520,0x203233622e726f78,0x25202c3535317225\n"
".quad 0x7225202c30353572,0x646e610a3b363435,0x327225203233622e,0x3535317225202c36\n"
".quad 0x3b3533353536202c,0x3233622e726f780a,0x202c363531722520,0x25202c3035357225\n"
".quad 0x6e610a3b35343572,0x7225203233622e64,0x317225202c373531,0x33353536202c3635\n"
".quad 0x20636f6c2e0a3b35,0x0a31203438382037,0x2e656e2e70746573,0x3032702520323373\n"
".quad 0x2c3735317225202c,0x707465730a3b3020,0x203233732e656e2e,0x7225202c31327025\n"
".quad 0x610a3b30202c3632,0x20646572702e646e,0x7025202c32327025,0x31327025202c3032\n"
".quad 0x3720636f6c2e0a3b,0x400a312034383820,0x6172622032327025,0x30335f3931424220\n"
".quad 0x772e6c756d0a0a3b,0x203233752e656469,0x25202c32386c7225,0x610a3b32202c3472\n"
".quad 0x25203436732e6464,0x7225202c34386c72,0x6c7225202c36336c,0x636f6c2e0a3b3238\n"
".quad 0x3120393938203720,0x726168732e74730a,0x5b203631752e6465,0x5d322b34386c7225\n"
".quad 0x3b3337737225202c,0x203720636f6c2e0a,0x65730a3120323039,0x33732e71652e7074\n"
".quad 0x202c333270252032,0x3b30202c36327225,0x622033327025400a,0x5f39314242206172\n"
".quad 0x6c756d0a0a3b3732,0x33752e656469772e,0x2c35386c72252032,0x3b32202c34722520\n"
".quad 0x3436732e6464610a,0x202c37386c722520,0x25202c33346c7225,0x6c2e0a3b35386c72\n"
".quad 0x333031203220636f,0x68732e74730a3120,0x3631752e64657261,0x5d37386c72255b20\n"
".quad 0x0a3b31737225202c,0x203436732e646461,0x25202c39386c7225,0x7225202c35346c72\n"
".quad 0x6f6c2e0a3b35386c,0x2034303120322063,0x6168732e74730a31,0x203631752e646572\n"
".quad 0x2c5d39386c72255b,0x2e0a3b3273722520,0x3031203220636f6c,0x2e6275730a312037\n"
".quad 0x3731662520323366,0x2c3131316625202c,0x0a3b343131662520,0x33203320636f6c2e\n"
".quad 0x7362610a35203539,0x346625203233662e,0x3b37316625202c38,0x203320636f6c2e0a\n"
".quad 0x62610a3520353933,0x6625203233662e73,0x31316625202c3934,0x662e7362610a3b31\n"
".quad 0x2c30356625203233,0x0a3b343131662520,0x34203320636f6c2e,0x78616d0a35203533\n"
".quad 0x356625203233662e,0x2c30356625202c31,0x6c0a3b3934662520,0x2e6d617261702e64\n"
".quad 0x3639662520323366,0x6237315a5f5b202c,0x72654b7463657369,0x656772614c6c656e\n"
".quad 0x6a66666a5f536650,0x535f30536a50666a,0x5f535f30535f535f,0x5f30535f30535f53\n"
".quad 0x705f5f30535f3053,0x3b5d375f6d617261,0x203220636f6c2e0a,0x756d0a3120383031\n"
".quad 0x6625203233662e6c,0x31356625202c3235,0x0a3b36396625202c,0x31203220636f6c2e\n"
".quad 0x7476630a31203930,0x3233662e3436662e,0x25202c3164662520,0x7476630a3b383466\n"
".quad 0x3233662e3436662e,0x25202c3264662520,0x766f6d0a3b323566,0x646625203436662e\n"
".quad 0x3638336430202c33,0x3233393438343435,0x2e0a3b3237453244,0x3634203320636f6c\n"
".quad 0x2e78616d0a352034,0x3464662520343666,0x202c33646625202c,0x6c2e0a3b32646625\n"
".quad 0x393031203220636f,0x2e707465730a3120,0x203436662e757467,0x6625202c34327025\n"
".quad 0x34646625202c3164,0x2034327025400a3b,0x3931424220617262,0x6c2e0a0a3b36325f\n"
".quad 0x323131203220636f,0x2e707465730a3120,0x25203233662e746c,0x316625202c353270\n"
".quad 0x30306630202c3431,0x0a3b303030303030,0x3233662e706c6573,0x30202c3335662520\n"
".quad 0x3030303038464266,0x3846336630202c30,0x25202c3030303030,0x6f6c2e0a3b353270\n"
".quad 0x2032313120322063,0x6c2e707465730a31,0x7025203233662e74,0x31316625202c3632\n"
".quad 0x3030306630202c31,0x730a3b3030303030,0x203233662e706c65,0x6630202c34356625\n"
".quad 0x3030303030384642,0x303846336630202c,0x7025202c30303030,0x636f6c2e0a3b3632\n"
".quad 0x3120323131203220,0x71652e707465730a,0x327025203233662e,0x2c33356625202c37\n"
".quad 0x660a3b3435662520,0x33662e6e722e616d,0x202c353566252032,0x6630202c37316625\n"
".quad 0x3030303030304633,0x3b3431316625202c,0x3233662e6464610a,0x25202c3635662520\n"
".quad 0x6625202c34313166,0x6c756d0a3b313131,0x356625203233662e,0x2c36356625202c37\n"
".quad 0x3030304633663020,0x6c65730a3b303030,0x6625203233662e70,0x35356625202c3835\n"
".quad 0x202c37356625202c,0x756d0a3b37327025,0x752e656469772e6c,0x30396c7225203233\n"
".quad 0x34202c347225202c,0x36752e766f6d0a3b,0x2c31396c72252034,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f38393239315f72,0x635f6e6f6e5f3333,0x6c5f735f74736e6f\n"
".quad 0x6464610a3b746665,0x6c7225203436732e,0x396c7225202c3239,0x30396c7225202c31\n"
".quad 0x3220636f6c2e0a3b,0x730a312035313120,0x6465726168732e74,0x72255b203233662e\n"
".quad 0x6625202c5d32396c,0x2e766f6d0a3b3835,0x396c722520343675,0x6475635f5f202c33\n"
".quad 0x5f6c61636f6c5f61,0x393239315f726176,0x6e6f6e5f33335f39,0x735f74736e6f635f\n"
".quad 0x0a3b74686769725f,0x203436732e646461,0x25202c34396c7225,0x7225202c33396c72\n"
".quad 0x6f6c2e0a3b30396c,0x2036313120322063,0x6168732e74730a31,0x203233662e646572\n"
".quad 0x2c5d34396c72255b,0x6d0a3b3835662520,0x25203233752e766f,0x3b30202c34343572\n"
".quad 0x696e752e6172620a,0x34335f3931424220,0x5f393142420a0a3b,0x2e6c756d0a3a3632\n"
".quad 0x3233752e65646977,0x202c35396c722520,0x0a3b34202c347225,0x203436752e766f6d\n"
".quad 0x5f202c36396c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x33335f3839323931\n"
".quad 0x6e6f635f6e6f6e5f,0x66656c5f735f7473,0x732e6464610a3b74,0x37396c7225203436\n"
".quad 0x2c36396c7225202c,0x0a3b35396c722520,0x31203220636f6c2e,0x2e74730a31203132\n"
".quad 0x662e646572616873,0x396c72255b203233,0x31316625202c5d37,0x752e766f6d0a3b34\n"
".quad 0x38396c7225203436,0x616475635f5f202c,0x765f6c61636f6c5f,0x39393239315f7261\n"
".quad 0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x610a3b7468676972,0x25203436732e6464\n"
".quad 0x7225202c39396c72,0x6c7225202c38396c,0x636f6c2e0a3b3539,0x3120323231203220\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x202c5d39396c7225,0x6d0a3b3131316625\n"
".quad 0x25203233752e766f,0x3b30202c34343572,0x696e752e6172620a,0x34335f3931424220\n"
".quad 0x5f393142420a0a3b,0x2e6c756d0a3a3732,0x3233752e65646977,0x2c3030316c722520\n"
".quad 0x3b32202c34722520,0x3436732e6464610a,0x2c3230316c722520,0x202c33346c722520\n"
".quad 0x0a3b3030316c7225,0x31203220636f6c2e,0x2e74730a31203330,0x752e646572616873\n"
".quad 0x316c72255b203631,0x737225202c5d3230,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x35346c7225202c34,0x3030316c7225202c,0x3220636f6c2e0a3b,0x730a312034303120\n"
".quad 0x6465726168732e74,0x72255b203631752e,0x25202c5d3430316c,0x6f6c2e0a3b337372\n"
".quad 0x2037303120322063,0x33662e6275730a31,0x202c383166252032,0x6625202c37396625\n"
".quad 0x6f6c2e0a3b313131,0x2035393320332063,0x33662e7362610a35,0x202c393566252032\n"
".quad 0x6c2e0a3b38316625,0x353933203320636f,0x662e7362610a3520,0x2c30366625203233\n"
".quad 0x610a3b3739662520,0x25203233662e7362,0x316625202c313666,0x636f6c2e0a3b3131\n"
".quad 0x3520353334203320,0x3233662e78616d0a,0x25202c3236662520,0x366625202c313666\n"
".quad 0x61702e646c0a3b30,0x203233662e6d6172,0x5f5b202c35396625,0x636573696237315a\n"
".quad 0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053\n"
".quad 0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30,0x6f6c2e0a3b5d375f\n"
".quad 0x2038303120322063,0x33662e6c756d0a31,0x202c333666252032,0x6625202c32366625\n"
".quad 0x636f6c2e0a3b3539,0x3120393031203220,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3b39356625202c35,0x3436662e7476630a,0x646625203233662e,0x3b33366625202c36\n"
".quad 0x3436662e766f6d0a,0x30202c3764662520,0x3834343536383364,0x3745324432333934\n"
".quad 0x20636f6c2e0a3b32,0x0a35203436342033,0x203436662e78616d,0x6625202c38646625\n"
".quad 0x36646625202c3764,0x3220636f6c2e0a3b,0x730a312039303120,0x2e7574672e707465\n"
".quad 0x3832702520343666,0x202c35646625202c,0x25400a3b38646625,0x2061726220383270\n"
".quad 0x3b39325f39314242,0x3220636f6c2e0a0a,0x730a312032313120,0x662e746c2e707465\n"
".quad 0x2c39327025203233,0x202c313131662520,0x3030303030306630,0x706c65730a3b3030\n"
".quad 0x366625203233662e,0x3846426630202c34,0x30202c3030303030,0x3030303038463366\n"
".quad 0x3b39327025202c30,0x203220636f6c2e0a,0x65730a3120323131,0x33662e746c2e7074\n"
".quad 0x202c303370252032,0x6630202c37396625,0x3030303030303030,0x662e706c65730a3b\n"
".quad 0x2c35366625203233,0x3030384642663020,0x336630202c303030,0x2c30303030303846\n"
".quad 0x2e0a3b3033702520,0x3131203220636f6c,0x707465730a312032,0x203233662e71652e\n"
".quad 0x6625202c31337025,0x35366625202c3436,0x6e722e616d660a3b,0x366625203233662e\n"
".quad 0x2c38316625202c36,0x3030304633663020,0x316625202c303030,0x2e6464610a3b3131\n"
".quad 0x3736662520323366,0x2c3131316625202c,0x6d0a3b3739662520,0x25203233662e6c75\n"
".quad 0x366625202c383666,0x3046336630202c37,0x730a3b3030303030,0x203233662e706c65\n"
".quad 0x6625202c39366625,0x38366625202c3636,0x0a3b31337025202c,0x656469772e6c756d\n"
".quad 0x6c7225203233752e,0x347225202c353031,0x766f6d0a3b34202c,0x6c7225203436752e\n"
".quad 0x635f5f202c363031,0x61636f6c5f616475,0x39315f7261765f6c,0x6e5f33335f383932\n"
".quad 0x74736e6f635f6e6f,0x3b7466656c5f735f,0x3436732e6464610a,0x2c3730316c722520\n"
".quad 0x2c3630316c722520,0x3b3530316c722520,0x203220636f6c2e0a,0x74730a3120353131\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d373031,0x2e766f6d0a3b3936\n"
".quad 0x316c722520343675,0x75635f5f202c3830,0x6c61636f6c5f6164,0x3239315f7261765f\n"
".quad 0x6f6e5f33335f3939,0x5f74736e6f635f6e,0x3b74686769725f73,0x3436732e6464610a\n"
".quad 0x2c3930316c722520,0x2c3830316c722520,0x3b3530316c722520,0x203220636f6c2e0a\n"
".quad 0x74730a3120363131,0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d393031\n"
".quad 0x2e766f6d0a3b3936,0x3435722520323375,0x72620a3b30202c34,0x424220696e752e61\n"
".quad 0x0a0a3b34335f3931,0x3a39325f39314242,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x7225202c3031316c,0x6f6d0a3b34202c34,0x7225203436752e76,0x5f5f202c3131316c\n"
".quad 0x636f6c5f61647563,0x315f7261765f6c61,0x5f33335f38393239,0x736e6f635f6e6f6e\n"
".quad 0x7466656c5f735f74,0x36732e6464610a3b,0x3231316c72252034,0x3131316c7225202c\n"
".quad 0x3031316c7225202c,0x3220636f6c2e0a3b,0x730a312031323120,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x25202c5d3231316c,0x6f6d0a3b31313166,0x7225203436752e76\n"
".quad 0x5f5f202c3331316c,0x636f6c5f61647563,0x315f7261765f6c61,0x5f33335f39393239\n"
".quad 0x736e6f635f6e6f6e,0x686769725f735f74,0x732e6464610a3b74,0x31316c7225203436\n"
".quad 0x31316c7225202c34,0x31316c7225202c33,0x20636f6c2e0a3b30,0x0a31203232312032\n"
".quad 0x65726168732e7473,0x255b203233662e64,0x202c5d3431316c72,0x6f6d0a3b37396625\n"
".quad 0x7225203233752e76,0x0a3b30202c343435,0x20696e752e617262,0x3b34335f39314242\n"
".quad 0x335f393142420a0a,0x772e6c756d0a3a30,0x203233752e656469,0x202c3531316c7225\n"
".quad 0x0a3b32202c347225,0x203436732e646461,0x202c3731316c7225,0x25202c33346c7225\n"
".quad 0x2e0a3b3531316c72,0x3031203220636f6c,0x732e74730a312033,0x31752e6465726168\n"
".quad 0x31316c72255b2036,0x31737225202c5d37,0x36732e6464610a3b,0x3931316c72252034\n"
".quad 0x2c35346c7225202c,0x3b3531316c722520,0x203220636f6c2e0a,0x74730a3120343031\n"
".quad 0x2e6465726168732e,0x6c72255b20363175,0x7225202c5d393131,0x636f6c2e0a3b3273\n"
".quad 0x3120373031203220,0x3233662e6275730a,0x25202c3931662520,0x6625202c31313166\n"
".quad 0x6f6c2e0a3b343131,0x2035393320332063,0x33662e7362610a35,0x202c303766252032\n"
".quad 0x6c2e0a3b39316625,0x353933203320636f,0x662e7362610a3520,0x2c31376625203233\n"
".quad 0x0a3b313131662520,0x203233662e736261,0x6625202c32376625,0x6f6c2e0a3b343131\n"
".quad 0x2035333420332063,0x33662e78616d0a35,0x202c333766252032,0x6625202c32376625\n"
".quad 0x702e646c0a3b3137,0x3233662e6d617261,0x5b202c3439662520,0x6573696237315a5f\n"
".quad 0x6c656e72654b7463,0x536650656772614c,0x50666a6a66666a5f,0x5f535f535f30536a\n"
".quad 0x535f535f535f3053,0x5f30535f30535f30,0x617261705f5f3053,0x6c2e0a3b5d375f6d\n"
".quad 0x383031203220636f,0x662e6c756d0a3120,0x2c34376625203233,0x25202c3337662520\n"
".quad 0x6f6c2e0a3b343966,0x2039303120322063,0x36662e7476630a31,0x6625203233662e34\n"
".quad 0x30376625202c3964,0x36662e7476630a3b,0x6625203233662e34,0x376625202c303164\n"
".quad 0x662e766f6d0a3b34,0x3131646625203436,0x353638336430202c,0x4432333934383434\n"
".quad 0x6c2e0a3b32374532,0x343634203320636f,0x662e78616d0a3520,0x3231646625203436\n"
".quad 0x2c3131646625202c,0x0a3b303164662520,0x31203220636f6c2e,0x7465730a31203930\n"
".quad 0x36662e7574672e70,0x202c323370252034,0x6625202c39646625,0x7025400a3b323164\n"
".quad 0x4220617262203233,0x0a3b32335f393142,0x203220636f6c2e0a,0x65730a3120323131\n"
".quad 0x33662e746c2e7074,0x202c333370252032,0x30202c3431316625,0x3030303030303066\n"
".quad 0x2e706c65730a3b30,0x3537662520323366,0x303846426630202c,0x6630202c30303030\n"
".quad 0x3030303030384633,0x0a3b33337025202c,0x31203220636f6c2e,0x7465730a31203231\n"
".quad 0x3233662e746c2e70,0x25202c3433702520,0x6630202c31313166,0x3030303030303030\n"
".quad 0x662e706c65730a3b,0x2c36376625203233,0x3030384642663020,0x336630202c303030\n"
".quad 0x2c30303030303846,0x2e0a3b3433702520,0x3131203220636f6c,0x707465730a312032\n"
".quad 0x203233662e71652e,0x6625202c35337025,0x36376625202c3537,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x2c39316625202c37,0x3030304633663020,0x316625202c303030\n"
".quad 0x2e6464610a3b3431,0x3837662520323366,0x2c3431316625202c,0x0a3b313131662520\n"
".quad 0x203233662e6c756d,0x6625202c39376625,0x46336630202c3837,0x0a3b303030303030\n"
".quad 0x3233662e706c6573,0x202c303131662520,0x6625202c37376625,0x35337025202c3937\n"
".quad 0x33662e766f6d0a3b,0x2c33313166252032,0x0a3b303131662520,0x20696e752e617262\n"
".quad 0x3b33335f39314242,0x335f393142420a0a,0x662e766f6d0a3a32,0x3031316625203233\n"
".quad 0x3b3131316625202c,0x3233662e766f6d0a,0x202c333131662520,0x0a0a3b3431316625\n"
".quad 0x3a33335f39314242,0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3032316c\n"
".quad 0x6f6d0a3b34202c34,0x7225203436752e76,0x5f5f202c3132316c,0x636f6c5f61647563\n"
".quad 0x315f7261765f6c61,0x5f33335f38393239,0x736e6f635f6e6f6e,0x7466656c5f735f74\n"
".quad 0x36732e6464610a3b,0x3232316c72252034,0x3132316c7225202c,0x3032316c7225202c\n"
".quad 0x6168732e74730a3b,0x203233662e646572,0x5d3232316c72255b,0x3b3331316625202c\n"
".quad 0x3436752e766f6d0a,0x2c3332316c722520,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f39393239315f72,0x635f6e6f6e5f3333,0x725f735f74736e6f,0x64610a3b74686769\n"
".quad 0x7225203436732e64,0x7225202c3432316c,0x7225202c3332316c,0x74730a3b3032316c\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d343231,0x6c756d0a3b303131\n"
".quad 0x33752e656469772e,0x3532316c72252032,0x32202c347225202c,0x36732e6464610a3b\n"
".quad 0x3732316c72252034,0x2c36336c7225202c,0x3b3532316c722520,0x3631752e766f6d0a\n"
".quad 0x202c383173722520,0x20636f6c2e0a3b31,0x0a31203039382037,0x65726168732e7473\n"
".quad 0x255b203631752e64,0x5d322b3732316c72,0x3b3831737225202c,0x3233752e766f6d0a\n"
".quad 0x202c343435722520,0x20636f6c2e0a3b31,0x0a31203139382037,0x65726168732e7473\n"
".quad 0x5f5b203233752e64,0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3231333931\n"
".quad 0x6e6f635f6e6f6e5f,0x61706d6f635f7473,0x6e6f6365735f7463,0x5d6b6e7568635f64\n"
".quad 0x3b3434357225202c,0x335f393142420a0a,0x20636f6c2e0a3a34,0x0a31203430332037\n"
".quad 0x636e79732e726162,0x636f6c2e0a3b3020,0x3120393033203720,0x726168732e646c0a\n"
".quad 0x25203233752e6465,0x5f5b202c30393172,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x30345f3231333931,0x6e6f635f6e6f6e5f,0x61706d6f635f7473,0x6e6f6365735f7463\n"
".quad 0x5d6b6e7568635f64,0x652e707465730a3b,0x7025203233732e71,0x39317225202c3633\n"
".quad 0x6c2e0a3b30202c30,0x393033203720636f,0x36337025400a3120,0x3142422061726220\n"
".quad 0x2e0a0a3b39345f39,0x3133203720636f6c,0x732e646c0a312032,0x33752e6465726168\n"
".quad 0x202c383272252032,0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f30323339315f72\n"
".quad 0x635f6e6f6e5f3034,0x6d756e5f74736e6f,0x736461657268745f,0x746361706d6f635f\n"
".quad 0x6c2e0a3b5d6e6f69,0x333433203220636f,0x752e7268730a3120,0x3135357225203233\n"
".quad 0x202c38327225202c,0x2e707465730a3b31,0x25203233732e7165,0x357225202c373370\n"
".quad 0x2e0a3b30202c3135,0x3433203220636f6c,0x337025400a312033,0x4242206172622037\n"
".quad 0x0a0a3b31345f3931,0x203233752e766f6d,0x31202c3735357225,0x5f393142420a0a3b\n"
".quad 0x636f6c2e0a3a3733,0x3120353433203220,0x6e79732e7261620a,0x6f6c2e0a3b302063\n"
".quad 0x2037343320322063,0x672e707465730a31,0x7025203233752e65,0x2c347225202c3833\n"
".quad 0x0a3b313535722520,0x7262203833702540,0x335f393142422061,0x2e6c68730a0a3b39\n"
".quad 0x3931722520323362,0x202c347225202c33,0x20636f6c2e0a3b31,0x0a31203934332032\n"
".quad 0x25203233622e726f,0x7225202c34393172,0x0a3b31202c333931,0x732e6f6c2e64616d\n"
".quad 0x3539317225203233,0x2c3735357225202c,0x202c343931722520,0x636f6c2e0a3b312d\n"
".quad 0x3120303533203220,0x3233732e6464610a,0x202c363931722520,0x32202c3339317225\n"
".quad 0x6f6c2e64616d0a3b,0x317225203233732e,0x35357225202c3739,0x3639317225202c37\n"
".quad 0x756d0a3b312d202c,0x752e656469772e6c,0x32316c7225203233,0x3539317225202c38\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303331,0x6c7225202c383231\n"
".quad 0x636f6c2e0a3b3633,0x3120323533203220,0x726168732e646c0a,0x25203631752e6465\n"
".quad 0x255b202c39317372,0x5d322b3033316c72,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3133316c72,0x3b32202c37393172,0x3436732e6464610a,0x2c3233316c722520\n"
".quad 0x2c3133316c722520,0x0a3b36336c722520,0x33203220636f6c2e,0x2e646c0a31203235\n"
".quad 0x752e646572616873,0x3032737225203631,0x33316c72255b202c,0x64610a3b5d322b32\n"
".quad 0x7225203631732e64,0x737225202c313273,0x32737225202c3931,0x20636f6c2e0a3b30\n"
".quad 0x0a31203235332032,0x65726168732e7473,0x255b203631752e64,0x5d322b3233316c72\n"
".quad 0x3b3132737225202c,0x335f393142420a0a,0x20636f6c2e0a3a39,0x0a31203635332032\n"
".quad 0x203233622e6c6873,0x25202c3735357225,0x3b31202c37353572,0x203220636f6c2e0a\n"
".quad 0x730a373120333433,0x25203233732e7268,0x7225202c31353572,0x0a3b31202c313535\n"
".quad 0x33203220636f6c2e,0x7465730a31203334,0x3233732e74672e70,0x25202c3933702520\n"
".quad 0x3b30202c31353572,0x622039337025400a,0x5f39314242206172,0x766f6d0a0a3b3733\n"
".quad 0x357225203233752e,0x35357225202c3635,0x752e6172620a3b37,0x5f3931424220696e\n"
".quad 0x3142420a0a3b3234,0x6f6d0a3a31345f39,0x7225203233752e76,0x0a3b31202c363535\n"
".quad 0x32345f393142420a,0x33752e766f6d0a3a,0x2c35353572252032,0x0a3b363535722520\n"
".quad 0x33203220636f6c2e,0x7465730a31203036,0x3233752e746c2e70,0x25202c3034702520\n"
".quad 0x0a3b33202c383272,0x7262203034702540,0x345f393142422061,0x2e766f6d0a0a3b37\n"
".quad 0x3535722520323375,0x420a0a3b32202c32,0x0a3a34345f393142,0x203233752e766f6d\n"
".quad 0x7225202c36337225,0x6f6c2e0a3b353535,0x2032363320322063,0x33752e7268730a31\n"
".quad 0x202c373372252032,0x3b31202c36337225,0x203220636f6c2e0a,0x61620a3120333633\n"
".quad 0x3020636e79732e72,0x33732e6464610a3b,0x2c33303272252032,0x202c323535722520\n"
".quad 0x636f6c2e0a3b312d,0x3120353633203220,0x65672e707465730a,0x347025203233752e\n"
".quad 0x202c347225202c31,0x400a3b3330327225,0x6172622031347025,0x36345f3931424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203736332032,0x203233732e646461,0x25202c3530327225\n"
".quad 0x6d0a3b31202c3472,0x33732e6f6c2e6461,0x2c36303272252032,0x25202c3733722520\n"
".quad 0x312d202c35303272,0x33752e7268730a3b,0x2c37303272252032,0x32202c3633722520\n"
".quad 0x3220636f6c2e0a3b,0x610a312038363320,0x25203233732e6464,0x7225202c38303272\n"
".quad 0x327225202c363032,0x2e6c756d0a3b3730,0x3233752e65646977,0x2c3333316c722520\n"
".quad 0x202c363032722520,0x732e6464610a3b32,0x33316c7225203436,0x33316c7225202c35\n"
".quad 0x36336c7225202c33,0x3220636f6c2e0a3b,0x6c0a312030373320,0x6465726168732e64\n"
".quad 0x737225203631752e,0x6c72255b202c3232,0x0a3b5d322b353331,0x656469772e6c756d\n"
".quad 0x6c7225203233752e,0x327225202c363331,0x610a3b32202c3830,0x25203436732e6464\n"
".quad 0x25202c3733316c72,0x25202c3633316c72,0x6c2e0a3b36336c72,0x303733203220636f\n"
".quad 0x68732e646c0a3120,0x3631752e64657261,0x202c333273722520,0x2b3733316c72255b\n"
".quad 0x2e6464610a3b5d32,0x3273722520363173,0x3232737225202c34,0x3b3332737225202c\n"
".quad 0x203220636f6c2e0a,0x74730a3120303733,0x2e6465726168732e,0x6c72255b20363175\n"
".quad 0x202c5d322b373331,0x0a0a3b3432737225,0x3a36345f39314242,0x203220636f6c2e0a\n"
".quad 0x730a303520303633,0x25203233622e6c68,0x7225202c32353572,0x0a3b31202c323535\n"
".quad 0x33203220636f6c2e,0x7465730a31203036,0x3233752e746c2e70,0x25202c3234702520\n"
".quad 0x7225202c32353572,0x2e766f6d0a3b3832,0x3535722520323375,0x3b37337225202c35\n"
".quad 0x203220636f6c2e0a,0x25400a3120303633,0x2061726220323470,0x3b34345f39314242\n"
".quad 0x345f393142420a0a,0x20636f6c2e0a3a37,0x0a31203537332032,0x636e79732e726162\n"
".quad 0x636f6c2e0a3b3020,0x3120343133203720,0x726168732e646c0a,0x25203233752e6465\n"
".quad 0x5f5f5b202c393372,0x636f6c5f61647563,0x315f7261765f6c61,0x5f30345f37313339\n"
".quad 0x736e6f635f6e6f6e,0x68745f6d756e5f74,0x63615f7364616572,0x2e0a3b5d65766974\n"
".quad 0x3134203220636f6c,0x707465730a312031,0x203233752e746c2e,0x7225202c33347025\n"
".quad 0x3b39337225202c34,0x71652e707465730a,0x347025203233732e,0x3434357225202c34\n"
".quad 0x646e610a3b31202c,0x702520646572702e,0x33347025202c3534,0x0a3b34347025202c\n"
".quad 0x34203220636f6c2e,0x2521400a31203131,0x2061726220353470,0x3b39345f39314242\n"
".quad 0x69772e6c756d0a0a,0x25203233752e6564,0x25202c3833316c72,0x610a3b32202c3472\n"
".quad 0x25203436732e6464,0x25202c3034316c72,0x7225202c36336c72,0x6c2e0a3b3833316c\n"
".quad 0x333134203220636f,0x68732e646c0a3120,0x3631752e64657261,0x202c343132722520\n"
".quad 0x5d3034316c72255b,0x33732e6464610a3b,0x2c36313272252032,0x202c343132722520\n"
".quad 0x756d0a3b39337225,0x752e656469772e6c,0x34316c7225203233,0x3631327225202c31\n"
".quad 0x766f6d0a3b34202c,0x6c7225203436752e,0x635f5f202c323431,0x61636f6c5f616475\n"
".quad 0x39315f7261765f6c,0x6e5f33335f383932,0x74736e6f635f6e6f,0x3b7466656c5f735f\n"
".quad 0x3436732e6464610a,0x2c3334316c722520,0x2c3234316c722520,0x3b3134316c722520\n"
".quad 0x203220636f6c2e0a,0x74730a3120353134,0x2e6465726168732e,0x6c72255b20323366\n"
".quad 0x6625202c5d333431,0x766f6d0a3b313131,0x6c7225203436752e,0x635f5f202c343431\n"
".quad 0x61636f6c5f616475,0x39315f7261765f6c,0x6e5f33335f393932,0x74736e6f635f6e6f\n"
".quad 0x74686769725f735f,0x36732e6464610a3b,0x3534316c72252034,0x3434316c7225202c\n"
".quad 0x3134316c7225202c,0x3220636f6c2e0a3b,0x730a312036313420,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x25202c5d3534316c,0x6c756d0a3b373966,0x33752e656469772e\n"
".quad 0x3634316c72252032,0x2c3631327225202c,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x346c7225202c3834,0x34316c7225202c33,0x20636f6c2e0a3b36,0x0a31203731342032\n"
".quad 0x65726168732e7473,0x255b203631752e64,0x202c5d3834316c72,0x610a3b3035357225\n"
".quad 0x25203436732e6464,0x25202c3035316c72,0x7225202c35346c72,0x6c2e0a3b3634316c\n"
".quad 0x383134203220636f,0x68732e74730a3120,0x3631752e64657261,0x3035316c72255b20\n"
".quad 0x3534357225202c5d,0x5f393142420a0a3b,0x636f6c2e0a3a3934,0x3120303233203720\n"
".quad 0x6e79732e7261620a,0x6f6c2e0a3b302063,0x2033323320372063,0x6220357025400a31\n"
".quad 0x5f39314242206172,0x6f6c2e0a0a3b3335,0x2036323320372063,0x6168732e646c0a31\n"
".quad 0x203233752e646572,0x5b202c3232327225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f37313339315f,0x6f635f6e6f6e5f30,0x5f6d756e5f74736e,0x5f73646165726874\n"
".quad 0x3b5d657669746361,0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3135316c\n"
".quad 0x0a3b32202c323232,0x203436732e646461,0x202c3335316c7225,0x25202c36336c7225\n"
".quad 0x2e0a3b3135316c72,0x3233203720636f6c,0x732e646c0a312036,0x31752e6465726168\n"
".quad 0x2c33323272252036,0x3335316c72255b20,0x732e6464610a3b5d,0x3835357225203233\n"
".quad 0x2c3332327225202c,0x0a3b323232722520,0x65726168732e7473,0x5f5b203233752e64\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3731333931,0x6e6f635f6e6f6e5f\n"
".quad 0x745f6d756e5f7473,0x615f736461657268,0x202c5d6576697463,0x610a3b3835357225\n"
".quad 0x25203233732e6464,0x7225202c35323272,0x3b312d202c383535,0x203220636f6c2e0a\n"
".quad 0x646e610a31203834,0x327225203233622e,0x32327225202c3632,0x3835357225202c35\n"
".quad 0x652e707465730a3b,0x7025203233732e71,0x32327225202c3734,0x25400a3b30202c36\n"
".quad 0x2061726220373470,0x3b32355f39314242,0x3220636f6c2e0a0a,0x76630a3120333520\n"
".quad 0x3233662e6e722e74,0x386625203233732e,0x3835357225202c30,0x3320636f6c2e0a3b\n"
".quad 0x610a352035393320,0x25203233662e7362,0x386625202c313866,0x20636f6c2e0a3b30\n"
".quad 0x3320393239342034,0x746c2e707465730a,0x347025203233662e,0x2c31386625202c38\n"
".quad 0x3030383030663020,0x6f6c2e0a3b303030,0x3033393420342063,0x662e6c756d0a3520\n"
".quad 0x2c32386625203233,0x30202c3038662520,0x3030303038423466,0x2e706c65730a3b30\n"
".quad 0x3338662520323366,0x202c32386625202c,0x7025202c30386625,0x636f6c2e0a3b3834\n"
".quad 0x2035383731203320,0x33622e766f6d0a35,0x2c37323272252032,0x730a3b3338662520\n"
".quad 0x25203233752e7268,0x7225202c38323272,0x3b3332202c373232,0x203420636f6c2e0a\n"
".quad 0x610a332035333934,0x25203233622e646e,0x7225202c39323272,0x353532202c383232\n"
".quad 0x3420636f6c2e0a3b,0x0a33203633393420,0x2e71652e70746573,0x3934702520323366\n"
".quad 0x202c31386625202c,0x3030303030306630,0x707465730a3b3030,0x203233732e71652e\n"
".quad 0x7225202c30357025,0x353532202c393232,0x6572702e726f0a3b,0x202c313570252064\n"
".quad 0x7025202c39347025,0x706c65730a3b3035,0x327225203233622e,0x3035312d202c3033\n"
".quad 0x202c3632312d202c,0x64610a3b38347025,0x7225203233732e64,0x327225202c313332\n"
".quad 0x32327225202c3033,0x752e766f6d0a3b39,0x3233327225203233,0x6c68730a3b31202c\n"
".quad 0x327225203233622e,0x33327225202c3333,0x3133327225202c32,0x622e706c65730a3b\n"
".quad 0x3835357225203233,0x327225202c31202c,0x31357025202c3333,0x5f393142420a0a3b\n"
".quad 0x636f6c2e0a3a3235,0x3120373233203720,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f30323339315f,0x6f635f6e6f6e5f30\n"
".quad 0x5f6d756e5f74736e,0x5f73646165726874,0x69746361706d6f63,0x357225202c5d6e6f\n"
".quad 0x2e766f6d0a3b3835,0x3332722520323375,0x6c2e0a3b30202c34,0x393233203720636f\n"
".quad 0x68732e74730a3120,0x3233752e64657261,0x616475635f5f5b20,0x765f6c61636f6c5f\n"
".quad 0x32313339315f7261,0x5f6e6f6e5f30345f,0x6f635f74736e6f63,0x65735f746361706d\n"
".quad 0x7568635f646e6f63,0x327225202c5d6b6e,0x2e766f6d0a3b3433,0x3332722520323375\n"
".quad 0x6c2e0a3b31202c35,0x303333203720636f,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x34313339315f7261,0x5f6e6f6e5f30345f\n"
".quad 0x6c615f74736e6f63,0x6461657268745f6c,0x7265766e6f635f73,0x7225202c5d646567\n"
".quad 0x42420a0a3b353332,0x2e0a3a33355f3931,0x3333203720636f6c,0x2e7261620a312033\n"
".quad 0x0a3b3020636e7973,0x32203220636f6c2e,0x766f6d0a31203334,0x327225203233752e\n"
".quad 0x69746e25202c3633,0x6f6c2e0a3b782e64,0x2035333320372063,0x6168732e646c0a31\n"
".quad 0x203233752e646572,0x5b202c3733327225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f30323339315f,0x6f635f6e6f6e5f30,0x5f6d756e5f74736e,0x5f73646165726874\n"
".quad 0x69746361706d6f63,0x7465730a3b5d6e6f,0x3233752e656c2e70,0x25202c3235702520\n"
".quad 0x7225202c37333272,0x7025400a3b363332,0x4220617262203235,0x0a0a3b335f393142\n"
".quad 0x3a34355f39314242,0x203720636f6c2e0a,0x61620a3120303433,0x3020636e79732e72\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312033343220,0x25203233752e766f,0x6e25202c39333272\n"
".quad 0x2e0a3b782e646974,0x3531203720636f6c,0x2e766f6d0a312036,0x3435722520323375\n"
".quad 0x2e64697425202c32,0x20636f6c2e0a3b78,0x0a31203135332037,0x203233732e646461\n"
".quad 0x7225202c33347225,0x357225202c393332,0x2e6c756d0a3b3234,0x3233752e65646977\n"
".quad 0x2c3435316c722520,0x202c323435722520,0x732e6464610a3b32,0x35316c7225203436\n"
".quad 0x33346c7225202c36,0x3435316c7225202c,0x3720636f6c2e0a3b,0x6c0a312035353320\n"
".quad 0x6465726168732e64,0x737225203631752e,0x316c72255b202c34,0x7476630a3b5d3635\n"
".quad 0x3631752e3233752e,0x25202c3434722520,0x6464610a3b347372,0x6c7225203436732e\n"
".quad 0x6c7225202c383531,0x316c7225202c3534,0x636f6c2e0a3b3435,0x3120363533203720\n"
".quad 0x726168732e646c0a,0x25203631752e6465,0x72255b202c357372,0x630a3b5d3835316c\n"
".quad 0x752e3233752e7476,0x2c35347225203631,0x2e0a3b3573722520,0x3533203720636f6c\n"
".quad 0x732e646c0a312039,0x33752e6465726168,0x2c32343272252032,0x616475635f5f5b20\n"
".quad 0x765f6c61636f6c5f,0x37313339315f7261,0x5f6e6f6e5f30345f,0x756e5f74736e6f63\n"
".quad 0x6461657268745f6d,0x6576697463615f73,0x2e707465730a3b5d,0x25203233752e746c\n"
".quad 0x347225202c333570,0x3234327225202c33,0x3720636f6c2e0a3b,0x630a312033343420\n"
".quad 0x752e3436752e7476,0x38316c7225203233,0x0a3b33347225202c,0x656469772e6c756d\n"
".quad 0x6c7225203233752e,0x347225202c393531,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x6c7225202c39316c,0x316c7225202c3334,0x2e6464610a3b3935,0x326c722520343673\n"
".quad 0x35346c7225202c30,0x3935316c7225202c,0x3720636f6c2e0a3b,0x400a312039353320\n"
".quad 0x6172622033357025,0x36355f3931424220,0x752e766f6d0a0a3b,0x3036357225203233\n"
".quad 0x3b3534327225202c,0x3233752e766f6d0a,0x202c393535722520,0x620a3b3634327225\n"
".quad 0x4220696e752e6172,0x0a3b37355f393142,0x36355f393142420a,0x3720636f6c2e0a3a\n"
".quad 0x6c0a312031363320,0x6465726168732e64,0x357225203631752e,0x6c72255b202c3935\n"
".quad 0x6f6c2e0a3b5d3032,0x2030363320372063,0x6168732e646c0a31,0x203631752e646572\n"
".quad 0x5b202c3036357225,0x0a3b5d39316c7225,0x37355f393142420a,0x3720636f6c2e0a3a\n"
".quad 0x400a312035373320,0x2061726220357025,0x3b39355f39314242,0x31752e766f6d0a0a\n"
".quad 0x2c35327372252036,0x636f6c2e0a3b3020,0x3120373733203720,0x726168732e74730a\n"
".quad 0x5b203631752e6465,0x6c5f616475635f5f,0x7261765f6c61636f,0x345f33303339315f\n"
".quad 0x6f635f6e6f6e5f32,0x656c5f735f74736e,0x746e756f635f7466,0x3532737225202c5d\n"
".quad 0x3720636f6c2e0a3b,0x730a312038373320,0x6465726168732e74,0x5f5f5b203631752e\n"
".quad 0x636f6c5f61647563,0x315f7261765f6c61,0x5f32345f34303339,0x736e6f635f6e6f6e\n"
".quad 0x686769725f735f74,0x5d746e756f635f74,0x3b3532737225202c,0x355f393142420a0a\n"
".quad 0x20636f6c2e0a3a39,0x0a31203138332037,0x636e79732e726162,0x636f6c2e0a3b3020\n"
".quad 0x3120383833203720,0x3233732e6275730a,0x25202c3035722520,0x347225202c353472\n"
".quad 0x20636f6c2e0a3b34,0x0a31203938332037,0x2e71652e70746573,0x3535702520323373\n"
".quad 0x202c30357225202c,0x2e706c65730a3b31,0x3273722520363175,0x2c30202c31202c36\n"
".quad 0x2e0a3b3535702520,0x3531203720636f6c,0x2e766f6d0a312036,0x3435722520323375\n"
".quad 0x2e64697425202c31,0x772e6c756d0a3b78,0x203233752e656469,0x202c3036316c7225\n"
".quad 0x32202c3134357225,0x36732e6464610a3b,0x3236316c72252034,0x2c33346c7225202c\n"
".quad 0x3b3036316c722520,0x203720636f6c2e0a,0x74730a3120313933,0x2e6465726168732e\n"
".quad 0x6c72255b20363175,0x202c5d322b323631,0x780a3b3632737225,0x25203631622e726f\n"
".quad 0x7225202c37327372,0x0a3b31202c363273,0x203436732e646461,0x202c3436316c7225\n"
".quad 0x25202c35346c7225,0x2e0a3b3036316c72,0x3933203720636f6c,0x732e74730a312032\n"
".quad 0x31752e6465726168,0x36316c72255b2036,0x7225202c5d322b34,0x6f6c2e0a3b373273\n"
".quad 0x2035393320372063,0x2035357025400a31,0x3931424220617262,0x76630a0a3b31365f\n"
".quad 0x33752e3631752e74,0x2c31377372252032,0x620a3b3035722520,0x4220696e752e6172\n"
".quad 0x0a3b32365f393142,0x31365f393142420a,0x31752e766f6d0a3a,0x2c31377372252036\n"
".quad 0x3142420a0a3b3020,0x6c2e0a3a32365f39,0x363531203720636f,0x752e766f6d0a3120\n"
".quad 0x3034357225203233,0x782e64697425202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3536316c72,0x3b32202c30343572,0x3436732e6464610a,0x2c3736316c722520\n"
".quad 0x202c36336c722520,0x0a3b3536316c7225,0x33203720636f6c2e,0x2e74730a31203539\n"
".quad 0x752e646572616873,0x316c72255b203631,0x25202c5d322b3736,0x6f6d0a3b31377372\n"
".quad 0x7225203436752e76,0x5f5f202c3836316c,0x636f6c5f61647563,0x315f7261765f6c61\n"
".quad 0x5f32345f33393439,0x736e6f635f6e6f6e,0x685f6c635f735f74,0x610a3b7265706c65\n"
".quad 0x25203436732e6464,0x25202c3936316c72,0x25202c3836316c72,0x2e0a3b3536316c72\n"
".quad 0x3933203720636f6c,0x732e74730a312036,0x31752e6465726168,0x36316c72255b2036\n"
".quad 0x37737225202c5d39,0x20636f6c2e0a3b33,0x0a31203839332037,0x65726168732e646c\n"
".quad 0x7225203233752e64,0x5f5f5b202c363532,0x636f6c5f61647563,0x315f7261765f6c61\n"
".quad 0x5f30345f37313339,0x736e6f635f6e6f6e,0x68745f6d756e5f74,0x63615f7364616572\n"
".quad 0x730a3b5d65766974,0x752e746c2e707465,0x2c36357025203233,0x25202c3334722520\n"
".quad 0x68730a3b36353272,0x7225203436622e6c,0x7225202c3037316c,0x0a3b31202c38316c\n"
".quad 0x203436732e646461,0x25202c31326c7225,0x7225202c36336c72,0x64610a3b3037316c\n"
".quad 0x7225203436732e64,0x6c7225202c32326c,0x6c7225202c383631,0x6f6c2e0a3b303731\n"
".quad 0x2038393320372063,0x2036357025400a31,0x3931424220617262,0x6c2e0a0a3b36365f\n"
".quad 0x303134203720636f,0x2e707465730a3120,0x25203233752e746c,0x347225202c373570\n"
".quad 0x0a3b333135202c33,0x7262203735702540,0x365f393142422061,0x2e766f6d0a0a3b35\n"
".quad 0x3635722520323375,0x72620a3b30202c31,0x424220696e752e61,0x0a0a3b30375f3931\n"
".quad 0x3a35365f39314242,0x203720636f6c2e0a,0x74730a3120333134,0x2e6465726168732e\n"
".quad 0x6c72255b20363175,0x25202c5d322b3132,0x6c2e0a3b33377372,0x343134203720636f\n"
".quad 0x68732e74730a3120,0x3631752e64657261,0x5d32326c72255b20,0x3b3337737225202c\n"
".quad 0x3233752e766f6d0a,0x202c313635722520,0x752e6172620a3b30,0x5f3931424220696e\n"
".quad 0x3142420a0a3b3037,0x6c2e0a3a36365f39,0x303034203720636f,0x732e6275730a3120\n"
".quad 0x2c31357225203233,0x202c393535722520,0x2e0a3b3036357225,0x3034203720636f6c\n"
".quad 0x707465730a312031,0x203233732e71652e,0x7225202c38357025,0x730a3b31202c3135\n"
".quad 0x203631752e706c65,0x31202c3133737225,0x357025202c30202c,0x20636f6c2e0a3b38\n"
".quad 0x0a31203330342037,0x65726168732e7473,0x255b203631752e64,0x2c5d322b39316c72\n"
".quad 0x0a3b313373722520,0x203631622e726f78,0x25202c3233737225,0x3b31202c31337372\n"
".quad 0x203720636f6c2e0a,0x74730a3120343034,0x2e6465726168732e,0x6c72255b20363175\n"
".quad 0x25202c5d322b3032,0x6c2e0a3b32337372,0x373034203720636f,0x38357025400a3120\n"
".quad 0x3142422061726220,0x630a0a3b38365f39,0x752e3631752e7476,0x3237737225203233\n"
".quad 0x0a3b31357225202c,0x20696e752e617262,0x3b39365f39314242,0x365f393142420a0a\n"
".quad 0x752e766f6d0a3a38,0x3237737225203631,0x42420a0a3b30202c,0x6d0a3a39365f3931\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x33347225202c3137,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333731,0x316c7225202c3633,0x636f6c2e0a3b3137\n"
".quad 0x3120373034203720,0x726168732e74730a,0x5b203631752e6465,0x322b3337316c7225\n"
".quad 0x3237737225202c5d,0x36732e6464610a3b,0x3537316c72252034,0x3836316c7225202c\n"
".quad 0x3137316c7225202c,0x31752e766f6d0a3b,0x2c34337372252036,0x636f6c2e0a3b3020\n"
".quad 0x3120383034203720,0x726168732e74730a,0x5b203631752e6465,0x2c5d3537316c7225\n"
".quad 0x0a3b343373722520,0x34203720636f6c2e,0x6c65730a31203130,0x7225203233752e70\n"
".quad 0x202c31202c313635,0x3b38357025202c30,0x375f393142420a0a,0x20636f6c2e0a3a30\n"
".quad 0x0a31203831342037,0x65726168732e646c,0x7225203233752e64,0x635f5f5b202c3435\n"
".quad 0x61636f6c5f616475,0x39315f7261765f6c,0x6e5f30345f303233,0x74736e6f635f6e6f\n"
".quad 0x7268745f6d756e5f,0x6d6f635f73646165,0x5d6e6f6974636170,0x3720636f6c2e0a3b\n"
".quad 0x730a312031393720,0x25203233752e7268,0x7225202c32363572,0x730a3b31202c3435\n"
".quad 0x732e71652e707465,0x2c30367025203233,0x202c323635722520,0x20636f6c2e0a3b30\n"
".quad 0x0a31203139372037,0x7262203036702540,0x385f393142422061,0x2e766f6d0a0a3b34\n"
".quad 0x3635722520323375,0x420a0a3b31202c37,0x0a3a32375f393142,0x37203720636f6c2e\n"
".quad 0x7261620a31203339,0x3b3020636e79732e,0x203720636f6c2e0a,0x65730a3120353937\n"
".quad 0x33752e65672e7074,0x202c313670252032,0x357225202c347225,0x367025400a3b3236\n"
".quad 0x4242206172622031,0x0a0a3b32385f3931,0x203233622e6c6873,0x25202c3337327225\n"
".quad 0x2e0a3b31202c3472,0x3433203220636f6c,0x622e726f0a312039,0x3437327225203233\n"
".quad 0x2c3337327225202c,0x636f6c2e0a3b3120,0x3120303533203220,0x3233732e6464610a\n"
".quad 0x202c353732722520,0x32202c3337327225,0x6f6c2e64616d0a3b,0x327225203233732e\n"
".quad 0x36357225202c3637,0x3537327225202c37,0x6c2e0a3b312d202c,0x303038203720636f\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x25202c3637316c72,0x64610a3b36373272\n"
".quad 0x7225203436732e64,0x6c7225202c33326c,0x0a3b31202c363731,0x203436622e6c6873\n"
".quad 0x202c3737316c7225,0x31202c33326c7225,0x36732e6464610a3b,0x3937316c72252034\n"
".quad 0x2c33346c7225202c,0x3b3737316c722520,0x2e6f6c2e64616d0a,0x3732722520323373\n"
".quad 0x3736357225202c37,0x2c3437327225202c,0x6f6c2e0a3b312d20,0x2030303820372063\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x7225202c3038316c,0x6464610a3b373732\n"
".quad 0x6c7225203436732e,0x316c7225202c3432,0x730a3b31202c3038,0x25203436622e6c68\n"
".quad 0x25202c3138316c72,0x3b31202c34326c72,0x3436732e6464610a,0x2c3238316c722520\n"
".quad 0x202c33346c722520,0x0a3b3138316c7225,0x38203720636f6c2e,0x2e646c0a31203030\n"
".quad 0x752e646572616873,0x3533737225203631,0x38316c72255b202c,0x732e646c0a3b5d32\n"
".quad 0x31752e6465726168,0x2c36337372252036,0x3937316c72255b20,0x732e6464610a3b5d\n"
".quad 0x3733737225203631,0x2c3533737225202c,0x0a3b363373722520,0x38203720636f6c2e\n"
".quad 0x2e74730a31203030,0x752e646572616873,0x316c72255b203631,0x737225202c5d3937\n"
".quad 0x2e6464610a3b3733,0x316c722520343673,0x346c7225202c3438,0x37316c7225202c35\n"
".quad 0x732e6464610a3b37,0x38316c7225203436,0x35346c7225202c35,0x3138316c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x6c0a312031303820,0x6465726168732e64,0x737225203631752e\n"
".quad 0x6c72255b202c3833,0x646c0a3b5d353831,0x2e6465726168732e,0x3373722520363175\n"
".quad 0x316c72255b202c39,0x6464610a3b5d3438,0x737225203631732e,0x33737225202c3034\n"
".quad 0x3933737225202c38,0x3720636f6c2e0a3b,0x730a312031303820,0x6465726168732e74\n"
".quad 0x72255b203631752e,0x25202c5d3438316c,0x756d0a3b30347372,0x752e656469772e6c\n"
".quad 0x38316c7225203233,0x3737327225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3532,0x316c7225202c3836,0x636f6c2e0a3b3638,0x3120393038203720\n"
".quad 0x726168732e646c0a,0x25203631752e6465,0x255b202c31347372,0x730a3b5d35326c72\n"
".quad 0x732e71652e707465,0x202c337025203631,0x31202c3134737225,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x25202c3838316c72,0x3b32202c36373272,0x3436732e6464610a\n"
".quad 0x202c36326c722520,0x202c3836316c7225,0x0a3b3838316c7225,0x38203720636f6c2e\n"
".quad 0x7465730a31203930,0x3631732e656e2e70,0x25202c3236702520,0x3b31202c31347372\n"
".quad 0x622032367025400a,0x5f39314242206172,0x2e646c0a0a3b3537,0x752e646572616873\n"
".quad 0x3234737225203631,0x36326c72255b202c,0x2e707465730a3b5d,0x25203631732e7165\n"
".quad 0x737225202c333670,0x2e0a3b31202c3234,0x3038203720636f6c,0x367025400a312039\n"
".quad 0x4242206172622033,0x0a0a3b32385f3931,0x3a35375f39314242,0x203720636f6c2e0a\n"
".quad 0x25400a3120323138,0x4220617262203370,0x0a3b31385f393142,0x203720636f6c2e0a\n"
".quad 0x646c0a3120363138,0x2e6465726168732e,0x3473722520363175,0x326c72255b202c33\n"
".quad 0x707465730a3b5d36,0x203631732e71652e,0x7225202c34367025,0x0a3b31202c333473\n"
".quad 0x38203720636f6c2e,0x7025400a31203631,0x4220617262203436,0x0a3b30385f393142\n"
".quad 0x3436732e6464610a,0x2c3139316c722520,0x202c36336c722520,0x0a3b3737316c7225\n"
".quad 0x203436732e646461,0x25202c37326c7225,0x2d202c3139316c72,0x732e6464610a3b32\n"
".quad 0x39316c7225203436,0x36336c7225202c33,0x3138316c7225202c,0x36732e6464610a3b\n"
".quad 0x2c38326c72252034,0x2c3339316c722520,0x6f6c2e0a3b322d20,0x2032323820372063\n"
".quad 0x6168732e646c0a31,0x203631752e646572,0x5b202c3738327225,0x3b5d3139316c7225\n"
".quad 0x726168732e646c0a,0x25203631752e6465,0x255b202c39383272,0x0a3b5d3339316c72\n"
".quad 0x203233732e646461,0x7225202c38357225,0x327225202c393832,0x636f6c2e0a3b3738\n"
".quad 0x3120333238203720,0x74672e707465730a,0x367025203233752e,0x2c38357225202c35\n"
".quad 0x25400a3b36353220,0x2061726220353670,0x3b39375f39314242,0x3720636f6c2e0a0a\n"
".quad 0x730a312031333820,0x6465726168732e74,0x72255b203631752e,0x202c5d322b37326c\n"
".quad 0x6c2e0a3b38357225,0x323338203720636f,0x68732e74730a3120,0x3631752e64657261\n"
".quad 0x2b38326c72255b20,0x37737225202c5d32,0x752e6172620a3b33,0x5f3931424220696e\n"
".quad 0x3142420a0a3b3238,0x6f6d0a3a39375f39,0x7225203631752e76,0x0a3b31202c353473\n"
".quad 0x38203720636f6c2e,0x2e74730a31203632,0x752e646572616873,0x326c72255b203631\n"
".quad 0x34737225202c5d35,0x20636f6c2e0a3b35,0x0a31203732382037,0x65726168732e7473\n"
".quad 0x255b203631752e64,0x25202c5d36326c72,0x72620a3b35347372,0x424220696e752e61\n"
".quad 0x0a0a3b32385f3931,0x3a30385f39314242,0x3631752e766f6d0a,0x202c363473722520\n"
".quad 0x20636f6c2e0a3b31,0x0a31203831382037,0x65726168732e7473,0x255b203631752e64\n"
".quad 0x25202c5d35326c72,0x72620a3b36347372,0x424220696e752e61,0x0a0a3b32385f3931\n"
".quad 0x3a31385f39314242,0x3631752e766f6d0a,0x202c373473722520,0x20636f6c2e0a3b31\n"
".quad 0x0a31203431382037,0x65726168732e7473,0x255b203631752e64,0x25202c5d36326c72\n"
".quad 0x420a0a3b37347372,0x0a3a32385f393142,0x38203720636f6c2e,0x6c68730a31203933\n"
".quad 0x357225203233622e,0x36357225202c3736,0x6c2e0a3b31202c37,0x313937203720636f\n"
".quad 0x2e7268730a373120,0x3635722520323373,0x3236357225202c32,0x6f6c2e0a3b31202c\n"
".quad 0x2031393720372063,0x672e707465730a31,0x7025203233732e74,0x36357225202c3636\n"
".quad 0x25400a3b30202c32,0x2061726220363670,0x3b32375f39314242,0x33752e766f6d0a0a\n"
".quad 0x2c36363572252032,0x0a3b373635722520,0x20696e752e617262,0x3b35385f39314242\n"
".quad 0x385f393142420a0a,0x752e766f6d0a3a34,0x3636357225203233,0x42420a0a3b31202c\n"
".quad 0x6d0a3a35385f3931,0x25203233752e766f,0x7225202c35363572,0x6f6c2e0a3b363635\n"
".quad 0x2035343820372063,0x6c2e707465730a31,0x7025203233752e74,0x34357225202c3736\n"
".quad 0x7025400a3b33202c,0x4220617262203736,0x0a3b30395f393142,0x3233752e766f6d0a\n"
".quad 0x202c383635722520,0x393142420a0a3b32,0x766f6d0a3a37385f,0x367225203233752e\n"
".quad 0x3536357225202c33,0x3720636f6c2e0a3b,0x730a312037343820,0x25203233752e7268\n"
".quad 0x367225202c353672,0x6c2e0a3b31202c33,0x383438203720636f,0x732e7261620a3120\n"
".quad 0x610a3b3020636e79,0x25203233732e6464,0x7225202c39393272,0x3b312d202c383635\n"
".quad 0x203720636f6c2e0a,0x65730a3120313538,0x33752e65672e7074,0x202c383670252032\n"
".quad 0x327225202c347225,0x367025400a3b3939,0x4242206172622038,0x0a0a3b39385f3931\n"
".quad 0x33203220636f6c2e,0x6464610a31203736,0x337225203233732e,0x2c347225202c3130\n"
".quad 0x2e64616d0a3b3120,0x25203233732e6f6c,0x7225202c32303372,0x30337225202c3536\n"
".quad 0x730a3b312d202c31,0x25203233752e7268,0x7225202c33303372,0x2e0a3b32202c3336\n"
".quad 0x3538203720636f6c,0x2e6464610a312034,0x3033722520323373,0x3230337225202c34\n"
".quad 0x3b3330337225202c,0x203720636f6c2e0a,0x76630a3120363538,0x33752e3436752e74\n"
".quad 0x3439316c72252032,0x3b3430337225202c,0x3436732e6464610a,0x2c3539316c722520\n"
".quad 0x2c3439316c722520,0x2e6c68730a3b3120,0x316c722520343662,0x316c7225202c3639\n"
".quad 0x610a3b31202c3539,0x25203436732e6464,0x25202c3839316c72,0x7225202c33346c72\n"
".quad 0x6c2e0a3b3639316c,0x363538203720636f,0x752e7476630a3120,0x25203233752e3436\n"
".quad 0x25202c3939316c72,0x64610a3b32303372,0x7225203436732e64,0x7225202c3030326c\n"
".quad 0x3b31202c3939316c,0x3436622e6c68730a,0x2c3130326c722520,0x2c3030326c722520\n"
".quad 0x2e6464610a3b3120,0x326c722520343673,0x346c7225202c3230,0x30326c7225202c33\n"
".quad 0x20636f6c2e0a3b31,0x0a31203635382037,0x65726168732e646c,0x7225203631752e64\n"
".quad 0x72255b202c383473,0x6c0a3b5d3230326c,0x6465726168732e64,0x737225203631752e\n"
".quad 0x6c72255b202c3934,0x64610a3b5d383931,0x7225203631732e64,0x737225202c303573\n"
".quad 0x34737225202c3834,0x20636f6c2e0a3b39,0x0a31203635382037,0x65726168732e7473\n"
".quad 0x255b203631752e64,0x202c5d3839316c72,0x610a3b3035737225,0x25203436732e6464\n"
".quad 0x25202c3430326c72,0x7225202c35346c72,0x64610a3b3639316c,0x7225203436732e64\n"
".quad 0x7225202c3530326c,0x6c7225202c35346c,0x6f6c2e0a3b313032,0x2037353820372063\n"
".quad 0x6168732e646c0a31,0x203631752e646572,0x5b202c3135737225,0x3b5d3530326c7225\n"
".quad 0x726168732e646c0a,0x25203631752e6465,0x255b202c32357372,0x0a3b5d3430326c72\n"
".quad 0x203631732e646461,0x25202c3335737225,0x7225202c31357372,0x6f6c2e0a3b323573\n"
".quad 0x2037353820372063,0x6168732e74730a31,0x203631752e646572,0x5d3430326c72255b\n"
".quad 0x3b3335737225202c,0x385f393142420a0a,0x20636f6c2e0a3a39,0x3035203534382037\n"
".quad 0x3233622e6c68730a,0x202c383635722520,0x31202c3836357225,0x3720636f6c2e0a3b\n"
".quad 0x730a312035343820,0x752e746c2e707465,0x2c39367025203233,0x202c383635722520\n"
".quad 0x6f6d0a3b34357225,0x7225203233752e76,0x367225202c353635,0x20636f6c2e0a3b35\n"
".quad 0x0a31203534382037,0x7262203936702540,0x385f393142422061,0x393142420a0a3b37\n"
".quad 0x6f6c2e0a3a30395f,0x2031323420372063,0x6168732e646c0a31,0x203233752e646572\n"
".quad 0x5f5b202c37367225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3731333931\n"
".quad 0x6e6f635f6e6f6e5f,0x745f6d756e5f7473,0x615f736461657268,0x0a3b5d6576697463\n"
".quad 0x65726168732e646c,0x7225203233752e64,0x635f5f5b202c3836,0x61636f6c5f616475\n"
".quad 0x39315f7261765f6c,0x6e5f30345f303233,0x74736e6f635f6e6f,0x7268745f6d756e5f\n"
".quad 0x6d6f635f73646165,0x5d6e6f6974636170,0x3720636f6c2e0a3b,0x730a312034323720\n"
".quad 0x25203233752e7268,0x7225202c39363572,0x730a3b31202c3836,0x732e71652e707465\n"
".quad 0x2c30377025203233,0x202c393635722520,0x20636f6c2e0a3b30,0x0a31203432372037\n"
".quad 0x7262203037702540,0x395f393142422061,0x2e766f6d0a0a3b36,0x3735722520323375\n"
".quad 0x420a0a3b31202c34,0x0a3a32395f393142,0x37203720636f6c2e,0x7261620a31203632\n"
".quad 0x3b3020636e79732e,0x203720636f6c2e0a,0x65730a3120383237,0x33752e65672e7074\n"
".quad 0x202c313770252032,0x357225202c347225,0x377025400a3b3936,0x4242206172622031\n"
".quad 0x0a0a3b34395f3931,0x203233622e6c6873,0x25202c3331337225,0x2e0a3b31202c3472\n"
".quad 0x3433203220636f6c,0x622e726f0a312039,0x3431337225203233,0x2c3331337225202c\n"
".quad 0x2e64616d0a3b3120,0x25203233732e6f6c,0x7225202c35313372,0x337225202c343735\n"
".quad 0x0a3b312d202c3431,0x33203220636f6c2e,0x6464610a31203035,0x337225203233732e\n"
".quad 0x31337225202c3631,0x616d0a3b32202c33,0x3233732e6f6c2e64,0x202c373133722520\n"
".quad 0x25202c3437357225,0x312d202c36313372,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3630326c72,0x3b32202c37313372,0x3436732e6464610a,0x2c3830326c722520\n"
".quad 0x2c3630326c722520,0x0a3b36336c722520,0x37203720636f6c2e,0x2e646c0a31203333\n"
".quad 0x752e646572616873,0x3435737225203631,0x30326c72255b202c,0x756d0a3b5d322b38\n"
".quad 0x752e656469772e6c,0x30326c7225203233,0x3531337225202c39,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c303132,0x6c7225202c393032,0x636f6c2e0a3b3633\n"
".quad 0x3120333337203720,0x726168732e646c0a,0x25203631752e6465,0x255b202c35357372\n"
".quad 0x5d322b3031326c72,0x31732e6464610a3b,0x2c36357372252036,0x202c343573722520\n"
".quad 0x2e0a3b3535737225,0x3337203720636f6c,0x732e74730a312033,0x31752e6465726168\n"
".quad 0x30326c72255b2036,0x7225202c5d322b38,0x42420a0a3b363573,0x730a3a34395f3931\n"
".quad 0x25203233622e6c68,0x7225202c34373572,0x0a3b31202c343735,0x37203720636f6c2e\n"
".quad 0x68730a3731203432,0x7225203233732e72,0x357225202c393635,0x2e0a3b31202c3936\n"
".quad 0x3237203720636f6c,0x707465730a312034,0x203233732e74672e,0x7225202c32377025\n"
".quad 0x0a3b30202c393635,0x7262203237702540,0x395f393142422061,0x2e766f6d0a0a3b32\n"
".quad 0x3735722520323375,0x3437357225202c33,0x6e752e6172620a3b,0x395f393142422069\n"
".quad 0x393142420a0a3b37,0x766f6d0a3a36395f,0x357225203233752e,0x0a0a3b31202c3337\n"
".quad 0x3a37395f39314242,0x3233752e766f6d0a,0x202c323735722520,0x610a3b3337357225\n"
".quad 0x25203233732e6464,0x367225202c363772,0x2e0a3b312d202c38,0x3437203720636f6c\n"
".quad 0x707465730a312031,0x203233752e746c2e,0x7225202c33377025,0x400a3b33202c3637\n"
".quad 0x6172622033377025,0x30315f3931424220,0x2e766f6d0a0a3b32,0x3735722520323375\n"
".quad 0x420a0a3b32202c35,0x0a3a39395f393142,0x203233752e766f6d,0x7225202c38377225\n"
".quad 0x6f6c2e0a3b323735,0x2033343720372063,0x33752e7268730a31,0x202c303872252032\n"
".quad 0x3b31202c38377225,0x203720636f6c2e0a,0x61620a3120343437,0x3020636e79732e72\n"
".quad 0x33732e6464610a3b,0x2c33323372252032,0x202c353735722520,0x636f6c2e0a3b312d\n"
".quad 0x3120363437203720,0x65672e707465730a,0x377025203233752e,0x202c347225202c34\n"
".quad 0x400a3b3332337225,0x6172622034377025,0x30315f3931424220,0x636f6c2e0a0a3b31\n"
".quad 0x3120373633203220,0x3233732e6464610a,0x202c353233722520,0x0a3b31202c347225\n"
".quad 0x732e6f6c2e64616d,0x3632337225203233,0x202c30387225202c,0x2d202c3532337225\n"
".quad 0x752e7268730a3b31,0x3732337225203233,0x202c38377225202c,0x20636f6c2e0a3b32\n"
".quad 0x0a31203934372037,0x203233732e646461,0x25202c3832337225,0x7225202c36323372\n"
".quad 0x6c756d0a3b373233,0x33752e656469772e,0x3131326c72252032,0x2c3832337225202c\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3331,0x336c7225202c3131\n"
".quad 0x20636f6c2e0a3b36,0x0a31203135372037,0x65726168732e646c,0x7225203631752e64\n"
".quad 0x72255b202c373573,0x3b5d322b3331326c,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x7225202c3431326c,0x0a3b32202c363233,0x203436732e646461,0x202c3531326c7225\n"
".quad 0x202c3431326c7225,0x2e0a3b36336c7225,0x3537203720636f6c,0x732e646c0a312031\n"
".quad 0x31752e6465726168,0x2c38357372252036,0x3531326c72255b20,0x6464610a3b5d322b\n"
".quad 0x737225203631732e,0x35737225202c3935,0x3835737225202c37,0x3720636f6c2e0a3b\n"
".quad 0x730a312031353720,0x6465726168732e74,0x72255b203631752e,0x2c5d322b3331326c\n"
".quad 0x0a3b393573722520,0x30315f393142420a,0x20636f6c2e0a3a31,0x3735203134372037\n"
".quad 0x3233622e6c68730a,0x202c353735722520,0x31202c3537357225,0x3720636f6c2e0a3b\n"
".quad 0x730a312031343720,0x752e746c2e707465,0x2c35377025203233,0x202c353735722520\n"
".quad 0x6f6d0a3b36377225,0x7225203233752e76,0x387225202c323735,0x20636f6c2e0a3b30\n"
".quad 0x0a31203134372037,0x7262203537702540,0x395f393142422061,0x393142420a0a3b39\n"
".quad 0x6c2e0a3a3230315f,0x353537203720636f,0x732e7261620a3120,0x2e0a3b3020636e79\n"
".quad 0x3537203720636f6c,0x357025400a312037,0x3142422061726220,0x0a0a3b3430315f39\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x377225202c363132,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3831326c,0x7225202c3836316c,0x64610a3b3631326c\n"
".quad 0x7225203233732e64,0x367225202c333333,0x6d0a3b312d202c37,0x2e656469772e6c75\n"
".quad 0x326c722520323375,0x33337225202c3931,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3032326c,0x7225202c3836316c,0x6c2e0a3b3931326c,0x323637203720636f\n"
".quad 0x68732e646c0a3120,0x3631752e64657261,0x202c303673722520,0x5d3831326c72255b\n"
".quad 0x6168732e74730a3b,0x203631752e646572,0x5d3032326c72255b,0x3b3036737225202c\n"
".quad 0x3436732e6464610a,0x2c3232326c722520,0x2c3631326c722520,0x0a3b36336c722520\n"
".quad 0x37203720636f6c2e,0x2e646c0a31203436,0x752e646572616873,0x3136737225203631\n"
".quad 0x32326c72255b202c,0x64610a3b5d322b32,0x7225203436732e64,0x7225202c3332326c\n"
".quad 0x7225202c3931326c,0x6f6c2e0a3b36336c,0x2034363720372063,0x6168732e74730a31\n"
".quad 0x203631752e646572,0x2b3332326c72255b,0x36737225202c5d32,0x393142420a0a3b31\n"
".quad 0x6c2e0a3a3430315f,0x353234203720636f,0x732e7261620a3120,0x2e0a3b3020636e79\n"
".quad 0x3531203720636f6c,0x2e766f6d0a312036,0x3335722520323375,0x2e64697425202c39\n"
".quad 0x772e6c756d0a3b78,0x203233752e656469,0x202c3432326c7225,0x32202c3933357225\n"
".quad 0x36732e6464610a3b,0x3632326c72252034,0x3836316c7225202c,0x3432326c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x6c0a312037333420,0x6465726168732e64,0x737225203631752e\n"
".quad 0x6c72255b202c3031,0x65730a3b5d363232,0x31732e71652e7074,0x202c373770252036\n"
".quad 0x31202c3031737225,0x3720636f6c2e0a3b,0x400a312037333420,0x6172622037377025\n"
".quad 0x30315f3931424220,0x2e766f6d0a0a3b36,0x3735722520323375,0x72620a3b30202c36\n"
".quad 0x424220696e752e61,0x0a3b3730315f3931,0x30315f393142420a,0x20636f6c2e0a3a36\n"
".quad 0x0a31203635312037,0x203233752e766f6d,0x25202c3832357225,0x6d0a3b782e646974\n"
".quad 0x2e656469772e6c75,0x326c722520323375,0x32357225202c3732,0x64610a3b32202c38\n"
".quad 0x7225203436732e64,0x7225202c3932326c,0x6c7225202c35346c,0x6f6c2e0a3b373232\n"
".quad 0x2039333420372063,0x6168732e646c0a31,0x203631752e646572,0x5b202c3234337225\n"
".quad 0x322b3932326c7225,0x732e6464610a3b5d,0x3637357225203233,0x2c3234337225202c\n"
".quad 0x2e6464610a3b3120,0x326c722520343673,0x336c7225202c3133,0x32326c7225202c36\n"
".quad 0x20636f6c2e0a3b37,0x0a31203034342037,0x65726168732e646c,0x7225203631752e64\n"
".quad 0x72255b202c333773,0x3b5d322b3133326c,0x315f393142420a0a,0x2e6c756d0a3a3730\n"
".quad 0x3233752e65646977,0x2c3233326c722520,0x32202c3334722520,0x36732e6464610a3b\n"
".quad 0x3433326c72252034,0x3836316c7225202c,0x3233326c7225202c,0x3720636f6c2e0a3b\n"
".quad 0x6c0a312033343420,0x6465726168732e64,0x737225203631752e,0x6c72255b202c3331\n"
".quad 0x65730a3b5d343332,0x31732e71652e7074,0x202c383770252036,0x31202c3331737225\n"
".quad 0x3720636f6c2e0a3b,0x400a312033343420,0x6172622038377025,0x30315f3931424220\n"
".quad 0x2e766f6d0a0a3b39,0x3773722520363175,0x6f6d0a3b30202c34,0x7225203233752e76\n"
".quad 0x0a3b30202c373735,0x20696e752e617262,0x3031315f39314242,0x5f393142420a0a3b\n"
".quad 0x6c756d0a3a393031,0x33752e656469772e,0x3533326c72252032,0x202c33347225202c\n"
".quad 0x732e6464610a3b32,0x33326c7225203436,0x35346c7225202c37,0x3533326c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x6c0a312035343420,0x6465726168732e64,0x337225203631752e\n"
".quad 0x6c72255b202c3335,0x0a3b5d322b373332,0x203233732e646461,0x25202c3737357225\n"
".quad 0x3b31202c33353372,0x3436732e6464610a,0x2c3933326c722520,0x202c36336c722520\n"
".quad 0x0a3b3533326c7225,0x34203720636f6c2e,0x2e646c0a31203634,0x752e646572616873\n"
".quad 0x3437737225203631,0x33326c72255b202c,0x420a0a3b5d322b39,0x3a3031315f393142\n"
".quad 0x203720636f6c2e0a,0x646c0a3120393434,0x2e6465726168732e,0x3638722520323375\n"
".quad 0x6475635f5f5b202c,0x5f6c61636f6c5f61,0x323339315f726176,0x6e6f6e5f30345f30\n"
".quad 0x6e5f74736e6f635f,0x61657268745f6d75,0x61706d6f635f7364,0x0a3b5d6e6f697463\n"
".quad 0x31203720636f6c2e,0x766f6d0a31203635,0x357225203233752e,0x64697425202c3833\n"
".quad 0x2e6c756d0a3b782e,0x3233752e65646977,0x2c3034326c722520,0x202c383335722520\n"
".quad 0x732e6464610a3b32,0x34326c7225203436,0x36336c7225202c32,0x3034326c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x730a312033363620,0x6465726168732e74,0x72255b203631752e\n"
".quad 0x2c5d322b3234326c,0x0a3b303173722520,0x36203720636f6c2e,0x7465730a31203436\n"
".quad 0x3233752e65672e70,0x25202c3937702520,0x387225202c333472,0x39377025400a3b36\n"
".quad 0x3142422061726220,0x0a0a3b3231315f39,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x347225202c333432,0x64610a3b32202c33,0x7225203436732e64,0x7225202c3534326c\n"
".quad 0x6c7225202c36336c,0x6f6c2e0a3b333432,0x2035363620372063,0x6168732e74730a31\n"
".quad 0x203631752e646572,0x2b3534326c72255b,0x31737225202c5d32,0x393142420a0a3b33\n"
".quad 0x6c2e0a3a3231315f,0x383636203720636f,0x732e7261620a3120,0x2e0a3b3020636e79\n"
".quad 0x3736203720636f6c,0x2e7268730a312038,0x3735722520323375,0x2c36387225202c38\n"
".quad 0x707465730a3b3120,0x203233732e71652e,0x7225202c30387025,0x0a3b30202c383735\n"
".quad 0x36203720636f6c2e,0x7025400a31203837,0x4220617262203038,0x3b3831315f393142\n"
".quad 0x33752e766f6d0a0a,0x2c33383572252032,0x3142420a0a3b3120,0x2e0a3a3431315f39\n"
".quad 0x3836203720636f6c,0x2e7261620a312030,0x0a3b3020636e7973,0x36203720636f6c2e\n"
".quad 0x7465730a31203238,0x3233752e65672e70,0x25202c3138702520,0x37357225202c3472\n"
".quad 0x31387025400a3b38,0x3142422061726220,0x0a0a3b3631315f39,0x203233622e6c6873\n"
".quad 0x25202c3636337225,0x2e0a3b31202c3472,0x3433203220636f6c,0x622e726f0a312039\n"
".quad 0x3736337225203233,0x2c3636337225202c,0x2e64616d0a3b3120,0x25203233732e6f6c\n"
".quad 0x7225202c38363372,0x337225202c333835,0x0a3b312d202c3736,0x33203220636f6c2e\n"
".quad 0x6464610a31203035,0x337225203233732e,0x36337225202c3936,0x616d0a3b32202c36\n"
".quad 0x3233732e6f6c2e64,0x202c303733722520,0x25202c3338357225,0x312d202c39363372\n"
".quad 0x69772e6c756d0a3b,0x25203233752e6564,0x25202c3634326c72,0x3b32202c38363372\n"
".quad 0x3436732e6464610a,0x2c3834326c722520,0x2c3634326c722520,0x0a3b36336c722520\n"
".quad 0x36203720636f6c2e,0x2e646c0a31203638,0x752e646572616873,0x3436737225203631\n"
".quad 0x34326c72255b202c,0x756d0a3b5d322b38,0x752e656469772e6c,0x34326c7225203233\n"
".quad 0x3037337225202c39,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303532\n"
".quad 0x6c7225202c393432,0x636f6c2e0a3b3633,0x3120363836203720,0x726168732e646c0a\n"
".quad 0x25203631752e6465,0x255b202c35367372,0x5d322b3035326c72,0x31732e6464610a3b\n"
".quad 0x2c36367372252036,0x202c343673722520,0x2e0a3b3536737225,0x3836203720636f6c\n"
".quad 0x732e74730a312036,0x31752e6465726168,0x35326c72255b2036,0x7225202c5d322b30\n"
".quad 0x42420a0a3b363673,0x0a3a3631315f3931,0x36203720636f6c2e,0x6c68730a31203938\n"
".quad 0x357225203233622e,0x38357225202c3338,0x6c2e0a3b31202c33,0x383736203720636f\n"
".quad 0x2e7268730a373120,0x3735722520323373,0x3837357225202c38,0x6f6c2e0a3b31202c\n"
".quad 0x2038373620372063,0x672e707465730a31,0x7025203233732e74,0x37357225202c3238\n"
".quad 0x25400a3b30202c38,0x2061726220323870,0x3431315f39314242,0x752e766f6d0a0a3b\n"
".quad 0x3238357225203233,0x3b3338357225202c,0x696e752e6172620a,0x31315f3931424220\n"
".quad 0x393142420a0a3b39,0x6f6d0a3a3831315f,0x7225203233752e76,0x0a3b31202c323835\n"
".quad 0x31315f393142420a,0x752e766f6d0a3a39,0x3138357225203233,0x3b3238357225202c\n"
".quad 0x203720636f6c2e0a,0x65730a3120333936,0x33752e746c2e7074,0x202c333870252032\n"
".quad 0x3b33202c36387225,0x622033387025400a,0x5f39314242206172,0x6f6d0a0a3b343231\n"
".quad 0x7225203233752e76,0x0a3b32202c343835,0x32315f393142420a,0x752e766f6d0a3a31\n"
".quad 0x2c35397225203233,0x0a3b313835722520,0x36203720636f6c2e,0x7268730a31203539\n"
".quad 0x397225203233752e,0x2c35397225202c37,0x636f6c2e0a3b3120,0x3120363936203720\n"
".quad 0x6e79732e7261620a,0x6464610a3b302063,0x337225203233732e,0x38357225202c3637\n"
".quad 0x2e0a3b312d202c34,0x3936203720636f6c,0x707465730a312039,0x203233752e65672e\n"
".quad 0x7225202c34387025,0x3637337225202c34,0x2034387025400a3b,0x3931424220617262\n"
".quad 0x2e0a0a3b3332315f,0x3633203220636f6c,0x2e6464610a312037,0x3733722520323373\n"
".quad 0x202c347225202c38,0x6c2e64616d0a3b31,0x7225203233732e6f,0x397225202c393733\n"
".quad 0x3837337225202c37,0x68730a3b312d202c,0x7225203233752e72,0x397225202c303833\n"
".quad 0x6c2e0a3b32202c35,0x323037203720636f,0x732e6464610a3120,0x3138337225203233\n"
".quad 0x2c3937337225202c,0x0a3b303833722520,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x337225202c313532,0x610a3b32202c3937,0x25203436732e6464,0x25202c3335326c72\n"
".quad 0x25202c3135326c72,0x6c2e0a3b36336c72,0x333037203720636f,0x68732e646c0a3120\n"
".quad 0x3631752e64657261,0x202c373673722520,0x2b3335326c72255b,0x2e6c756d0a3b5d32\n"
".quad 0x3233752e65646977,0x2c3435326c722520,0x202c313833722520,0x732e6464610a3b32\n"
".quad 0x35326c7225203436,0x35326c7225202c35,0x36336c7225202c34,0x3720636f6c2e0a3b\n"
".quad 0x6c0a312033303720,0x6465726168732e64,0x737225203631752e,0x6c72255b202c3836\n"
".quad 0x0a3b5d322b353532,0x203631732e646461,0x25202c3936737225,0x7225202c37367372\n"
".quad 0x6f6c2e0a3b383673,0x2033303720372063,0x6168732e74730a31,0x203631752e646572\n"
".quad 0x2b3535326c72255b,0x36737225202c5d32,0x393142420a0a3b39,0x6c2e0a3a3332315f\n"
".quad 0x333936203720636f,0x2e6c68730a303520,0x3835722520323362,0x3438357225202c34\n"
".quad 0x6f6c2e0a3b31202c,0x2033393620372063,0x6c2e707465730a31,0x7025203233752e74\n"
".quad 0x38357225202c3538,0x3b36387225202c34,0x3233752e766f6d0a,0x202c313835722520\n"
".quad 0x6c2e0a3b37397225,0x333936203720636f,0x35387025400a3120,0x3142422061726220\n"
".quad 0x0a0a3b3132315f39,0x3432315f39314242,0x3720636f6c2e0a3a,0x620a312034353420\n"
".quad 0x20636e79732e7261,0x20636f6c2e0a3b30,0x0a31203036342037,0x6172622035702540\n"
".quad 0x32315f3931424220,0x636f6c2e0a0a3b36,0x3120323634203720,0x726168732e646c0a\n"
".quad 0x25203233752e6465,0x5f5b202c36383372,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x30345f3731333931,0x6e6f635f6e6f6e5f,0x745f6d756e5f7473,0x615f736461657268\n"
".quad 0x0a3b5d6576697463,0x203233732e646461,0x25202c3738337225,0x312d202c36383372\n"
".quad 0x3720636f6c2e0a3b,0x630a312032363420,0x752e3436752e7476,0x35326c7225203233\n"
".quad 0x3738337225202c36,0x36732e6464610a3b,0x3735326c72252034,0x3635326c7225202c\n"
".quad 0x6c68730a3b31202c,0x6c7225203436622e,0x6c7225202c383532,0x0a3b31202c373532\n"
".quad 0x203436732e646461,0x202c3036326c7225,0x25202c36336c7225,0x2e0a3b3835326c72\n"
".quad 0x3634203720636f6c,0x732e646c0a312032,0x31752e6465726168,0x2c38383372252036\n"
".quad 0x3036326c72255b20,0x68732e74730a3b5d,0x3233752e64657261,0x616475635f5f5b20\n"
".quad 0x765f6c61636f6c5f,0x37373539315f7261,0x5f6e6f6e5f30345f,0x756e5f74736e6f63\n"
".quad 0x736b636f6c625f6d,0x202c5d746c756d5f,0x610a3b3838337225,0x25203436732e6464\n"
".quad 0x25202c3236326c72,0x7225202c33346c72,0x6c2e0a3b3835326c,0x333634203720636f\n"
".quad 0x68732e646c0a3120,0x3631752e64657261,0x202c303933722520,0x5d3236326c72255b\n"
".quad 0x6168732e74730a3b,0x203233752e646572,0x5f616475635f5f5b,0x61765f6c61636f6c\n"
".quad 0x5f39373539315f72,0x635f6e6f6e5f3034,0x66666f5f74736e6f,0x746c756d5f746573\n"
".quad 0x5d6164626d616c5f,0x3b3039337225202c,0x3436732e6464610a,0x2c3436326c722520\n"
".quad 0x202c35346c722520,0x0a3b3835326c7225,0x34203720636f6c2e,0x2e646c0a31203436\n"
".quad 0x752e646572616873,0x3239337225203631,0x36326c72255b202c,0x732e74730a3b5d34\n"
".quad 0x33752e6465726168,0x6475635f5f5b2032,0x5f6c61636f6c5f61,0x373539315f726176\n"
".quad 0x6e6f6e5f30345f38,0x6e5f74736e6f635f,0x5d746c756d5f6d75,0x3b3239337225202c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3431346c,0x636573696237315a\n"
".quad 0x4c6c656e72654b74,0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053\n"
".quad 0x30535f535f535f30,0x535f30535f30535f,0x6d617261705f5f30,0x7476630a3b5d385f\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x202c3536326c7225,0x0a3b3431346c7225\n"
".quad 0x34203720636f6c2e,0x2e74730a31203636,0x752e6c61626f6c67,0x326c72255b203233\n"
".quad 0x337225202c5d3536,0x702e646c0a3b3039,0x3436752e6d617261,0x2c3531346c722520\n"
".quad 0x696237315a5f5b20,0x6e72654b74636573,0x50656772614c6c65,0x6a6a66666a5f5366\n"
".quad 0x5f535f30536a5066,0x535f535f30535f53,0x535f30535f30535f,0x61705f5f30535f30\n"
".quad 0x0a3b5d395f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x36326c7225203436\n"
".quad 0x31346c7225202c36,0x20636f6c2e0a3b35,0x0a31203736342037,0x65726168732e646c\n"
".quad 0x7225203233752e64,0x5f5f5b202c353933,0x636f6c5f61647563,0x315f7261765f6c61\n"
".quad 0x5f30345f37373539,0x736e6f635f6e6f6e,0x6c625f6d756e5f74,0x6c756d5f736b636f\n"
".quad 0x672e74730a3b5d74,0x33752e6c61626f6c,0x36326c72255b2032,0x39337225202c5d36\n"
".quad 0x393142420a0a3b35,0x6c2e0a3a3632315f,0x393634203720636f,0x732e7261620a3120\n"
".quad 0x2e0a3b3020636e79,0x3531203720636f6c,0x2e766f6d0a312036,0x3335722520323375\n"
".quad 0x2e64697425202c37,0x772e6c756d0a3b78,0x203233752e656469,0x202c3736326c7225\n"
".quad 0x34202c3733357225,0x36752e766f6d0a3b,0x3836326c72252034,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x38393239315f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63\n"
".quad 0x64610a3b7466656c,0x7225203436732e64,0x7225202c3936326c,0x7225202c3836326c\n"
".quad 0x6c2e0a3b3736326c,0x313935203720636f,0x68732e646c0a3120,0x3233662e64657261\n"
".quad 0x5b202c3332662520,0x3b5d3936326c7225,0x3436752e766f6d0a,0x2c3037326c722520\n"
".quad 0x5f616475635f5f20,0x61765f6c61636f6c,0x5f39393239315f72,0x635f6e6f6e5f3333\n"
".quad 0x725f735f74736e6f,0x64610a3b74686769,0x7225203436732e64,0x7225202c3137326c\n"
".quad 0x7225202c3037326c,0x6c2e0a3b3736326c,0x323935203720636f,0x68732e646c0a3120\n"
".quad 0x3233662e64657261,0x5b202c3432662520,0x3b5d3137326c7225,0x203720636f6c2e0a\n"
".quad 0x646c0a3120353734,0x2e6465726168732e,0x3034722520323375,0x75635f5f5b202c32\n"
".quad 0x6c61636f6c5f6164,0x3339315f7261765f,0x6f6e5f30345f3731,0x5f74736e6f635f6e\n"
".quad 0x657268745f6d756e,0x697463615f736461,0x6f6c2e0a3b5d6576,0x2034393520372063\n"
".quad 0x6c2e707465730a31,0x7025203233752e74,0x2c33347225202c34,0x0a3b323034722520\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x347225202c323732,0x64610a3b34202c33\n"
".quad 0x7225203436732e64,0x6c7225202c39326c,0x6c7225202c383632,0x6464610a3b323732\n"
".quad 0x6c7225203436732e,0x326c7225202c3033,0x326c7225202c3037,0x636f6c2e0a3b3237\n"
".quad 0x3120343935203720,0x726220347025400a,0x315f393142422061,0x766f6d0a0a3b3832\n"
".quad 0x316625203233662e,0x36386625202c3731,0x33662e766f6d0a3b,0x2c36313166252032\n"
".quad 0x620a3b3738662520,0x4220696e752e6172,0x3b3932315f393142,0x315f393142420a0a\n"
".quad 0x636f6c2e0a3a3832,0x3120363935203720,0x726168732e646c0a,0x25203233662e6465\n"
".quad 0x255b202c37313166,0x2e0a3b5d39326c72,0x3935203720636f6c,0x732e646c0a312037\n"
".quad 0x33662e6465726168,0x2c36313166252032,0x5d30336c72255b20,0x5f393142420a0a3b\n"
".quad 0x6f6c2e0a3a393231,0x2030303620372063,0x79732e7261620a31,0x6c2e0a3b3020636e\n"
".quad 0x393036203720636f,0x35357025400a3120,0x3142422061726220,0x0a0a3b3133315f39\n"
".quad 0x31203720636f6c2e,0x766f6d0a31203635,0x357225203233752e,0x64697425202c3633\n"
".quad 0x2e6c756d0a3b782e,0x3233752e65646977,0x2c3337326c722520,0x202c363335722520\n"
".quad 0x732e6464610a3b32,0x37326c7225203436,0x35346c7225202c35,0x3337326c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x6c0a312039303620,0x6465726168732e64,0x347225203233752e\n"
".quad 0x635f5f5b202c3930,0x61636f6c5f616475,0x39315f7261765f6c,0x6e5f30345f393735\n"
".quad 0x74736e6f635f6e6f,0x5f74657366666f5f,0x6d616c5f746c756d,0x646c0a3b5d616462\n"
".quad 0x2e6465726168732e,0x3134722520363175,0x326c72255b202c30,0x6464610a3b5d3537\n"
".quad 0x357225203233732e,0x31347225202c3538,0x3930347225202c30,0x6e752e6172620a3b\n"
".quad 0x315f393142422069,0x3142420a0a3b3233,0x2e0a3a3133315f39,0x3531203720636f6c\n"
".quad 0x2e766f6d0a312036,0x3235722520323375,0x2e64697425202c39,0x772e6c756d0a3b78\n"
".quad 0x203233752e656469,0x202c3637326c7225,0x32202c3932357225,0x36732e6464610a3b\n"
".quad 0x3837326c72252034,0x2c33346c7225202c,0x3b3637326c722520,0x203720636f6c2e0a\n"
".quad 0x646c0a3120393036,0x2e6465726168732e,0x3835722520363175,0x326c72255b202c35\n"
".quad 0x42420a0a3b5d3837,0x0a3a3233315f3931,0x36203720636f6c2e,0x7465730a31203131\n"
".quad 0x3233732e71652e70,0x25202c3838702520,0x3b30202c36373572,0x622038387025400a\n"
".quad 0x5f39314242206172,0x6c2e0a0a3b343331,0x363531203720636f,0x752e766f6d0a3120\n"
".quad 0x3533357225203233,0x782e64697425202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3937326c72,0x3b32202c35333572,0x3436732e6464610a,0x2c3138326c722520\n"
".quad 0x202c36336c722520,0x0a3b3937326c7225,0x36203720636f6c2e,0x2e646c0a31203231\n"
".quad 0x752e646572616873,0x3531347225203631,0x38326c72255b202c,0x2e6464610a3b5d31\n"
".quad 0x3134722520323373,0x3531347225202c37,0x7476630a3b31202c,0x3233752e3436752e\n"
".quad 0x2c3633346c722520,0x0a3b373134722520,0x20696e752e617262,0x3533315f39314242\n"
".quad 0x5f393142420a0a3b,0x766f6d0a3a343331,0x6c7225203436752e,0x0a3b31202c363334\n"
".quad 0x33315f393142420a,0x20636f6c2e0a3a35,0x0a31203531362037,0x6172622034702540\n"
".quad 0x33315f3931424220,0x2e766f6d0a0a3b37,0x346c722520343675,0x6d0a3b31202c3733\n"
".quad 0x25203233752e766f,0x3b30202c36383572,0x696e752e6172620a,0x34315f3931424220\n"
".quad 0x393142420a0a3b33,0x6c2e0a3a3733315f,0x363136203720636f,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x357225202c393870,0x400a3b31202c3136,0x6172622039387025\n"
".quad 0x33315f3931424220,0x2e6c756d0a0a3b39,0x3233752e65646977,0x2c3438326c722520\n"
".quad 0x32202c3334722520,0x36732e6464610a3b,0x3638326c72252034,0x2c35346c7225202c\n"
".quad 0x3b3438326c722520,0x203720636f6c2e0a,0x646c0a3120363136,0x2e6465726168732e\n"
".quad 0x3234722520323375,0x75635f5f5b202c32,0x6c61636f6c5f6164,0x3539315f7261765f\n"
".quad 0x6f6e5f30345f3937,0x5f74736e6f635f6e,0x6d5f74657366666f,0x626d616c5f746c75\n"
".quad 0x2e646c0a3b5d6164,0x752e646572616873,0x3332347225203631,0x38326c72255b202c\n"
".quad 0x2e6464610a3b5d36,0x3835722520323373,0x3332347225202c36,0x3b3232347225202c\n"
".quad 0x696e752e6172620a,0x34315f3931424220,0x393142420a0a3b30,0x756d0a3a3933315f\n"
".quad 0x752e656469772e6c,0x38326c7225203233,0x2c33347225202c37,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x346c7225202c3938,0x38326c7225202c33,0x20636f6c2e0a3b37\n"
".quad 0x0a31203631362037,0x65726168732e646c,0x7225203631752e64,0x72255b202c363835\n"
".quad 0x0a0a3b5d3938326c,0x3034315f39314242,0x3720636f6c2e0a3a,0x730a312038313620\n"
".quad 0x732e71652e707465,0x2c30397025203233,0x202c373735722520,0x30397025400a3b30\n"
".quad 0x3142422061726220,0x0a0a3b3234315f39,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x347225202c303932,0x64610a3b32202c33,0x7225203436732e64,0x7225202c3239326c\n"
".quad 0x6c7225202c36336c,0x6f6c2e0a3b303932,0x2039313620372063,0x6168732e646c0a31\n"
".quad 0x203631752e646572,0x5b202c3233347225,0x3b5d3239326c7225,0x3233732e6464610a\n"
".quad 0x202c343334722520,0x31202c3233347225,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x7225202c3733346c,0x6172620a3b343334,0x31424220696e752e,0x0a0a3b3334315f39\n"
".quad 0x3234315f39314242,0x36752e766f6d0a3a,0x3733346c72252034,0x42420a0a3b31202c\n"
".quad 0x0a3a3334315f3931,0x36203720636f6c2e,0x7261620a31203332,0x3b3020636e79732e\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3439326c,0x0a3b34202c353835\n"
".quad 0x203436732e646461,0x202c3639326c7225,0x202c3836326c7225,0x0a3b3439326c7225\n"
".quad 0x36203720636f6c2e,0x2e74730a31203632,0x662e646572616873,0x326c72255b203233\n"
".quad 0x326625202c5d3639,0x732e6464610a3b33,0x39326c7225203436,0x37326c7225202c38\n"
".quad 0x39326c7225202c30,0x20636f6c2e0a3b34,0x0a31203732362037,0x65726168732e7473\n"
".quad 0x255b203233662e64,0x202c5d3839326c72,0x756d0a3b34326625,0x752e656469772e6c\n"
".quad 0x39326c7225203233,0x3538357225202c39,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c313033,0x326c7225202c3334,0x636f6c2e0a3b3939,0x3120383236203720\n"
".quad 0x726168732e74730a,0x5b203631752e6465,0x2c5d3130336c7225,0x610a3b3473722520\n"
".quad 0x25203436732e6464,0x25202c3330336c72,0x7225202c35346c72,0x6c2e0a3b3939326c\n"
".quad 0x393236203720636f,0x68732e74730a3120,0x3631752e64657261,0x3330336c72255b20\n"
".quad 0x3b35737225202c5d,0x203720636f6c2e0a,0x25400a3120303336,0x2061726220383870\n"
".quad 0x3534315f39314242,0x732e6464610a0a3b,0x3933347225203233,0x2c3637357225202c\n"
".quad 0x0a3b353335353620,0x203436622e6c6873,0x202c3430336c7225,0x202c3633346c7225\n"
".quad 0x732e6464610a3b31,0x30336c7225203436,0x36336c7225202c36,0x3430336c7225202c\n"
".quad 0x3720636f6c2e0a3b,0x730a312031333620,0x6465726168732e74,0x72255b203631752e\n"
".quad 0x25202c5d3630336c,0x64610a3b39333472,0x7225203436732e64,0x7225202c3830336c\n"
".quad 0x7225202c3836316c,0x6c2e0a3b3430336c,0x323336203720636f,0x68732e74730a3120\n"
".quad 0x3631752e64657261,0x3830336c72255b20,0x3337737225202c5d,0x5f393142420a0a3b\n"
".quad 0x6f6c2e0a3a353431,0x2035333620372063,0x2034702521400a31,0x3931424220617262\n"
".quad 0x6d0a0a3b3834315f,0x2e656469772e6c75,0x336c722520323375,0x38357225202c3930\n"
".quad 0x64610a3b34202c36,0x7225203436732e64,0x7225202c3131336c,0x7225202c3836326c\n"
".quad 0x6c2e0a3b3930336c,0x383336203720636f,0x68732e74730a3120,0x3233662e64657261\n"
".quad 0x3131336c72255b20,0x3731316625202c5d,0x36732e6464610a3b,0x3331336c72252034\n"
".quad 0x3037326c7225202c,0x3930336c7225202c,0x3720636f6c2e0a3b,0x730a312039333620\n"
".quad 0x6465726168732e74,0x72255b203233662e,0x25202c5d3331336c,0x756d0a3b36313166\n"
".quad 0x752e656469772e6c,0x31336c7225203233,0x3638357225202c34,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c363133,0x336c7225202c3334,0x636f6c2e0a3b3431\n"
".quad 0x3120303436203720,0x726168732e74730a,0x5b203631752e6465,0x2c5d3631336c7225\n"
".quad 0x0a3b303635722520,0x203436732e646461,0x202c3831336c7225,0x25202c35346c7225\n"
".quad 0x2e0a3b3431336c72,0x3436203720636f6c,0x732e74730a312031,0x31752e6465726168\n"
".quad 0x31336c72255b2036,0x35357225202c5d38,0x20636f6c2e0a3b39,0x0a31203234362037\n"
".quad 0x2e71652e70746573,0x3239702520323373,0x2c3737357225202c,0x397025400a3b3020\n"
".quad 0x4242206172622032,0x0a3b3834315f3931,0x3233732e6464610a,0x202c363434722520\n"
".quad 0x36202c3737357225,0x68730a3b35333535,0x7225203436622e6c,0x7225202c3931336c\n"
".quad 0x3b31202c3733346c,0x3436732e6464610a,0x2c3132336c722520,0x202c36336c722520\n"
".quad 0x0a3b3931336c7225,0x36203720636f6c2e,0x2e74730a31203334,0x752e646572616873\n"
".quad 0x336c72255b203631,0x347225202c5d3132,0x2e6464610a3b3634,0x336c722520343673\n"
".quad 0x316c7225202c3332,0x336c7225202c3836,0x636f6c2e0a3b3931,0x3120343436203720\n"
".quad 0x726168732e74730a,0x5b203631752e6465,0x2c5d3332336c7225,0x0a3b343773722520\n"
".quad 0x34315f393142420a,0x20636f6c2e0a3a38,0x0a31203438342037,0x636e79732e726162\n"
".quad 0x636f6c2e0a3b3020,0x3120373834203720,0x726220357025400a,0x315f393142422061\n"
".quad 0x6f6c2e0a0a3b3035,0x2038383420372063,0x6168732e646c0a31,0x203233752e646572\n"
".quad 0x5b202c3035347225,0x6c5f616475635f5f,0x7261765f6c61636f,0x345f38373539315f\n"
".quad 0x6f635f6e6f6e5f30,0x5f6d756e5f74736e,0x6c0a3b5d746c756d,0x6465726168732e64\n"
".quad 0x6c7225203233752e,0x5f5f5b202c343233,0x636f6c5f61647563,0x315f7261765f6c61\n"
".quad 0x5f30345f37373539,0x736e6f635f6e6f6e,0x6c625f6d756e5f74,0x6c756d5f736b636f\n"
".quad 0x2e6c68730a3b5d74,0x336c722520343662,0x336c7225202c3532,0x610a3b31202c3432\n"
".quad 0x25203436732e6464,0x25202c3732336c72,0x7225202c36336c72,0x6c2e0a3b3532336c\n"
".quad 0x383834203720636f,0x68732e74730a3120,0x3631752e64657261,0x3732336c72255b20\n"
".quad 0x3035347225202c5d,0x31752e766f6d0a3b,0x2c30377372252036,0x636f6c2e0a3b3020\n"
".quad 0x3120393834203720,0x726168732e74730a,0x5b203631752e6465,0x6c5f616475635f5f\n"
".quad 0x7261765f6c61636f,0x345f33393439315f,0x6f635f6e6f6e5f32,0x6c635f735f74736e\n"
".quad 0x5d7265706c65685f,0x3b3037737225202c,0x315f393142420a0a,0x636f6c2e0a3a3035\n"
".quad 0x3120323934203720,0x6e79732e7261620a,0x6f6c2e0a3b302063,0x2035393420372063\n"
".quad 0x6168732e646c0a31,0x203233752e646572,0x5b202c3630317225,0x6c5f616475635f5f\n"
".quad 0x7261765f6c61636f,0x345f37313339315f,0x6f635f6e6f6e5f30,0x5f6d756e5f74736e\n"
".quad 0x5f73646165726874,0x3b5d657669746361,0x726168732e646c0a,0x25203233752e6465\n"
".quad 0x5f5b202c37303172,0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3737353931\n"
".quad 0x6e6f635f6e6f6e5f,0x625f6d756e5f7473,0x756d5f736b636f6c,0x2e646c0a3b5d746c\n"
".quad 0x752e646572616873,0x3830317225203233,0x6475635f5f5b202c,0x5f6c61636f6c5f61\n"
".quad 0x373539315f726176,0x6e6f6e5f30345f39,0x6f5f74736e6f635f,0x756d5f7465736666\n"
".quad 0x64626d616c5f746c,0x636f6c2e0a3b5d61,0x3120363531203720,0x3233752e766f6d0a\n"
".quad 0x202c343335722520,0x0a3b782e64697425,0x35203720636f6c2e,0x7465730a31203432\n"
".quad 0x3233752e746c2e70,0x25202c3439702520,0x7225202c34333572,0x6c756d0a3b383031\n"
".quad 0x33752e656469772e,0x3832336c72252032,0x2c3433357225202c,0x2e6464610a3b3420\n"
".quad 0x336c722520343673,0x326c7225202c3033,0x336c7225202c3836,0x636f6c2e0a3b3832\n"
".quad 0x3120363235203720,0x726168732e646c0a,0x25203233662e6465,0x72255b202c393266\n"
".quad 0x2e0a3b5d3033336c,0x3235203720636f6c,0x397025400a312034,0x4242206172622034\n"
".quad 0x0a3b3235315f3931,0x203720636f6c2e0a,0x6f6d0a3120363531,0x7225203233752e76\n"
".quad 0x697425202c333335,0x6f6c2e0a3b782e64,0x2033333520372063,0x33732e6275730a31\n"
".quad 0x2c35353472252032,0x202c333335722520,0x6c0a3b3830317225,0x2e6d617261702e64\n"
".quad 0x346c722520343675,0x315a5f5b202c3332,0x4b74636573696237,0x72614c6c656e7265\n"
".quad 0x666a5f5366506567,0x30536a50666a6a66,0x5f30535f535f535f,0x535f30535f535f53\n"
".quad 0x5f30535f30535f30,0x315f6d617261705f,0x617476630a3b5d33,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x25202c3133336c72,0x2e0a3b3332346c72,0x3335203720636f6c\n"
".quad 0x2e6c756d0a312033,0x3233752e65646977,0x2c3233336c722520,0x202c353534722520\n"
".quad 0x732e6464610a3b34,0x33336c7225203436,0x33336c7225202c33,0x33336c7225202c31\n"
".quad 0x6c672e74730a3b32,0x3233662e6c61626f,0x3333336c72255b20,0x3b39326625202c5d\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3433336c,0x0a3b34202c333335\n"
".quad 0x203436732e646461,0x202c3633336c7225,0x202c3037326c7225,0x0a3b3433336c7225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c353234,0x7463657369623731\n"
".quad 0x614c6c656e72654b,0x6a5f536650656772,0x536a50666a6a6666,0x30535f535f535f30\n"
".quad 0x5f30535f535f535f,0x30535f30535f3053,0x5f6d617261705f5f,0x7476630a3b5d3431\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x202c3733336c7225,0x0a3b3532346c7225\n"
".quad 0x35203720636f6c2e,0x6464610a31203433,0x6c7225203436732e,0x6c7225202c383333\n"
".quad 0x6c7225202c373333,0x2e646c0a3b323333,0x662e646572616873,0x2c38386625203233\n"
".quad 0x3633336c72255b20,0x6c672e74730a3b5d,0x3233662e6c61626f,0x3833336c72255b20\n"
".quad 0x3b38386625202c5d,0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3933336c\n"
".quad 0x0a3b32202c333335,0x203436732e646461,0x202c3134336c7225,0x25202c33346c7225\n"
".quad 0x6c0a3b3933336c72,0x2e6d617261702e64,0x346c722520343675,0x315a5f5b202c3732\n"
".quad 0x4b74636573696237,0x72614c6c656e7265,0x666a5f5366506567,0x30536a50666a6a66\n"
".quad 0x5f30535f535f535f,0x535f30535f535f53,0x5f30535f30535f30,0x315f6d617261705f\n"
".quad 0x617476630a3b5d35,0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3234336c72\n"
".quad 0x2e0a3b3732346c72,0x3335203720636f6c,0x2e6464610a312035,0x336c722520343673\n"
".quad 0x336c7225202c3334,0x336c7225202c3234,0x732e646c0a3b3233,0x31752e6465726168\n"
".quad 0x2c39353472252036,0x3134336c72255b20,0x6c672e74730a3b5d,0x3233752e6c61626f\n"
".quad 0x3334336c72255b20,0x3935347225202c5d,0x36732e6464610a3b,0x3534336c72252034\n"
".quad 0x2c35346c7225202c,0x3b3933336c722520,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3932346c,0x636573696237315a,0x4c6c656e72654b74,0x5f53665065677261\n"
".quad 0x6a50666a6a66666a,0x535f535f535f3053,0x30535f535f535f30,0x535f30535f30535f\n"
".quad 0x6d617261705f5f30,0x76630a3b5d36315f,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x2c3634336c722520,0x3b3932346c722520,0x203720636f6c2e0a,0x64610a3120363335\n"
".quad 0x7225203436732e64,0x7225202c3734336c,0x7225202c3634336c,0x646c0a3b3233336c\n"
".quad 0x2e6465726168732e,0x3634722520363175,0x336c72255b202c32,0x2e74730a3b5d3534\n"
".quad 0x752e6c61626f6c67,0x336c72255b203233,0x347225202c5d3734,0x2e6172620a3b3236\n"
".quad 0x3931424220696e75,0x420a0a3b3335315f,0x3a3235315f393142,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3731346c,0x636573696237315a,0x4c6c656e72654b74\n"
".quad 0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053,0x30535f535f535f30\n"
".quad 0x535f30535f30535f,0x6d617261705f5f30,0x76630a3b5d30315f,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3834336c722520,0x3b3731346c722520,0x203720636f6c2e0a\n"
".quad 0x6f6d0a3120363531,0x7225203233752e76,0x697425202c303335,0x6f6c2e0a3b782e64\n"
".quad 0x2036323520372063,0x69772e6c756d0a31,0x25203233752e6564,0x25202c3934336c72\n"
".quad 0x3b34202c30333572,0x3436732e6464610a,0x2c3035336c722520,0x2c3834336c722520\n"
".quad 0x3b3934336c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3035336c7225\n"
".quad 0x610a3b3932662520,0x25203436732e6464,0x25202c3235336c72,0x25202c3037326c72\n"
".quad 0x6c0a3b3934336c72,0x2e6d617261702e64,0x346c722520343675,0x315a5f5b202c3931\n"
".quad 0x4b74636573696237,0x72614c6c656e7265,0x666a5f5366506567,0x30536a50666a6a66\n"
".quad 0x5f30535f535f535f,0x535f30535f535f53,0x5f30535f30535f30,0x315f6d617261705f\n"
".quad 0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3335336c72\n"
".quad 0x2e0a3b3931346c72,0x3235203720636f6c,0x2e6464610a312037,0x336c722520343673\n"
".quad 0x336c7225202c3435,0x336c7225202c3335,0x732e646c0a3b3934,0x33662e6465726168\n"
".quad 0x202c393866252032,0x5d3235336c72255b,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3435336c72255b,0x0a3b39386625202c,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x357225202c353533,0x610a3b32202c3033,0x25203436732e6464,0x25202c3735336c72\n"
".quad 0x7225202c35346c72,0x646c0a3b3535336c,0x752e6d617261702e,0x32346c7225203436\n"
".quad 0x37315a5f5b202c31,0x654b746365736962,0x6772614c6c656e72,0x66666a5f53665065\n"
".quad 0x5f30536a50666a6a,0x535f30535f535f53,0x30535f30535f535f,0x5f5f30535f30535f\n"
".quad 0x32315f6d61726170,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x7225202c3835336c,0x6c2e0a3b3132346c,0x393235203720636f,0x732e6464610a3120\n"
".quad 0x35336c7225203436,0x35336c7225202c39,0x34336c7225202c38,0x68732e646c0a3b39\n"
".quad 0x3631752e64657261,0x202c393634722520,0x5d3735336c72255b,0x6f6c672e74730a3b\n"
".quad 0x203233752e6c6162,0x5d3935336c72255b,0x3b3936347225202c,0x315f393142420a0a\n"
".quad 0x636f6c2e0a3a3335,0x3120393335203720,0x65672e707465730a,0x397025203233752e\n"
".quad 0x2c33347225202c35,0x0a3b363031722520,0x7262203539702540,0x315f393142422061\n"
".quad 0x6f6c2e0a0a3b3735,0x2031343520372063,0x6c2e707465730a31,0x7025203233752e74\n"
".quad 0x33347225202c3639,0x3b3830317225202c,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x7225202c3036336c,0x610a3b34202c3334,0x25203436732e6464,0x25202c3236336c72\n"
".quad 0x25202c3836326c72,0x2e0a3b3036336c72,0x3435203720636f6c,0x732e646c0a312033\n"
".quad 0x33662e6465726168,0x202c303366252032,0x5d3236336c72255b,0x3720636f6c2e0a3b\n"
".quad 0x400a312031343520,0x6172622036397025,0x35315f3931424220,0x636f6c2e0a0a3b36\n"
".quad 0x3120303535203720,0x3233732e6275730a,0x202c323834722520,0x7225202c33347225\n"
".quad 0x2e646c0a3b383031,0x36752e6d61726170,0x3232346c72252034,0x6237315a5f5b202c\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a\n"
".quad 0x5f535f30535f535f,0x5f30535f30535f53,0x705f5f30535f3053,0x5d33315f6d617261\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c333633\n"
".quad 0x6f6c2e0a3b323234,0x2030353520372063,0x69772e6c756d0a31,0x25203233752e6564\n"
".quad 0x25202c3436336c72,0x3b34202c32383472,0x3436732e6464610a,0x2c3536336c722520\n"
".quad 0x2c3336336c722520,0x3b3436336c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3536336c7225,0x6d0a3b3033662520,0x2e656469772e6c75,0x336c722520323375\n"
".quad 0x33347225202c3636,0x6464610a3b34202c,0x6c7225203436732e,0x6c7225202c383633\n"
".quad 0x6c7225202c303732,0x2e646c0a3b363633,0x36752e6d61726170,0x3432346c72252034\n"
".quad 0x6237315a5f5b202c,0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650\n"
".quad 0x535f30536a50666a,0x5f535f30535f535f,0x5f30535f30535f53,0x705f5f30535f3053\n"
".quad 0x5d34315f6d617261,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x6c7225202c393633,0x6f6c2e0a3b343234,0x2031353520372063,0x36732e6464610a31\n"
".quad 0x3037336c72252034,0x3936336c7225202c,0x3436336c7225202c,0x6168732e646c0a3b\n"
".quad 0x203233662e646572,0x255b202c30396625,0x0a3b5d3836336c72,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3037336c72,0x756d0a3b30396625,0x752e656469772e6c\n"
".quad 0x37336c7225203233,0x2c33347225202c31,0x2e6464610a3b3220,0x336c722520343673\n"
".quad 0x346c7225202c3337,0x37336c7225202c33,0x61702e646c0a3b31,0x203436752e6d6172\n"
".quad 0x202c3632346c7225,0x73696237315a5f5b,0x656e72654b746365,0x6650656772614c6c\n"
".quad 0x666a6a66666a5f53,0x535f535f30536a50,0x5f535f535f30535f,0x30535f30535f3053\n"
".quad 0x7261705f5f30535f,0x0a3b5d35315f6d61,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x37336c7225203436,0x32346c7225202c34,0x20636f6c2e0a3b36,0x0a31203235352037\n"
".quad 0x203436732e646461,0x202c3537336c7225,0x202c3437336c7225,0x0a3b3436336c7225\n"
".quad 0x65726168732e646c,0x7225203631752e64,0x72255b202c363834,0x730a3b5d3337336c\n"
".quad 0x6c61626f6c672e74,0x72255b203233752e,0x25202c5d3537336c,0x64610a3b36383472\n"
".quad 0x7225203436732e64,0x7225202c3737336c,0x6c7225202c35346c,0x2e646c0a3b313733\n"
".quad 0x36752e6d61726170,0x3832346c72252034,0x6237315a5f5b202c,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a,0x5f535f30535f535f\n"
".quad 0x5f30535f30535f53,0x705f5f30535f3053,0x5d36315f6d617261,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c383733,0x6f6c2e0a3b383234\n"
".quad 0x2033353520372063,0x36732e6464610a31,0x3937336c72252034,0x3837336c7225202c\n"
".quad 0x3436336c7225202c,0x6168732e646c0a3b,0x203631752e646572,0x5b202c3938347225\n"
".quad 0x3b5d3737336c7225,0x626f6c672e74730a,0x5b203233752e6c61,0x2c5d3937336c7225\n"
".quad 0x0a3b393834722520,0x20696e752e617262,0x3735315f39314242,0x5f393142420a0a3b\n"
".quad 0x2e646c0a3a363531,0x36752e6d61726170,0x3631346c72252034,0x6237315a5f5b202c\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a\n"
".quad 0x5f535f30535f535f,0x5f30535f30535f53,0x705f5f30535f3053,0x5d30315f6d617261\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c303833\n"
".quad 0x6f6c2e0a3b363134,0x2033343520372063,0x69772e6c756d0a31,0x25203233752e6564\n"
".quad 0x25202c3138336c72,0x0a3b34202c333472,0x203436732e646461,0x202c3238336c7225\n"
".quad 0x202c3038336c7225,0x0a3b3138336c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3238336c72,0x64610a3b30336625,0x7225203436732e64,0x7225202c3438336c\n"
".quad 0x7225202c3037326c,0x646c0a3b3138336c,0x752e6d617261702e,0x31346c7225203436\n"
".quad 0x37315a5f5b202c38,0x654b746365736962,0x6772614c6c656e72,0x66666a5f53665065\n"
".quad 0x5f30536a50666a6a,0x535f30535f535f53,0x30535f30535f535f,0x5f5f30535f30535f\n"
".quad 0x31315f6d61726170,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x7225202c3538336c,0x6c2e0a3b3831346c,0x343435203720636f,0x732e6464610a3120\n"
".quad 0x38336c7225203436,0x38336c7225202c36,0x38336c7225202c35,0x68732e646c0a3b31\n"
".quad 0x3233662e64657261,0x5b202c3139662520,0x3b5d3438336c7225,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3638336c7225,0x6d0a3b3139662520,0x2e656469772e6c75\n"
".quad 0x336c722520323375,0x33347225202c3738,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c393833,0x336c7225202c3534,0x702e646c0a3b3738,0x3436752e6d617261\n"
".quad 0x2c3032346c722520,0x696237315a5f5b20,0x6e72654b74636573,0x50656772614c6c65\n"
".quad 0x6a6a66666a5f5366,0x5f535f30536a5066,0x535f535f30535f53,0x535f30535f30535f\n"
".quad 0x61705f5f30535f30,0x3b5d32315f6d6172,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x336c722520343675,0x346c7225202c3039,0x636f6c2e0a3b3032,0x3120363435203720\n"
".quad 0x3436732e6464610a,0x2c3139336c722520,0x2c3039336c722520,0x3b3138336c722520\n"
".quad 0x726168732e646c0a,0x25203631752e6465,0x255b202c38393472,0x0a3b5d3938336c72\n"
".quad 0x61626f6c672e7473,0x255b203233752e6c,0x202c5d3139336c72,0x0a0a3b3839347225\n"
".quad 0x3735315f39314242,0x3720636f6c2e0a3a,0x6d0a312036353120,0x25203233752e766f\n"
".quad 0x7425202c32333572,0x6c2e0a3b782e6469,0x303635203720636f,0x2e707465730a3120\n"
".quad 0x25203233752e7467,0x357225202c373970,0x30317225202c3233,0x37397025400a3b37\n"
".quad 0x3142422061726220,0x0a0a3b3935315f39,0x31203720636f6c2e,0x766f6d0a31203635\n"
".quad 0x357225203233752e,0x64697425202c3133,0x2e6c756d0a3b782e,0x3233752e65646977\n"
".quad 0x2c3239336c722520,0x202c313335722520,0x732e6464610a3b32,0x39336c7225203436\n"
".quad 0x36336c7225202c34,0x3239336c7225202c,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3133346c72,0x6573696237315a5f,0x6c656e72654b7463,0x536650656772614c\n"
".quad 0x50666a6a66666a5f,0x5f535f535f30536a,0x535f535f535f3053,0x5f30535f30535f30\n"
".quad 0x617261705f5f3053,0x630a3b5d37315f6d,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x3539336c72252034,0x3133346c7225202c,0x3720636f6c2e0a3b,0x6d0a312031363520\n"
".quad 0x2e656469772e6c75,0x336c722520323375,0x33357225202c3639,0x64610a3b34202c31\n"
".quad 0x7225203436732e64,0x7225202c3739336c,0x7225202c3539336c,0x646c0a3b3639336c\n"
".quad 0x2e6465726168732e,0x3035722520363175,0x336c72255b202c33,0x2e74730a3b5d3439\n"
".quad 0x752e6c61626f6c67,0x336c72255b203233,0x357225202c5d3739,0x2e6464610a3b3330\n"
".quad 0x336c722520343673,0x316c7225202c3939,0x336c7225202c3836,0x702e646c0a3b3239\n"
".quad 0x3436752e6d617261,0x2c3333346c722520,0x696237315a5f5b20,0x6e72654b74636573\n"
".quad 0x50656772614c6c65,0x6a6a66666a5f5366,0x5f535f30536a5066,0x535f535f30535f53\n"
".quad 0x535f30535f30535f,0x61705f5f30535f30,0x3b5d38315f6d6172,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x346c722520343675,0x346c7225202c3030,0x636f6c2e0a3b3333\n"
".quad 0x3120323635203720,0x3436732e6464610a,0x2c3130346c722520,0x2c3030346c722520\n"
".quad 0x3b3639336c722520,0x726168732e646c0a,0x25203631752e6465,0x255b202c36303572\n"
".quad 0x0a3b5d3939336c72,0x61626f6c672e7473,0x255b203233752e6c,0x202c5d3130346c72\n"
".quad 0x0a0a3b3630357225,0x3935315f39314242,0x3720636f6c2e0a3a,0x730a312034363520\n"
".quad 0x752e74672e707465,0x2c38397025203233,0x25202c3334722520,0x25400a3b37303172\n"
".quad 0x2061726220383970,0x3136315f39314242,0x772e6c756d0a0a3b,0x203233752e656469\n"
".quad 0x202c3230346c7225,0x3b32202c33347225,0x3436732e6464610a,0x2c3430346c722520\n"
".quad 0x202c36336c722520,0x0a3b3230346c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c303334,0x7463657369623731,0x614c6c656e72654b,0x6a5f536650656772\n"
".quad 0x536a50666a6a6666,0x30535f535f535f30,0x5f30535f535f535f,0x30535f30535f3053\n"
".quad 0x5f6d617261705f5f,0x7476630a3b5d3731,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3530346c7225,0x0a3b3033346c7225,0x35203720636f6c2e,0x6c756d0a31203536\n"
".quad 0x33752e656469772e,0x3630346c72252032,0x202c33347225202c,0x732e6464610a3b34\n"
".quad 0x30346c7225203436,0x30346c7225202c37,0x30346c7225202c35,0x68732e646c0a3b36\n"
".quad 0x3631752e64657261,0x202c353135722520,0x5d3430346c72255b,0x6f6c672e74730a3b\n"
".quad 0x203233752e6c6162,0x5d3730346c72255b,0x3b3531357225202c,0x3436732e6464610a\n"
".quad 0x2c3930346c722520,0x2c3836316c722520,0x3b3230346c722520,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3233346c,0x636573696237315a,0x4c6c656e72654b74\n"
".quad 0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053,0x30535f535f535f30\n"
".quad 0x535f30535f30535f,0x6d617261705f5f30,0x76630a3b5d38315f,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3031346c722520,0x3b3233346c722520,0x203720636f6c2e0a\n"
".quad 0x64610a3120363635,0x7225203436732e64,0x7225202c3131346c,0x7225202c3031346c\n"
".quad 0x646c0a3b3630346c,0x2e6465726168732e,0x3135722520363175,0x346c72255b202c38\n"
".quad 0x2e74730a3b5d3930,0x752e6c61626f6c67,0x346c72255b203233,0x357225202c5d3131\n"
".quad 0x3142420a0a3b3831,0x2e0a3a3136315f39,0x3035203720636f6c,0x3b7465720a322031\n"
".quad 0x746e652e0a0a7d0a,0x6230335a5f207972,0x72654b7463657369,0x656772614c6c656e\n"
".quad 0x65746e49656e4f5f,0x536650736c617672,0x505f535f536a6a5f,0x7261702e0a28666a\n"
".quad 0x203436752e206d61,0x6573696230335a5f,0x6c656e72654b7463,0x6e4f5f656772614c\n"
".quad 0x61767265746e4965,0x6a6a5f536650736c,0x5f666a505f535f53,0x2c305f6d61726170\n"
".quad 0x206d617261702e0a,0x335a5f203436752e,0x4b74636573696230,0x72614c6c656e7265\n"
".quad 0x6e49656e4f5f6567,0x50736c6176726574,0x535f536a6a5f5366,0x7261705f666a505f\n"
".quad 0x702e0a2c315f6d61,0x33752e206d617261,0x696230335a5f2032,0x6e72654b74636573\n"
".quad 0x5f656772614c6c65,0x7265746e49656e4f,0x5f536650736c6176,0x6a505f535f536a6a\n"
".quad 0x5f6d617261705f66,0x617261702e0a2c32,0x5f203233752e206d,0x636573696230335a\n"
".quad 0x4c6c656e72654b74,0x656e4f5f65677261,0x6c61767265746e49,0x536a6a5f53665073\n"
".quad 0x705f666a505f535f,0x0a2c335f6d617261,0x2e206d617261702e,0x30335a5f20343675\n"
".quad 0x654b746365736962,0x6772614c6c656e72,0x746e49656e4f5f65,0x6650736c61767265\n"
".quad 0x5f535f536a6a5f53,0x617261705f666a50,0x61702e0a2c345f6d,0x3436752e206d6172\n"
".quad 0x73696230335a5f20,0x656e72654b746365,0x4f5f656772614c6c,0x767265746e49656e\n"
".quad 0x6a5f536650736c61,0x666a505f535f536a,0x355f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x7463657369623033,0x614c6c656e72654b,0x49656e4f5f656772\n"
".quad 0x736c61767265746e,0x5f536a6a5f536650,0x61705f666a505f53,0x2e0a2c365f6d6172\n"
".quad 0x662e206d61726170,0x6230335a5f203233,0x72654b7463657369,0x656772614c6c656e\n"
".quad 0x65746e49656e4f5f,0x536650736c617672,0x505f535f536a6a5f,0x6d617261705f666a\n"
".quad 0x2e0a7b0a290a375f,0x3233662e20676572,0x3b3e36363c662520,0x702e206765722e0a\n"
".quad 0x323c702520646572,0x6765722e0a3b3e33,0x7225203233732e20,0x722e0a3b3e35383c\n"
".quad 0x203436732e206765,0x3b3e31343c6c7225,0x726168732e090a0a,0x67696c612e206465\n"
".quad 0x2038622e2034206e,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f35343030325f\n"
".quad 0x6f635f6e6f6e5f33,0x656c5f735f74736e,0x74617263735f7466,0x5d343230315b6863\n"
".quad 0x6168732e090a0a3b,0x696c612e20646572,0x38622e2034206e67,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f36343030325f72,0x635f6e6f6e5f3333,0x725f735f74736e6f\n"
".quad 0x7263735f74686769,0x3230315b68637461,0x732e090a0a3b5d34,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x75635f5f20323375,0x6c61636f6c5f6164,0x3030325f7261765f\n"
".quad 0x6f6e5f30345f3037,0x5f74736e6f635f6e,0x65677265766e6f63,0x68745f6c6c615f64\n"
".quad 0x0a0a3b7364616572,0x6d617261702e646c,0x327225203233752e,0x6230335a5f5b202c\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x65746e49656e4f5f,0x536650736c617672\n"
".quad 0x505f535f536a6a5f,0x6d617261705f666a,0x2e646c0a3b5d335f,0x36752e6d61726170\n"
".quad 0x202c336c72252034,0x73696230335a5f5b,0x656e72654b746365,0x4f5f656772614c6c\n"
".quad 0x767265746e49656e,0x6a5f536650736c61,0x666a505f535f536a,0x345f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c31316c7225,0x6573696230335a5f\n"
".quad 0x6c656e72654b7463,0x6e4f5f656772614c,0x61767265746e4965,0x6a6a5f536650736c\n"
".quad 0x5f666a505f535f53,0x5d355f6d61726170,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c32316c72,0x636573696230335a,0x4c6c656e72654b74,0x656e4f5f65677261\n"
".quad 0x6c61767265746e49,0x536a6a5f53665073,0x705f666a505f535f,0x3b5d365f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x346c722520343675,0x3b32316c7225202c\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x356c722520343675,0x3b31316c7225202c\n"
".quad 0x203820636f6c2e0a,0x766f6d0a31203834,0x327225203233752e,0x6961746325202c31\n"
".quad 0x766f6d0a3b782e64,0x327225203233752e,0x6469746e25202c32,0x2e766f6d0a3b782e\n"
".quad 0x2c33722520323375,0x3b782e6469742520,0x2e6f6c2e64616d0a,0x2c34722520323373\n"
".quad 0x25202c3132722520,0x337225202c323272,0x3820636f6c2e0a3b,0x65730a3120373620\n"
".quad 0x33752e746c2e7074,0x25202c3470252032,0x3b327225202c3472,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x316c722520343675,0x3b336c7225202c33,0x203820636f6c2e0a\n"
".quad 0x756d0a3120353431,0x752e656469772e6c,0x34316c7225203233,0x34202c347225202c\n"
".quad 0x36732e6464610a3b,0x202c366c72252034,0x25202c33316c7225,0x6c2e0a3b34316c72\n"
".quad 0x203736203820636f,0x6220347025400a31,0x5f30324242206172,0x2e766f6d0a0a3b32\n"
".quad 0x3136662520323366,0x0a3b33326625202c,0x203233662e766f6d,0x6625202c34366625\n"
".quad 0x2e6172620a3b3432,0x3032424220696e75,0x3242420a0a3b335f,0x6f6c2e0a3a325f30\n"
".quad 0x3120383620382063,0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c343666\n"
".quad 0x6f6c2e0a3b5d366c,0x3120393620382063,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x347225202c35316c,0x6464610a3b34202c,0x6c7225203436732e,0x356c7225202c3631\n"
".quad 0x3b35316c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c313666\n"
".quad 0x6c2e0a3b5d36316c,0x203037203820636f,0x36732e6464610a31,0x2c37316c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b35316c72,0x2e6c61626f6c672e,0x3537722520323375\n"
".quad 0x37316c72255b202c,0x303242420a0a3b5d,0x2e766f6d0a3a335f,0x3236662520323366\n"
".quad 0x0a3b34366625202c,0x203233662e766f6d,0x6625202c39356625,0x636f6c2e0a3b3136\n"
".quad 0x0a31203834203820,0x203233752e766f6d,0x7425202c34377225,0x6c2e0a3b782e6469\n"
".quad 0x203837203820636f,0x6e2e707465730a31,0x7025203233732e65,0x2c34377225202c35\n"
".quad 0x357025400a3b3020,0x3242422061726220,0x6f6d0a0a3b355f30,0x7225203233752e76\n"
".quad 0x2e0a3b30202c3732,0x3937203820636f6c,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x30373030325f7261,0x5f6e6f6e5f30345f\n"
".quad 0x6f635f74736e6f63,0x5f6465677265766e,0x657268745f6c6c61,0x7225202c5d736461\n"
".quad 0x3242420a0a3b3732,0x6f6c2e0a3a355f30,0x3120313820382063,0x6e79732e7261620a\n"
".quad 0x766f6d0a3b302063,0x377225203233752e,0x6f6d0a3b30202c39,0x6625203233662e76\n"
".quad 0x30306630202c3135,0x0a3b303030303030,0x3a365f303242420a,0x3233662e766f6d0a\n"
".quad 0x25202c3336662520,0x766f6d0a3b323666,0x366625203233662e,0x3b39356625202c30\n"
".quad 0x3233752e766f6d0a,0x7225202c37722520,0x2e766f6d0a3b3937,0x3932722520323375\n"
".quad 0x6f6c2e0a3b31202c,0x3120373820382063,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f30373030325f,0x6f635f6e6f6e5f30\n"
".quad 0x766e6f635f74736e,0x6c615f6465677265,0x6461657268745f6c,0x39327225202c5d73\n"
".quad 0x7261702e646c0a3b,0x25203233752e6d61,0x5a5f5b202c323772,0x7463657369623033\n"
".quad 0x614c6c656e72654b,0x49656e4f5f656772,0x736c61767265746e,0x5f536a6a5f536650\n"
".quad 0x61705f666a505f53,0x0a3b5d335f6d6172,0x36203820636f6c2e,0x707465730a312037\n"
".quad 0x203233752e746c2e,0x347225202c367025,0x0a3b32377225202c,0x39203820636f6c2e\n"
".quad 0x707465730a312030,0x203233732e71652e,0x377225202c377025,0x646e610a3b30202c\n"
".quad 0x702520646572702e,0x202c367025202c31,0x7025400a3b377025,0x4242206172622031\n"
".quad 0x72620a3b375f3032,0x424220696e752e61,0x420a0a3b385f3032,0x2e0a3a375f303242\n"
".quad 0x3239203820636f6c,0x2e707465730a3120,0x25203233662e746c,0x33366625202c3870\n"
".quad 0x303030306630202c,0x65730a3b30303030,0x25203233662e706c,0x426630202c363266\n"
".quad 0x2c30303030303846,0x3030384633663020,0x387025202c303030,0x3820636f6c2e0a3b\n"
".quad 0x65730a3120323920,0x33662e746c2e7074,0x25202c3970252032,0x306630202c303666\n"
".quad 0x3b30303030303030,0x33662e706c65730a,0x202c373266252032,0x3030303846426630\n"
".quad 0x46336630202c3030,0x202c303030303038,0x6f6c2e0a3b397025,0x3120323920382063\n"
".quad 0x71652e707465730a,0x317025203233662e,0x2c36326625202c30,0x730a3b3732662520\n"
".quad 0x25203233662e6275,0x366625202c383266,0x3b33366625202c30,0x2e6e722e616d660a\n"
".quad 0x3932662520323366,0x202c38326625202c,0x3030303046336630,0x33366625202c3030\n"
".quad 0x33662e6464610a3b,0x202c303366252032,0x6625202c33366625,0x2e6c756d0a3b3036\n"
".quad 0x3133662520323366,0x202c30336625202c,0x3030303046336630,0x706c65730a3b3030\n"
".quad 0x356625203233662e,0x2c39326625202c31,0x25202c3133662520,0x42420a0a3b303170\n"
".quad 0x6c2e0a3a385f3032,0x393132203220636f,0x732e7261620a3120,0x6c0a3b3020636e79\n"
".quad 0x2e6d617261702e64,0x3936722520323375,0x6230335a5f5b202c,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x65746e49656e4f5f,0x536650736c617672,0x505f535f536a6a5f\n"
".quad 0x6d617261705f666a,0x7465730a3b5d325f,0x3233732e71652e70,0x25202c3131702520\n"
".quad 0x0a3b30202c393672,0x32203220636f6c2e,0x7025400a31203731,0x4220617262203131\n"
".quad 0x0a3b37315f303242,0x3233662e766f6d0a,0x30202c3536662520,0x3030303038463366\n"
".quad 0x752e766f6d0a3b30,0x2c34387225203233,0x2e766f6d0a3b3020,0x3138722520323375\n"
".quad 0x0a3b34387225202c,0x6d617261702e646c,0x387225203233752e,0x30335a5f5b202c32\n"
".quad 0x654b746365736962,0x6772614c6c656e72,0x746e49656e4f5f65,0x6650736c61767265\n"
".quad 0x5f535f536a6a5f53,0x617261705f666a50,0x420a0a3b5d325f6d,0x0a3a30315f303242\n"
".quad 0x32203220636f6c2e,0x6464610a31203232,0x337225203233732e,0x202c337225202c37\n"
".quad 0x646c0a3b31387225,0x752e6d617261702e,0x2c38367225203233,0x696230335a5f5b20\n"
".quad 0x6e72654b74636573,0x5f656772614c6c65,0x7265746e49656e4f,0x5f536650736c6176\n"
".quad 0x6a505f535f536a6a,0x5f6d617261705f66,0x636f6c2e0a3b5d32,0x3120323232203220\n"
".quad 0x65672e707465730a,0x317025203233752e,0x2c37337225202c32,0x400a3b3836722520\n"
".quad 0x6172622032317025,0x32315f3032424220,0x20636f6c2e0a0a3b,0x0a31203432322032\n"
".quad 0x2e3436752e747663,0x316c722520323375,0x3b31387225202c38,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x3b337225202c3931,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c36336c,0x7463657369623033,0x614c6c656e72654b,0x49656e4f5f656772\n"
".quad 0x736c61767265746e,0x5f536a6a5f536650,0x61705f666a505f53,0x0a3b5d305f6d6172\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x30326c7225203436,0x3b36336c7225202c\n"
".quad 0x3436732e6464610a,0x202c31326c722520,0x25202c39316c7225,0x6c2e0a3b38316c72\n"
".quad 0x343232203220636f,0x622e6c68730a3120,0x32326c7225203436,0x2c31326c7225202c\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x30326c7225202c33,0x3b32326c7225202c\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x337225202c34326c,0x766f6d0a3b34202c\n"
".quad 0x6c7225203436752e,0x75635f5f202c3532,0x6c61636f6c5f6164,0x3030325f7261765f\n"
".quad 0x6f6e5f33335f3534,0x5f74736e6f635f6e,0x735f7466656c5f73,0x0a3b686374617263\n"
".quad 0x203436732e646461,0x25202c36326c7225,0x7225202c35326c72,0x6f6c2e0a3b34326c\n"
".quad 0x2034323220322063,0x6f6c672e646c0a31,0x203233662e6c6162,0x255b202c33336625\n"
".quad 0x730a3b5d33326c72,0x6465726168732e74,0x72255b203233662e,0x6625202c5d36326c\n"
".quad 0x702e646c0a3b3333,0x3436752e6d617261,0x202c37336c722520,0x73696230335a5f5b\n"
".quad 0x656e72654b746365,0x4f5f656772614c6c,0x767265746e49656e,0x6a5f536650736c61\n"
".quad 0x666a505f535f536a,0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c37326c,0x2e766f6d0a3b3733,0x326c722520343675\n"
".quad 0x6475635f5f202c38,0x5f6c61636f6c5f61,0x343030325f726176,0x6e6f6e5f33335f36\n"
".quad 0x735f74736e6f635f,0x735f74686769725f,0x0a3b686374617263,0x203436732e646461\n"
".quad 0x25202c39326c7225,0x7225202c38326c72,0x6f6c2e0a3b34326c,0x2035323220322063\n"
".quad 0x36732e6464610a31,0x2c30336c72252034,0x202c32326c722520,0x6c0a3b37326c7225\n"
".quad 0x6c61626f6c672e64,0x336625203233662e,0x336c72255b202c34,0x730a3b5d342d2b30\n"
".quad 0x6465726168732e74,0x72255b203233662e,0x6625202c5d39326c,0x3242420a0a3b3433\n"
".quad 0x6c2e0a3a32315f30,0x383232203220636f,0x732e7261620a3120,0x6c0a3b3020636e79\n"
".quad 0x2e6d617261702e64,0x3137722520323375,0x6230335a5f5b202c,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x65746e49656e4f5f,0x536650736c617672,0x505f535f536a6a5f\n"
".quad 0x6d617261705f666a,0x6f6c2e0a3b5d335f,0x2031333220322063,0x672e707465730a31\n"
".quad 0x7025203233752e65,0x2c347225202c3331,0x400a3b3137722520,0x6172622033317025\n"
".quad 0x36315f3032424220,0x20636f6c2e0a0a3b,0x0a35203731322033,0x203233752e6e696d\n"
".quad 0x7225202c31317225,0x32327225202c3238,0x652e707465730a3b,0x7025203233732e71\n"
".quad 0x31317225202c3431,0x6f6c2e0a3b30202c,0x2035333220322063,0x2034317025400a31\n"
".quad 0x3032424220617262,0x6f6d0a0a3b36315f,0x7225203233752e76,0x6d0a3b30202c3338\n"
".quad 0x25203436752e766f,0x5f5f202c30346c72,0x636f6c5f61647563,0x325f7261765f6c61\n"
".quad 0x5f33335f36343030,0x736e6f635f6e6f6e,0x686769725f735f74,0x6374617263735f74\n"
".quad 0x752e766f6d0a3b68,0x39336c7225203436,0x616475635f5f202c,0x765f6c61636f6c5f\n"
".quad 0x35343030325f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x7263735f7466656c\n"
".quad 0x420a0a3b68637461,0x0a3a35315f303242,0x32203220636f6c2e,0x2e646c0a31203633\n"
".quad 0x662e646572616873,0x2c35336625203233,0x5d39336c72255b20,0x33662e6275730a3b\n"
".quad 0x202c363366252032,0x6625202c35336625,0x732e646c0a3b3135,0x33662e6465726168\n"
".quad 0x202c373366252032,0x3b5d30346c72255b,0x3233662e6c756d0a,0x25202c3833662520\n"
".quad 0x336625202c373366,0x20636f6c2e0a3b37,0x3320313133312036,0x2e6e722e7669640a\n"
".quad 0x3933662520323366,0x202c38336625202c,0x6c2e0a3b35366625,0x363332203220636f\n"
".quad 0x662e6275730a3120,0x2c35366625203233,0x25202c3633662520,0x6f6c2e0a3b393366\n"
".quad 0x2038333220322063,0x6c2e707465730a31,0x7025203233662e74,0x35366625202c3531\n"
".quad 0x303030306630202c,0x65730a3b30303030,0x25203233752e706c,0x202c31202c313572\n"
".quad 0x3b35317025202c30,0x203220636f6c2e0a,0x64610a3120383332,0x7225203233732e64\n"
".quad 0x31357225202c3438,0x0a3b34387225202c,0x203436732e646461,0x25202c30346c7225\n"
".quad 0x3b34202c30346c72,0x3436732e6464610a,0x202c39336c722520,0x34202c39336c7225\n"
".quad 0x3220636f6c2e0a3b,0x0a37392035333220,0x203233732e646461,0x7225202c33387225\n"
".quad 0x2e0a3b31202c3338,0x3332203220636f6c,0x707465730a312035,0x203233752e746c2e\n"
".quad 0x7225202c36317025,0x31317225202c3338,0x2036317025400a3b,0x3032424220617262\n"
".quad 0x42420a0a3b35315f,0x2e0a3a36315f3032,0x3432203220636f6c,0x2e6275730a312033\n"
".quad 0x3238722520323373,0x202c32387225202c,0x6c2e0a3b32327225,0x373132203220636f\n"
".quad 0x2e6464610a373120,0x3138722520323373,0x202c32327225202c,0x646c0a3b31387225\n"
".quad 0x752e6d617261702e,0x2c37367225203233,0x696230335a5f5b20,0x6e72654b74636573\n"
".quad 0x5f656772614c6c65,0x7265746e49656e4f,0x5f536650736c6176,0x6a505f535f536a6a\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d32,0x3120373132203220,0x746c2e707465730a\n"
".quad 0x327025203233752e,0x202c31387225202c,0x6c2e0a3b37367225,0x393132203220636f\n"
".quad 0x732e7261620a3120,0x400a3b3020636e79,0x2061726220327025,0x3b30315f30324242\n"
".quad 0x696e752e6172620a,0x38315f3032424220,0x5f303242420a0a3b,0x2e766f6d0a3a3731\n"
".quad 0x3438722520323375,0x42420a0a3b30202c,0x2e0a3a38315f3032,0x3031203820636f6c\n"
".quad 0x317025400a312035,0x3242422061726220,0x6d0a0a3b30325f30,0x25203233752e766f\n"
".quad 0x377225202c303872,0x6e752e6172620a3b,0x325f303242422069,0x303242420a0a3b33\n"
".quad 0x6f6c2e0a3a30325f,0x2038303120382063,0x652e707465730a31,0x7025203233732e71\n"
".quad 0x35377225202c3731,0x0a3b34387225202c,0x3233662e706c6573,0x25202c3336662520\n"
".quad 0x356625202c333666,0x3b37317025202c31,0x33662e706c65730a,0x202c303666252032\n"
".quad 0x6625202c31356625,0x37317025202c3036,0x3820636f6c2e0a3b,0x730a312036313120\n"
".quad 0x25203233662e6275,0x366625202c373166,0x3b33366625202c30,0x203320636f6c2e0a\n"
".quad 0x62610a3520353933,0x6625203233662e73,0x30366625202c3034,0x33662e7362610a3b\n"
".quad 0x202c313466252032,0x6c2e0a3b33366625,0x353334203320636f,0x662e78616d0a3520\n"
".quad 0x2c32346625203233,0x25202c3034662520,0x2e646c0a3b313466,0x33662e6d61726170\n"
".quad 0x202c303566252032,0x73696230335a5f5b,0x656e72654b746365,0x4f5f656772614c6c\n"
".quad 0x767265746e49656e,0x6a5f536650736c61,0x666a505f535f536a,0x375f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203731312038,0x203233662e6c756d,0x6625202c33346625\n"
".quad 0x30356625202c3234,0x3320636f6c2e0a3b,0x6d0a352033323420,0x25203233662e6e69\n"
".quad 0x356625202c343466,0x3b33346625202c30,0x203820636f6c2e0a,0x65730a3120383131\n"
".quad 0x33662e746c2e7074,0x202c383170252032,0x6625202c37316625,0x317025400a3b3434\n"
".quad 0x4242206172622038,0x0a0a3b32325f3032,0x203233752e766f6d,0x3b30202c34357225\n"
".quad 0x203820636f6c2e0a,0x74730a3120373231,0x2e6465726168732e,0x635f5f5b20323375\n"
".quad 0x61636f6c5f616475,0x30325f7261765f6c,0x6e5f30345f303730,0x74736e6f635f6e6f\n"
".quad 0x677265766e6f635f,0x745f6c6c615f6465,0x2c5d736461657268,0x6d0a3b3435722520\n"
".quad 0x25203233752e766f,0x377225202c303872,0x6e752e6172620a3b,0x325f303242422069\n"
".quad 0x303242420a0a3b33,0x6f6c2e0a3a32325f,0x2030323120382063,0x6c2e707465730a31\n"
".quad 0x7025203233662e74,0x33366625202c3931,0x303030306630202c,0x65730a3b30303030\n"
".quad 0x25203233662e706c,0x426630202c353466,0x2c30303030303846,0x3030384633663020\n"
".quad 0x317025202c303030,0x20636f6c2e0a3b39,0x0a31203032312038,0x2e746c2e70746573\n"
".quad 0x3032702520323366,0x202c30366625202c,0x3030303030306630,0x706c65730a3b3030\n"
".quad 0x346625203233662e,0x3846426630202c36,0x30202c3030303030,0x3030303038463366\n"
".quad 0x3b30327025202c30,0x203820636f6c2e0a,0x65730a3120303231,0x33662e71652e7074\n"
".quad 0x202c313270252032,0x6625202c35346625,0x2e616d660a3b3634,0x25203233662e6e72\n"
".quad 0x316625202c373466,0x3046336630202c37,0x25202c3030303030,0x6464610a3b333666\n"
".quad 0x346625203233662e,0x2c33366625202c38,0x6d0a3b3036662520,0x25203233662e6c75\n"
".quad 0x346625202c393466,0x3046336630202c38,0x730a3b3030303030,0x203233662e706c65\n"
".quad 0x6625202c30366625,0x39346625202c3734,0x0a3b31327025202c,0x203233752e766f6d\n"
".quad 0x7225202c30387225,0x2e766f6d0a3b3932,0x3336662520323366,0x0a3b30366625202c\n"
".quad 0x33325f303242420a,0x33662e766f6d0a3a,0x202c323666252032,0x6f6d0a3b33366625\n"
".quad 0x6625203233662e76,0x30366625202c3935,0x33752e766f6d0a3b,0x202c393772252032\n"
".quad 0x6c2e0a3b30387225,0x313331203820636f,0x732e7261620a3120,0x2e0a3b3020636e79\n"
".quad 0x3331203820636f6c,0x732e646c0a312033,0x33752e6465726168,0x202c363572252032\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f30373030325f72,0x635f6e6f6e5f3034\n"
".quad 0x6e6f635f74736e6f,0x615f646567726576,0x61657268745f6c6c,0x7465730a3b5d7364\n"
".quad 0x3233732e71652e70,0x7225202c33702520,0x2e0a3b31202c3635,0x3431203820636f6c\n"
".quad 0x2e7261620a312031,0x0a3b3020636e7973,0x31203820636f6c2e,0x2521400a31203333\n"
".quad 0x4220617262203370,0x0a0a3b365f303242,0x6d617261702e646c,0x377225203233752e\n"
".quad 0x30335a5f5b202c30,0x654b746365736962,0x6772614c6c656e72,0x746e49656e4f5f65\n"
".quad 0x6650736c61767265,0x5f535f536a6a5f53,0x617261705f666a50,0x6c2e0a3b5d335f6d\n"
".quad 0x203736203820636f,0x6c2e707465730a31,0x7025203233752e74,0x2c347225202c3232\n"
".quad 0x2e0a3b3037722520,0x3431203820636f6c,0x327025400a312032,0x4242206172622032\n"
".quad 0x0a0a3b36325f3032,0x31203820636f6c2e,0x7465720a32203834,0x5f303242420a0a3b\n"
".quad 0x702e646c0a3a3632,0x3436752e6d617261,0x202c38336c722520,0x73696230335a5f5b\n"
".quad 0x656e72654b746365,0x4f5f656772614c6c,0x767265746e49656e,0x6a5f536650736c61\n"
".quad 0x666a505f535f536a,0x345f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c33336c,0x636f6c2e0a3b3833,0x3120353431203820\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x347225202c34336c,0x6464610a3b34202c\n"
".quad 0x6c7225203436732e,0x336c7225202c3533,0x34336c7225202c33,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d35336c72255b,0x2e0a3b3236662520,0x3431203820636f6c\n"
".quad 0x3b7465720a322038,0x746e652e0a0a7d0a,0x6231335a5f207972,0x72654b7463657369\n"
".quad 0x656772614c6c656e,0x746e49746c754d5f,0x6650736c61767265,0x5f30536a506a5f53\n"
".quad 0x535f30535f535f53,0x665f30535f535f30,0x6d617261702e0a28,0x5a5f203436752e20\n"
".quad 0x7463657369623133,0x614c6c656e72654b,0x746c754d5f656772,0x6c61767265746e49\n"
".quad 0x6a506a5f53665073,0x535f535f535f3053,0x535f535f30535f30,0x617261705f665f30\n"
".quad 0x61702e0a2c305f6d,0x3436752e206d6172,0x73696231335a5f20,0x656e72654b746365\n"
".quad 0x4d5f656772614c6c,0x7265746e49746c75,0x5f536650736c6176,0x5f535f30536a506a\n"
".quad 0x5f30535f30535f53,0x705f665f30535f53,0x0a2c315f6d617261,0x2e206d617261702e\n"
".quad 0x31335a5f20323375,0x654b746365736962,0x6772614c6c656e72,0x6e49746c754d5f65\n"
".quad 0x50736c6176726574,0x30536a506a5f5366,0x5f30535f535f535f,0x5f30535f535f3053\n"
".quad 0x5f6d617261705f66,0x617261702e0a2c32,0x5f203436752e206d,0x636573696231335a\n"
".quad 0x4c6c656e72654b74,0x6c754d5f65677261,0x61767265746e4974,0x506a5f536650736c\n"
".quad 0x5f535f535f30536a,0x5f535f30535f3053,0x7261705f665f3053,0x702e0a2c335f6d61\n"
".quad 0x36752e206d617261,0x696231335a5f2034,0x6e72654b74636573,0x5f656772614c6c65\n"
".quad 0x65746e49746c754d,0x536650736c617672,0x535f30536a506a5f,0x30535f30535f535f\n"
".quad 0x5f665f30535f535f,0x2c345f6d61726170,0x206d617261702e0a,0x335a5f203436752e\n"
".quad 0x4b74636573696231,0x72614c6c656e7265,0x49746c754d5f6567,0x736c61767265746e\n"
".quad 0x536a506a5f536650,0x30535f535f535f30,0x30535f535f30535f,0x6d617261705f665f\n"
".quad 0x7261702e0a2c355f,0x203436752e206d61,0x6573696231335a5f,0x6c656e72654b7463\n"
".quad 0x754d5f656772614c,0x767265746e49746c,0x6a5f536650736c61,0x535f535f30536a50\n"
".quad 0x535f30535f30535f,0x61705f665f30535f,0x2e0a2c365f6d6172,0x752e206d61726170\n"
".quad 0x6231335a5f203436,0x72654b7463657369,0x656772614c6c656e,0x746e49746c754d5f\n"
".quad 0x6650736c61767265,0x5f30536a506a5f53,0x535f30535f535f53,0x665f30535f535f30\n"
".quad 0x375f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x7463657369623133\n"
".quad 0x614c6c656e72654b,0x746c754d5f656772,0x6c61767265746e49,0x6a506a5f53665073\n"
".quad 0x535f535f535f3053,0x535f535f30535f30,0x617261705f665f30,0x61702e0a2c385f6d\n"
".quad 0x3436752e206d6172,0x73696231335a5f20,0x656e72654b746365,0x4d5f656772614c6c\n"
".quad 0x7265746e49746c75,0x5f536650736c6176,0x5f535f30536a506a,0x5f30535f30535f53\n"
".quad 0x705f665f30535f53,0x0a2c395f6d617261,0x2e206d617261702e,0x31335a5f20343675\n"
".quad 0x654b746365736962,0x6772614c6c656e72,0x6e49746c754d5f65,0x50736c6176726574\n"
".quad 0x30536a506a5f5366,0x5f30535f535f535f,0x5f30535f535f3053,0x5f6d617261705f66\n"
".quad 0x7261702e0a2c3031,0x203233662e206d61,0x6573696231335a5f,0x6c656e72654b7463\n"
".quad 0x754d5f656772614c,0x767265746e49746c,0x6a5f536650736c61,0x535f535f30536a50\n"
".quad 0x535f30535f30535f,0x61705f665f30535f,0x290a31315f6d6172,0x206765722e0a7b0a\n"
".quad 0x3c6625203233662e,0x722e0a3b3e353131,0x203436662e206765,0x3b3e33313c646625\n"
".quad 0x702e206765722e0a,0x353c702520646572,0x6765722e0a3b3e38,0x7225203233732e20\n"
".quad 0x2e0a3b3e3335323c,0x3436732e20676572,0x3238313c6c722520,0x68732e090a0a3b3e\n"
".quad 0x6c612e2064657261,0x622e2034206e6769,0x616475635f5f2038,0x765f6c61636f6c5f\n"
".quad 0x32363130325f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x3430325b7466656c\n"
".quad 0x732e090a0a3b5d38,0x612e206465726168,0x2e2034206e67696c,0x6475635f5f203862\n"
".quad 0x5f6c61636f6c5f61,0x363130325f726176,0x6e6f6e5f33335f33,0x735f74736e6f635f\n"
".quad 0x325b74686769725f,0x090a0a3b5d383430,0x206465726168732e,0x34206e67696c612e\n"
".quad 0x635f5f2038622e20,0x61636f6c5f616475,0x30325f7261765f6c,0x6e5f30345f363631\n"
".quad 0x74736e6f635f6e6f,0x5f7466656c5f735f,0x30325b746e756f63,0x2e090a0a3b5d3834\n"
".quad 0x2e20646572616873,0x2034206e67696c61,0x75635f5f2038622e,0x6c61636f6c5f6164\n"
".quad 0x3130325f7261765f,0x6f6e5f30345f3736,0x5f74736e6f635f6e,0x5f74686769725f73\n"
".quad 0x30325b746e756f63,0x2e090a0a3b5d3834,0x2e20646572616873,0x2034206e67696c61\n"
".quad 0x75635f5f2038622e,0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f30345f3037\n"
".quad 0x5f74736e6f635f6e,0x6361706d6f635f73,0x73696c5f6e6f6974,0x3b5d323530325b74\n"
".quad 0x726168732e090a0a,0x67696c612e206465,0x3233752e2034206e,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f35373130325f72,0x635f6e6f6e5f3034,0x6c6c615f74736e6f\n"
".quad 0x736461657268745f,0x677265766e6f635f,0x732e090a0a3b6465,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x75635f5f20323375,0x6c61636f6c5f6164,0x3130325f7261765f\n"
".quad 0x6f6e5f30345f3737,0x5f74736e6f635f6e,0x657268745f6d756e,0x697463615f736461\n"
".quad 0x732e090a0a3b6576,0x612e206465726168,0x2e2034206e67696c,0x75635f5f20323375\n"
".quad 0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f30345f3937,0x5f74736e6f635f6e\n"
".quad 0x657268745f6d756e,0x706d6f635f736461,0x0a3b6e6f69746361,0x65726168732e090a\n"
".quad 0x6e67696c612e2064,0x203233752e203420,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f31383130325f,0x6f635f6e6f6e5f30,0x706d6f635f74736e,0x6f6365735f746361\n"
".quad 0x6b6e7568635f646e,0x6168732e090a0a3b,0x696c612e20646572,0x33752e2034206e67\n"
".quad 0x616475635f5f2032,0x765f6c61636f6c5f,0x34383130325f7261,0x5f6e6f6e5f30345f\n"
".quad 0x5f635f74736e6f63,0x74735f6b636f6c62,0x2e090a0a3b747261,0x2e20646572616873\n"
".quad 0x2034206e67696c61,0x635f5f203233752e,0x61636f6c5f616475,0x30325f7261765f6c\n"
".quad 0x6e5f30345f353831,0x74736e6f635f6e6f,0x6b636f6c625f635f,0x090a0a3b646e655f\n"
".quad 0x206465726168732e,0x34206e67696c612e,0x5f5f203233752e20,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f30345f36383130,0x736e6f635f6e6f6e,0x636f6c625f635f74\n"
".quad 0x74657366666f5f6b,0x3b74757074756f5f,0x3920636f6c2e0a0a,0x6f6d0a3120373520\n"
".quad 0x7225203233752e76,0x2e64697425202c32,0x20636f6c2e0a3b78,0x730a312039392039\n"
".quad 0x732e656e2e707465,0x202c337025203233,0x0a3b30202c327225,0x6172622033702540\n"
".quad 0x3b345f3132424220,0x3920636f6c2e0a0a,0x6d0a312031303120,0x25203233752e766f\n"
".quad 0x746325202c363472,0x6c0a3b782e646961,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x335a5f5b202c3237,0x4b74636573696231,0x72614c6c656e7265,0x49746c754d5f6567\n"
".quad 0x736c61767265746e,0x536a506a5f536650,0x30535f535f535f30,0x30535f535f30535f\n"
".quad 0x6d617261705f665f,0x7476630a3b5d335f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c38316c7225,0x2e0a3b3237316c72,0x3031203920636f6c,0x2e6c756d0a312031\n"
".quad 0x3233752e65646977,0x202c39316c722520,0x3b34202c36347225,0x3436732e6464610a\n"
".quad 0x202c30326c722520,0x25202c38316c7225,0x646c0a3b39316c72,0x2e6c61626f6c672e\n"
".quad 0x3734722520323375,0x30326c72255b202c,0x68732e74730a3b5d,0x3233752e64657261\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x34383130325f7261,0x5f6e6f6e5f30345f\n"
".quad 0x5f635f74736e6f63,0x74735f6b636f6c62,0x7225202c5d747261,0x636f6c2e0a3b3734\n"
".quad 0x3120323031203920,0x626f6c672e646c0a,0x25203233752e6c61,0x72255b202c393472\n"
".quad 0x0a3b5d342b30326c,0x65726168732e7473,0x5f5b203233752e64,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x30345f3538313032,0x6e6f635f6e6f6e5f,0x6f6c625f635f7473\n"
".quad 0x2c5d646e655f6b63,0x6c0a3b3934722520,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x335a5f5b202c3337,0x4b74636573696231,0x72614c6c656e7265,0x49746c754d5f6567\n"
".quad 0x736c61767265746e,0x536a506a5f536650,0x30535f535f535f30,0x30535f535f30535f\n"
".quad 0x6d617261705f665f,0x7476630a3b5d345f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c31326c7225,0x2e0a3b3337316c72,0x3031203920636f6c,0x2e6464610a312033\n"
".quad 0x326c722520343673,0x31326c7225202c32,0x3b39316c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233752e6c61,0x72255b202c313572,0x74730a3b5d32326c,0x2e6465726168732e\n"
".quad 0x635f5f5b20323375,0x61636f6c5f616475,0x30325f7261765f6c,0x6e5f30345f363831\n"
".quad 0x74736e6f635f6e6f,0x6b636f6c625f635f,0x5f74657366666f5f,0x2c5d74757074756f\n"
".quad 0x2e0a3b3135722520,0x3031203920636f6c,0x2e6275730a312035,0x3332722520323373\n"
".quad 0x2c39347225202c37,0x730a3b3734722520,0x6465726168732e74,0x5f5f5b203233752e\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f30345f37373130,0x736e6f635f6e6f6e\n"
".quad 0x68745f6d756e5f74,0x63615f7364616572,0x25202c5d65766974,0x6f6d0a3b37333272\n"
".quad 0x7225203233752e76,0x2e0a3b30202c3335,0x3031203920636f6c,0x732e74730a312036\n"
".quad 0x33752e6465726168,0x6475635f5f5b2032,0x5f6c61636f6c5f61,0x373130325f726176\n"
".quad 0x6e6f6e5f30345f30,0x735f74736e6f635f,0x746361706d6f635f,0x7473696c5f6e6f69\n"
".quad 0x3b33357225202c5d,0x3233732e6464610a,0x25202c3435722520,0x312d202c37333272\n"
".quad 0x3220636f6c2e0a3b,0x6e610a3120383420,0x7225203233622e64,0x34357225202c3535\n"
".quad 0x3b3733327225202c,0x71652e707465730a,0x347025203233732e,0x202c35357225202c\n"
".quad 0x20347025400a3b30,0x3132424220617262,0x6f6c2e0a0a3b335f,0x3120333520322063\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c32326625,0x6f6c2e0a3b373332\n"
".quad 0x2035393320332063,0x33662e7362610a35,0x202c333266252032,0x6c2e0a3b32326625\n"
".quad 0x323934203420636f,0x707465730a332039,0x203233662e746c2e,0x326625202c357025\n"
".quad 0x3830306630202c33,0x2e0a3b3030303030,0x3934203420636f6c,0x6c756d0a35203033\n"
".quad 0x326625203233662e,0x2c32326625202c34,0x3030384234663020,0x6c65730a3b303030\n"
".quad 0x6625203233662e70,0x34326625202c3532,0x202c32326625202c,0x6f6c2e0a3b357025\n"
".quad 0x3538373120332063,0x622e766f6d0a3520,0x2c36357225203233,0x730a3b3532662520\n"
".quad 0x25203233752e7268,0x357225202c373572,0x2e0a3b3332202c36,0x3934203420636f6c\n"
".quad 0x646e610a33203533,0x357225203233622e,0x2c37357225202c38,0x6c2e0a3b35353220\n"
".quad 0x333934203420636f,0x707465730a332036,0x203233662e71652e,0x326625202c367025\n"
".quad 0x3030306630202c33,0x730a3b3030303030,0x732e71652e707465,0x202c377025203233\n"
".quad 0x3532202c38357225,0x72702e726f0a3b35,0x202c387025206465,0x377025202c367025\n"
".quad 0x622e706c65730a3b,0x2c39357225203233,0x2d202c3035312d20,0x357025202c363231\n"
".quad 0x33732e6464610a3b,0x202c303672252032,0x7225202c39357225,0x2e766f6d0a3b3835\n"
".quad 0x3136722520323375,0x6c68730a3b31202c,0x367225203233622e,0x2c31367225202c32\n"
".quad 0x730a3b3036722520,0x203233622e706c65,0x31202c3733327225,0x202c32367225202c\n"
".quad 0x42420a0a3b387025,0x6c2e0a3a335f3132,0x373031203920636f,0x68732e74730a3120\n"
".quad 0x3233752e64657261,0x616475635f5f5b20,0x765f6c61636f6c5f,0x39373130325f7261\n"
".quad 0x5f6e6f6e5f30345f,0x756e5f74736e6f63,0x6461657268745f6d,0x6361706d6f635f73\n"
".quad 0x25202c5d6e6f6974,0x6f6d0a3b37333272,0x7225203233752e76,0x2e0a3b31202c3336\n"
".quad 0x3031203920636f6c,0x732e74730a312039,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x373130325f726176,0x6e6f6e5f30345f35,0x615f74736e6f635f\n"
".quad 0x61657268745f6c6c,0x65766e6f635f7364,0x25202c5d64656772,0x6f6c2e0a3b333672\n"
".quad 0x2030313120392063,0x6168732e74730a31,0x203233752e646572,0x5f616475635f5f5b\n"
".quad 0x61765f6c61636f6c,0x5f31383130325f72,0x635f6e6f6e5f3034,0x6d6f635f74736e6f\n"
".quad 0x6365735f74636170,0x6e7568635f646e6f,0x33357225202c5d6b,0x5f313242420a0a3b\n"
".quad 0x20636f6c2e0a3a34,0x0a31203331312039,0x636e79732e726162,0x636f6c2e0a3b3020\n"
".quad 0x3120363131203920,0x726168732e646c0a,0x25203233752e6465,0x5f5f5b202c353672\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f30345f37373130,0x736e6f635f6e6f6e\n"
".quad 0x68745f6d756e5f74,0x63615f7364616572,0x2e0a3b5d65766974,0x3735203920636f6c\n"
".quad 0x752e766f6d0a3120,0x3633327225203233,0x782e64697425202c,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x7225202c33326c72,0x0a3b34202c363332,0x203436752e766f6d\n"
".quad 0x5f202c34326c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x33335f3236313032\n"
".quad 0x6e6f635f6e6f6e5f,0x66656c5f735f7473,0x732e6464610a3b74,0x31316c7225203436\n"
".quad 0x2c34326c7225202c,0x0a3b33326c722520,0x203436752e766f6d,0x5f202c35326c7225\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x30345f3636313032,0x6e6f635f6e6f6e5f\n"
".quad 0x66656c5f735f7473,0x3b746e756f635f74,0x3436732e6464610a,0x202c32316c722520\n"
".quad 0x25202c35326c7225,0x6f6d0a3b33326c72,0x7225203436752e76,0x635f5f202c36326c\n"
".quad 0x61636f6c5f616475,0x30325f7261765f6c,0x6e5f30345f373631,0x74736e6f635f6e6f\n"
".quad 0x74686769725f735f,0x0a3b746e756f635f,0x203436732e646461,0x25202c33316c7225\n"
".quad 0x7225202c36326c72,0x6f6c2e0a3b33326c,0x2036313120392063,0x672e707465730a31\n"
".quad 0x7025203233752e65,0x3633327225202c39,0x0a3b35367225202c,0x6172622039702540\n"
".quad 0x3b365f3132424220,0x3920636f6c2e0a0a,0x6c0a312038313120,0x6465726168732e64\n"
".quad 0x367225203233752e,0x75635f5f5b202c37,0x6c61636f6c5f6164,0x3130325f7261765f\n"
".quad 0x6f6e5f30345f3438,0x5f74736e6f635f6e,0x5f6b636f6c625f63,0x0a3b5d7472617473\n"
".quad 0x35203920636f6c2e,0x2e766f6d0a312037,0x3332722520323375,0x2e64697425202c33\n"
".quad 0x20636f6c2e0a3b78,0x0a31203831312039,0x203233732e646461,0x7225202c38367225\n"
".quad 0x33327225202c3736,0x61702e646c0a3b33,0x203436752e6d6172,0x202c3437316c7225\n"
".quad 0x73696231335a5f5b,0x656e72654b746365,0x4d5f656772614c6c,0x7265746e49746c75\n"
".quad 0x5f536650736c6176,0x5f535f30536a506a,0x5f30535f30535f53,0x705f665f30535f53\n"
".quad 0x3b5d355f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e,0x326c722520343675\n"
".quad 0x37316c7225202c37,0x20636f6c2e0a3b34,0x0a31203831312039,0x656469772e6c756d\n"
".quad 0x6c7225203233752e,0x38367225202c3832,0x6464610a3b34202c,0x6c7225203436732e\n"
".quad 0x326c7225202c3932,0x38326c7225202c37,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x255b202c36326625,0x730a3b5d39326c72,0x6465726168732e74,0x72255b203233662e\n"
".quad 0x6625202c5d31316c,0x702e646c0a3b3632,0x3436752e6d617261,0x2c3537316c722520\n"
".quad 0x696231335a5f5b20,0x6e72654b74636573,0x5f656772614c6c65,0x65746e49746c754d\n"
".quad 0x536650736c617672,0x535f30536a506a5f,0x30535f30535f535f,0x5f665f30535f535f\n"
".quad 0x5d365f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x316c7225202c3033,0x636f6c2e0a3b3537,0x3120393131203920,0x3436732e6464610a\n"
".quad 0x202c31336c722520,0x25202c30336c7225,0x756d0a3b38326c72,0x752e656469772e6c\n"
".quad 0x32336c7225203233,0x2c3333327225202c,0x2e766f6d0a3b3420,0x336c722520343675\n"
".quad 0x6475635f5f202c33,0x5f6c61636f6c5f61,0x363130325f726176,0x6e6f6e5f33335f33\n"
".quad 0x735f74736e6f635f,0x0a3b74686769725f,0x203436732e646461,0x25202c34336c7225\n"
".quad 0x7225202c33336c72,0x6f6c2e0a3b32336c,0x2039313120392063,0x6f6c672e646c0a31\n"
".quad 0x203233662e6c6162,0x255b202c37326625,0x730a3b5d31336c72,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x6625202c5d34336c,0x702e646c0a3b3732,0x3436752e6d617261\n"
".quad 0x2c3637316c722520,0x696231335a5f5b20,0x6e72654b74636573,0x5f656772614c6c65\n"
".quad 0x65746e49746c754d,0x536650736c617672,0x535f30536a506a5f,0x30535f30535f535f\n"
".quad 0x5f665f30535f535f,0x5d375f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x316c7225202c3533,0x636f6c2e0a3b3637,0x3120303231203920\n"
".quad 0x3436732e6464610a,0x202c36336c722520,0x25202c35336c7225,0x646c0a3b38326c72\n"
".quad 0x2e6c61626f6c672e,0x3337722520323375,0x36336c72255b202c,0x68732e74730a3b5d\n"
".quad 0x3233752e64657261,0x5d32316c72255b20,0x0a3b33377225202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c373731,0x7463657369623133,0x614c6c656e72654b\n"
".quad 0x746c754d5f656772,0x6c61767265746e49,0x6a506a5f53665073,0x535f535f535f3053\n"
".quad 0x535f535f30535f30,0x617261705f665f30,0x76630a3b5d385f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x202c37336c722520,0x0a3b3737316c7225,0x31203920636f6c2e\n"
".quad 0x6464610a31203132,0x6c7225203436732e,0x336c7225202c3833,0x38326c7225202c37\n"
".quad 0x6f6c672e646c0a3b,0x203233752e6c6162,0x255b202c36377225,0x730a3b5d38336c72\n"
".quad 0x6465726168732e74,0x72255b203233752e,0x7225202c5d33316c,0x3242420a0a3b3637\n"
".quad 0x6f6c2e0a3a365f31,0x2034323120392063,0x79732e7261620a31,0x6f6d0a3b3020636e\n"
".quad 0x6625203233662e76,0x306630202c313131,0x3b30303030303030,0x3233662e766f6d0a\n"
".quad 0x202c333131662520,0x6f6d0a3b31336625,0x6625203233662e76,0x32336625202c3738\n"
".quad 0x33752e766f6d0a3b,0x2c30343272252032,0x6d0a3b3238722520,0x25203233752e766f\n"
".quad 0x7225202c39333272,0x2e766f6d0a3b3338,0x3332722520323375,0x420a0a3b30202c38\n"
".quad 0x6d0a3a375f313242,0x25203233662e766f,0x6625202c34313166,0x766f6d0a3b333131\n"
".quad 0x316625203233662e,0x31316625202c3930,0x20636f6c2e0a3b31,0x0a31203133312039\n"
".quad 0x65726168732e646c,0x7225203233752e64,0x635f5f5b202c3538,0x61636f6c5f616475\n"
".quad 0x30325f7261765f6c,0x6e5f30345f373731,0x74736e6f635f6e6f,0x7268745f6d756e5f\n"
".quad 0x7463615f73646165,0x6c2e0a3b5d657669,0x373635203220636f,0x2e707465730a3120\n"
".quad 0x25203233752e746c,0x327225202c303170,0x0a3b35387225202c,0x7262203031702540\n"
".quad 0x385f313242422061,0x6e752e6172620a3b,0x315f313242422069,0x313242420a0a3b32\n"
".quad 0x2e6c756d0a3a385f,0x3233752e65646977,0x202c39336c722520,0x0a3b34202c327225\n"
".quad 0x203436752e766f6d,0x5f202c30346c7225,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x33335f3236313032,0x6e6f635f6e6f6e5f,0x66656c5f735f7473,0x732e6464610a3b74\n"
".quad 0x31346c7225203436,0x2c30346c7225202c,0x0a3b39336c722520,0x203436752e766f6d\n"
".quad 0x5f202c32346c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x33335f3336313032\n"
".quad 0x6e6f635f6e6f6e5f,0x6769725f735f7473,0x2e6464610a3b7468,0x346c722520343673\n"
".quad 0x32346c7225202c33,0x3b39336c7225202c,0x3436732e6464610a,0x202c35346c722520\n"
".quad 0x25202c35326c7225,0x6c2e0a3b39336c72,0x313735203220636f,0x68732e646c0a3120\n"
".quad 0x3233752e64657261,0x202c303432722520,0x3b5d35346c72255b,0x3436732e6464610a\n"
".quad 0x202c37346c722520,0x25202c36326c7225,0x6c2e0a3b39336c72,0x323735203220636f\n"
".quad 0x68732e646c0a3120,0x3233752e64657261,0x202c393332722520,0x3b5d37346c72255b\n"
".quad 0x203220636f6c2e0a,0x646c0a3120303735,0x2e6465726168732e,0x3738662520323366\n"
".quad 0x33346c72255b202c,0x20636f6c2e0a3b5d,0x0a31203936352032,0x65726168732e646c\n"
".quad 0x6625203233662e64,0x72255b202c343131,0x6c2e0a3b5d31346c,0x353735203220636f\n"
".quad 0x2e707465730a3120,0x203233662e75656e,0x6625202c31317025,0x386625202c343131\n"
".quad 0x31317025400a3b37,0x3242422061726220,0x2e0a0a3b31315f31,0x3835203220636f6c\n"
".quad 0x2e6275730a312030,0x3139722520323373,0x2c3933327225202c,0x0a3b303432722520\n"
".quad 0x2e74672e70746573,0x3231702520323375,0x202c31397225202c,0x32317025400a3b31\n"
".quad 0x3242422061726220,0x72620a3b30315f31,0x424220696e752e61,0x0a0a3b32315f3132\n"
".quad 0x3a30315f31324242,0x3233752e766f6d0a,0x30202c3239722520,0x3220636f6c2e0a3b\n"
".quad 0x730a312033383520,0x6465726168732e74,0x5f5f5b203233752e,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f30345f35373130,0x736e6f635f6e6f6e,0x68745f6c6c615f74\n"
".quad 0x6f635f7364616572,0x5d6465677265766e,0x0a3b32397225202c,0x20696e752e617262\n"
".quad 0x3b32315f31324242,0x315f313242420a0a,0x20636f6c2e0a3a31,0x0a31203737352032\n"
".quad 0x2e746c2e70746573,0x3331702520323366,0x2c3431316625202c,0x3030303030663020\n"
".quad 0x6c65730a3b303030,0x6625203233662e70,0x46426630202c3333,0x202c303030303038\n"
".quad 0x3030303846336630,0x33317025202c3030,0x3220636f6c2e0a3b,0x730a312037373520\n"
".quad 0x662e746c2e707465,0x2c34317025203233,0x30202c3738662520,0x3030303030303066\n"
".quad 0x2e706c65730a3b30,0x3433662520323366,0x303846426630202c,0x6630202c30303030\n"
".quad 0x3030303030384633,0x0a3b34317025202c,0x35203220636f6c2e,0x7465730a31203737\n"
".quad 0x3233662e71652e70,0x25202c3531702520,0x336625202c333366,0x662e6275730a3b34\n"
".quad 0x2c35336625203233,0x25202c3738662520,0x6d660a3b34313166,0x3233662e6e722e61\n"
".quad 0x25202c3633662520,0x336630202c353366,0x2c30303030303046,0x0a3b343131662520\n"
".quad 0x203233662e646461,0x6625202c37336625,0x386625202c343131,0x662e6c756d0a3b37\n"
".quad 0x2c38336625203233,0x30202c3733662520,0x3030303030463366,0x2e706c65730a3b30\n"
".quad 0x3031662520323366,0x2c36336625202c39,0x25202c3833662520,0x766f6d0a3b353170\n"
".quad 0x397225203233752e,0x6c2e0a3b30202c33,0x383735203220636f,0x68732e74730a3120\n"
".quad 0x3233752e64657261,0x616475635f5f5b20,0x765f6c61636f6c5f,0x35373130325f7261\n"
".quad 0x5f6e6f6e5f30345f,0x6c615f74736e6f63,0x6461657268745f6c,0x7265766e6f635f73\n"
".quad 0x7225202c5d646567,0x3242420a0a3b3339,0x6f6d0a3a32315f31,0x6625203233662e76\n"
".quad 0x316625202c333131,0x2e766f6d0a3b3431,0x3131662520323366,0x3930316625202c30\n"
".quad 0x3920636f6c2e0a3b,0x620a312037333120,0x20636e79732e7261,0x20636f6c2e0a3b30\n"
".quad 0x0a31203034312039,0x65726168732e646c,0x7225203233752e64,0x635f5f5b202c3439\n"
".quad 0x61636f6c5f616475,0x30325f7261765f6c,0x6e5f30345f353731,0x74736e6f635f6e6f\n"
".quad 0x7268745f6c6c615f,0x6e6f635f73646165,0x3b5d646567726576,0x71652e707465730a\n"
".quad 0x317025203233732e,0x2c34397225202c36,0x636f6c2e0a3b3120,0x3120363132203920\n"
".quad 0x726168732e646c0a,0x25203233752e6465,0x5f5f5b202c333172,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f30345f37373130,0x736e6f635f6e6f6e,0x68745f6d756e5f74\n"
".quad 0x63615f7364616572,0x2e0a3b5d65766974,0x3431203920636f6c,0x317025400a312030\n"
".quad 0x4242206172622036,0x0a0a3b30365f3132,0x32203220636f6c2e,0x7261620a31203931\n"
".quad 0x3b3020636e79732e,0x617261702e646c0a,0x7225203233752e6d,0x5a5f5b202c313332\n"
".quad 0x7463657369623133,0x614c6c656e72654b,0x746c754d5f656772,0x6c61767265746e49\n"
".quad 0x6a506a5f53665073,0x535f535f535f3053,0x535f535f30535f30,0x617261705f665f30\n"
".quad 0x65730a3b5d325f6d,0x33732e71652e7074,0x202c373170252032,0x30202c3133327225\n"
".quad 0x3220636f6c2e0a3b,0x400a312037313220,0x6172622037317025,0x32325f3132424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203133322032,0x2e746c2e70746573,0x2c31702520323375\n"
".quad 0x7225202c32722520,0x2e766f6d0a3b3331,0x3838662520323366,0x303846336630202c\n"
".quad 0x6f6d0a3b30303030,0x7225203233752e76,0x0a3b30202c343432,0x203233752e766f6d\n"
".quad 0x25202c3134327225,0x646c0a3b34343272,0x752e6d617261702e,0x3234327225203233\n"
".quad 0x6231335a5f5b202c,0x72654b7463657369,0x656772614c6c656e,0x746e49746c754d5f\n"
".quad 0x6650736c61767265,0x5f30536a506a5f53,0x535f30535f535f53,0x665f30535f535f30\n"
".quad 0x325f6d617261705f,0x313242420a0a3b5d,0x6f6c2e0a3a35315f,0x2032323220322063\n"
".quad 0x33732e6464610a31,0x202c393972252032,0x327225202c327225,0x702e646c0a3b3134\n"
".quad 0x3233752e6d617261,0x202c303332722520,0x73696231335a5f5b,0x656e72654b746365\n"
".quad 0x4d5f656772614c6c,0x7265746e49746c75,0x5f536650736c6176,0x5f535f30536a506a\n"
".quad 0x5f30535f30535f53,0x705f665f30535f53,0x3b5d325f6d617261,0x203220636f6c2e0a\n"
".quad 0x65730a3120323232,0x33752e65672e7074,0x202c383170252032,0x7225202c39397225\n"
".quad 0x7025400a3b303332,0x4220617262203831,0x0a3b37315f313242,0x203220636f6c2e0a\n"
".quad 0x76630a3120343232,0x33752e3436752e74,0x2c38346c72252032,0x0a3b313432722520\n"
".quad 0x35203220636f6c2e,0x7476630a31203936,0x3233752e3436752e,0x202c39346c722520\n"
".quad 0x2e646c0a3b327225,0x36752e6d61726170,0x3037316c72252034,0x6231335a5f5b202c\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x746e49746c754d5f,0x6650736c61767265\n"
".quad 0x5f30536a506a5f53,0x535f30535f535f53,0x665f30535f535f30,0x305f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x6c7225202c30356c\n"
".quad 0x6464610a3b303731,0x6c7225203436732e,0x346c7225202c3135,0x38346c7225202c39\n"
".quad 0x3220636f6c2e0a3b,0x730a312034323220,0x25203436622e6c68,0x7225202c32356c72\n"
".quad 0x0a3b32202c31356c,0x203436732e646461,0x25202c33356c7225,0x7225202c30356c72\n"
".quad 0x6c756d0a3b32356c,0x33752e656469772e,0x2c34356c72252032,0x3b34202c32722520\n"
".quad 0x3436752e766f6d0a,0x202c35356c722520,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f32363130325f,0x6f635f6e6f6e5f33,0x656c5f735f74736e,0x2e6464610a3b7466\n"
".quad 0x356c722520343673,0x35356c7225202c36,0x3b34356c7225202c,0x203220636f6c2e0a\n"
".quad 0x646c0a3120343232,0x2e6c61626f6c672e,0x3034662520323366,0x33356c72255b202c\n"
".quad 0x68732e74730a3b5d,0x3233662e64657261,0x5d36356c72255b20,0x0a3b30346625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c313731,0x7463657369623133\n"
".quad 0x614c6c656e72654b,0x746c754d5f656772,0x6c61767265746e49,0x6a506a5f53665073\n"
".quad 0x535f535f535f3053,0x535f535f30535f30,0x617261705f665f30,0x76630a3b5d315f6d\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x202c37356c722520,0x0a3b3137316c7225\n"
".quad 0x203436752e766f6d,0x5f202c38356c7225,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x33335f3336313032,0x6e6f635f6e6f6e5f,0x6769725f735f7473,0x2e6464610a3b7468\n"
".quad 0x356c722520343673,0x38356c7225202c39,0x3b34356c7225202c,0x203220636f6c2e0a\n"
".quad 0x64610a3120353232,0x7225203436732e64,0x6c7225202c30366c,0x356c7225202c3235\n"
".quad 0x6c672e646c0a3b37,0x3233662e6c61626f,0x5b202c3134662520,0x342d2b30366c7225\n"
".quad 0x68732e74730a3b5d,0x3233662e64657261,0x5d39356c72255b20,0x0a3b31346625202c\n"
".quad 0x37315f313242420a,0x3220636f6c2e0a3a,0x620a312038323220,0x20636e79732e7261\n"
".quad 0x20636f6c2e0a3b30,0x0a31203133322032,0x7262203170252140,0x325f313242422061\n"
".quad 0x636f6c2e0a0a3b31,0x3120333432203220,0x3233752e766f6d0a,0x202c353031722520\n"
".quad 0x3b782e6469746e25,0x203320636f6c2e0a,0x696d0a3520373132,0x7225203233752e6e\n"
".quad 0x34327225202c3731,0x3530317225202c32,0x652e707465730a3b,0x7025203233732e71\n"
".quad 0x37317225202c3931,0x6f6c2e0a3b30202c,0x2035333220322063,0x2039317025400a31\n"
".quad 0x3132424220617262,0x6f6d0a0a3b31325f,0x7225203233752e76,0x0a3b30202c333432\n"
".quad 0x203436752e766f6d,0x202c3138316c7225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f33363130325f,0x6f635f6e6f6e5f33,0x69725f735f74736e,0x766f6d0a3b746867\n"
".quad 0x6c7225203436752e,0x6c7225202c303831,0x3242420a0a3b3432,0x6f6d0a3a30325f31\n"
".quad 0x7225203436752e76,0x6c7225202c34316c,0x6f6c2e0a3b303831,0x2036333220322063\n"
".quad 0x6168732e646c0a31,0x203233662e646572,0x255b202c32346625,0x730a3b5d34316c72\n"
".quad 0x25203233662e6275,0x346625202c333466,0x3031316625202c32,0x6168732e646c0a3b\n"
".quad 0x203233662e646572,0x255b202c34346625,0x0a3b5d3138316c72,0x203233662e6c756d\n"
".quad 0x6625202c35346625,0x34346625202c3434,0x3620636f6c2e0a3b,0x0a33203131333120\n"
".quad 0x662e6e722e766964,0x2c36346625203233,0x25202c3534662520,0x6f6c2e0a3b383866\n"
".quad 0x2036333220322063,0x33662e6275730a31,0x202c383866252032,0x6625202c33346625\n"
".quad 0x636f6c2e0a3b3634,0x3120383332203220,0x746c2e707465730a,0x327025203233662e\n"
".quad 0x2c38386625202c30,0x3030303030663020,0x6c65730a3b303030,0x7225203233752e70\n"
".quad 0x202c31202c393031,0x3b30327025202c30,0x203220636f6c2e0a,0x64610a3120383332\n"
".quad 0x7225203233732e64,0x317225202c343432,0x34327225202c3930,0x732e6464610a3b34\n"
".quad 0x38316c7225203436,0x38316c7225202c31,0x64610a3b34202c31,0x7225203436732e64\n"
".quad 0x6c7225202c37316c,0x2e0a3b34202c3431,0x3332203220636f6c,0x6464610a37392035\n"
".quad 0x327225203233732e,0x34327225202c3334,0x6c2e0a3b31202c33,0x353332203220636f\n"
".quad 0x2e707465730a3120,0x25203233752e746c,0x327225202c313270,0x37317225202c3334\n"
".quad 0x36752e766f6d0a3b,0x3038316c72252034,0x3b37316c7225202c,0x622031327025400a\n"
".quad 0x5f31324242206172,0x3242420a0a3b3032,0x6c2e0a3a31325f31,0x333432203220636f\n"
".quad 0x752e766f6d0a3120,0x3031317225203233,0x2e6469746e25202c,0x732e6275730a3b78\n"
".quad 0x3234327225203233,0x2c3234327225202c,0x0a3b303131722520,0x32203220636f6c2e\n"
".quad 0x64610a3731203731,0x7225203233732e64,0x317225202c313432,0x34327225202c3031\n"
".quad 0x61702e646c0a3b31,0x203233752e6d6172,0x5b202c3932327225,0x6573696231335a5f\n"
".quad 0x6c656e72654b7463,0x754d5f656772614c,0x767265746e49746c,0x6a5f536650736c61\n"
".quad 0x535f535f30536a50,0x535f30535f30535f,0x61705f665f30535f,0x0a3b5d325f6d6172\n"
".quad 0x32203220636f6c2e,0x7465730a31203731,0x3233752e746c2e70,0x7225202c32702520\n"
".quad 0x327225202c313432,0x636f6c2e0a3b3932,0x3120393132203220,0x6e79732e7261620a\n"
".quad 0x7025400a3b302063,0x4242206172622032,0x620a3b35315f3132,0x4220696e752e6172\n"
".quad 0x0a3b33325f313242,0x32325f313242420a,0x33752e766f6d0a3a,0x2c34343272252032\n"
".quad 0x3242420a0a3b3020,0x6c2e0a3a33325f31,0x353531203920636f,0x68732e646c0a3120\n"
".quad 0x3233752e64657261,0x202c323131722520,0x5f616475635f5f5b,0x61765f6c61636f6c\n"
".quad 0x5f37373130325f72,0x635f6e6f6e5f3034,0x6d756e5f74736e6f,0x736461657268745f\n"
".quad 0x5d6576697463615f,0x6c2e707465730a3b,0x7025203233752e74,0x2c327225202c3232\n"
".quad 0x0a3b323131722520,0x7262203232702540,0x325f313242422061,0x752e6172620a3b34\n"
".quad 0x5f3132424220696e,0x3242420a0a3b3034,0x6c2e0a3a34325f31,0x383531203920636f\n"
".quad 0x2e707465730a3120,0x203233662e75656e,0x6625202c33327025,0x386625202c333131\n"
".quad 0x33327025400a3b37,0x3242422061726220,0x2e0a0a3b38325f31,0x3035203220636f6c\n"
".quad 0x2e6275730a312033,0x3732722520323373,0x2c3933327225202c,0x0a3b303432722520\n"
".quad 0x35203220636f6c2e,0x7465730a31203630,0x3233732e71652e70,0x25202c3432702520\n"
".quad 0x0a3b31202c373272,0x7262203432702540,0x325f313242422061,0x636f6c2e0a0a3b37\n"
".quad 0x3120313235203220,0x3233752e7268730a,0x202c343131722520,0x3b31202c37327225\n"
".quad 0x3233752e766f6d0a,0x202c383332722520,0x20636f6c2e0a3b31,0x0a31203132352032\n"
".quad 0x203233732e646461,0x25202c3434327225,0x7225202c34313172,0x6c756d0a3b303432\n"
".quad 0x33752e656469772e,0x2c33366c72252032,0x3b34202c32722520,0x3436752e766f6d0a\n"
".quad 0x202c34366c722520,0x6c5f616475635f5f,0x7261765f6c61636f,0x335f32363130325f\n"
".quad 0x6f635f6e6f6e5f33,0x656c5f735f74736e,0x2e6464610a3b7466,0x366c722520343673\n"
".quad 0x34366c7225202c35,0x3b33366c7225202c,0x203220636f6c2e0a,0x74730a3120343235\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x316625202c5d3536,0x2e766f6d0a3b3331\n"
".quad 0x366c722520343675,0x6475635f5f202c36,0x5f6c61636f6c5f61,0x363130325f726176\n"
".quad 0x6e6f6e5f33335f33,0x735f74736e6f635f,0x0a3b74686769725f,0x203436732e646461\n"
".quad 0x25202c37366c7225,0x7225202c36366c72,0x6f6c2e0a3b33366c,0x2035323520322063\n"
".quad 0x6168732e74730a31,0x203233662e646572,0x2c5d37366c72255b,0x610a3b3738662520\n"
".quad 0x25203436732e6464,0x7225202c39366c72,0x6c7225202c35326c,0x636f6c2e0a3b3336\n"
".quad 0x3120363235203220,0x726168732e74730a,0x5b203233752e6465,0x202c5d39366c7225\n"
".quad 0x610a3b3034327225,0x25203436732e6464,0x7225202c31376c72,0x6c7225202c36326c\n"
".quad 0x636f6c2e0a3b3336,0x3120373235203220,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x202c5d31376c7225,0x6d0a3b3434327225,0x25203436752e766f,0x5f5f202c32376c72\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f30345f30373130,0x736e6f635f6e6f6e\n"
".quad 0x706d6f635f735f74,0x6c5f6e6f69746361,0x6464610a3b747369,0x6c7225203436732e\n"
".quad 0x376c7225202c3337,0x33366c7225202c32,0x3220636f6c2e0a3b,0x730a312033333520\n"
".quad 0x6465726168732e74,0x72255b203233752e,0x202c5d342b33376c,0x2e0a3b3833327225\n"
".quad 0x3335203220636f6c,0x732e74730a312034,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x383130325f726176,0x6e6f6e5f30345f31,0x635f74736e6f635f\n"
".quad 0x735f746361706d6f,0x68635f646e6f6365,0x7225202c5d6b6e75,0x766f6d0a3b383332\n"
".quad 0x316625203233662e,0x31316625202c3031,0x752e6172620a3b33,0x5f3132424220696e\n"
".quad 0x3242420a0a3b3034,0x756d0a3a37325f31,0x752e656469772e6c,0x34376c7225203233\n"
".quad 0x34202c327225202c,0x36752e766f6d0a3b,0x2c35376c72252034,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f32363130325f72,0x635f6e6f6e5f3333,0x6c5f735f74736e6f\n"
".quad 0x6464610a3b746665,0x6c7225203436732e,0x376c7225202c3637,0x34376c7225202c35\n"
".quad 0x3220636f6c2e0a3b,0x730a312039303520,0x6465726168732e74,0x72255b203233662e\n"
".quad 0x6625202c5d36376c,0x766f6d0a3b333131,0x6c7225203436752e,0x75635f5f202c3737\n"
".quad 0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f33335f3336,0x5f74736e6f635f6e\n"
".quad 0x3b74686769725f73,0x3436732e6464610a,0x202c38376c722520,0x25202c37376c7225\n"
".quad 0x6c2e0a3b34376c72,0x303135203220636f,0x68732e74730a3120,0x3233662e64657261\n"
".quad 0x5d38376c72255b20,0x0a3b37386625202c,0x203436732e646461,0x25202c30386c7225\n"
".quad 0x7225202c35326c72,0x6f6c2e0a3b34376c,0x2031313520322063,0x6168732e74730a31\n"
".quad 0x203233752e646572,0x2c5d30386c72255b,0x0a3b303432722520,0x203436732e646461\n"
".quad 0x25202c32386c7225,0x7225202c36326c72,0x6f6c2e0a3b34376c,0x2032313520322063\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x2c5d32386c72255b,0x0a3b393332722520\n"
".quad 0x203436752e766f6d,0x5f202c33386c7225,0x6f6c5f616475635f,0x5f7261765f6c6163\n"
".quad 0x30345f3037313032,0x6e6f635f6e6f6e5f,0x6d6f635f735f7473,0x5f6e6f6974636170\n"
".quad 0x64610a3b7473696c,0x7225203436732e64,0x6c7225202c34386c,0x376c7225202c3338\n"
".quad 0x752e766f6d0a3b34,0x3833327225203233,0x6f6c2e0a3b30202c,0x2036313520322063\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x342b34386c72255b,0x3833327225202c5d\n"
".quad 0x6e752e6172620a3b,0x345f313242422069,0x313242420a0a3b30,0x6f6c2e0a3a38325f\n"
".quad 0x2031393220322063,0x6e2e707465730a31,0x7025203233732e65,0x34327225202c3532\n"
".quad 0x3933327225202c34,0x6e2e707465730a3b,0x7025203233732e65,0x34327225202c3632\n"
".quad 0x3434327225202c30,0x72702e646e610a3b,0x2c37327025206465,0x25202c3532702520\n"
".quad 0x6f6c2e0a3b363270,0x2031393220322063,0x2037327025400a31,0x3132424220617262\n"
".quad 0x756d0a0a3b36335f,0x752e656469772e6c,0x35386c7225203233,0x34202c327225202c\n"
".quad 0x36752e766f6d0a3b,0x2c36386c72252034,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f30373130325f72,0x635f6e6f6e5f3034,0x635f735f74736e6f,0x6f69746361706d6f\n"
".quad 0x0a3b7473696c5f6e,0x203436732e646461,0x25202c37386c7225,0x7225202c36386c72\n"
".quad 0x766f6d0a3b35386c,0x327225203233752e,0x2e0a3b30202c3833,0x3033203220636f6c\n"
".quad 0x732e74730a312039,0x33752e6465726168,0x37386c72255b2032,0x327225202c5d342b\n"
".quad 0x636f6c2e0a3b3833,0x3120323133203220,0x71652e707465730a,0x327025203233732e\n"
".quad 0x3034327225202c38,0x3b3434327225202c,0x622038327025400a,0x5f31324242206172\n"
".quad 0x6c756d0a0a3b3333,0x33752e656469772e,0x2c38386c72252032,0x3b34202c32722520\n"
".quad 0x3436732e6464610a,0x202c30396c722520,0x25202c35326c7225,0x6c2e0a3b38386c72\n"
".quad 0x333031203220636f,0x68732e74730a3120,0x3233752e64657261,0x5d30396c72255b20\n"
".quad 0x3b3034327225202c,0x3436732e6464610a,0x202c32396c722520,0x25202c36326c7225\n"
".quad 0x6c2e0a3b38386c72,0x343031203220636f,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x5d32396c72255b20,0x3b3434327225202c,0x203220636f6c2e0a,0x75730a3120373031\n"
".quad 0x6625203233662e62,0x31316625202c3531,0x3331316625202c30,0x3320636f6c2e0a3b\n"
".quad 0x610a352035393320,0x25203233662e7362,0x316625202c373466,0x20636f6c2e0a3b35\n"
".quad 0x0a35203539332033,0x203233662e736261,0x6625202c38346625,0x7362610a3b303131\n"
".quad 0x346625203233662e,0x3331316625202c39,0x3320636f6c2e0a3b,0x6d0a352035333420\n"
".quad 0x25203233662e7861,0x346625202c303566,0x3b38346625202c39,0x617261702e646c0a\n"
".quad 0x6625203233662e6d,0x335a5f5b202c3638,0x4b74636573696231,0x72614c6c656e7265\n"
".quad 0x49746c754d5f6567,0x736c61767265746e,0x536a506a5f536650,0x30535f535f535f30\n"
".quad 0x30535f535f30535f,0x6d617261705f665f,0x6c2e0a3b5d31315f,0x383031203220636f\n"
".quad 0x662e6c756d0a3120,0x2c31356625203233,0x25202c3035662520,0x6f6c2e0a3b363866\n"
".quad 0x2039303120322063,0x36662e7476630a31,0x6625203233662e34,0x37346625202c3164\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x31356625202c3264,0x36662e766f6d0a3b\n"
".quad 0x202c336466252034,0x3434353638336430,0x4532443233393438,0x636f6c2e0a3b3237\n"
".quad 0x3520343634203320,0x3436662e78616d0a,0x25202c3464662520,0x646625202c336466\n"
".quad 0x20636f6c2e0a3b32,0x0a31203930312032,0x7574672e70746573,0x327025203436662e\n"
".quad 0x2c31646625202c39,0x400a3b3464662520,0x6172622039327025,0x32335f3132424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203231312032,0x2e746c2e70746573,0x3033702520323366\n"
".quad 0x2c3331316625202c,0x3030303030663020,0x6c65730a3b303030,0x6625203233662e70\n"
".quad 0x46426630202c3235,0x202c303030303038,0x3030303846336630,0x30337025202c3030\n"
".quad 0x3220636f6c2e0a3b,0x730a312032313120,0x662e746c2e707465,0x2c31337025203233\n"
".quad 0x202c303131662520,0x3030303030306630,0x706c65730a3b3030,0x356625203233662e\n"
".quad 0x3846426630202c33,0x30202c3030303030,0x3030303038463366,0x3b31337025202c30\n"
".quad 0x203220636f6c2e0a,0x65730a3120323131,0x33662e71652e7074,0x202c323370252032\n"
".quad 0x6625202c32356625,0x2e616d660a3b3335,0x25203233662e6e72,0x316625202c343566\n"
".quad 0x3046336630202c35,0x25202c3030303030,0x64610a3b33313166,0x6625203233662e64\n"
".quad 0x31316625202c3535,0x3031316625202c33,0x33662e6c756d0a3b,0x202c363566252032\n"
".quad 0x6630202c35356625,0x3030303030304633,0x662e706c65730a3b,0x2c37356625203233\n"
".quad 0x25202c3435662520,0x337025202c363566,0x772e6c756d0a3b32,0x203233752e656469\n"
".quad 0x25202c33396c7225,0x6d0a3b34202c3272,0x25203436752e766f,0x5f5f202c34396c72\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f33335f32363130,0x736e6f635f6e6f6e\n"
".quad 0x7466656c5f735f74,0x36732e6464610a3b,0x2c35396c72252034,0x202c34396c722520\n"
".quad 0x2e0a3b33396c7225,0x3131203220636f6c,0x732e74730a312035,0x33662e6465726168\n"
".quad 0x35396c72255b2032,0x3b37356625202c5d,0x3436752e766f6d0a,0x202c36396c722520\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x335f33363130325f,0x6f635f6e6f6e5f33\n"
".quad 0x69725f735f74736e,0x6464610a3b746867,0x6c7225203436732e,0x396c7225202c3739\n"
".quad 0x33396c7225202c36,0x3220636f6c2e0a3b,0x730a312036313120,0x6465726168732e74\n"
".quad 0x72255b203233662e,0x6625202c5d37396c,0x2e6172620a3b3735,0x3132424220696e75\n"
".quad 0x42420a0a3b30345f,0x6d0a3a32335f3132,0x2e656469772e6c75,0x396c722520323375\n"
".quad 0x202c327225202c38,0x752e766f6d0a3b34,0x39396c7225203436,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x32363130325f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63\n"
".quad 0x64610a3b7466656c,0x7225203436732e64,0x7225202c3030316c,0x6c7225202c39396c\n"
".quad 0x636f6c2e0a3b3839,0x3120313231203220,0x726168732e74730a,0x5b203233662e6465\n"
".quad 0x2c5d3030316c7225,0x0a3b333131662520,0x203436752e766f6d,0x202c3130316c7225\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x335f33363130325f,0x6f635f6e6f6e5f33\n"
".quad 0x69725f735f74736e,0x6464610a3b746867,0x6c7225203436732e,0x6c7225202c323031\n"
".quad 0x6c7225202c313031,0x636f6c2e0a3b3839,0x3120323231203220,0x726168732e74730a\n"
".quad 0x5b203233662e6465,0x2c5d3230316c7225,0x0a3b303131662520,0x203233752e766f6d\n"
".quad 0x30202c3833327225,0x6e752e6172620a3b,0x345f313242422069,0x313242420a0a3b30\n"
".quad 0x6c756d0a3a33335f,0x33752e656469772e,0x3330316c72252032,0x34202c327225202c\n"
".quad 0x36732e6464610a3b,0x3530316c72252034,0x2c35326c7225202c,0x3b3330316c722520\n"
".quad 0x203220636f6c2e0a,0x74730a3120333031,0x2e6465726168732e,0x6c72255b20323375\n"
".quad 0x7225202c5d353031,0x6464610a3b343432,0x6c7225203436732e,0x6c7225202c373031\n"
".quad 0x316c7225202c3632,0x636f6c2e0a3b3330,0x3120343031203220,0x726168732e74730a\n"
".quad 0x5b203233752e6465,0x2c5d3730316c7225,0x0a3b393332722520,0x31203220636f6c2e\n"
".quad 0x6275730a31203730,0x316625203233662e,0x2c37386625202c36,0x0a3b303131662520\n"
".quad 0x33203320636f6c2e,0x7362610a35203539,0x356625203233662e,0x3b36316625202c38\n"
".quad 0x203320636f6c2e0a,0x62610a3520353933,0x6625203233662e73,0x37386625202c3935\n"
".quad 0x33662e7362610a3b,0x202c303666252032,0x2e0a3b3031316625,0x3334203320636f6c\n"
".quad 0x2e78616d0a352035,0x3136662520323366,0x202c30366625202c,0x646c0a3b39356625\n"
".quad 0x662e6d617261702e,0x2c35386625203233,0x696231335a5f5b20,0x6e72654b74636573\n"
".quad 0x5f656772614c6c65,0x65746e49746c754d,0x536650736c617672,0x535f30536a506a5f\n"
".quad 0x30535f30535f535f,0x5f665f30535f535f,0x31315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203830312032,0x203233662e6c756d,0x6625202c32366625,0x35386625202c3136\n"
".quad 0x3220636f6c2e0a3b,0x630a312039303120,0x662e3436662e7476,0x2c35646625203233\n"
".quad 0x630a3b3835662520,0x662e3436662e7476,0x2c36646625203233,0x6d0a3b3236662520\n"
".quad 0x25203436662e766f,0x336430202c376466,0x3934383434353638,0x3b32374532443233\n"
".quad 0x203320636f6c2e0a,0x616d0a3520343634,0x6625203436662e78,0x37646625202c3864\n"
".quad 0x0a3b36646625202c,0x31203220636f6c2e,0x7465730a31203930,0x36662e7574672e70\n"
".quad 0x202c333370252034,0x6625202c35646625,0x337025400a3b3864,0x4242206172622033\n"
".quad 0x0a0a3b35335f3132,0x31203220636f6c2e,0x7465730a31203231,0x3233662e746c2e70\n"
".quad 0x25202c3433702520,0x6630202c30313166,0x3030303030303030,0x662e706c65730a3b\n"
".quad 0x2c33366625203233,0x3030384642663020,0x336630202c303030,0x2c30303030303846\n"
".quad 0x2e0a3b3433702520,0x3131203220636f6c,0x707465730a312032,0x203233662e746c2e\n"
".quad 0x6625202c35337025,0x30306630202c3738,0x0a3b303030303030,0x3233662e706c6573\n"
".quad 0x30202c3436662520,0x3030303038464266,0x3846336630202c30,0x25202c3030303030\n"
".quad 0x6f6c2e0a3b353370,0x2032313120322063,0x652e707465730a31,0x7025203233662e71\n"
".quad 0x33366625202c3633,0x0a3b34366625202c,0x662e6e722e616d66,0x2c35366625203233\n"
".quad 0x30202c3631662520,0x3030303030463366,0x3031316625202c30,0x33662e6464610a3b\n"
".quad 0x202c363666252032,0x25202c3031316625,0x6c756d0a3b373866,0x366625203233662e\n"
".quad 0x2c36366625202c37,0x3030304633663020,0x6c65730a3b303030,0x6625203233662e70\n"
".quad 0x35366625202c3836,0x202c37366625202c,0x756d0a3b36337025,0x752e656469772e6c\n"
".quad 0x30316c7225203233,0x202c327225202c38,0x752e766f6d0a3b34,0x30316c7225203436\n"
".quad 0x6475635f5f202c39,0x5f6c61636f6c5f61,0x363130325f726176,0x6e6f6e5f33335f32\n"
".quad 0x735f74736e6f635f,0x610a3b7466656c5f,0x25203436732e6464,0x25202c3031316c72\n"
".quad 0x25202c3930316c72,0x2e0a3b3830316c72,0x3131203220636f6c,0x732e74730a312035\n"
".quad 0x33662e6465726168,0x31316c72255b2032,0x38366625202c5d30,0x36752e766f6d0a3b\n"
".quad 0x3131316c72252034,0x616475635f5f202c,0x765f6c61636f6c5f,0x33363130325f7261\n"
".quad 0x5f6e6f6e5f33335f,0x5f735f74736e6f63,0x610a3b7468676972,0x25203436732e6464\n"
".quad 0x25202c3231316c72,0x25202c3131316c72,0x2e0a3b3830316c72,0x3131203220636f6c\n"
".quad 0x732e74730a312036,0x33662e6465726168,0x31316c72255b2032,0x38366625202c5d32\n"
".quad 0x33752e766f6d0a3b,0x2c38333272252032,0x2e6172620a3b3020,0x3132424220696e75\n"
".quad 0x42420a0a3b30345f,0x6d0a3a35335f3132,0x2e656469772e6c75,0x316c722520323375\n"
".quad 0x2c327225202c3331,0x2e766f6d0a3b3420,0x316c722520343675,0x75635f5f202c3431\n"
".quad 0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f33335f3236,0x5f74736e6f635f6e\n"
".quad 0x0a3b7466656c5f73,0x203436732e646461,0x202c3531316c7225,0x202c3431316c7225\n"
".quad 0x0a3b3331316c7225,0x31203220636f6c2e,0x2e74730a31203132,0x662e646572616873\n"
".quad 0x316c72255b203233,0x316625202c5d3531,0x2e766f6d0a3b3031,0x316c722520343675\n"
".quad 0x75635f5f202c3631,0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f33335f3336\n"
".quad 0x5f74736e6f635f6e,0x3b74686769725f73,0x3436732e6464610a,0x2c3731316c722520\n"
".quad 0x2c3631316c722520,0x3b3331316c722520,0x203220636f6c2e0a,0x74730a3120323231\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d373131,0x2e766f6d0a3b3738\n"
".quad 0x3332722520323375,0x72620a3b30202c38,0x424220696e752e61,0x0a0a3b30345f3132\n"
".quad 0x3a36335f31324242,0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3831316c\n"
".quad 0x64610a3b34202c32,0x7225203436732e64,0x7225202c3032316c,0x6c7225202c35326c\n"
".quad 0x6f6c2e0a3b383131,0x2033303120322063,0x6168732e74730a31,0x203233752e646572\n"
".quad 0x5d3032316c72255b,0x3b3034327225202c,0x3436732e6464610a,0x2c3232316c722520\n"
".quad 0x202c36326c722520,0x0a3b3831316c7225,0x31203220636f6c2e,0x2e74730a31203430\n"
".quad 0x752e646572616873,0x316c72255b203233,0x327225202c5d3232,0x636f6c2e0a3b3434\n"
".quad 0x3120373031203220,0x3233662e6275730a,0x25202c3731662520,0x6625202c30313166\n"
".quad 0x6f6c2e0a3b333131,0x2035393320332063,0x33662e7362610a35,0x202c393666252032\n"
".quad 0x6c2e0a3b37316625,0x353933203320636f,0x662e7362610a3520,0x2c30376625203233\n"
".quad 0x0a3b303131662520,0x203233662e736261,0x6625202c31376625,0x6f6c2e0a3b333131\n"
".quad 0x2035333420332063,0x33662e78616d0a35,0x202c323766252032,0x6625202c31376625\n"
".quad 0x702e646c0a3b3037,0x3233662e6d617261,0x5b202c3438662520,0x6573696231335a5f\n"
".quad 0x6c656e72654b7463,0x754d5f656772614c,0x767265746e49746c,0x6a5f536650736c61\n"
".quad 0x535f535f30536a50,0x535f30535f30535f,0x61705f665f30535f,0x3b5d31315f6d6172\n"
".quad 0x203220636f6c2e0a,0x756d0a3120383031,0x6625203233662e6c,0x32376625202c3337\n"
".quad 0x0a3b34386625202c,0x31203220636f6c2e,0x7476630a31203930,0x3233662e3436662e\n"
".quad 0x25202c3964662520,0x7476630a3b393666,0x3233662e3436662e,0x202c303164662520\n"
".quad 0x6f6d0a3b33376625,0x6625203436662e76,0x336430202c313164,0x3934383434353638\n"
".quad 0x3b32374532443233,0x203320636f6c2e0a,0x616d0a3520343634,0x6625203436662e78\n"
".quad 0x646625202c323164,0x31646625202c3131,0x20636f6c2e0a3b30,0x0a31203930312032\n"
".quad 0x7574672e70746573,0x337025203436662e,0x2c39646625202c37,0x0a3b323164662520\n"
".quad 0x7262203733702540,0x335f313242422061,0x636f6c2e0a0a3b38,0x3120323131203220\n"
".quad 0x746c2e707465730a,0x337025203233662e,0x3331316625202c38,0x303030306630202c\n"
".quad 0x65730a3b30303030,0x25203233662e706c,0x426630202c343766,0x2c30303030303846\n"
".quad 0x3030384633663020,0x337025202c303030,0x20636f6c2e0a3b38,0x0a31203231312032\n"
".quad 0x2e746c2e70746573,0x3933702520323366,0x2c3031316625202c,0x3030303030663020\n"
".quad 0x6c65730a3b303030,0x6625203233662e70,0x46426630202c3537,0x202c303030303038\n"
".quad 0x3030303846336630,0x39337025202c3030,0x3220636f6c2e0a3b,0x730a312032313120\n"
".quad 0x662e71652e707465,0x2c30347025203233,0x25202c3437662520,0x616d660a3b353766\n"
".quad 0x203233662e6e722e,0x6625202c36376625,0x46336630202c3731,0x202c303030303030\n"
".quad 0x610a3b3331316625,0x25203233662e6464,0x316625202c373766,0x31316625202c3331\n"
".quad 0x662e6c756d0a3b30,0x2c38376625203233,0x30202c3737662520,0x3030303030463366\n"
".quad 0x2e706c65730a3b30,0x3031662520323366,0x2c36376625202c38,0x25202c3837662520\n"
".quad 0x766f6d0a3b303470,0x316625203233662e,0x30316625202c3231,0x752e6172620a3b38\n"
".quad 0x5f3132424220696e,0x3242420a0a3b3933,0x6f6d0a3a38335f31,0x6625203233662e76\n"
".quad 0x316625202c383031,0x2e766f6d0a3b3031,0x3131662520323366,0x3331316625202c32\n"
".quad 0x5f313242420a0a3b,0x2e6c756d0a3a3933,0x3233752e65646977,0x2c3332316c722520\n"
".quad 0x3b34202c32722520,0x3436752e766f6d0a,0x2c3432316c722520,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f32363130325f72,0x635f6e6f6e5f3333,0x6c5f735f74736e6f\n"
".quad 0x6464610a3b746665,0x6c7225203436732e,0x6c7225202c353231,0x6c7225202c343231\n"
".quad 0x2e74730a3b333231,0x662e646572616873,0x316c72255b203233,0x316625202c5d3532\n"
".quad 0x2e766f6d0a3b3231,0x316c722520343675,0x75635f5f202c3632,0x6c61636f6c5f6164\n"
".quad 0x3130325f7261765f,0x6f6e5f33335f3336,0x5f74736e6f635f6e,0x3b74686769725f73\n"
".quad 0x3436732e6464610a,0x2c3732316c722520,0x2c3632316c722520,0x3b3332316c722520\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x2c5d3732316c7225,0x0a3b383031662520\n"
".quad 0x203436752e766f6d,0x202c3832316c7225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f30373130325f,0x6f635f6e6f6e5f30,0x6f635f735f74736e,0x6e6f69746361706d\n"
".quad 0x610a3b7473696c5f,0x25203436732e6464,0x25202c3932316c72,0x25202c3832316c72\n"
".quad 0x6d0a3b3332316c72,0x25203233752e766f,0x3b31202c38333272,0x203220636f6c2e0a\n"
".quad 0x74730a3120303033,0x2e6465726168732e,0x6c72255b20323375,0x202c5d342b393231\n"
".quad 0x2e0a3b3833327225,0x3033203220636f6c,0x732e74730a312031,0x33752e6465726168\n"
".quad 0x6475635f5f5b2032,0x5f6c61636f6c5f61,0x383130325f726176,0x6e6f6e5f30345f31\n"
".quad 0x635f74736e6f635f,0x735f746361706d6f,0x68635f646e6f6365,0x7225202c5d6b6e75\n"
".quad 0x42420a0a3b383332,0x6d0a3a30345f3132,0x25203233662e766f,0x6625202c31313166\n"
".quad 0x6f6c2e0a3b303131,0x2030383120392063,0x79732e7261620a31,0x6c2e0a3b3020636e\n"
".quad 0x343831203920636f,0x68732e646c0a3120,0x3233752e64657261,0x202c313631722520\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f31383130325f72,0x635f6e6f6e5f3034\n"
".quad 0x6d6f635f74736e6f,0x6365735f74636170,0x6e7568635f646e6f,0x707465730a3b5d6b\n"
".quad 0x203233732e656e2e,0x7225202c31347025,0x0a3b31202c313631,0x7262203134702540\n"
".quad 0x355f313242422061,0x636f6c2e0a0a3b35,0x3120363831203920,0x726168732e646c0a\n"
".quad 0x25203233752e6465,0x5f5f5b202c313372,0x636f6c5f61647563,0x325f7261765f6c61\n"
".quad 0x5f30345f39373130,0x736e6f635f6e6f6e,0x68745f6d756e5f74,0x6f635f7364616572\n"
".quad 0x6e6f69746361706d,0x20636f6c2e0a3b5d,0x0a31203334332032,0x203233752e726873\n"
".quad 0x25202c3534327225,0x0a3b31202c313372,0x2e71652e70746573,0x3234702520323373\n"
".quad 0x2c3534327225202c,0x636f6c2e0a3b3020,0x3120333433203220,0x622032347025400a\n"
".quad 0x5f31324242206172,0x766f6d0a0a3b3734,0x327225203233752e,0x0a0a3b31202c3135\n"
".quad 0x3a33345f31324242,0x203220636f6c2e0a,0x61620a3120353433,0x3020636e79732e72\n"
".quad 0x3220636f6c2e0a3b,0x730a312037343320,0x752e65672e707465,0x2c33347025203233\n"
".quad 0x7225202c32722520,0x7025400a3b353432,0x4220617262203334,0x0a3b35345f313242\n"
".quad 0x3233622e6c68730a,0x202c343631722520,0x0a3b31202c327225,0x33203220636f6c2e\n"
".quad 0x2e726f0a31203934,0x3631722520323362,0x3436317225202c35,0x64616d0a3b31202c\n"
".quad 0x203233732e6f6c2e,0x25202c3636317225,0x7225202c31353272,0x3b312d202c353631\n"
".quad 0x203220636f6c2e0a,0x64610a3120303533,0x7225203233732e64,0x317225202c373631\n"
".quad 0x6d0a3b32202c3436,0x33732e6f6c2e6461,0x2c38363172252032,0x202c313532722520\n"
".quad 0x2d202c3736317225,0x772e6c756d0a3b31,0x203233752e656469,0x202c3033316c7225\n"
".quad 0x34202c3636317225,0x36752e766f6d0a3b,0x3133316c72252034,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x30373130325f7261,0x5f6e6f6e5f30345f,0x5f735f74736e6f63\n"
".quad 0x69746361706d6f63,0x3b7473696c5f6e6f,0x3436732e6464610a,0x2c3233316c722520\n"
".quad 0x2c3033316c722520,0x3b3133316c722520,0x203220636f6c2e0a,0x646c0a3120323533\n"
".quad 0x2e6465726168732e,0x3631722520323375,0x316c72255b202c39,0x6d0a3b5d342b3233\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x36317225202c3333,0x64610a3b34202c38\n"
".quad 0x7225203436732e64,0x7225202c3433316c,0x7225202c3333316c,0x6c2e0a3b3133316c\n"
".quad 0x323533203220636f,0x68732e646c0a3120,0x3233752e64657261,0x202c313731722520\n"
".quad 0x2b3433316c72255b,0x2e6464610a3b5d34,0x3731722520323373,0x3936317225202c33\n"
".quad 0x3b3137317225202c,0x726168732e74730a,0x5b203233752e6465,0x342b3433316c7225\n"
".quad 0x3337317225202c5d,0x5f313242420a0a3b,0x636f6c2e0a3a3534,0x3120363533203220\n"
".quad 0x3233622e6c68730a,0x202c313532722520,0x31202c3135327225,0x3220636f6c2e0a3b\n"
".quad 0x0a37312033343320,0x203233732e726873,0x25202c3534327225,0x3b31202c35343272\n"
".quad 0x203220636f6c2e0a,0x65730a3120333433,0x33732e74672e7074,0x202c343470252032\n"
".quad 0x30202c3534327225,0x2034347025400a3b,0x3132424220617262,0x6f6d0a0a3b33345f\n"
".quad 0x7225203233752e76,0x327225202c303532,0x2e6172620a3b3135,0x3132424220696e75\n"
".quad 0x42420a0a3b38345f,0x6d0a3a37345f3132,0x25203233752e766f,0x3b31202c30353272\n"
".quad 0x345f313242420a0a,0x752e766f6d0a3a38,0x3934327225203233,0x3b3035327225202c\n"
".quad 0x203220636f6c2e0a,0x65730a3120303633,0x33752e746c2e7074,0x202c353470252032\n"
".quad 0x3b33202c31337225,0x622035347025400a,0x5f31324242206172,0x766f6d0a0a3b3335\n"
".quad 0x327225203233752e,0x0a0a3b32202c3634,0x3a30355f31324242,0x3233752e766f6d0a\n"
".quad 0x25202c3933722520,0x6c2e0a3b39343272,0x323633203220636f,0x752e7268730a3120\n"
".quad 0x2c30347225203233,0x31202c3933722520,0x3220636f6c2e0a3b,0x620a312033363320\n"
".quad 0x20636e79732e7261,0x732e6464610a3b30,0x3737317225203233,0x2c3634327225202c\n"
".quad 0x6f6c2e0a3b312d20,0x2035363320322063,0x672e707465730a31,0x7025203233752e65\n"
".quad 0x2c327225202c3634,0x0a3b373731722520,0x7262203634702540,0x355f313242422061\n"
".quad 0x636f6c2e0a0a3b32,0x3120373633203220,0x3233732e6464610a,0x202c393731722520\n"
".quad 0x0a3b31202c327225,0x732e6f6c2e64616d,0x3038317225203233,0x202c30347225202c\n"
".quad 0x2d202c3937317225,0x752e7268730a3b31,0x3138317225203233,0x202c39337225202c\n"
".quad 0x20636f6c2e0a3b32,0x0a31203836332032,0x203233732e646461,0x25202c3238317225\n"
".quad 0x7225202c30383172,0x6c756d0a3b313831,0x33752e656469772e,0x3533316c72252032\n"
".quad 0x2c3038317225202c,0x2e766f6d0a3b3420,0x316c722520343675,0x75635f5f202c3633\n"
".quad 0x6c61636f6c5f6164,0x3130325f7261765f,0x6f6e5f30345f3037,0x5f74736e6f635f6e\n"
".quad 0x6361706d6f635f73,0x73696c5f6e6f6974,0x732e6464610a3b74,0x33316c7225203436\n"
".quad 0x33316c7225202c37,0x33316c7225202c35,0x20636f6c2e0a3b36,0x0a31203037332032\n"
".quad 0x65726168732e646c,0x7225203233752e64,0x72255b202c333831,0x3b5d342b3733316c\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x7225202c3833316c,0x0a3b34202c323831\n"
".quad 0x203436732e646461,0x202c3933316c7225,0x202c3833316c7225,0x0a3b3633316c7225\n"
".quad 0x33203220636f6c2e,0x2e646c0a31203037,0x752e646572616873,0x3538317225203233\n"
".quad 0x33316c72255b202c,0x64610a3b5d342b39,0x7225203233732e64,0x317225202c373831\n"
".quad 0x38317225202c3338,0x68732e74730a3b35,0x3233752e64657261,0x3933316c72255b20\n"
".quad 0x317225202c5d342b,0x3242420a0a3b3738,0x6c2e0a3a32355f31,0x303633203220636f\n"
".quad 0x2e6c68730a303520,0x3432722520323362,0x3634327225202c36,0x6f6c2e0a3b31202c\n"
".quad 0x2030363320322063,0x6c2e707465730a31,0x7025203233752e74,0x34327225202c3734\n"
".quad 0x3b31337225202c36,0x3233752e766f6d0a,0x202c393432722520,0x6c2e0a3b30347225\n"
".quad 0x303633203220636f,0x37347025400a3120,0x3242422061726220,0x420a0a3b30355f31\n"
".quad 0x0a3a33355f313242,0x33203220636f6c2e,0x7261620a31203537,0x3b3020636e79732e\n"
".quad 0x203920636f6c2e0a,0x646c0a3120383831,0x2e6465726168732e,0x3234722520323375\n"
".quad 0x6475635f5f5b202c,0x5f6c61636f6c5f61,0x373130325f726176,0x6e6f6e5f30345f37\n"
".quad 0x6e5f74736e6f635f,0x61657268745f6d75,0x76697463615f7364,0x636f6c2e0a3b5d65\n"
".quad 0x3120313134203220,0x746c2e707465730a,0x347025203233752e,0x202c327225202c38\n"
".quad 0x65730a3b32347225,0x33732e71652e7074,0x202c393470252032,0x31202c3833327225\n"
".quad 0x72702e646e610a3b,0x2c30357025206465,0x25202c3834702520,0x6f6c2e0a3b393470\n"
".quad 0x2031313420322063,0x3035702521400a31,0x3242422061726220,0x6d0a0a3b35355f31\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x2c327225202c3034,0x2e766f6d0a3b3420\n"
".quad 0x316c722520343675,0x75635f5f202c3134,0x6c61636f6c5f6164,0x3130325f7261765f\n"
".quad 0x6f6e5f30345f3037,0x5f74736e6f635f6e,0x6361706d6f635f73,0x73696c5f6e6f6974\n"
".quad 0x732e6464610a3b74,0x34316c7225203436,0x34316c7225202c32,0x34316c7225202c31\n"
".quad 0x20636f6c2e0a3b30,0x0a31203331342032,0x65726168732e646c,0x7225203233752e64\n"
".quad 0x72255b202c313931,0x610a3b5d3234316c,0x25203233732e6464,0x7225202c33393172\n"
".quad 0x347225202c313931,0x772e6c756d0a3b32,0x203233752e656469,0x202c3334316c7225\n"
".quad 0x34202c3339317225,0x36752e766f6d0a3b,0x3434316c72252034,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x32363130325f7261,0x5f6e6f6e5f33335f,0x5f735f74736e6f63\n"
".quad 0x64610a3b7466656c,0x7225203436732e64,0x7225202c3534316c,0x7225202c3434316c\n"
".quad 0x6c2e0a3b3334316c,0x353134203220636f,0x68732e74730a3120,0x3233662e64657261\n"
".quad 0x3534316c72255b20,0x3131316625202c5d,0x36752e766f6d0a3b,0x3634316c72252034\n"
".quad 0x616475635f5f202c,0x765f6c61636f6c5f,0x33363130325f7261,0x5f6e6f6e5f33335f\n"
".quad 0x5f735f74736e6f63,0x610a3b7468676972,0x25203436732e6464,0x25202c3734316c72\n"
".quad 0x25202c3634316c72,0x2e0a3b3334316c72,0x3134203220636f6c,0x732e74730a312036\n"
".quad 0x33662e6465726168,0x34316c72255b2032,0x37386625202c5d37,0x36732e6464610a3b\n"
".quad 0x3934316c72252034,0x2c35326c7225202c,0x3b3334316c722520,0x203220636f6c2e0a\n"
".quad 0x74730a3120373134,0x2e6465726168732e,0x6c72255b20323375,0x7225202c5d393431\n"
".quad 0x6464610a3b343432,0x6c7225203436732e,0x6c7225202c313531,0x316c7225202c3632\n"
".quad 0x636f6c2e0a3b3334,0x3120383134203220,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x2c5d3135316c7225,0x0a3b393332722520,0x35355f313242420a,0x3920636f6c2e0a3a\n"
".quad 0x620a312034393120,0x20636e79732e7261,0x20636f6c2e0a3b30,0x0a31203739312039\n"
".quad 0x6172622033702540,0x39355f3132424220,0x20636f6c2e0a0a3b,0x0a31203839312039\n"
".quad 0x65726168732e646c,0x7225203233752e64,0x5f5f5b202c393931,0x636f6c5f61647563\n"
".quad 0x325f7261765f6c61,0x5f30345f37373130,0x736e6f635f6e6f6e,0x68745f6d756e5f74\n"
".quad 0x63615f7364616572,0x6d0a3b5d65766974,0x2e656469772e6c75,0x316c722520323375\n"
".quad 0x39317225202c3235,0x6f6d0a3b34202c39,0x7225203436752e76,0x5f5f202c3335316c\n"
".quad 0x636f6c5f61647563,0x325f7261765f6c61,0x5f30345f30373130,0x736e6f635f6e6f6e\n"
".quad 0x706d6f635f735f74,0x6c5f6e6f69746361,0x6464610a3b747369,0x6c7225203436732e\n"
".quad 0x6c7225202c343531,0x6c7225202c333531,0x6f6c2e0a3b323531,0x2038393120392063\n"
".quad 0x6168732e646c0a31,0x203233752e646572,0x5b202c3030327225,0x3b5d3435316c7225\n"
".quad 0x3233732e6464610a,0x202c323532722520,0x25202c3030327225,0x74730a3b39393172\n"
".quad 0x2e6465726168732e,0x635f5f5b20323375,0x61636f6c5f616475,0x30325f7261765f6c\n"
".quad 0x6e5f30345f373731,0x74736e6f635f6e6f,0x7268745f6d756e5f,0x7463615f73646165\n"
".quad 0x7225202c5d657669,0x6464610a3b323532,0x327225203233732e,0x35327225202c3230\n"
".quad 0x2e0a3b312d202c32,0x3834203220636f6c,0x622e646e610a3120,0x3330327225203233\n"
".quad 0x2c3230327225202c,0x0a3b323532722520,0x2e71652e70746573,0x3235702520323373\n"
".quad 0x2c3330327225202c,0x357025400a3b3020,0x4242206172622032,0x0a0a3b38355f3132\n"
".quad 0x35203220636f6c2e,0x2e7476630a312033,0x732e3233662e6e72,0x2c39376625203233\n"
".quad 0x0a3b323532722520,0x33203320636f6c2e,0x7362610a35203539,0x386625203233662e\n"
".quad 0x3b39376625202c30,0x203420636f6c2e0a,0x730a332039323934,0x662e746c2e707465\n"
".quad 0x2c33357025203233,0x30202c3038662520,0x3030303038303066,0x20636f6c2e0a3b30\n"
".quad 0x3520303339342034,0x3233662e6c756d0a,0x25202c3138662520,0x346630202c393766\n"
".quad 0x3b30303030303842,0x33662e706c65730a,0x202c323866252032,0x6625202c31386625\n"
".quad 0x33357025202c3937,0x3320636f6c2e0a3b,0x0a35203538373120,0x203233622e766f6d\n"
".quad 0x25202c3430327225,0x7268730a3b323866,0x327225203233752e,0x30327225202c3530\n"
".quad 0x2e0a3b3332202c34,0x3934203420636f6c,0x646e610a33203533,0x327225203233622e\n"
".quad 0x30327225202c3630,0x0a3b353532202c35,0x34203420636f6c2e,0x65730a3320363339\n"
".quad 0x33662e71652e7074,0x202c343570252032,0x6630202c30386625,0x3030303030303030\n"
".quad 0x652e707465730a3b,0x7025203233732e71,0x30327225202c3535,0x0a3b353532202c36\n"
".quad 0x20646572702e726f,0x7025202c36357025,0x35357025202c3435,0x622e706c65730a3b\n"
".quad 0x3730327225203233,0x202c3035312d202c,0x7025202c3632312d,0x2e6464610a3b3335\n"
".quad 0x3032722520323373,0x3730327225202c38,0x3b3630327225202c,0x3233752e766f6d0a\n"
".quad 0x202c393032722520,0x622e6c68730a3b31,0x3031327225203233,0x2c3930327225202c\n"
".quad 0x0a3b383032722520,0x3233622e706c6573,0x202c323532722520,0x3031327225202c31\n"
".quad 0x0a3b36357025202c,0x38355f313242420a,0x3920636f6c2e0a3a,0x730a312039393120\n"
".quad 0x6465726168732e74,0x5f5f5b203233752e,0x636f6c5f61647563,0x325f7261765f6c61\n"
".quad 0x5f30345f39373130,0x736e6f635f6e6f6e,0x68745f6d756e5f74,0x6f635f7364616572\n"
".quad 0x6e6f69746361706d,0x3235327225202c5d,0x33752e766f6d0a3b,0x2c31313272252032\n"
".quad 0x636f6c2e0a3b3020,0x3120313032203920,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f31383130325f,0x6f635f6e6f6e5f30\n"
".quad 0x706d6f635f74736e,0x6f6365735f746361,0x6b6e7568635f646e,0x3131327225202c5d\n"
".quad 0x33752e766f6d0a3b,0x2c32313272252032,0x636f6c2e0a3b3120,0x3120323032203920\n"
".quad 0x726168732e74730a,0x5b203233752e6465,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x345f35373130325f,0x6f635f6e6f6e5f30,0x5f6c6c615f74736e,0x5f73646165726874\n"
".quad 0x65677265766e6f63,0x31327225202c5d64,0x313242420a0a3b32,0x6f6c2e0a3a39355f\n"
".quad 0x2035303220392063,0x79732e7261620a31,0x756d0a3b3020636e,0x752e656469772e6c\n"
".quad 0x35316c7225203233,0x202c327225202c35,0x752e766f6d0a3b34,0x35316c7225203436\n"
".quad 0x6475635f5f202c36,0x5f6c61636f6c5f61,0x373130325f726176,0x6e6f6e5f30345f30\n"
".quad 0x735f74736e6f635f,0x746361706d6f635f,0x7473696c5f6e6f69,0x36732e6464610a3b\n"
".quad 0x3735316c72252034,0x3635316c7225202c,0x3535316c7225202c,0x33752e766f6d0a3b\n"
".quad 0x2c34313272252032,0x636f6c2e0a3b3020,0x3120383032203920,0x726168732e74730a\n"
".quad 0x5b203233752e6465,0x342b3735316c7225,0x3431327225202c5d,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312033343220,0x25203233752e766f,0x6e25202c36313272,0x2e0a3b782e646974\n"
".quad 0x3032203920636f6c,0x2e6464610a312039,0x3132722520323373,0x3631327225202c37\n"
".quad 0x6d0a3b327225202c,0x2e656469772e6c75,0x316c722520323375,0x31327225202c3835\n"
".quad 0x64610a3b34202c37,0x7225203436732e64,0x7225202c3935316c,0x7225202c3835316c\n"
".quad 0x6c2e0a3b3635316c,0x393032203920636f,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x3935316c72255b20,0x327225202c5d342b,0x636f6c2e0a3b3431,0x3120313132203920\n"
".quad 0x6e79732e7261620a,0x6172620a3b302063,0x32424220696e752e,0x42420a0a3b375f31\n"
".quad 0x2e0a3a30365f3132,0x3735203920636f6c,0x752e766f6d0a3120,0x3533327225203233\n"
".quad 0x782e64697425202c,0x3920636f6c2e0a3b,0x730a312036313220,0x752e746c2e707465\n"
".quad 0x2c37357025203233,0x202c353332722520,0x25400a3b33317225,0x2061726220373570\n"
".quad 0x3b32365f31324242,0x3920636f6c2e0a0a,0x720a322033323220,0x3242420a0a3b7465\n"
".quad 0x6c2e0a3a32365f31,0x383132203920636f,0x68732e646c0a3120,0x3233752e64657261\n"
".quad 0x202c313232722520,0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f36383130325f72\n"
".quad 0x635f6e6f6e5f3034,0x625f635f74736e6f,0x66666f5f6b636f6c,0x7074756f5f746573\n"
".quad 0x6f6c2e0a3b5d7475,0x3120373520392063,0x3233752e766f6d0a,0x202c343332722520\n"
".quad 0x0a3b782e64697425,0x32203920636f6c2e,0x6464610a31203831,0x327225203233732e\n"
".quad 0x32327225202c3232,0x3433327225202c31,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3036316c72,0x3b34202c34333272,0x3436752e766f6d0a,0x2c3136316c722520\n"
".quad 0x5f616475635f5f20,0x61765f6c61636f6c,0x5f32363130325f72,0x635f6e6f6e5f3333\n"
".quad 0x6c5f735f74736e6f,0x6464610a3b746665,0x6c7225203436732e,0x6c7225202c323631\n"
".quad 0x6c7225202c313631,0x2e646c0a3b303631,0x36752e6d61726170,0x3837316c72252034\n"
".quad 0x6231335a5f5b202c,0x72654b7463657369,0x656772614c6c656e,0x746e49746c754d5f\n"
".quad 0x6650736c61767265,0x5f30536a506a5f53,0x535f30535f535f53,0x665f30535f535f30\n"
".quad 0x395f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x7225202c3336316c,0x6c2e0a3b3837316c,0x303232203920636f,0x772e6c756d0a3120\n"
".quad 0x203233752e656469,0x202c3436316c7225,0x34202c3232327225,0x36732e6464610a3b\n"
".quad 0x3536316c72252034,0x3336316c7225202c,0x3436316c7225202c,0x6168732e646c0a3b\n"
".quad 0x203233662e646572,0x255b202c33386625,0x0a3b5d3236316c72,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3536316c72,0x64610a3b33386625,0x7225203436732e64\n"
".quad 0x7225202c3736316c,0x6c7225202c36326c,0x2e646c0a3b303631,0x36752e6d61726170\n"
".quad 0x3937316c72252034,0x6231335a5f5b202c,0x72654b7463657369,0x656772614c6c656e\n"
".quad 0x746e49746c754d5f,0x6650736c61767265,0x5f30536a506a5f53,0x535f30535f535f53\n"
".quad 0x665f30535f535f30,0x315f6d617261705f,0x617476630a3b5d30,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x25202c3836316c72,0x2e0a3b3937316c72,0x3232203920636f6c\n"
".quad 0x2e6464610a312031,0x316c722520343673,0x316c7225202c3936,0x316c7225202c3836\n"
".quad 0x732e646c0a3b3436,0x33752e6465726168,0x2c35323272252032,0x3736316c72255b20\n"
".quad 0x6c672e74730a3b5d,0x3233752e6c61626f,0x3936316c72255b20,0x3532327225202c5d\n"
".quad 0x3920636f6c2e0a3b,0x720a322033323220,0x0a0a0a7d0a3b7465,0x0000600100000200\n"
".quad 0x00000000004b6000,0x0000000000000000,0x0000140001000400,0x0000210000003800\n"
".quad 0x0000000000001500,0x0000000000000000,0x652f737473657400,0x756c61766e656769\n"
".quad 0x63657369622f7365,0x2e656772616c5f74,0x0000000000007563,0x010102464c457f00\n"
".quad 0x0000000000000433,0x00000100be000200,0x0000000000000000,0x000000000049d800\n"
".quad 0x0000000000004000,0x3800400014051400,0x0100140040000700,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000030000000100\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000054000,0x0000000000043600\n"
".quad 0x0000000000000000,0x0000000000000400,0x0000000000000000,0x0000030000000b00\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000097600,0x000000000000e800\n"
".quad 0x0000000000000000,0x0000000000000100,0x0000000000000000,0x0000020000001300\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000a5e00,0x0000000000028800\n"
".quad 0x0000160000000200,0x0000000000000100,0x0000000000001800,0x0000010000013900\n"
".quad 0x0000000010000600,0x0000000000000000,0x00000000000ce600,0x00000000001e2000\n"
".quad 0x00000b0000000300,0x0000000000000419,0x0000000000000000,0x0000010000025200\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000002b0600,0x000000000000a000\n"
".quad 0x0000040000000000,0x0000000000000400,0x0000000000000000,0x0000010000020700\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000002ba600,0x0000000000001000\n"
".quad 0x0000040000000000,0x0000000000000400,0x0000000000000000,0x0000010000017b00\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000002bb600,0x0000000000014c00\n"
".quad 0x0000040000000000,0x0000000000000100,0x0000000000000000,0x000008000001c000\n"
".quad 0x0000000000000300,0x0000000000000000,0x00000000002d0200,0x0000000000203000\n"
".quad 0x0000040000000000,0x0000000000000400,0x0000000000000000,0x000001000000ae00\n"
".quad 0x0000000010000600,0x0000000000000000,0x00000000002d0200,0x0000000000113800\n"
".quad 0x0000090000000300,0x0000000000000418,0x0000000000000000,0x000001000003ea00\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000003e3a00,0x0000000000007c00\n"
".quad 0x0000090000000000,0x0000000000000400,0x0000000000000000,0x0000010000039d00\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000003eb600,0x0000000000001000\n"
".quad 0x0000090000000000,0x0000000000000400,0x0000000000000000,0x000001000000f200\n"
".quad 0x0000000000000200,0x0000000000000000,0x00000000003ec600,0x000000000000dc00\n"
".quad 0x0000090000000000,0x0000000000000100,0x0000000000000000,0x0000080000035400\n"
".quad 0x0000000000000300,0x0000000000000000,0x00000000003fa200,0x0000000000282000\n"
".quad 0x0000090000000000,0x0000000000000400,0x0000000000000000,0x0000010000003600\n"
".quad 0x0000000010000600,0x0000000000000000,0x00000000003fa200,0x0000000000086000\n"
".quad 0x0000060000000300,0x0000000000000418,0x0000000000000000,0x0000010000031600\n"
".quad 0x0000000000000200,0x0000000000000000,0x0000000000480200,0x0000000000005400\n"
".quad 0x00000e0000000000,0x0000000000000400,0x0000000000000000,0x000001000002d700\n"
".quad 0x0000000000000200,0x0000000000000000,0x0000000000485600,0x0000000000000c00\n"
".quad 0x00000e0000000000,0x0000000000000400,0x0000000000000000,0x0000010000006c00\n"
".quad 0x0000000000000200,0x0000000000000000,0x0000000000486200,0x0000000000009c00\n"
".quad 0x00000e0000000000,0x0000000000000100,0x0000000000000000,0x0000080000029c00\n"
".quad 0x0000000000000300,0x0000000000000000,0x000000000048fe00,0x0000000000080400\n"
".quad 0x00000e0000000000,0x0000000000000400,0x0000000000000000,0x000001000000a500\n"
".quad 0x0000000000000200,0x0000000000000000,0x000000000048fe00,0x000000000000d800\n"
".quad 0x0000000000000000,0x0000000000000100,0x0000000000000000,0x72747368732e0000\n"
".quad 0x7274732e00626174,0x6d79732e00626174,0x2e766e2e00626174,0x692e6c61626f6c67\n"
".quad 0x2e766e2e0074696e,0x2e006c61626f6c67,0x335a5f2e74786574,0x4b74636573696230\n"
".quad 0x72614c6c656e7265,0x6e49656e4f5f6567,0x50736c6176726574,0x535f536a6a5f5366\n"
".quad 0x766e2e00666a505f,0x5a5f2e6f666e692e,0x7463657369623033,0x614c6c656e72654b\n"
".quad 0x49656e4f5f656772,0x736c61767265746e,0x5f536a6a5f536650,0x6e2e00666a505f53\n"
".quad 0x2e006f666e692e76,0x335a5f2e74786574,0x4b74636573696231,0x72614c6c656e7265\n"
".quad 0x49746c754d5f6567,0x736c61767265746e,0x536a506a5f536650,0x30535f535f535f30\n"
".quad 0x30535f535f30535f,0x692e766e2e00665f,0x31335a5f2e6f666e,0x654b746365736962\n"
".quad 0x6772614c6c656e72,0x6e49746c754d5f65,0x50736c6176726574,0x30536a506a5f5366\n"
".quad 0x5f30535f535f535f,0x5f30535f535f3053,0x2e747865742e0066,0x6573696237315a5f\n"
".quad 0x6c656e72654b7463,0x536650656772614c,0x50666a6a66666a5f,0x5f535f535f30536a\n"
".quad 0x535f535f535f3053,0x5f30535f30535f30,0x2e766e2e005f3053,0x315a5f2e6f666e69\n"
".quad 0x4b74636573696237,0x72614c6c656e7265,0x666a5f5366506567,0x30536a50666a6a66\n"
".quad 0x5f30535f535f535f,0x535f30535f535f53,0x5f30535f30535f30,0x6168732e766e2e00\n"
".quad 0x37315a5f2e646572,0x654b746365736962,0x6772614c6c656e72,0x66666a5f53665065\n"
".quad 0x5f30536a50666a6a,0x535f30535f535f53,0x30535f30535f535f,0x005f30535f30535f\n"
".quad 0x736e6f632e766e2e,0x5f2e3631746e6174,0x636573696237315a,0x4c6c656e72654b74\n"
".quad 0x5f53665065677261,0x6a50666a6a66666a,0x535f535f535f3053,0x30535f535f535f30\n"
".quad 0x535f30535f30535f,0x632e766e2e005f30,0x30746e6174736e6f,0x73696237315a5f2e\n"
".quad 0x656e72654b746365,0x6650656772614c6c,0x666a6a66666a5f53,0x535f535f30536a50\n"
".quad 0x5f535f535f30535f,0x30535f30535f3053,0x766e2e005f30535f,0x2e6465726168732e\n"
".quad 0x6573696230335a5f,0x6c656e72654b7463,0x6e4f5f656772614c,0x61767265746e4965\n"
".quad 0x6a6a5f536650736c,0x00666a505f535f53,0x736e6f632e766e2e,0x5f2e3631746e6174\n"
".quad 0x636573696230335a,0x4c6c656e72654b74,0x656e4f5f65677261,0x6c61767265746e49\n"
".quad 0x536a6a5f53665073,0x2e00666a505f535f,0x74736e6f632e766e,0x335a5f2e30746e61\n"
".quad 0x4b74636573696230,0x72614c6c656e7265,0x6e49656e4f5f6567,0x50736c6176726574\n"
".quad 0x535f536a6a5f5366,0x766e2e00666a505f,0x2e6465726168732e,0x6573696231335a5f\n"
".quad 0x6c656e72654b7463,0x754d5f656772614c,0x767265746e49746c,0x6a5f536650736c61\n"
".quad 0x535f535f30536a50,0x535f30535f30535f,0x6e2e00665f30535f,0x6174736e6f632e76\n"
".quad 0x335a5f2e3631746e,0x4b74636573696231,0x72614c6c656e7265,0x49746c754d5f6567\n"
".quad 0x736c61767265746e,0x536a506a5f536650,0x30535f535f535f30,0x30535f535f30535f\n"
".quad 0x632e766e2e00665f,0x30746e6174736e6f,0x73696231335a5f2e,0x656e72654b746365\n"
".quad 0x4d5f656772614c6c,0x7265746e49746c75,0x5f536650736c6176,0x5f535f30536a506a\n"
".quad 0x5f30535f30535f53,0x0000665f30535f53,0x6573696230335a5f,0x6c656e72654b7463\n"
".quad 0x6e4f5f656772614c,0x61767265746e4965,0x6a6a5f536650736c,0x00666a505f535f53\n"
".quad 0x735f616475635f5f,0x5f7669645f30326d,0x5f003233665f6e72,0x6d735f616475635f\n"
".quad 0x725f7669645f3032,0x5f7a74666f6e5f6e,0x776f6c735f323366,0x335a5f0068746170\n"
".quad 0x4b74636573696231,0x72614c6c656e7265,0x49746c754d5f6567,0x736c61767265746e\n"
".quad 0x536a506a5f536650,0x30535f535f535f30,0x30535f535f30535f,0x6237315a5f00665f\n"
".quad 0x72654b7463657369,0x656772614c6c656e,0x6a66666a5f536650,0x535f30536a50666a\n"
".quad 0x5f535f30535f535f,0x5f30535f30535f53,0x00005f30535f3053,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000010003000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000020003000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000030003000000,0x0000000000000000,0x0000000000000000,0x0000000003000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000003000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000e0003000000,0x6000000000000000,0x0000000000000008\n"
".quad 0x0000110003000000,0x0000000000000000,0x0000000000000000,0x0000130003000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000090003000000,0x3800000000000000\n"
".quad 0x0000000000000011,0x00000c0003000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000040003000000,0x2000000000000000,0x000000000000001e,0x0000070003000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000080003000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000060003000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000050003000000,0x0000000000000000,0x0000000000000000,0x0000120003000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000100003000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000f0003000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000d0003000000,0x0000000000000000,0x0000000000000000,0x00000b0003000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000a0003000000,0x0000000000000000\n"
".quad 0x0100000000000000,0x00000e1012000000,0x5000000000000000,0x3100000000000004\n"
".quad 0x10000e0012000000,0xa00000000000001a,0x4800000000000000,0xb0000e0012000000\n"
".quad 0x700000000000001a,0x6e00000000000003,0x0000091012000000,0x2800000000000000\n"
".quad 0xac0000000000000d,0x0000041012000000,0x1000000000000000,0xe40000000000001a\n"
".quad 0x042800440400005d,0xe42c00000084029c,0xe428000000fc001d,0x0328000000fc009d\n"
".quad 0x036000c00004a0de,0x036000c00008a11e,0x45207e0000fc1fdc,0x85c9000060303fdc\n"
".quad 0x85c9000000004fdc,0x45c9000020104fdc,0x45c9000040203fdc,0x04c9000050283fdc\n"
".quad 0x0450ee0000ffffdc,0x232c0000008400dc,0xe71a8e0000fc31dc,0xe440000001a00081\n"
".quad 0xe228004000d00221,0xe2180000000401a1,0xe4180000000401e1,0x0428004000e00161\n"
".quad 0x041c004000f110e0,0x851c004001011120,0xa5c900000003f220,0x85c900007063f1a0\n"
".quad 0x85c900007053f1e0,0x45c900002013f160,0x45c900004023f0e0,0x85c90000502bf120\n"
".quad 0x04c900007043ffe0,0xe450ee0000ffffdc,0xe428000000fc01dd,0xe428000000fc00dd\n"
".quad 0xe428000000fc019d,0xe428000000fc021d,0x8528000000fc02dd,0x07c100007063f11c\n"
".quad 0x0360000003600000,0xf4188e000010a3dc,0x0340000000000025,0x036000c00008a09e\n"
".quad 0x856000c00004a11e,0x85c10000201020dc,0x45c10000000021dc,0x45c100005028419c\n"
".quad 0x00c100004020409c,0xe7268e00000c73dc,0x0340000000800005,0x034800000008611d\n"
".quad 0xf41a0ec0000443dc,0x9540000000000025,0x00c900007053ffdc,0x00208e0000fc73dc\n"
".quad 0xe2208e0000fc35dc,0xe218fe000000011d,0xe218fe000000015d,0xe21afe0000000105\n"
".quad 0x851afe0000000149,0x00c900007053ffdc,0x00210e00001443dc,0x00500000000c715c\n"
".quad 0x00500000001c3105,0x005800cfc000521c,0xf4300ecfc0004204,0x044000000000001d\n"
".quad 0x8550ee0000ffffdc,0x23c100007053f11c,0xe7190ec0000443dc,0x8540000023200005\n"
".quad 0x04c100007063f11c,0x2350ee0000ffffdc,0xe7190e4000c3f3dc,0x0340000006a00005\n"
".quad 0xe2188e000010a3dc,0xe418fe000000015d,0xe428000000fc025d,0xe428000000fc041d\n"
".quad 0x0328004000c0045d,0x034800000040a11c,0xe71b0e4000c045dc,0x0340000001c00089\n"
".quad 0xe24801000040a128,0x03180000001003a9,0x436000c00008a4aa,0x0348000000fff368\n"
".quad 0x035800c0007843e8,0x43201d8000804328,0x43400000003cd3e8,0x034800400090f368\n"
".quad 0x85201d8000a043a8,0x438400000000c328,0x8548004000b0f3e8,0x8587fffffff0e128\n"
".quad 0x85c9000000012328,0x03c9000020112128,0x07207e0000fd1fdc,0x0460000002c00000\n"
".quad 0xe750ee0000ffffdc,0x0340000002600025,0x23080e400021139c,0xe7190e0000fce5dc\n"
".quad 0xe440000002000009,0xe428000000fc031d,0xe228000000fc051d,0x851800002010055d\n"
".quad 0x85c100000001511c,0x00c100000001435c,0x005800000010411c,0x075000000020d35d\n"
".quad 0x005000005aa00100,0x035000000010d15d,0x034800c00004c31c,0x004800c00011555c\n"
".quad 0x033f0a400007f11c,0x03188e000038c5dc,0x034800c00011451c,0xe74800000024425c\n"
".quad 0x134003fffe600009,0x034800400021041c,0x034800400021145d,0x03188e4000c105dc\n"
".quad 0x04207e0000fd1fdc,0x043000c00013ffdc,0xe750ee0000ffffdc,0xe74003fffa200009\n"
".quad 0xe44000000020001d,0x8528000000fc025d,0x07c100007063f11c,0x036000000f400000\n"
".quad 0xf4188e000010a3dc,0x0040000000000025,0xe7268e00000c73dc,0x0340000000e00005\n"
".quad 0x036000c00008a11e,0xe46000c00004a15e,0x8528000000fc02dd,0x85c90000000041dc\n"
".quad 0x45c90000201041dc,0x55c900004020509c,0x83c900005028519c,0x836800000008911c\n"
".quad 0x846800000018915c,0x031c0000000892dc,0x036800c3fffc411c,0x846800c3fffc515c\n"
".quad 0x231c00000024939c,0x841a8e0000fc43dc,0x231c0000001893dc,0xe71a820000fc53dc\n"
".quad 0x0340000008400005,0x236000c00004a15e,0x45190e0000fc43dc,0xe7c9000060385fdc\n"
".quad 0xc040000003e00005,0xe2081e000020711c,0xe21a4cb4b9c8031d,0x0018e1951210035d\n"
".quad 0x005800400110411c,0x03500000001c841d,0x046000c00004a3de,0x451000000011311c\n"
".quad 0x01c900004020f2dc,0x44081e000010c31c,0x451000000041311c,0x01c900005028f39c\n"
".quad 0xe71e0e00003043dc,0x0040000001c00005,0x00208e0000fc73dc,0xe2208e0000fc85dc\n"
".quad 0xe218fe000000011d,0xe218fe000000015d,0xe21afe0000000105,0x001afe0000000149\n"
".quad 0x00500000002072dc,0x00210e00001443dc,0x035800cfc000b15c,0x006000c00008a11e\n"
".quad 0xe4300ecfc0010144,0x8528000000fc02dd,0x95c900000000415c,0x03c900002010415c\n"
".quad 0xe46000c00008a11e,0x8528000000fc02dd,0x95c90000000041dc,0xc0c900002010421c\n"
".quad 0xe2081e00000c811c,0xe21a4cb4b9c8031d,0x0018e1951210035d,0x005800400110411c\n"
".quad 0x035000000020341d,0x046000c00004a2de,0x451000000011311c,0x01c900004020b39c\n"
".quad 0x44081e000010c31c,0x451000000041311c,0x01c900005028b3dc,0xe71e0e00003043dc\n"
".quad 0x0040000001c00005,0x00208e0000fc83dc,0xe2208e0000fc35dc,0xe218fe000000011d\n"
".quad 0xe218fe000000015d,0xe21afe0000000105,0x001afe0000000149,0x00500000000c82dc\n"
".quad 0x00210e00001443dc,0x035800cfc000b15c,0x006000c00008a11e,0xe43010cfc0010144\n"
".quad 0x8528000000fc02dd,0x95c900000000415c,0x03c900002010415c,0xe46000c00008a11e\n"
".quad 0x8528000000fc02dd,0x95c900000000421c,0xc0c90000201040dc,0xe2081e000020711c\n"
".quad 0xe21a4cb4b9c8031d,0x0018e1951210035d,0x005800400110411c,0x03500000001c841d\n"
".quad 0x046000c00004a3de,0x071000000011311c,0x4560000002600000,0x01c900004020f2dc\n"
".quad 0x44081e000010c31c,0x451000000041311c,0x01c900005028f39c,0xe71e0e00003043dc\n"
".quad 0x0040000001600005,0x00208e0000fc73dc,0xe2208e0000fc85dc,0xe218fe000000011d\n"
".quad 0xe218fe000000015d,0xe21afe0000000105,0x001afe0000000149,0x00500000002072dc\n"
".quad 0x00210e00001443dc,0x005800cfc000b15c,0xf4300ecfc0010144,0xe42800000014011d\n"
".quad 0xf42800000020011d,0x03280000001c015d,0x036000c00008a31e,0xe26000c00004a35e\n"
".quad 0x851800000004039d,0x85c900000000c15c,0x45c900002010c11c,0xe2c900006038d39c\n"
".quad 0x95180000000402dd,0x07c900007043f39c,0x0460000008000000,0x8550ee0000ffffdc\n"
".quad 0x23c100007043f11c,0xf4190e0000fc43dc,0x8540000000000005,0x03c100007073f11c\n"
".quad 0x235800c00004431c,0xe7190e0000fcc3dc,0xe240000002800005,0x041800000004015d\n"
".quad 0x0350ee0000ffffdc,0xe71b0e000030a3dc,0x0340000001600085,0x436000c00004a364\n"
".quad 0x036800c00004d3a4,0xa34800c00008d364,0xa3201c80001453a4,0x03201a8000145364\n"
".quad 0x036000c00004e3a6,0x456000c00004d3e6,0x45c100006038e3a4,0x03c100006038f364\n"
".quad 0x454800000034e364,0x23c900006038f364,0x035800c00004c31c,0x236000c00004515c\n"
".quad 0xe71a0e0000fcc3dc,0xe74003fffdc00005,0xe24000000020001d,0x031800000004015d\n"
".quad 0xe7188ec0000c43dc,0xe240000002600005,0x031800000008031d,0x045800c00004535c\n"
".quad 0x0350ee0000ffffdc,0x034800fffffcc39c,0x036000c00004c31c,0x031b0e000038a5dc\n"
".quad 0x03188e000010c3dc,0x034800c00004a3a8,0xa35800c0000853e8,0x03201c800014d168\n"
".quad 0x03480000003c53a8,0x036000c00004542a,0x456000c00004e3ea,0x45c10000603903a8\n"
".quad 0x03c100006038f168,0xe44800000014e3a8,0x452800000034015d,0xe7c900006038f3a8\n"
".quad 0x044003fffdc00005,0x8550ee0000ffffdc,0x23c100007063f15c,0x03190ec00004b3dc\n"
".quad 0x031882000014a3dc,0x456000c00004a106,0x03c1000060304104,0x0348000000144104\n"
".quad 0x036000c000084146,0x856000c000044106,0x85c9000000005204,0x45c90000201050c4\n"
".quad 0x45c9000040204244,0xf4c9000050284184,0x074000000000001d,0x0460000003a00000\n"
".quad 0xf450ee0000ffffdc,0x8540000000000001,0x03c100007063f11c,0x456000c00004415e\n"
".quad 0x03c100006030515c,0x034800000010511c,0x854800fffffc415c,0x03c900007063f11c\n"
".quad 0x236800000010515c,0xe7190e0000fc53dc,0x0440000001c00085,0xe218000000112126\n"
".quad 0xe21bfffffda80265,0x8018000000040325,0x00208ec0200045e4,0x045800d2e0004164\n"
".quad 0x042004fffe089264,0x0320040000105164,0x035800c0005c5164,0x236800c003fc5164\n"
".quad 0x03190ec003fc55e4,0x8048000000149164,0x0321240000fc45e4,0x046000000014c124\n"
".quad 0xe22014c000044124,0x851800000004015d,0x85c900007073f11c,0x95c900007043ffdc\n"
".quad 0x04c900007053f15c,0x8550ee0000ffffdc,0x03c100007073f11c,0xe7198e40002043dc\n"
".quad 0x044003ffd8c00005,0x0450ee0000ffffdc,0x852c00000084011c,0x03c100007063f0dc\n"
".quad 0x036000c00004425e,0x454800400020409c,0x45c100004020919c,0x03c100005028915c\n"
".quad 0x23188e00000c23dc,0x234000c0502821dc,0xe44000c04020221c,0x4528000000fc0125\n"
".quad 0x45c1000000007104,0xe4c10000000080c4,0x0428000000fc00e5,0x041c00000018a25c\n"
".quad 0x451c00000014a2dc,0x45c900004023ffe0,0x04c90000502bffe0,0x0350ee0000ffffdc\n"
".quad 0x044800000024b35d,0x042c00000084025c,0x232c00000084031c,0x03190ec00004d3dc\n"
".quad 0x036000c0000492de,0x846000c00004c3de,0x041c000000349264,0x042012c00007f31c\n"
".quad 0xe42002c00007f35c,0x4528000000fc0245,0x45c900007080ffdc,0x45c900004028b31c\n"
".quad 0x45c900005030b35c,0x85c900006038f25c,0x07c100007063f39c,0x2360000002a00000\n"
".quad 0x234000c0708022dc,0x034000c06030225c,0xe7188e00003825dc,0x0340000000c00009\n"
".quad 0xe7188ec0080425dc,0x1440000000200009,0x450c0e00001cf5dc,0x04c9000000089fdc\n"
".quad 0x550c0e00001cf5dc,0x03c900000000bfdc,0x03480000000c425d,0x236000c00004235e\n"
".quad 0x04190ec0000495dc,0x042014c00007f2dc,0x842004c00007f31c,0xe41c000000249268\n"
".quad 0x4528000000fc0249,0x45c90000000882dc,0x45c900000008731c,0x55c900006038d25c\n"
".quad 0x85c900007080dfdc,0x03c100007073f21c,0x235800c00004825c,0xe7190e0000fc97dc\n"
".quad 0xe24000000700000d,0x07180000000401dd,0x0460000006200000,0x0350ee0000ffffdc\n"
".quad 0xf41b0e000024a7dc,0x034000000000000d,0x436000c00004a2dc,0x036800c00004b31c\n"
".quad 0xa34800c00008b2dc,0xa32018800014731c,0x03201680001472dc,0x034800c00004c35c\n"
".quad 0x034800c00004b31c,0x034800000034d2dc,0x454800000030c31c,0x45c100004020b39c\n"
".quad 0x03c100004020c35c,0x034800c07078b41c,0x454800000034e3dc,0x45c100005028c35c\n"
".quad 0x45c900004020c3dc,0x03c100005028b39c,0x034800c07078c3dc,0x454800000034e35c\n"
".quad 0x65c900005028c35c,0x23c100007078b39c,0x231a8ec00004e9dc,0xe7190ec00004e7dc\n"
".quad 0x6540000000600011,0x23c100000000f35c,0xf4190ec00004d9dc,0xe740000000000011\n"
".quad 0x654000000220000d,0x23c100000000f35c,0xe7190ec00004d7dc,0x454000000180000d\n"
".quad 0x45c100006030c39c,0x03c100006030b35c,0x034800c06028c31c,0x034800c06028b2dc\n"
".quad 0x034800000038d39c,0xe71a0ec00400e7dc,0x454000000040000d,0x55c900000008c39c\n"
".quad 0xe2c900000008bfdc,0x45180000000402dd,0x55c90000000102dc,0xe2c900000000f2dc\n"
".quad 0x55180000000402dd,0xe2c90000000102dc,0x55180000000402dd,0x23c900000000f2dc\n"
".quad 0x035800c00004925c,0x236000c0000471dc,0xe71a0e0000fc97dc,0xe74003fff940000d\n"
".quad 0xe24000000020001d,0x03180000000401dd,0xe7188ec0000c87dc,0xe24000000340000d\n"
".quad 0x031800000008025d,0x045800c0000472dc,0x0350ee0000ffffdc,0x034800fffffc931c\n"
".quad 0xe71b0e000030a7dc,0x034000000200008d,0x034800c00004a32c,0xa35800c00008736c\n"
".quad 0x032018800014b1ec,0x034800000034732c,0x034800c00004736c,0x034800c00004c1ec\n"
".quad 0x034800000034d3ec,0x45480000001c73ac,0x45c100004020f32c,0x03c100004020e1ec\n"
".quad 0x45480000001cc36c,0x45c100005028e1ec,0x45c900004020e36c,0x03c100005028f32c\n"
".quad 0x45480000001cc1ec,0x03c900005028e1ec,0xe46000c00004925c,0x03280000002c01dd\n"
".quad 0xe7188e00002097dc,0xa54003fffce0000d,0x03c100007063f21c,0x235800c0000492dc\n"
".quad 0xe7190e0000fcb7dc,0xe24000000280000d,0x04180000000401dd,0x0350ee0000ffffdc\n"
".quad 0xe71b0e00002ca7dc,0x034000000160008d,0x436000c00004a32c,0x036800c00004c36c\n"
".quad 0xa34800c00008c32c,0xa3201a800014736c,0x032018800014732c,0x036000c00004d3ee\n"
".quad 0x456000c00004c3ae,0x45c100006038f32c,0x03c100006038e36c,0x454800000030d32c\n"
".quad 0x23c900006038e32c,0x035800c00004b2dc,0x236000c0000471dc,0xe71a0e0000fcb7dc\n"
".quad 0xe74003fffdc0000d,0xe24000000020001d,0x03180000000401dd,0x034800fffffc931c\n"
".quad 0xe7188ec0000cc7dc,0xe24000000260000d,0x031800000008025d,0x045800c0000472dc\n"
".quad 0x0350ee0000ffffdc,0x034800fffffc935c,0x036000c00004925c,0x031b0e000034a9dc\n"
".quad 0x03188e00003097dc,0x034800c00004a370,0xa35800c0000873b0,0x03201a800014b1f0\n"
".quad 0x0348000000387370,0x036000c0000471f2,0x456000c00004d3b2,0x45c10000603871f0\n"
".quad 0x03c100006038e370,0xe4480000001cd370,0x45280000002c01dd,0xe7c900006038e370\n"
".quad 0x044003fffdc0000d,0x0350ee0000ffffdc,0x036000c00004c2e2,0x454800fffffc81e0\n"
".quad 0x03c100007080b220,0x456000c000047262,0x45c9000070809220,0x45c100006038b1e0\n"
".quad 0x04c90000603891e0,0x0450ee0000ffffdc,0x032c0000008401dc,0x856000c00004221e\n"
".quad 0x03c100007073f2dc,0x456000c0000471de,0x04c100007080849c,0x452c00000084025c\n"
".quad 0x03c10000708074dc,0x031b0e00002c2bdc,0x846000c00004941e,0x031c00000048a21e\n"
".quad 0x846000c000042476,0x231c0000004ca1de,0x23190ec0000487dc,0x03190ec0000479dc\n"
".quad 0xe46000c00004238e,0x0428000000fc022d,0x452c0000008401d0,0x45c100005030e3cc\n"
".quad 0x03c100006038e20c,0xe46000c000047312,0xe428000000fc026d,0x4528000000fc01f1\n"
".quad 0x45c100005030c350,0x45c100006038c010,0x03c90000603904dc,0x454800c00004f24c\n"
".quad 0x03c90000603914b4,0x044800c00004d1d0,0x0350ee0000ffffdc,0x235800c00004b35c\n"
".quad 0xe7190e0000fcd7dc,0xe24000000280000d,0x041800000004031d,0x0350ee0000ffffdc\n"
".quad 0xe71b0e000034a7dc,0x034000000160008d,0x436000c00004a3ac,0x036800c00004e3ec\n"
".quad 0xa34800c00008e3ac,0xa3201e800014c3ec,0x03201c800014c3ac,0x036000c00004f3ee\n"
".quad 0x456000c00004e42e,0x45c100006038f3ec,0x03c10000603903ac,0x454800000038f3ac\n"
".quad 0x23c90000603903ac,0x035800c00004d35c,0x236000c00004c31c,0xe71a0e0000fcd7dc\n"
".quad 0xe74003fffdc0000d,0xe24000000020001d,0x031800000004031d,0xe7188ec0000cb7dc\n"
".quad 0xe24000000260000d,0x031800000008035d,0x045800c00004c39c,0x0350ee0000ffffdc\n"
".quad 0x034800fffffcd3dc,0x036000c00004d35c,0x031b0e00003ca9dc,0x03188e00002cd7dc\n"
".quad 0x034800c00004a3f0,0xa35800c00008c430,0x03201e800014e330,0x034800000040c3f0\n"
".quad 0x036000c00004c332,0x456000c00004f432,0x45c100006038c3f0,0x03c1000060390330\n"
".quad 0xe44800000030f3f0,0x452800000038031d,0xe7c90000603903f0,0x044003fffdc0000d\n"
".quad 0xe750ee0000ffffdc,0x8540000001e00081,0xe4c100007063f2a0,0xe4280040013002e1\n"
".quad 0x0328004001500361,0xe44800000028a420,0x45280040012002a1,0x85c1000060310320\n"
".quad 0x45c900008093f320,0x85c10000402103e0,0xe4c100008093f3a0,0x8528004001400321\n"
".quad 0x45c9000080b3f3e0,0x85c1000050290420,0x859400000000a3e0,0x859400000000c3a0\n"
".quad 0x04c9000080a3f420,0x8550ee0000ffffdc,0x04c100007063f29c,0x032c0000008402dc\n"
".quad 0x036000c0000823de,0x036000c00008b39e,0x034800c02010f41c,0x85188e00002827dc\n"
".quad 0x85c100000000e29c,0x85c100002010e35c,0x85c100000000f2cc,0xe4c100000001030c\n"
".quad 0xe428000000fc02ed,0x0428000000fc032d,0x2350ee0000ffffdc,0x04190e0000fc79dc\n"
".quad 0x042c0000008403a4,0x032c000000840430,0x076000c00004e3e6,0x8560000003400000\n"
".quad 0x03c1000080b3f3a4,0x456000c000050472,0x04c100005028f3e4,0x452c000000840404\n"
".quad 0x03c1000060311470,0x036000c000050406,0xe24800000038f3e4,0x4518000000040391\n"
".quad 0x03c10000402103c4,0xe74800c0000513b0,0xe24000000040000d,0xf41800000004049d\n"
".quad 0x0428000000fc041d,0x230c0e00009ca3dc,0x03190e0000fc95dc,0x036000c0000424a6\n"
".quad 0x856000c0000424ea,0x45c1000080b3f464,0x45c10000502924a4,0x03c10000603134e8\n"
".quad 0x456000c000042406,0x03c1000040210404,0xe248000000452424,0x0318000000040489\n"
".quad 0xf44800c0000534a8,0x044000000000001d,0x0350ee0000ffffdc,0x036000c00008f45e\n"
".quad 0x036000c00004f3de,0x854800c3fffc71f0,0x03c900000001129c,0x854800000038e3b0\n"
".quad 0x45c900002011135c,0x45c900004020f19c,0x45c900005028f15c,0x45c900006030e1f0\n"
".quad 0x07c900007080e030,0xf460000001a00000,0x034000000000002d,0x236000c00009001e\n"
".quad 0x03190e0000fc93dc,0x856000c00005015e,0x85c90000000002dc,0x03c900002010031c\n"
".quad 0x034800c3fffc91a4,0x45480000004921e4,0x45c90000402050dc,0x45c900005028511c\n"
".quad 0x45c90000603071a4,0xf4c9000070807224,0x044000000000001d,0x8550ee0000ffffdc\n"
".quad 0x85c100008093f0e0,0x03c1000080a3f020,0x456000c0000430e0,0x45c9000060303020\n"
".quad 0x04c900007083ffe0,0x8550ee0000ffffdc,0x04c1000080b3f0dc,0x852c00000084011c\n"
".quad 0x85c100007063f31c,0x03c100008093f01c,0x036000c00008415e,0x85188e00000c41dc\n"
".quad 0xe7c100000000535c,0x0440000002c00081,0xe22c000000840260,0x0318000000100421\n"
".quad 0x03480000000c92a1,0x036000c0000893a2,0x436000c0000493e2,0x035000c00010a2e0\n"
".quad 0x8520218001c0a120,0x45c100002010e3a0,0x43c100005028f460,0x0348004001d0b160\n"
".quad 0x8520218001e0a1a0,0x4394000000004360,0x0348004001f0b1e0,0x852021800200a220\n"
".quad 0x43940000000063a0,0x034800400210b260,0x452021800220a2a0,0x43c100004020f420\n"
".quad 0x854800400230b2e0,0x8594000000008420,0xe79400000000a460,0x0440000001e000a1\n"
".quad 0x032c0000008401c0,0x436000c000087242,0x035000c0001072c0,0x036000c000047382\n"
".quad 0x8548014001609100,0x45c1000020109280,0x43c100005028e380,0x034800400170b140\n"
".quad 0x8548014001809180,0x4394000000004340,0x034800400190b1c0,0x8548014001a09200\n"
".quad 0x4394000000006280,0x8548004001b0b240,0x0394000000008380,0x071b0e00003021dc\n"
".quad 0xe760000005200000,0x0340000004e00001,0x036000c00008211e,0x85188e00000c21dc\n"
".quad 0xe7c100000000431c,0x0340000002a00081,0xe2480000000c20e1,0x03180000001002a1\n"
".quad 0x436000c000082362,0x035000c0001032e0,0x0320158001c03120,0x436000c0000423a2\n"
".quad 0x0348004001d0b160,0x4520158001e031a0,0x45c100004020e3e0,0x43c100005028e420\n"
".quad 0x0348004001f0b1e0,0x8520158002003220,0x4394000000004320,0x034800400210b260\n"
".quad 0x85201580022032a0,0x43c100002010d0e0,0x854800400230b2e0,0x85940000000060e0\n"
".quad 0x85940000000083e0,0xe79400000000a420,0x0340000001c000a1,0x436000c000082202\n"
".quad 0x035000c000102240,0x036000c000042282,0x8548014001608180,0x45c10000201080c0\n"
".quad 0x43c100005028a280,0x03480040017091c0,0x8548014001808100,0x4394000000006300\n"
".quad 0x0348004001909140,0x8548014001a08380,0x43940000000040c0,0x8548004001b093c0\n"
".quad 0x149400000000e280,0x032c0000008400dc,0xe71a0e00000031dc,0x0440000001800081\n"
".quad 0xe22c0000008400e0,0x43180000001001a1,0x035000c000103120,0x03200d8002403220\n"
".quad 0x436000c000043162,0x0348004002504260,0x45200d80026032a0,0x45c10000603050e0\n"
".quad 0x43c10000708051a0,0x85480040027042e0,0x85940000000080e0,0x039400000000a1a0\n"
".quad 0xe71a0e00000021dc,0xe240000001600081,0x4318000000100121,0x035000c000102020\n"
".quad 0x036000c0000420e2,0x43200980024021a0,0x03480040025001e0,0x4520098002602220\n"
".quad 0x45c10000603030a0,0x43c1000070803120,0x8548004002700260,0x85940000000060a0\n"
".quad 0xe794000000008120,0x008000000000001d,0x02c800000010549c,0x403801fffffc43dc\n"
".quad 0x42302480002454de,0x4038fe000000f3dc,0x40302400004d24dc,0x40307e00004cf49c\n"
".quad 0x40301e000048559e,0x40302400004d649c,0x02301e000048559e,0x403bfe00000043dc\n"
".quad 0x40302400004d649c,0x02307e00003d23dc,0x0239fffffffcf49c,0x030bfdffffc1249c\n"
".quad 0xe71a0e40003525dc,0x0740000000400029,0xe450000000600100,0xe4280000001003dd\n"
".quad 0xe7280000003c011d,0x039000000000001d,0x036000c0000443dc,0xe46000c00004549c\n"
".quad 0x03280000001405dd,0x035800c00060f4dc,0x035800c00061249c,0x034800fffffd34dc\n"
".quad 0x034800fffffd249c,0x031a0ec003f535dc,0xe71a24c003f525dc,0x8040000004e00029\n"
".quad 0xe7218edfe00045dc,0x8040000000400029,0xe7218edfe00055dc,0x0040000000400009\n"
".quad 0xe75000000014411c,0x034000000ba0001d,0x036000c0000443dc,0x036000c00004559c\n"
".quad 0x03190e0000fcf9dc,0x04190e0000fd65dc,0xe70c0e00000847dc,0x804000000080000d\n"
".quad 0x80210edfe0004bdc,0xe7210edfe00057dc,0xe740000000800035,0xe24000000060002d\n"
".quad 0x001bff000000011d,0xe7c800000014411c,0x044000000a00001d,0xe70c0e00005037dc\n"
".quad 0x834000000060002d,0x026800000010511c,0xe73a00000000411c,0x044000000960001d\n"
".quad 0xe70c0e00004855dc,0x8340000000800029,0x026800000010511c,0x423a00000000411c\n"
".quad 0xe739fe000000411c,0x2340000008a0001d,0x231b0e0000fd37dc,0x001b0e0000fd25dc\n"
".quad 0xe2307ed7e000412c,0xe41bffffff0003ed,0xe728000000fc03cd,0x0040000000800009\n"
".quad 0x03307ed7e00055dc,0xe74800c00100f3dc,0xe44000000020001d,0x0328000000fc03dd\n"
".quad 0xe34800fffe09215c,0x03410000005c55de,0x034800fffe09315c,0x00480000004934dd\n"
".quad 0xe3c800000011759c,0x004100000010511e,0x00302c800025761e,0x00302c000061615c\n"
".quad 0x00307e000014459c,0x003008000059761e,0x00302c000015859c,0x00300800005975de\n"
".quad 0x03302c000015711c,0x036000c00004461c,0x035800c00061849c,0x03480000004934dc\n"
".quad 0x03480000004cf3dc,0x034800fffffcf4dc,0xe71a0ec003f535dc,0x0340000000600009\n"
".quad 0xe34800000048f49d,0xe74000000011211e,0x234000000480001d,0xe7198ec003f8f5dc\n"
".quad 0x0240000000600009,0x423a00000000411c,0xe739fe000000411c,0x2340000003e0001d\n"
".quad 0xe71a0e0000fcf5dc,0x2340000003a00009,0xe71b0effffa0f5dc,0x0240000000400009\n"
".quad 0xe73a00000000411c,0x004000000320001d,0x8431ac00001574dc,0x001c0000003d261f\n"
".quad 0x0230ac000015749c,0x233801fffffd34dc,0x00190e0000fd85dc,0x42312c000015759c\n"
".quad 0x033802000001315c,0x844800c00080f4e8,0x001c0000003d23df,0x03168e000059249c\n"
".quad 0x03600000004c54e8,0x84580000003c5168,0x031c0000004923df,0x033126c00007f4e8\n"
".quad 0x026000c00078549c,0x433a00000000411c,0x03680000004cf3e8,0x035800c0007d24dc\n"
".quad 0x036800c00004549c,0x435800c00004515c,0x03680000004cf3dc,0x03680000003d23dc\n"
".quad 0x031a8e0000fcf5dc,0x434800c000045148,0xe76800000014411c,0x009000000000001d\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0100000000000000\n"
".quad 0x00ffffffff000000,0x047effffef3f8000,0x200000000f00080a,0x0400801903008000\n"
".quad 0x1200000000000c17,0x040021f000007800,0x1100000000000c17,0x040021f000007000\n"
".quad 0x1000000000000c17,0x040021f000006800,0x0f00000000000c17,0x040021f000006000\n"
".quad 0x0e00000000000c17,0x040021f000005800,0x0d00000000000c17,0x040021f000005000\n"
".quad 0x0c00000000000c17,0x040021f000004800,0x0b00000000000c17,0x040021f000004000\n"
".quad 0x0a00000000000c17,0x040021f000003800,0x0900000000000c17,0x040021f000003000\n"
".quad 0x0800000000000c17,0x040021f000002800,0x0700000000000c17,0x040011f000002400\n"
".quad 0x0600000000000c17,0x040011f000002000,0x0500000000000c17,0x040011f000001c00\n"
".quad 0x0400000000000c17,0x040011f000001800,0x0300000000000c17,0x040011f000001400\n"
".quad 0x0200000000000c17,0x040011f000001000,0x0100000000000c17,0x040021f000000800\n"
".quad 0x0000000000000c17,0x040021f000000000,0x0d001100cc00080d,0x0400005de4000000\n"
".quad 0x0084041c04280044,0x04e00000072c0000,0x00fd01dc23600000,0x00000001f41a8e00\n"
".quad 0x0094001c04400000,0x0010015de22c0000,0x8003ffdc85180000,0x001000dc43c90000\n"
".quad 0x00e0019c035000c0,0x00f031dc43200b80,0x0100021c03480040,0x0000611c85200b80\n"
".quad 0x0010609c85840000,0x0110325c43840000,0x000080dc85480040,0xa053f11c85840000\n"
".quad 0x0010201d03c90000,0xfffc015c03480000,0xa063f09ca54800ff,0xa023f01c85c90000\n"
".quad 0x0000515c03c90000,0x00fc53dc23680000,0x01c00085e7190e00,0x0001202604400000\n"
".quad 0xfda800e5e2180000,0x00040125e21bffff,0x200005e480180000,0xe00000a400208ec0\n"
".quad 0xfe0830e4045800d2,0x000020a4042004ff,0x005c20a403200400,0x03fc20a4035800c0\n"
".quad 0x03fc25e4236800c0,0x000830a403190ec0,0x00fc05e480480000,0x0008402403212400\n"
".quad 0x0004002404600000,0x0004009de22014c0,0xa033f01c85180000,0xa043ffdc85c90000\n"
".quad 0xa013f09c95c90000,0x00fc1fdc03c90000,0x00ffffdc04207e00,0xa023f09c8550ee00\n"
".quad 0x008400dc04c10000,0x0008301e032c0000,0x000833dc036000c0,0x400002dc031b0e00\n"
".quad 0x6000031c034800c0,0x02c00085e74800c0,0xa053f0a485400000,0x008402a404c10000\n"
".quad 0x00100365e22c0000,0x002820a403180000,0x0008a2a603480000,0x001020e4436000c0\n"
".quad 0x01202224035000c0,0x0130326443201b80,0x014021a403480040,0x0000822485201b80\n"
".quad 0x015031e443840000,0x0160212403480040,0x000061a485201b80,0x0170316443840000\n"
".quad 0x018020a403480040,0x0000412485201b80,0x019030e443840000,0x000020a485480040\n"
".quad 0x0000022485840000,0x2000a1a485c90000,0x0000b12485c90000,0x0000c0a485c90000\n"
".quad 0x00ffffdc04c90000,0x00fc035de450ee00,0x00fc031de4280000,0x00fc021de4280000\n"
".quad 0x00fc025de4280000,0x00fc029de4280000,0x00fc02dde4280000,0xa023f01c85280000\n"
".quad 0x0340000007c10000,0x000103dc03600000,0x00000025f4188e00,0x0009001e03400000\n"
".quad 0x2000021c856000c0,0x0000031c85c10000,0x4000025c85c10000,0x6000029c85c10000\n"
".quad 0x0020c3dc00c10000,0x00800005e7268e00,0x0024a01d03400000,0x000403dc03480000\n"
".quad 0x00000025f41a0ec0,0xa013ffdc95400000,0x00fcc3dc00c90000,0x00fc85dc00208e00\n"
".quad 0x0000001de2208e00,0x0000009de218fe00,0x00000005e218fe00,0x00000089e21afe00\n"
".quad 0xa013ffdc851afe00,0x000803dc00c90000,0x0020c09c00210e00,0x0030800500500000\n"
".quad 0xc000235c00500000,0xc0000344005800cf,0x0000001df43018cf,0x00ffffdc04400000\n"
".quad 0xa013f01c8550ee00,0x000403dc23c10000,0xa023f01c85190ec0,0x24400005e7c10000\n"
".quad 0x00ffffdc04400000,0x00c3f3dc2350ee00,0x06a00005e7190e40,0x000103dc03400000\n"
".quad 0x0000015de2188e00,0x00fc001de418fe00,0x00fc039de4280000,0x00c003dde4280000\n"
".quad 0x0039009c03280040,0x00c025dc03480000,0x01c00089e71b0e40,0x0039012803400000\n"
".quad 0x001001a9e2480100,0x0009046a03180000,0x00fff0e8436000c0,0x007841e803480000\n"
".quad 0x008040a8035800c0,0x001c31e843200d80,0x009070e843400000,0x00a041a803480040\n"
".quad 0x000020a885200d80,0x00b071e843840000,0xfff0612885480040,0x000110a88587ffff\n"
".quad 0x2001112885c90000,0x00fcffdc03c90000,0x02c0000007207e00,0x00ffffdc04600000\n"
".quad 0x02600025e750ee00,0x0020f19c03400000,0x00fc65dc23080e40,0x02000009e7190e00\n"
".quad 0x00fc009de4400000,0x200004dde2280000,0x00fc051de4180000,0x0001311c85280000\n"
".quad 0x000140dc85c10000,0x0010411c00c10000,0x003430dd00580000,0x2180010007500000\n"
".quad 0x0010315d00500000,0x0004209c03500000,0x001134dc034800c0,0x0007f0dc004800c0\n"
".quad 0x001825dc033f0a40,0x0011451c03188e00,0x0000301c034800c0,0xfe600009e7480000\n"
".quad 0x0020e39c134003ff,0x0020f3dd03480040,0x00c0e5dc03480040,0x00fcffdc03188e40\n"
".quad 0x0013ffdc04207e00,0x00ffffdc043000c0,0xfa200009e750ee00,0x0020001de74003ff\n"
".quad 0x00fc001de4400000,0xa023f09c85280000,0x1020000007c10000,0x000903dc03600000\n"
".quad 0x00000025f4188e00,0x0020c3dc00400000,0x02c00005e7268e00,0x0024a09d03400000\n"
".quad 0x000423dc23480000,0x01800005e7190ec0,0x0004201c03400000,0x0009009e035800c0\n"
".quad 0x000400dde26000c0,0x0024001c03180000,0x0000231c85480000,0x2000221c85c90000\n"
".quad 0x4000225c85c90000,0x801020dc85c90000,0x6000201c85c90000,0x000402dde2c90000\n"
".quad 0x0030035de4180000,0xa043f0dc95280000,0x0009009e03c90000,0x00fc02dde46000c0\n"
".quad 0x0000231c85280000,0x2000221c85c90000,0x4000225c85c90000,0x6000229c85c90000\n"
".quad 0x80102fdc95c90000,0x002803dc23c90000,0x000093dc231a8e00,0x08400005e71a8200\n"
".quad 0x0009009e03400000,0x000093dc236000c0,0x00fc02dde4190e00,0x80102fdc85280000\n"
".quad 0x03c00005e7c90000,0x0034c09cc0400000,0xb9c8011de2081e00,0x1210015de21a4cb4\n"
".quad 0x01e0209c0018e195,0x0030d1dd00580040,0x0009019e03500000,0x0009309c046000c0\n"
".quad 0x4000625c85100000,0x0008411c01c90000,0x001d309c44081e00,0x6000601c85100000\n"
".quad 0x001023dc01c90000,0x01a00005e71e0e00,0x00fcc3dc00400000,0x00fcd5dc00208e00\n"
".quad 0x0000009de2208e00,0x000000dde218fe00,0x00000085e218fe00,0x000000c9e21afe00\n"
".quad 0x0034c11c001afe00,0x000c23dc00500000,0xc00040dc00210e00,0x0009009e035800cf\n"
".quad 0xc00070c4006000c0,0x000020dc853018cf,0x200020dc95c90000,0x0009009e03c90000\n"
".quad 0x00fc02dde46000c0,0x0000231c85280000,0x2000235c95c90000,0x0020d09cc0c90000\n"
".quad 0x121000dde2081e00,0x003481dd0018e195,0x01e0211c00500000,0xb9c8009de2580040\n"
".quad 0x0009019e031a4cb4,0x0011311c046000c0,0x4000601c85100000,0x0010211c01c90000\n"
".quad 0x001d309c44081e00,0x6000629c85100000,0x001023dc01c90000,0x01c00005e71e0e00\n"
".quad 0x00fcd3dc00400000,0x00fc85dc00208e00,0x0000009de2208e00,0x000000dde218fe00\n"
".quad 0x00000085e218fe00,0x000000c9e21afe00,0x0020d11c001afe00,0x00fc02dde4500000\n"
".quad 0x000c23dc00280000,0xc00040dc00210e00,0x0009009e035800cf,0xc00070c4006000c0\n"
".quad 0x000020dc85301acf,0x200020dc95c90000,0x0009009e03c90000,0x00fc02dde46000c0\n"
".quad 0x0000235c85280000,0x2000221c95c90000,0x0034c09cc0c90000,0x121000dde2081e00\n"
".quad 0x0030d1dd0018e195,0x01e0211c00500000,0xb9c8009de2580040,0x0009019e031a4cb4\n"
".quad 0x0011311c046000c0,0x0260000007100000,0x4000625c85600000,0x0010211c01c90000\n"
".quad 0x001d309c44081e00,0x6000601c85100000,0x001023dc01c90000,0x01600005e71e0e00\n"
".quad 0x00fcc3dc00400000,0x00fcd5dc00208e00,0x0000009de2208e00,0x000000dde218fe00\n"
".quad 0x00000085e218fe00,0x000000c9e21afe00,0x0034c11c001afe00,0x000c23dc00500000\n"
".quad 0xc00040dc00210e00,0xc00070c4005800cf,0x000c009df43018cf,0x0034009de4280000\n"
".quad 0x003000ddf4280000,0x0009011e03280000,0x0004015de26000c0,0x000402dde2180000\n"
".quad 0x000040dc85180000,0x2000409c85c90000,0x8010415c85c90000,0xa043f15c95c90000\n"
".quad 0x07e0000007c90000,0x00ffffdc04600000,0xa043f09c8550ee00,0x000423dc23c10000\n"
".quad 0x00000005f41a8ec0,0xa033f0dc85400000,0x0004311c03c10000,0x00fc43dc235800c0\n"
".quad 0x02800005e7190e00,0x0004009de2400000,0x00ffffdc04180000,0x001103dc0350ee00\n"
".quad 0x01600085e71b0e00,0x0005016403400000,0x000451a4436000c0,0x00085164036800c0\n"
".quad 0x001421a4a34800c0,0x00142164a3200c80,0x000861a603200a80,0x000851e6036000c0\n"
".quad 0x801061a4856000c0,0x8010716485c10000,0x0014616403c10000,0x8010716485480000\n"
".quad 0x0004411c23c90000,0x0004209c035800c0,0x00fc43dc236000c0,0xfdc00005e71a0e00\n"
".quad 0x0020001de74003ff,0x0004009de2400000,0x000c33dc03180000,0x02600005e7188ec0\n"
".quad 0x0008011de2400000,0x0004215c03180000,0x00ffffdc045800c0,0xfffc419c0350ee00\n"
".quad 0x0004411c034800ff,0x001905dc036000c0,0x000c43dc031b0e00,0x000501a803188e00\n"
".quad 0x000821e8034800c0,0x001450a8a35800c0,0x001c21a803200c80,0x000823aa03480000\n"
".quad 0x000861ea036000c0,0x8010e1a8856000c0,0x801070a885c10000,0x000861a803c10000\n"
".quad 0x0014009de4480000,0x801071a885280000,0xfdc00005e7c90000,0x00ffffdc044003ff\n"
".quad 0xa023f0dc8550ee00,0x0004b3dc23c10000,0x000d03dc03190ec0,0x0009008603188200\n"
".quad 0x80002084856000c0,0x000c208403c10000,0x0008208603480000,0x40002004856000c0\n"
".quad 0x0000234485c90000,0x2000220485c90000,0x6000228485c90000,0x0000001df4c90000\n"
".quad 0x03a0000007400000,0x00ffffdc04600000,0x00000001f450ee00,0xa023f09c85400000\n"
".quad 0x0008201e03c10000,0x8000001c856000c0,0x0008001c03c10000,0xfffc009c03480000\n"
".quad 0xa023f01c854800ff,0x0000209c03c90000,0x00fc23dc23680000,0x01c00085e7190e00\n"
".quad 0x0001202604400000,0xfda800e5e2180000,0x00040125e21bffff,0x200005e480180000\n"
".quad 0xe00000a400208ec0,0xfe0830e4045800d2,0x000020a4042004ff,0x005c20a403200400\n"
".quad 0x03fc20a4035800c0,0x03fc25e4236800c0,0x000830a403190ec0,0x00fc05e480480000\n"
".quad 0x0008402403212400,0x0004002404600000,0x0004009de22014c0,0xa033f01c85180000\n"
".quad 0xa043ffdc85c90000,0xa013f09c95c90000,0x00ffffdc04c90000,0x0021009c0350ee00\n"
".quad 0x0009001e03480040,0x0008209e036000c0,0x80100fdc856000c0,0x80102fdc85c90000\n"
".quad 0x00ffffdc04c90000,0xd7a0001de750ee00,0x0084009c044003ff,0x000021dc032c0000\n"
".quad 0x01c000a1e7188e00,0xa073f00085400000,0x0084008004c10000,0x00100141e22c0000\n"
".quad 0x0008210203180000,0x00080000036000c0,0x0000408085480000,0x001000c043c10000\n"
".quad 0x01a00180035000c0,0x01b031c043200b80,0x01c0020003480040,0x6000400085200b80\n"
".quad 0x0000608085c10000,0x01d0324043940000,0x0000800085480040,0x0000001de7940000\n"
".quad 0x0010549c00800000,0xfffc41dc02c80000,0x0024545e403801ff,0x000071dc42302480\n"
".quad 0x0045245c4038fe00,0x0044749c40302400,0x0048555e40307e00,0x0045549c40300e00\n"
".quad 0x0000455c02302400,0x004851de403bfe00,0x004471dc40300e00,0x005471dc40302400\n"
".quad 0xfffc745c02307e00,0xffc1145c0239ffff,0x003515dc030bfdff,0x00400029e71a0e40\n"
".quad 0x0060010007400000,0x001001dde4500000,0x001c011de4280000,0x0000001de7280000\n"
".quad 0x000441dc03900000,0x0004545c036000c0,0x0010059de46000c0,0x0060749c03280000\n"
".quad 0x0061145c035800c0,0xfffd249c035800c0,0xfffd145c034800ff,0x03f525dc034800ff\n"
".quad 0x03f515dc031a0ec0,0x04e00029e71a24c0,0xe00045dc80400000,0x00400029e7218edf\n"
".quad 0xe00055dc80400000,0x00400009e7218edf,0x0014411c00400000,0x0ba0001de7500000\n"
".quad 0x000441dc03400000,0x0004555c036000c0,0x00fc79dc036000c0,0x00fd55dc03190e00\n"
".quad 0x000847dc04190e00,0x0080000de70c0e00,0xe0004bdc80400000,0xe00057dc80210edf\n"
".quad 0x00800035e7210edf,0x0060002de7400000,0x0000011de2400000,0x0014411c001bff00\n"
".quad 0x0a00001de7c80000,0x005037dc04400000,0x0060002de70c0e00,0x0010511c83400000\n"
".quad 0x0000411c02680000,0x0960001de73a0000,0x004855dc04400000,0x00800029e70c0e00\n"
".quad 0x0010511c83400000,0x0000411c02680000,0x0000411c423a0000,0x08a0001de739fe00\n"
".quad 0x00fd27dc23400000,0x00fd15dc231b0e00,0xe00045ac001b0e00,0xff0001ede2307ed7\n"
".quad 0x00fc01cde41bffff,0x00800009e7280000,0xe000515c00400000,0x010071dc03307ed7\n"
".quad 0x0020001de74800c0,0x00fc01dde4400000,0xfe09111c03280000,0xfe0925dc034800ff\n"
".quad 0x0045249d034800ff,0x0014411ee3480000,0x0059759ee3410000,0x0010415c00410000\n"
".quad 0x0024455e00c80000,0x0054515c00300a80,0x0015655c00300a00,0x005445de00307e00\n"
".quad 0x0015755c00302c00,0x0054459e00302a00,0x0015611c00302c00,0x000445dc03302a00\n"
".quad 0x0061745c036000c0,0x0045249c035800c0,0x004871dc03480000,0xfffc749c03480000\n"
".quad 0x03f525dc034800ff,0x00600009e71a0ec0,0x0044745d03400000,0x0011111ee3480000\n"
".quad 0x0480001de7400000,0x03f875dc23400000,0x00600009e7198ec0,0x0000411c02400000\n"
".quad 0x0000411c423a0000,0x03e0001de739fe00,0x00fc75dc23400000,0x03a00009e71a0e00\n"
".quad 0xffa075dc23400000,0x00400009e71b0eff,0x0000411c02400000,0x0320001de73a0000\n"
".quad 0x0015649c00400000,0x001d25df8431aa00,0x0015645c001c0000,0xfffd249c0230aa00\n"
".quad 0x00fd75dc233801ff,0x0015655c00190e00,0x0001215c42312a00,0x008074a803380200\n"
".quad 0x001d21df844800c0,0x0055145c001c0000,0x004854a803168e00,0x001c516803600000\n"
".quad 0x004521df84580000,0x0007f4a8031c0000,0x0078545c033124c0,0x0000411c026000c0\n"
".quad 0x004871e8433a0000,0x007d149c03680000,0x0004545c035800c0,0x0004515c036800c0\n"
".quad 0x004871dc435800c0,0x001d11dc03680000,0x00fc75dc03680000,0x00045148031a8e00\n"
".quad 0x0014411c434800c0,0x0000001de7680000,0x0000000000900000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0100000000000000,0x00ffffffff000000,0x047effffef3f8000\n"
".quad 0x200000001500080a,0x04005c1903005c00,0x0b00000000000c17,0x040011f000005800\n"
".quad 0x0a00000000000c17,0x040021f000005000,0x0900000000000c17,0x040021f000004800\n"
".quad 0x0800000000000c17,0x040021f000004000,0x0700000000000c17,0x040021f000003800\n"
".quad 0x0600000000000c17,0x040021f000003000,0x0500000000000c17,0x040021f000002800\n"
".quad 0x0400000000000c17,0x040021f000002000,0x0300000000000c17,0x040021f000001800\n"
".quad 0x0200000000000c17,0x040011f000001000,0x0100000000000c17,0x040021f000000800\n"
".quad 0x0000000000000c17,0x040021f000000000,0x0d001100cc00080d,0x0400005de4000000\n"
".quad 0x0094001c04280044,0x008403dc042c0000,0x00fc1fdc032c0000,0x0020041ca3207e00\n"
".quad 0x00e0001de4201e40,0x00d101dc03280040,0x0011009c03188e40,0x0011001c432001c0\n"
".quad 0x00100181e25000c0,0x00fc02e1e4180000,0x00f000dc43280000,0x0011000043480040\n"
".quad 0x01010100035000c0,0x0000228085200d80,0x00fc02a1e4840000,0x0110014043280000\n"
".quad 0x0121018003480040,0x000042c085200d80,0x013001c043840000,0x0084001c04480040\n"
".quad 0x00006200852c0000,0x00fc03dc23840000,0x2003ffe4851a8e00,0x00ffffdc04c90000\n"
".quad 0x00fc039de450ee00,0x00fc025de4280000,0x00fce1dc23280000,0x0004001de2190e00\n"
".quad 0x01e0000007180000,0x00d101dc03600000,0x2003f01c85188040,0x00000021f4c90000\n"
".quad 0x00fca3dc00400000,0x00fcb5dc00208e00,0x0000001de2208e00,0x0000009de218fe00\n"
".quad 0x00000005e218fe00,0x00000089e21afe00,0x000803dc001afe00,0x002ca09c00210e00\n"
".quad 0x0028b00500500000,0xc000225c00500000,0xc0000244005800cf,0x0000001df43014cf\n"
".quad 0x00ffffdc04400000,0x00c3f3dc2350ee00,0x06a00005e7190e40,0x0000015de2400000\n"
".quad 0x00fc001de418fe00,0x00fc031de4280000,0x00c0035de4280000,0x0030f09c03280040\n"
".quad 0x00c023dc03480000,0x01c00085e71b0e40,0x0030f12403400000,0x001001a5e2480100\n"
".quad 0x0008f46603180000,0x00fff0e4436000c0,0x007841e403480000,0x008040a4035800c0\n"
".quad 0x001c31e443200d80,0x009070e443400000,0x00a041a403480040,0x000020a485200d80\n"
".quad 0x00b071e443840000,0xfff0612485480040,0x000110a48587ffff,0x1001112485c90000\n"
".quad 0x00fcdfdc03c90000,0x02e0000007207e00,0x00ffffdc04600000,0x00d103dc0350ee00\n"
".quad 0x02600005e71b0e40,0x0020d19c03400000,0x00fc63dc23080e40,0x02000005e7190e00\n"
".quad 0x00fc009de4400000,0x100004dde2280000,0x00fc051de4180000,0x0001311c85280000\n"
".quad 0x000140dc85c10000,0x0010411c00c10000,0x002430dd00580000,0x06a0010007500000\n"
".quad 0x0010315d00500000,0x0004209c03500000,0x001134dc034800c0,0x0007f0dc004800c0\n"
".quad 0x001823dc033f0a40,0x0011451c03188e00,0x0000301c034800c0,0xfe600005e7480000\n"
".quad 0x0020c31c134003ff,0x0020d35d03480040,0x00c0c3dc03480040,0x00fcdfdc03188e40\n"
".quad 0x000bffdc04207e00,0x00ffffdc043000c0,0xfa000005e750ee00,0x0020001de74003ff\n"
".quad 0x00fc001de4400000,0x02e0000007280000,0x00000021f4600000,0x000081dc23400000\n"
".quad 0x0024a29c04190e00,0x002c92dc04200000,0x0028b01cc0200000,0x0140009c00081e00\n"
".quad 0x0028b01d00580040,0x0140209c00500000,0x000801dc00080e40,0x00200001e7208e00\n"
".quad 0x2003ffdc95400000,0x00fca1dc00c90000,0x00fcb3dc00208e00,0x0000009de2208e00\n"
".quad 0x000000dde218fe00,0x00000081e218fe00,0x000000c5e21afe00,0x002ca11c001afe00\n"
".quad 0x0004039de2500000,0x000c21dc00180000,0xc00042dc00210e00,0xc00002c0005800cf\n"
".quad 0x002c029df43014cf,0x00ffffdc04280000,0x2003f01c8550ee00,0x000401dc23c10000\n"
".quad 0x00ffffdc04190ec0,0xf3000021e750ee00,0x00d101dc034003ff,0x00e00081e4188e40\n"
".quad 0x0011000043280040,0x00110080035000c0,0x00f000c0432005c0,0x0000228085480040\n"
".quad 0x0000001de7940000,0x0010549c00800000,0xfffc41dc02c80000,0x0014545e403801ff\n"
".quad 0x000071dc42302480,0x0045245c4038fe00,0x0044749c40302400,0x0048555e40307e00\n"
".quad 0x0045549c40300e00,0x0000455c02302400,0x004851de403bfe00,0x004471dc40300e00\n"
".quad 0x005471dc40302400,0xfffc745c02307e00,0xffc1145c0239ffff,0x002513dc030bfdff\n"
".quad 0x00400025e71a0e40,0x0060010007400000,0x001001dde4500000,0x001c011de4280000\n"
".quad 0x0000001de7280000,0x000441dc03900000,0x0004545c036000c0,0x0010059de46000c0\n"
".quad 0x0060749c03280000,0x0061145c035800c0,0xfffd249c035800c0,0xfffd145c034800ff\n"
".quad 0x03f523dc034800ff,0x03f513dc031a0ec0,0x04e00025e71a22c0,0xe00043dc80400000\n"
".quad 0x00400025e7218edf,0xe00053dc80400000,0x00400005e7218edf,0x0014411c00400000\n"
".quad 0x0ba0001de7500000,0x000441dc03400000,0x0004555c036000c0,0x00fc75dc036000c0\n"
".quad 0x00fd57dc03190e00,0x000c23dc04190e00,0x00800005e70c0e00,0xe00049dc80400000\n"
".quad 0xe00053dc80210edf,0x00800031e7210edf,0x00600025e7400000,0x0000011de2400000\n"
".quad 0x0014411c001bff00,0x0a00001de7c80000,0x004813dc04400000,0x00600025e70c0e00\n"
".quad 0x0010511c83400000,0x0000411c02680000,0x0960001de73a0000,0x004c43dc04400000\n"
".quad 0x00800025e70c0e00,0x0010511c83400000,0x0000411c02680000,0x0000411c423a0000\n"
".quad 0x08a0001de739fe00,0x00fd25dc23400000,0x00fd13dc231b0e00,0xe00045a8001b0e00\n"
".quad 0xff0001e9e2307ed7,0x00fc01c9e41bffff,0x00800005e7280000,0xe000515c00400000\n"
".quad 0x010071dc03307ed7,0x0020001de74800c0,0x00fc01dde4400000,0xfe09111c03280000\n"
".quad 0xfe0925dc034800ff,0x0045249d034800ff,0x0014411ee3480000,0x0059759ee3410000\n"
".quad 0x0010415c00410000,0x0014455e00c80000,0x0054515c00300a80,0x0015655c00300a00\n"
".quad 0x005445de00307e00,0x0015755c00302c00,0x0054459e00302a00,0x0015611c00302c00\n"
".quad 0x000445dc03302a00,0x0061745c036000c0,0x0045249c035800c0,0x004871dc03480000\n"
".quad 0xfffc749c03480000,0x03f523dc034800ff,0x00600005e71a0ec0,0x0044745d03400000\n"
".quad 0x0011111ee3480000,0x0480001de7400000,0x03f873dc23400000,0x00600005e7198ec0\n"
".quad 0x0000411c02400000,0x0000411c423a0000,0x03e0001de739fe00,0x00fc73dc23400000\n"
".quad 0x03a00005e71a0e00,0xffa073dc23400000,0x00400005e71b0eff,0x0000411c02400000\n"
".quad 0x0320001de73a0000,0x0015649c00400000,0x001d25df8431aa00,0x0015645c001c0000\n"
".quad 0xfffd249c0230aa00,0x00fd73dc233801ff,0x0015655c00190e00,0x0001215c42312a00\n"
".quad 0x008074a403380200,0x001d21df844800c0,0x0055145c001c0000,0x004854a403168e00\n"
".quad 0x001c516403600000,0x004521df84580000,0x0007f4a4031c0000,0x0078545c033124c0\n"
".quad 0x0000411c026000c0,0x004871e4433a0000,0x007d149c03680000,0x0004545c035800c0\n"
".quad 0x0004515c036800c0,0x004871dc435800c0,0x001d11dc03680000,0x00fc73dc03680000\n"
".quad 0x00045144031a8e00,0x0014411c434800c0,0x0000001de7680000,0x0000000000900000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0100000000000000,0xef3f800000000000,0x1200080a047effff\n"
".quad 0x0300340020000000,0x00000c1704003419,0x0000300007000000,0x00000c17040011f0\n"
".quad 0x0000280006000000,0x00000c17040021f0,0x0000200005000000,0x00000c17040021f0\n"
".quad 0x0000180004000000,0x00000c17040021f0,0x0000140003000000,0x00000c17040011f0\n"
".quad 0x0000100002000000,0x00000c17040011f0,0x0000080001000000,0x00000c17040021f0\n"
".quad 0x0000000000000000,0xcc00080d040021f0,0x040000000d001100,0x0000000018000812\n"
".quad 0x1800081104000000,0x0400000000000000,0x0000000017000812,0x1700081104000000\n"
".quad 0x0400000000000000,0x000000001a000812,0x1a00081104000000,0x0400000000000000\n"
".quad 0x0000000018000812,0x1800081104000000,0x0400000000000000,0x0000000017000812\n"
".quad 0x1700081104000000,0x0400000000000000,0x0000000019000812,0x1900081104000000\n"
".quad 0x0400000000000000,0x0000000018000812,0x1800081104000000,0x0400000000000000\n"
".quad 0x0000000017000812,0x1700081104000000,0x0400000000000000,0x0000000016000812\n"
".quad 0x1600081104000000,0x0000000000000000,0x0000050000000600,0x000000000049d800\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000018800,0x0000000000018800\n"
".quad 0x0000000000000400,0x001a056000000000,0x00000000000ce600,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000201c00,0x0000000000201c00,0x0000000000000400\n"
".quad 0x001a066000000000,0x00000000002d0200,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000203000,0x0000000000000400,0x0019056000000000\n"
".quad 0x00000000002d0200,0x0000000000000000,0x0000000000000000,0x000000000012a000\n"
".quad 0x000000000012a000,0x0000000000000400,0x0019066000000000,0x00000000003fa200\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000282000\n"
".quad 0x0000000000000400,0x0016056000000000,0x00000000003fa200,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000095c00,0x0000000000095c00,0x0000000000000400\n"
".quad 0x0016066000000000,0x000000000048fe00,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000080400,0x0000000000000400,0x0000000000000000\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[22316];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 3 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c" 2 3
extern void __device_stub__Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_(float *, float *, const unsigned, const float, const float, const unsigned, const unsigned, float, unsigned *, unsigned *, float *, float *, unsigned *, float *, float *, unsigned *, unsigned *, unsigned *, unsigned *);
extern void __device_stub__Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf(float *, float *, const unsigned, unsigned, float *, float *, unsigned *, float);
extern void __device_stub__Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f(float *, float *, const unsigned, unsigned *, unsigned *, float *, float *, unsigned *, unsigned *, float *, unsigned *, float);
static void __sti____cudaRegisterAll_47_tmpxft_00006e32_00000000_4_bisect_large_cpp1_ii_155377b5(void) __attribute__((__constructor__));
void __device_stub__Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_(float *__par0, float *__par1, const unsigned __par2, const float __par3, const float __par4, const unsigned __par5, const unsigned __par6, float __par7, unsigned *__par8, unsigned *__par9, float *__par10, float *__par11, unsigned *__par12, float *__par13, float *__par14, unsigned *__par15, unsigned *__par16, unsigned *__par17, unsigned *__par18){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)24UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)28UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)32UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)36UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par8, sizeof(__par8), (size_t)40UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par9, sizeof(__par9), (size_t)48UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par10, sizeof(__par10), (size_t)56UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par11, sizeof(__par11), (size_t)64UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par12, sizeof(__par12), (size_t)72UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par13, sizeof(__par13), (size_t)80UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par14, sizeof(__par14), (size_t)88UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par15, sizeof(__par15), (size_t)96UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par16, sizeof(__par16), (size_t)104UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par17, sizeof(__par17), (size_t)112UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par18, sizeof(__par18), (size_t)120UL) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, const unsigned, const float, const float, const unsigned, const unsigned, float, unsigned *, unsigned *, float *, float *, unsigned *, float *, float *, unsigned *, unsigned *, unsigned *, unsigned *))bisectKernelLarge)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, const unsigned, const float, const float, const unsigned, const unsigned, float, unsigned *, unsigned *, float *, float *, unsigned *, float *, float *, unsigned *, unsigned *, unsigned *, unsigned *))bisectKernelLarge))); };}
# 140 "tests/eigenvalues/bisect_kernel_large.cu"
void bisectKernelLarge( float *__cuda_0,float *__cuda_1,const unsigned __cuda_2,const float __cuda_3,const float __cuda_4,const unsigned __cuda_5,const unsigned __cuda_6,float __cuda_7,unsigned *__cuda_8,unsigned *__cuda_9,float *__cuda_10,float *__cuda_11,unsigned *__cuda_12,float *__cuda_13,float *__cuda_14,unsigned *__cuda_15,unsigned *__cuda_16,unsigned *__cuda_17,unsigned *__cuda_18)
# 155 "tests/eigenvalues/bisect_kernel_large.cu"
{__device_stub__Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7,__cuda_8,__cuda_9,__cuda_10,__cuda_11,__cuda_12,__cuda_13,__cuda_14,__cuda_15,__cuda_16,__cuda_17,__cuda_18);
# 501 "tests/eigenvalues/bisect_kernel_large.cu"
}
# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
void __device_stub__Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf( float *__par0, float *__par1, const unsigned __par2, unsigned __par3, float *__par4, float *__par5, unsigned *__par6, float __par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, const unsigned, unsigned, float *, float *, unsigned *, float))bisectKernelLarge_OneIntervals)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, const unsigned, unsigned, float *, float *, unsigned *, float))bisectKernelLarge_OneIntervals))); }; }
# 42 "tests/eigenvalues/bisect_kernel_large_onei.cu"
void bisectKernelLarge_OneIntervals( float *__cuda_0,float *__cuda_1,const unsigned __cuda_2,unsigned __cuda_3,float *__cuda_4,float *__cuda_5,unsigned *__cuda_6,float __cuda_7)
# 47 "tests/eigenvalues/bisect_kernel_large_onei.cu"
{__device_stub__Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 148 "tests/eigenvalues/bisect_kernel_large_onei.cu"
}
# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
void __device_stub__Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f( float *__par0, float *__par1, const unsigned __par2, unsigned *__par3, unsigned *__par4, float *__par5, float *__par6, unsigned *__par7, unsigned *__par8, float *__par9, unsigned *__par10, float __par11) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par8, sizeof(__par8), (size_t)64UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par9, sizeof(__par9), (size_t)72UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par10, sizeof(__par10), (size_t)80UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par11, sizeof(__par11), (size_t)88UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, const unsigned, unsigned *, unsigned *, float *, float *, unsigned *, unsigned *, float *, unsigned *, float))bisectKernelLarge_MultIntervals)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, const unsigned, unsigned *, unsigned *, float *, float *, unsigned *, unsigned *, float *, unsigned *, float))bisectKernelLarge_MultIntervals))); }; }
# 47 "tests/eigenvalues/bisect_kernel_large_multi.cu"
void bisectKernelLarge_MultIntervals( float *__cuda_0,float *__cuda_1,const unsigned __cuda_2,unsigned *__cuda_3,unsigned *__cuda_4,float *__cuda_5,float *__cuda_6,unsigned *__cuda_7,unsigned *__cuda_8,float *__cuda_9,unsigned *__cuda_10,float __cuda_11)
# 56 "tests/eigenvalues/bisect_kernel_large_multi.cu"
{__device_stub__Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7,__cuda_8,__cuda_9,__cuda_10,__cuda_11);
# 223 "tests/eigenvalues/bisect_kernel_large_multi.cu"
}
# 1 "/tmp/tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
static void __sti____cudaRegisterAll_47_tmpxft_00006e32_00000000_4_bisect_large_cpp1_ii_155377b5(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, const unsigned, unsigned *, unsigned *, float *, float *, unsigned *, unsigned *, float *, unsigned *, float))bisectKernelLarge_MultIntervals), (char*)"_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f", "_Z31bisectKernelLarge_MultIntervalsPfS_jPjS0_S_S_S0_S0_S_S0_f", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, const unsigned, unsigned, float *, float *, unsigned *, float))bisectKernelLarge_OneIntervals), (char*)"_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf", "_Z30bisectKernelLarge_OneIntervalsPfS_jjS_S_Pjf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, const unsigned, const float, const float, const unsigned, const unsigned, float, unsigned *, unsigned *, float *, float *, unsigned *, float *, float *, unsigned *, unsigned *, unsigned *, unsigned *))bisectKernelLarge), (char*)"_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_", "_Z17bisectKernelLargePfS_jffjjfPjS0_S_S_S0_S_S_S0_S0_S0_S0_", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
# 2 "tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c" 2
# 1 "tmpxft_00006e32_00000000-1_bisect_large.cudafe1.stub.c"
