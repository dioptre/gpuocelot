//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Apr  5 03:30:35 2012 (1333611035)
// Cuda compilation tools, release 4.2, V0.2.1221
//

.version 3.0
.target sm_30
.address_size 64

	.file	1 "/tmp/tmpxft_00001d06_00000000-9_indirectCall.cpp3.i"
	.file	2 "indirectCall.cu"

.visible .func  (.param .b32 func_retval0) funcDouble(
	.param .b32 funcDouble_param_0
)
{
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [funcDouble_param_0];
	shl.b32 	%r2, %r1, 1;
	.loc 2 10 1
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 func_retval0) funcTriple(
	.param .b32 funcTriple_param_0
)
{
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [funcTriple_param_0];
	.loc 2 14 1
	mul.lo.s32 	%r2, %r1, 3;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 func_retval0) funcQuadruple(
	.param .b32 funcQuadruple_param_0
)
{
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [funcQuadruple_param_0];
	shl.b32 	%r2, %r1, 2;
	.loc 2 18 1
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 func_retval0) funcPentuple(
	.param .b32 funcPentuple_param_0
)
{
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [funcPentuple_param_0];
	.loc 2 21 1
	mul.lo.s32 	%r2, %r1, 5;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.entry kernelEntry(
	.param .u64 kernelEntry_param_0,
	.param .u32 kernelEntry_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<10>;
	.reg .s64 	%rl<11>;


	ld.param.u64 	%rl3, [kernelEntry_param_0];
	ld.param.u32 	%r3, [kernelEntry_param_1];
	cvta.to.global.u64 	%rl1, %rl3;
	.loc 2 35 1
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	.loc 2 36 1
	add.s32 	%r7, %r1, %r3;
	and.b32  	%r2, %r7, 3;
	.loc 2 39 1
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	BB4_6;

	.loc 2 42 1
	setp.eq.s32 	%p2, %r2, 1;
	@%p2 bra 	BB4_5;

	.loc 2 45 1
	setp.eq.s32 	%p3, %r2, 2;
	@%p3 bra 	BB4_4;

	mov.u64 	%rl10, funcPentuple;
	bra.uni 	BB4_7;

BB4_4:
	mov.u64 	%rl10, funcQuadruple;
	bra.uni 	BB4_7;

BB4_5:
	mov.u64 	%rl10, funcTriple;
	bra.uni 	BB4_7;

BB4_6:
	mov.u64 	%rl10, funcDouble;

BB4_7:
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	.loc 2 52 1
	st.param.b32	[param0+0], %r1;
	.param .b32 retval0;
	// inline asm
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _);
	// inline asm
	call (retval0), 
	%rl10, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32	%r8, [retval0+0];
	}
	// Callseq End 0
	mul.wide.s32 	%rl8, %r1, 4;
	add.s64 	%rl9, %rl1, %rl8;
	st.global.u32 	[%rl9], %r8;
	.loc 2 53 2
	ret;
}


